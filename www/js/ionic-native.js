/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 168);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(11);
var toSubscriber_1 = __webpack_require__(171);
var observable_1 = __webpack_require__(29);
var pipe_1 = __webpack_require__(41);
/**
 * A representation of any set of values over any amount of time. This is the most basic building block
 * of RxJS.
 *
 * @class Observable<T>
 */
var Observable = (function () {
    /**
     * @constructor
     * @param {Function} subscribe the function that is called when the Observable is
     * initially subscribed to. This function is given a Subscriber, to which new values
     * can be `next`ed, or an `error` method can be called to raise an error, or
     * `complete` can be called to notify of a successful completion.
     */
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    /**
     * Creates a new Observable, with this Observable as the source, and the passed
     * operator defined as the new observable's operator.
     * @method lift
     * @param {Operator} operator the operator defining the operation to take on the observable
     * @return {Observable} a new observable with the Operator applied
     */
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    /**
     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.
     *
     * <span class="informal">Use it when you have all these Observables, but still nothing is happening.</span>
     *
     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It
     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is
     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling
     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often
     * thought.
     *
     * Apart from starting the execution of an Observable, this method allows you to listen for values
     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two
     * following ways.
     *
     * The first way is creating an object that implements {@link Observer} interface. It should have methods
     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create
     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do
     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also
     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't
     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will
     * be left uncaught.
     *
     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.
     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent
     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,
     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,
     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes
     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.
     *
     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.
     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean
     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback
     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.
     *
     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.
     * It is an Observable itself that decides when these functions will be called. For example {@link of}
     * by default emits all its values synchronously. Always check documentation for how given Observable
     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.
     *
     * @example <caption>Subscribe with an Observer</caption>
     * const sumObserver = {
     *   sum: 0,
     *   next(value) {
     *     console.log('Adding: ' + value);
     *     this.sum = this.sum + value;
     *   },
     *   error() { // We actually could just remove this method,
     *   },        // since we do not really care about errors right now.
     *   complete() {
     *     console.log('Sum equals: ' + this.sum);
     *   }
     * };
     *
     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.
     * .subscribe(sumObserver);
     *
     * // Logs:
     * // "Adding: 1"
     * // "Adding: 2"
     * // "Adding: 3"
     * // "Sum equals: 6"
     *
     *
     * @example <caption>Subscribe with functions</caption>
     * let sum = 0;
     *
     * Rx.Observable.of(1, 2, 3)
     * .subscribe(
     *   function(value) {
     *     console.log('Adding: ' + value);
     *     sum = sum + value;
     *   },
     *   undefined,
     *   function() {
     *     console.log('Sum equals: ' + sum);
     *   }
     * );
     *
     * // Logs:
     * // "Adding: 1"
     * // "Adding: 2"
     * // "Adding: 3"
     * // "Sum equals: 6"
     *
     *
     * @example <caption>Cancel a subscription</caption>
     * const subscription = Rx.Observable.interval(1000).subscribe(
     *   num => console.log(num),
     *   undefined,
     *   () => console.log('completed!') // Will not be called, even
     * );                                // when cancelling subscription
     *
     *
     * setTimeout(() => {
     *   subscription.unsubscribe();
     *   console.log('unsubscribed!');
     * }, 2500);
     *
     * // Logs:
     * // 0 after 1s
     * // 1 after 2s
     * // "unsubscribed!" after 2.5s
     *
     *
     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,
     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed
     *  Observable.
     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,
     *  the error will be thrown as unhandled.
     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.
     * @return {ISubscription} a subscription reference to the registered handlers
     * @method subscribe
     */
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);
        if (operator) {
            operator.call(sink, this.source);
        }
        else {
            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));
        }
        if (sink.syncErrorThrowable) {
            sink.syncErrorThrowable = false;
            if (sink.syncErrorThrown) {
                throw sink.syncErrorValue;
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            sink.syncErrorThrown = true;
            sink.syncErrorValue = err;
            sink.error(err);
        }
    };
    /**
     * @method forEach
     * @param {Function} next a handler for each value emitted by the observable
     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise
     * @return {Promise} a promise that either resolves on observable completion or
     *  rejects with the handled error
     */
    Observable.prototype.forEach = function (next, PromiseCtor) {
        var _this = this;
        if (!PromiseCtor) {
            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
                PromiseCtor = root_1.root.Rx.config.Promise;
            }
            else if (root_1.root.Promise) {
                PromiseCtor = root_1.root.Promise;
            }
        }
        if (!PromiseCtor) {
            throw new Error('no Promise impl found');
        }
        return new PromiseCtor(function (resolve, reject) {
            // Must be declared in a separate statement to avoid a RefernceError when
            // accessing subscription below in the closure due to Temporal Dead Zone.
            var subscription;
            subscription = _this.subscribe(function (value) {
                if (subscription) {
                    // if there is a subscription, then we can surmise
                    // the next handling is asynchronous. Any errors thrown
                    // need to be rejected explicitly and unsubscribe must be
                    // called manually
                    try {
                        next(value);
                    }
                    catch (err) {
                        reject(err);
                        subscription.unsubscribe();
                    }
                }
                else {
                    // if there is NO subscription, then we're getting a nexted
                    // value synchronously during subscription. We can just call it.
                    // If it errors, Observable's `subscribe` will ensure the
                    // unsubscription logic is called, then synchronously rethrow the error.
                    // After that, Promise will trap the error and send it
                    // down the rejection path.
                    next(value);
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        return this.source.subscribe(subscriber);
    };
    /**
     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable
     * @method Symbol.observable
     * @return {Observable} this instance of the observable
     */
    Observable.prototype[observable_1.observable] = function () {
        return this;
    };
    /* tslint:enable:max-line-length */
    /**
     * Used to stitch together functional operators into a chain.
     * @method pipe
     * @return {Observable} the Observable result of all of the operators having
     * been called in the order they were passed in.
     *
     * @example
     *
     * import { map, filter, scan } from 'rxjs/operators';
     *
     * Rx.Observable.interval(1000)
     *   .pipe(
     *     filter(x => x % 2 === 0),
     *     map(x => x + x),
     *     scan((acc, x) => acc + x)
     *   )
     *   .subscribe(x => console.log(x))
     */
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i - 0] = arguments[_i];
        }
        if (operations.length === 0) {
            return this;
        }
        return pipe_1.pipeFromArray(operations)(this);
    };
    /* tslint:enable:max-line-length */
    Observable.prototype.toPromise = function (PromiseCtor) {
        var _this = this;
        if (!PromiseCtor) {
            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
                PromiseCtor = root_1.root.Rx.config.Promise;
            }
            else if (root_1.root.Promise) {
                PromiseCtor = root_1.root.Promise;
            }
        }
        if (!PromiseCtor) {
            throw new Error('no Promise impl found');
        }
        return new PromiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    // HACK: Since TypeScript inherits static properties too, we have to
    // fight against TypeScript here so Subject can have a different static create signature
    /**
     * Creates a new cold Observable by calling the Observable constructor
     * @static true
     * @owner Observable
     * @method create
     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor
     * @return {Observable} a new cold observable
     */
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());
exports.Observable = Observable;
//# sourceMappingURL=Observable.js.map

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["__extends"] = __extends;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (immutable) */ __webpack_exports__["__rest"] = __rest;
/* harmony export (immutable) */ __webpack_exports__["__decorate"] = __decorate;
/* harmony export (immutable) */ __webpack_exports__["__param"] = __param;
/* harmony export (immutable) */ __webpack_exports__["__metadata"] = __metadata;
/* harmony export (immutable) */ __webpack_exports__["__awaiter"] = __awaiter;
/* harmony export (immutable) */ __webpack_exports__["__generator"] = __generator;
/* harmony export (immutable) */ __webpack_exports__["__exportStar"] = __exportStar;
/* harmony export (immutable) */ __webpack_exports__["__values"] = __values;
/* harmony export (immutable) */ __webpack_exports__["__read"] = __read;
/* harmony export (immutable) */ __webpack_exports__["__spread"] = __spread;
/* harmony export (immutable) */ __webpack_exports__["__await"] = __await;
/* harmony export (immutable) */ __webpack_exports__["__asyncGenerator"] = __asyncGenerator;
/* harmony export (immutable) */ __webpack_exports__["__asyncDelegator"] = __asyncDelegator;
/* harmony export (immutable) */ __webpack_exports__["__asyncValues"] = __asyncValues;
/* harmony export (immutable) */ __webpack_exports__["__makeTemplateObject"] = __makeTemplateObject;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = Object.setPrototypeOf ||
    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; }; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator];
    return m ? m.call(o) : typeof __values === "function" ? __values(o) : o[Symbol.iterator]();
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bootstrap__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_native_plugin__ = __webpack_require__(170);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "IonicNativePlugin", function() { return __WEBPACK_IMPORTED_MODULE_1__ionic_native_plugin__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__decorators_common__ = __webpack_require__(17);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "checkAvailability", function() { return __WEBPACK_IMPORTED_MODULE_2__decorators_common__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "instanceAvailability", function() { return __WEBPACK_IMPORTED_MODULE_2__decorators_common__["c"]; });
/* unused harmony reexport wrap */
/* unused harmony reexport getPromise */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__decorators_cordova__ = __webpack_require__(175);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "cordova", function() { return __WEBPACK_IMPORTED_MODULE_3__decorators_cordova__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__decorators_cordova_function_override__ = __webpack_require__(176);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "cordovaFunctionOverride", function() { return __WEBPACK_IMPORTED_MODULE_4__decorators_cordova_function_override__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__decorators_cordova_instance__ = __webpack_require__(177);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "cordovaInstance", function() { return __WEBPACK_IMPORTED_MODULE_5__decorators_cordova_instance__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__decorators_cordova_property__ = __webpack_require__(178);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "cordovaPropertyGet", function() { return __WEBPACK_IMPORTED_MODULE_6__decorators_cordova_property__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "cordovaPropertySet", function() { return __WEBPACK_IMPORTED_MODULE_6__decorators_cordova_property__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__decorators_instance_property__ = __webpack_require__(179);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "instancePropertyGet", function() { return __WEBPACK_IMPORTED_MODULE_7__decorators_instance_property__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "instancePropertySet", function() { return __WEBPACK_IMPORTED_MODULE_7__decorators_instance_property__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__decorators_interfaces__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__decorators_interfaces___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__decorators_interfaces__);
/* unused harmony namespace reexport */


// Decorators







Object(__WEBPACK_IMPORTED_MODULE_0__bootstrap__["checkReady"])();
//# sourceMappingURL=index.js.map

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isFunction_1 = __webpack_require__(27);
var Subscription_1 = __webpack_require__(7);
var Observer_1 = __webpack_require__(65);
var rxSubscriber_1 = __webpack_require__(28);
/**
 * Implements the {@link Observer} interface and extends the
 * {@link Subscription} class. While the {@link Observer} is the public API for
 * consuming the values of an {@link Observable}, all Observers get converted to
 * a Subscriber, in order to provide Subscription-like capabilities such as
 * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for
 * implementing operators, but it is rarely used as a public API.
 *
 * @class Subscriber<T>
 */
var Subscriber = (function (_super) {
    __extends(Subscriber, _super);
    /**
     * @param {Observer|function(value: T): void} [destinationOrNext] A partially
     * defined Observer or a `next` callback function.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     */
    function Subscriber(destinationOrNext, error, complete) {
        _super.call(this);
        this.syncErrorValue = null;
        this.syncErrorThrown = false;
        this.syncErrorThrowable = false;
        this.isStopped = false;
        switch (arguments.length) {
            case 0:
                this.destination = Observer_1.empty;
                break;
            case 1:
                if (!destinationOrNext) {
                    this.destination = Observer_1.empty;
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        this.destination = destinationOrNext;
                        this.destination.add(this);
                    }
                    else {
                        this.syncErrorThrowable = true;
                        this.destination = new SafeSubscriber(this, destinationOrNext);
                    }
                    break;
                }
            default:
                this.syncErrorThrowable = true;
                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);
                break;
        }
    }
    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };
    /**
     * A static factory for a Subscriber, given a (potentially partial) definition
     * of an Observer.
     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)
     * Observer represented by the given arguments.
     */
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    /**
     * The {@link Observer} callback to receive notifications of type `next` from
     * the Observable, with a value. The Observable may call this method 0 or more
     * times.
     * @param {T} [value] The `next` value.
     * @return {void}
     */
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    /**
     * The {@link Observer} callback to receive notifications of type `error` from
     * the Observable, with an attached {@link Error}. Notifies the Observer that
     * the Observable has experienced an error condition.
     * @param {any} [err] The `error` exception.
     * @return {void}
     */
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    /**
     * The {@link Observer} callback to receive a valueless notification of type
     * `complete` from the Observable. Notifies the Observer that the Observable
     * has finished sending push-based notifications.
     * @return {void}
     */
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _a = this, _parent = _a._parent, _parents = _a._parents;
        this._parent = null;
        this._parents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parent = _parent;
        this._parents = _parents;
        return this;
    };
    return Subscriber;
}(Subscription_1.Subscription));
exports.Subscriber = Subscriber;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SafeSubscriber = (function (_super) {
    __extends(SafeSubscriber, _super);
    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        _super.call(this);
        this._parentSubscriber = _parentSubscriber;
        var next;
        var context = this;
        if (isFunction_1.isFunction(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (observerOrNext !== Observer_1.empty) {
                context = Object.create(observerOrNext);
                if (isFunction_1.isFunction(context.unsubscribe)) {
                    this.add(context.unsubscribe.bind(context));
                }
                context.unsubscribe = this.unsubscribe.bind(this);
            }
        }
        this._context = context;
        this._next = next;
        this._error = error;
        this._complete = complete;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parentSubscriber = this._parentSubscriber;
            if (!_parentSubscriber.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._error) {
                if (!_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parentSubscriber.syncErrorThrowable) {
                this.unsubscribe();
                throw err;
            }
            else {
                _parentSubscriber.syncErrorValue = err;
                _parentSubscriber.syncErrorThrown = true;
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        var _this = this;
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._complete) {
                var wrappedComplete = function () { return _this._complete.call(_this._context); };
                if (!_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(wrappedComplete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            throw err;
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            parent.syncErrorValue = err;
            parent.syncErrorThrown = true;
            return true;
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));
//# sourceMappingURL=Subscriber.js.map

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var OuterSubscriber = (function (_super) {
    __extends(OuterSubscriber, _super);
    function OuterSubscriber() {
        _super.apply(this, arguments);
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(Subscriber_1.Subscriber));
exports.OuterSubscriber = OuterSubscriber;
//# sourceMappingURL=OuterSubscriber.js.map

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(11);
var isArrayLike_1 = __webpack_require__(68);
var isPromise_1 = __webpack_require__(69);
var isObject_1 = __webpack_require__(63);
var Observable_1 = __webpack_require__(0);
var iterator_1 = __webpack_require__(18);
var InnerSubscriber_1 = __webpack_require__(204);
var observable_1 = __webpack_require__(29);
function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {
    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);
    if (destination.closed) {
        return null;
    }
    if (result instanceof Observable_1.Observable) {
        if (result._isScalar) {
            destination.next(result.value);
            destination.complete();
            return null;
        }
        else {
            destination.syncErrorThrowable = true;
            return result.subscribe(destination);
        }
    }
    else if (isArrayLike_1.isArrayLike(result)) {
        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {
            destination.next(result[i]);
        }
        if (!destination.closed) {
            destination.complete();
        }
    }
    else if (isPromise_1.isPromise(result)) {
        result.then(function (value) {
            if (!destination.closed) {
                destination.next(value);
                destination.complete();
            }
        }, function (err) { return destination.error(err); })
            .then(null, function (err) {
            // Escaping the Promise trap: globally throw unhandled errors
            root_1.root.setTimeout(function () { throw err; });
        });
        return destination;
    }
    else if (result && typeof result[iterator_1.iterator] === 'function') {
        var iterator = result[iterator_1.iterator]();
        do {
            var item = iterator.next();
            if (item.done) {
                destination.complete();
                break;
            }
            destination.next(item.value);
            if (destination.closed) {
                break;
            }
        } while (true);
    }
    else if (result && typeof result[observable_1.observable] === 'function') {
        var obs = result[observable_1.observable]();
        if (typeof obs.subscribe !== 'function') {
            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));
        }
        else {
            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));
        }
    }
    else {
        var value = isObject_1.isObject(result) ? 'an invalid object' : "'" + result + "'";
        var msg = ("You provided " + value + " where a stream was expected.")
            + ' You can provide an Observable, Promise, Array, or Iterable.';
        destination.error(new TypeError(msg));
    }
    return null;
}
exports.subscribeToResult = subscribeToResult;
//# sourceMappingURL=subscribeToResult.js.map

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AsyncAction_1 = __webpack_require__(22);
var AsyncScheduler_1 = __webpack_require__(23);
/**
 *
 * Async Scheduler
 *
 * <span class="informal">Schedule task as if you used setTimeout(task, duration)</span>
 *
 * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript
 * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating
 * in intervals.
 *
 * If you just want to "defer" task, that is to perform it right after currently
 * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),
 * better choice will be the {@link asap} scheduler.
 *
 * @example <caption>Use async scheduler to delay task</caption>
 * const task = () => console.log('it works!');
 *
 * Rx.Scheduler.async.schedule(task, 2000);
 *
 * // After 2 seconds logs:
 * // "it works!"
 *
 *
 * @example <caption>Use async scheduler to repeat task in intervals</caption>
 * function task(state) {
 *   console.log(state);
 *   this.schedule(state + 1, 1000); // `this` references currently executing Action,
 *                                   // which we reschedule with new state and delay
 * }
 *
 * Rx.Scheduler.async.schedule(task, 3000, 0);
 *
 * // Logs:
 * // 0 after 3s
 * // 1 after 4s
 * // 2 after 5s
 * // 3 after 6s
 *
 * @static true
 * @name async
 * @owner Scheduler
 */
exports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);
//# sourceMappingURL=async.js.map

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray_1 = __webpack_require__(13);
var isObject_1 = __webpack_require__(63);
var isFunction_1 = __webpack_require__(27);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var UnsubscriptionError_1 = __webpack_require__(64);
/**
 * Represents a disposable resource, such as the execution of an Observable. A
 * Subscription has one important method, `unsubscribe`, that takes no argument
 * and just disposes the resource held by the subscription.
 *
 * Additionally, subscriptions may be grouped together through the `add()`
 * method, which will attach a child Subscription to the current Subscription.
 * When a Subscription is unsubscribed, all its children (and its grandchildren)
 * will be unsubscribed as well.
 *
 * @class Subscription
 */
var Subscription = (function () {
    /**
     * @param {function(): void} [unsubscribe] A function describing how to
     * perform the disposal of resources when the `unsubscribe` method is called.
     */
    function Subscription(unsubscribe) {
        /**
         * A flag to indicate whether this Subscription has already been unsubscribed.
         * @type {boolean}
         */
        this.closed = false;
        this._parent = null;
        this._parents = null;
        this._subscriptions = null;
        if (unsubscribe) {
            this._unsubscribe = unsubscribe;
        }
    }
    /**
     * Disposes the resources held by the subscription. May, for instance, cancel
     * an ongoing Observable execution or cancel any other type of work that
     * started when the Subscription was created.
     * @return {void}
     */
    Subscription.prototype.unsubscribe = function () {
        var hasErrors = false;
        var errors;
        if (this.closed) {
            return;
        }
        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parent = null;
        this._parents = null;
        // null out _subscriptions first so any child subscriptions that attempt
        // to remove themselves from this subscription will noop
        this._subscriptions = null;
        var index = -1;
        var len = _parents ? _parents.length : 0;
        // if this._parent is null, then so is this._parents, and we
        // don't have to remove ourselves from any parent subscriptions.
        while (_parent) {
            _parent.remove(this);
            // if this._parents is null or index >= len,
            // then _parent is set to null, and the loop exits
            _parent = ++index < len && _parents[index] || null;
        }
        if (isFunction_1.isFunction(_unsubscribe)) {
            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);
            if (trial === errorObject_1.errorObject) {
                hasErrors = true;
                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?
                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);
            }
        }
        if (isArray_1.isArray(_subscriptions)) {
            index = -1;
            len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (isObject_1.isObject(sub)) {
                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);
                    if (trial === errorObject_1.errorObject) {
                        hasErrors = true;
                        errors = errors || [];
                        var err = errorObject_1.errorObject.e;
                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {
                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));
                        }
                        else {
                            errors.push(err);
                        }
                    }
                }
            }
        }
        if (hasErrors) {
            throw new UnsubscriptionError_1.UnsubscriptionError(errors);
        }
    };
    /**
     * Adds a tear down to be called during the unsubscribe() of this
     * Subscription.
     *
     * If the tear down being added is a subscription that is already
     * unsubscribed, is the same reference `add` is being called on, or is
     * `Subscription.EMPTY`, it will not be added.
     *
     * If this subscription is already in an `closed` state, the passed
     * tear down logic will be executed immediately.
     *
     * @param {TeardownLogic} teardown The additional logic to execute on
     * teardown.
     * @return {Subscription} Returns the Subscription used or created to be
     * added to the inner subscriptions list. This Subscription can be used with
     * `remove()` to remove the passed teardown logic from the inner subscriptions
     * list.
     */
    Subscription.prototype.add = function (teardown) {
        if (!teardown || (teardown === Subscription.EMPTY)) {
            return Subscription.EMPTY;
        }
        if (teardown === this) {
            return this;
        }
        var subscription = teardown;
        switch (typeof teardown) {
            case 'function':
                subscription = new Subscription(teardown);
            case 'object':
                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {
                    return subscription;
                }
                else if (this.closed) {
                    subscription.unsubscribe();
                    return subscription;
                }
                else if (typeof subscription._addParent !== 'function' /* quack quack */) {
                    var tmp = subscription;
                    subscription = new Subscription();
                    subscription._subscriptions = [tmp];
                }
                break;
            default:
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
        }
        var subscriptions = this._subscriptions || (this._subscriptions = []);
        subscriptions.push(subscription);
        subscription._addParent(this);
        return subscription;
    };
    /**
     * Removes a Subscription from the internal list of subscriptions that will
     * unsubscribe during the unsubscribe process of this Subscription.
     * @param {Subscription} subscription The subscription to remove.
     * @return {void}
     */
    Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.prototype._addParent = function (parent) {
        var _a = this, _parent = _a._parent, _parents = _a._parents;
        if (!_parent || _parent === parent) {
            // If we don't have a parent, or the new parent is the same as the
            // current parent, then set this._parent to the new parent.
            this._parent = parent;
        }
        else if (!_parents) {
            // If there's already one parent, but not multiple, allocate an Array to
            // store the rest of the parent Subscriptions.
            this._parents = [parent];
        }
        else if (_parents.indexOf(parent) === -1) {
            // Only add the new parent to the _parents list if it's not already there.
            _parents.push(parent);
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());
exports.Subscription = Subscription;
function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// typeof any so that it we don't have to cast when comparing a result to the error object
exports.errorObject = { e: {} };
//# sourceMappingURL=errorObject.js.map

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var Subscriber_1 = __webpack_require__(3);
var Subscription_1 = __webpack_require__(7);
var ObjectUnsubscribedError_1 = __webpack_require__(31);
var SubjectSubscription_1 = __webpack_require__(67);
var rxSubscriber_1 = __webpack_require__(28);
/**
 * @class SubjectSubscriber<T>
 */
var SubjectSubscriber = (function (_super) {
    __extends(SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        _super.call(this, destination);
        this.destination = destination;
    }
    return SubjectSubscriber;
}(Subscriber_1.Subscriber));
exports.SubjectSubscriber = SubjectSubscriber;
/**
 * @class Subject<T>
 */
var Subject = (function (_super) {
    __extends(Subject, _super);
    function Subject() {
        _super.call(this);
        this.observers = [];
        this.closed = false;
        this.isStopped = false;
        this.hasError = false;
        this.thrownError = null;
    }
    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {
        return new SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else {
            return _super.prototype._trySubscribe.call(this, subscriber);
        }
    };
    Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return Subscription_1.Subscription.EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return Subscription_1.Subscription.EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new Observable_1.Observable();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(Observable_1.Observable));
exports.Subject = Subject;
/**
 * @class AnonymousSubject<T>
 */
var AnonymousSubject = (function (_super) {
    __extends(AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        _super.call(this);
        this.destination = destination;
        this.source = source;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return Subscription_1.Subscription.EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject));
exports.AnonymousSubject = AnonymousSubject;
//# sourceMappingURL=Subject.js.map

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var errorObject_1 = __webpack_require__(8);
var tryCatchTarget;
function tryCatcher() {
    try {
        return tryCatchTarget.apply(this, arguments);
    }
    catch (e) {
        errorObject_1.errorObject.e = e;
        return errorObject_1.errorObject;
    }
}
function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
}
exports.tryCatch = tryCatch;
;
//# sourceMappingURL=tryCatch.js.map

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {
// CommonJS / Node have global context exposed as "global" variable.
// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake
// the global "global" var for now.
var __window = typeof window !== 'undefined' && window;
var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&
    self instanceof WorkerGlobalScope && self;
var __global = typeof global !== 'undefined' && global;
var _root = __window || __global || __self;
exports.root = _root;
// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.
// This is needed when used with angular/tsickle which inserts a goog.module statement.
// Wrap in IIFE
(function () {
    if (!_root) {
        throw new Error('RxJS could not find any global context (window, self, global)');
    }
})();
//# sourceMappingURL=root.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(62)))

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
exports.isScheduler = isScheduler;
//# sourceMappingURL=isScheduler.js.map

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });
//# sourceMappingURL=isArray.js.map

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var ScalarObservable_1 = __webpack_require__(43);
var EmptyObservable_1 = __webpack_require__(15);
var isScheduler_1 = __webpack_require__(12);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ArrayObservable = (function (_super) {
    __extends(ArrayObservable, _super);
    function ArrayObservable(array, scheduler) {
        _super.call(this);
        this.array = array;
        this.scheduler = scheduler;
        if (!scheduler && array.length === 1) {
            this._isScalar = true;
            this.value = array[0];
        }
    }
    ArrayObservable.create = function (array, scheduler) {
        return new ArrayObservable(array, scheduler);
    };
    /**
     * Creates an Observable that emits some values you specify as arguments,
     * immediately one after the other, and then emits a complete notification.
     *
     * <span class="informal">Emits the arguments you provide, then completes.
     * </span>
     *
     * <img src="./img/of.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the arguments given, and the complete notification thereafter. It can
     * be used for composing with other Observables, such as with {@link concat}.
     * By default, it uses a `null` IScheduler, which means the `next`
     * notifications are sent synchronously, although with a different IScheduler
     * it is possible to determine when those notifications will be delivered.
     *
     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>
     * var numbers = Rx.Observable.of(10, 20, 30);
     * var letters = Rx.Observable.of('a', 'b', 'c');
     * var interval = Rx.Observable.interval(1000);
     * var result = numbers.concat(letters).concat(interval);
     * result.subscribe(x => console.log(x));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link throw}
     *
     * @param {...T} values Arguments that represent `next` values to be emitted.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emissions of the `next` notifications.
     * @return {Observable<T>} An Observable that emits each given input value.
     * @static true
     * @name of
     * @owner Observable
     */
    ArrayObservable.of = function () {
        var array = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            array[_i - 0] = arguments[_i];
        }
        var scheduler = array[array.length - 1];
        if (isScheduler_1.isScheduler(scheduler)) {
            array.pop();
        }
        else {
            scheduler = null;
        }
        var len = array.length;
        if (len > 1) {
            return new ArrayObservable(array, scheduler);
        }
        else if (len === 1) {
            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);
        }
        else {
            return new EmptyObservable_1.EmptyObservable(scheduler);
        }
    };
    ArrayObservable.dispatch = function (state) {
        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(array[index]);
        if (subscriber.closed) {
            return;
        }
        state.index = index + 1;
        this.schedule(state);
    };
    ArrayObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var array = this.array;
        var count = array.length;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ArrayObservable.dispatch, 0, {
                array: array, index: index, count: count, subscriber: subscriber
            });
        }
        else {
            for (var i = 0; i < count && !subscriber.closed; i++) {
                subscriber.next(array[i]);
            }
            subscriber.complete();
        }
    };
    return ArrayObservable;
}(Observable_1.Observable));
exports.ArrayObservable = ArrayObservable;
//# sourceMappingURL=ArrayObservable.js.map

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var EmptyObservable = (function (_super) {
    __extends(EmptyObservable, _super);
    function EmptyObservable(scheduler) {
        _super.call(this);
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits a complete notification.
     *
     * <span class="informal">Just emits 'complete', and nothing else.
     * </span>
     *
     * <img src="./img/empty.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the complete notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then complete.</caption>
     * var result = Rx.Observable.empty().startWith(7);
     * result.subscribe(x => console.log(x));
     *
     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()
     * );
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following to the console:
     * // x is equal to the count on the interval eg(0,1,2,3,...)
     * // x will occur every 1000ms
     * // if x % 2 is equal to 1 print abc
     * // if x % 2 is not equal to 1 nothing will be output
     *
     * @see {@link create}
     * @see {@link never}
     * @see {@link of}
     * @see {@link throw}
     *
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emission of the complete notification.
     * @return {Observable} An "empty" Observable: emits only the complete
     * notification.
     * @static true
     * @name empty
     * @owner Observable
     */
    EmptyObservable.create = function (scheduler) {
        return new EmptyObservable(scheduler);
    };
    EmptyObservable.dispatch = function (arg) {
        var subscriber = arg.subscriber;
        subscriber.complete();
    };
    EmptyObservable.prototype._subscribe = function (subscriber) {
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });
        }
        else {
            subscriber.complete();
        }
    };
    return EmptyObservable;
}(Observable_1.Observable));
exports.EmptyObservable = EmptyObservable;
//# sourceMappingURL=EmptyObservable.js.map

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ConnectableObservable_1 = __webpack_require__(117);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits the results of invoking a specified selector on items
 * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.
 *
 * <img src="./img/multicast.png" width="100%">
 *
 * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through
 * which the source sequence's elements will be multicast to the selector function
 * or Subject to push source elements into.
 * @param {Function} [selector] - Optional selector function that can use the multicasted source stream
 * as many times as needed, without causing multiple subscriptions to the source stream.
 * Subscribers to the given source will receive all notifications of the source from the
 * time of the subscription forward.
 * @return {Observable} An Observable that emits the results of invoking the selector
 * on the items emitted by a `ConnectableObservable` that shares a single subscription to
 * the underlying stream.
 * @method multicast
 * @owner Observable
 */
function multicast(subjectOrSubjectFactory, selector) {
    return function multicastOperatorFunction(source) {
        var subjectFactory;
        if (typeof subjectOrSubjectFactory === 'function') {
            subjectFactory = subjectOrSubjectFactory;
        }
        else {
            subjectFactory = function subjectFactory() {
                return subjectOrSubjectFactory;
            };
        }
        if (typeof selector === 'function') {
            return source.lift(new MulticastOperator(subjectFactory, selector));
        }
        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);
        connectable.source = source;
        connectable.subjectFactory = subjectFactory;
        return connectable;
    };
}
exports.multicast = multicast;
var MulticastOperator = (function () {
    function MulticastOperator(subjectFactory, selector) {
        this.subjectFactory = subjectFactory;
        this.selector = selector;
    }
    MulticastOperator.prototype.call = function (subscriber, source) {
        var selector = this.selector;
        var subject = this.subjectFactory();
        var subscription = selector(subject).subscribe(subscriber);
        subscription.add(source.subscribe(subject));
        return subscription;
    };
    return MulticastOperator;
}());
exports.MulticastOperator = MulticastOperator;
//# sourceMappingURL=multicast.js.map

/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ERR_CORDOVA_NOT_AVAILABLE */
/* unused harmony export ERR_PLUGIN_NOT_INSTALLED */
/* unused harmony export getPromise */
/* unused harmony export wrapPromise */
/* harmony export (immutable) */ __webpack_exports__["a"] = checkAvailability;
/* harmony export (immutable) */ __webpack_exports__["c"] = instanceAvailability;
/* unused harmony export setIndex */
/* unused harmony export callCordovaPlugin */
/* unused harmony export callInstance */
/* harmony export (immutable) */ __webpack_exports__["b"] = getPlugin;
/* unused harmony export get */
/* unused harmony export pluginWarn */
/* unused harmony export cordovaWarn */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return wrap; });
/* harmony export (immutable) */ __webpack_exports__["e"] = wrapInstance;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_observable_fromEvent__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_observable_fromEvent___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_observable_fromEvent__);


var ERR_CORDOVA_NOT_AVAILABLE = { error: 'cordova_not_available' };
var ERR_PLUGIN_NOT_INSTALLED = { error: 'plugin_not_installed' };
function getPromise(callback) {
    var tryNativePromise = function () {
        if (Promise) {
            return new Promise(function (resolve, reject) {
                callback(resolve, reject);
            });
        }
        else {
            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');
        }
    };
    return tryNativePromise();
}
function wrapPromise(pluginObj, methodName, args, opts) {
    if (opts === void 0) { opts = {}; }
    var pluginResult, rej;
    var p = getPromise(function (resolve, reject) {
        if (opts.destruct) {
            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return resolve(args);
            }, function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return reject(args);
            });
        }
        else {
            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject);
        }
        rej = reject;
    });
    // Angular throws an error on unhandled rejection, but in this case we have already printed
    // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason
    // to error
    if (pluginResult && pluginResult.error) {
        p.catch(function () { });
        typeof rej === 'function' && rej(pluginResult.error);
    }
    return p;
}
function wrapOtherPromise(pluginObj, methodName, args, opts) {
    if (opts === void 0) { opts = {}; }
    return getPromise(function (resolve, reject) {
        var pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts);
        if (pluginResult) {
            if (pluginResult.error) {
                reject(pluginResult.error);
            }
            else if (pluginResult.then) {
                pluginResult.then(resolve).catch(reject);
            }
        }
        else {
            reject({ error: 'unexpected_error' });
        }
    });
}
function wrapObservable(pluginObj, methodName, args, opts) {
    if (opts === void 0) { opts = {}; }
    return new __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__["Observable"](function (observer) {
        var pluginResult;
        if (opts.destruct) {
            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return observer.next(args);
            }, function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return observer.error(args);
            });
        }
        else {
            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));
        }
        if (pluginResult && pluginResult.error) {
            observer.error(pluginResult.error);
            observer.complete();
        }
        return function () {
            try {
                if (opts.clearFunction) {
                    if (opts.clearWithArgs) {
                        return callCordovaPlugin(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));
                    }
                    return callCordovaPlugin(pluginObj, opts.clearFunction, []);
                }
            }
            catch (e) {
                console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);
                console.warn(e);
            }
        };
    });
}
/**
 * Wrap the event with an observable
 * @private
 * @param event even name
 * @param element The element to attach the event listener to
 * @returns {Observable}
 */
function wrapEventObservable(event, element) {
    if (element) {
        get(window, element);
    }
    else {
        element = window;
    }
    return __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__["Observable"].fromEvent(element, event);
}
function checkAvailability(plugin, methodName, pluginName) {
    var pluginRef, pluginInstance, pluginPackage;
    if (typeof plugin === 'string') {
        pluginRef = plugin;
    }
    else {
        pluginRef = plugin.constructor.getPluginRef();
        pluginName = plugin.constructor.getPluginName();
        pluginPackage = plugin.constructor.getPluginInstallName();
    }
    pluginInstance = getPlugin(pluginRef);
    if (!pluginInstance || (!!methodName && typeof pluginInstance[methodName] === 'undefined')) {
        if (!window.cordova) {
            cordovaWarn(pluginName, methodName);
            return ERR_CORDOVA_NOT_AVAILABLE;
        }
        pluginWarn(pluginName, pluginPackage, methodName);
        return ERR_PLUGIN_NOT_INSTALLED;
    }
    return true;
}
/**
 * Checks if _objectInstance exists and has the method/property
 * @private
 */
function instanceAvailability(pluginObj, methodName) {
    return pluginObj._objectInstance && (!methodName || typeof pluginObj._objectInstance[methodName] !== 'undefined');
}
function setIndex(args, opts, resolve, reject) {
    if (opts === void 0) { opts = {}; }
    // ignore resolve and reject in case sync
    if (opts.sync) {
        return args;
    }
    // If the plugin method expects myMethod(success, err, options)
    if (opts.callbackOrder === 'reverse') {
        // Get those arguments in the order [resolve, reject, ...restOfArgs]
        args.unshift(reject);
        args.unshift(resolve);
    }
    else if (opts.callbackStyle === 'node') {
        args.push(function (err, result) {
            if (err) {
                reject(err);
            }
            else {
                resolve(result);
            }
        });
    }
    else if (opts.callbackStyle === 'object' && opts.successName && opts.errorName) {
        var obj = {};
        obj[opts.successName] = resolve;
        obj[opts.errorName] = reject;
        args.push(obj);
    }
    else if (typeof opts.successIndex !== 'undefined' || typeof opts.errorIndex !== 'undefined') {
        var setSuccessIndex = function () {
            // If we've specified a success/error index
            if (opts.successIndex > args.length) {
                args[opts.successIndex] = resolve;
            }
            else {
                args.splice(opts.successIndex, 0, resolve);
            }
        };
        var setErrorIndex = function () {
            // We don't want that the reject cb gets spliced into the position of an optional argument that has not been defined and thus causing non expected behaviour.
            if (opts.errorIndex > args.length) {
                args[opts.errorIndex] = reject; // insert the reject fn at the correct specific index
            }
            else {
                args.splice(opts.errorIndex, 0, reject); // otherwise just splice it into the array
            }
        };
        if (opts.successIndex > opts.errorIndex) {
            setErrorIndex();
            setSuccessIndex();
        }
        else {
            setSuccessIndex();
            setErrorIndex();
        }
    }
    else {
        // Otherwise, let's tack them on to the end of the argument list
        // which is 90% of cases
        args.push(resolve);
        args.push(reject);
    }
    return args;
}
function callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject) {
    if (opts === void 0) { opts = {}; }
    // Try to figure out where the success/error callbacks need to be bound
    // to our promise resolve/reject handlers.
    args = setIndex(args, opts, resolve, reject);
    var availabilityCheck = checkAvailability(pluginObj, methodName);
    if (availabilityCheck === true) {
        var pluginInstance = getPlugin(pluginObj.constructor.getPluginRef());
        return pluginInstance[methodName].apply(pluginInstance, args);
    }
    else {
        return availabilityCheck;
    }
}
function callInstance(pluginObj, methodName, args, opts, resolve, reject) {
    if (opts === void 0) { opts = {}; }
    args = setIndex(args, opts, resolve, reject);
    if (instanceAvailability(pluginObj, methodName)) {
        return pluginObj._objectInstance[methodName].apply(pluginObj._objectInstance, args);
    }
}
function getPlugin(pluginRef) {
    return get(window, pluginRef);
}
function get(element, path) {
    var paths = path.split('.');
    var obj = element;
    for (var i = 0; i < paths.length; i++) {
        if (!obj) {
            return null;
        }
        obj = obj[paths[i]];
    }
    return obj;
}
function pluginWarn(pluginName, plugin, method) {
    if (method) {
        console.warn('Native: tried calling ' + pluginName + '.' + method + ', but the ' + pluginName + ' plugin is not installed.');
    }
    else {
        console.warn('Native: tried accessing the ' + pluginName + ' plugin but it\'s not installed.');
    }
    if (plugin) {
        console.warn('Install the ' + pluginName + ' plugin: \'ionic cordova plugin add ' + plugin + '\'');
    }
}
/**
 * @private
 * @param pluginName
 * @param method
 */
function cordovaWarn(pluginName, method) {
    if (method) {
        console.warn('Native: tried calling ' + pluginName + '.' + method + ', but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');
    }
    else {
        console.warn('Native: tried accessing the ' + pluginName + ' plugin but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');
    }
}
/**
 * @private
 */
var wrap = function (pluginObj, methodName, opts) {
    if (opts === void 0) { opts = {}; }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (opts.sync) {
            // Sync doesn't wrap the plugin with a promise or observable, it returns the result as-is
            return callCordovaPlugin(pluginObj, methodName, args, opts);
        }
        else if (opts.observable) {
            return wrapObservable(pluginObj, methodName, args, opts);
        }
        else if (opts.eventObservable && opts.event) {
            return wrapEventObservable(opts.event, opts.element);
        }
        else if (opts.otherPromise) {
            return wrapOtherPromise(pluginObj, methodName, args, opts);
        }
        else {
            return wrapPromise(pluginObj, methodName, args, opts);
        }
    };
};
/**
 * @private
 */
function wrapInstance(pluginObj, methodName, opts) {
    if (opts === void 0) { opts = {}; }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (opts.sync) {
            return callInstance(pluginObj, methodName, args, opts);
        }
        else if (opts.observable) {
            return new __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__["Observable"](function (observer) {
                var pluginResult;
                if (opts.destruct) {
                    pluginResult = callInstance(pluginObj, methodName, args, opts, function () {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            args[_i] = arguments[_i];
                        }
                        return observer.next(args);
                    }, function () {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            args[_i] = arguments[_i];
                        }
                        return observer.error(args);
                    });
                }
                else {
                    pluginResult = callInstance(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));
                }
                if (pluginResult && pluginResult.error) {
                    observer.error(pluginResult.error);
                }
                return function () {
                    try {
                        if (opts.clearWithArgs) {
                            return callInstance(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));
                        }
                        return callInstance(pluginObj, opts.clearFunction, []);
                    }
                    catch (e) {
                        console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);
                        console.warn(e);
                    }
                };
            });
        }
        else if (opts.otherPromise) {
            return getPromise(function (resolve, reject) {
                var result;
                if (opts.destruct) {
                    result = callInstance(pluginObj, methodName, args, opts, function () {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            args[_i] = arguments[_i];
                        }
                        return resolve(args);
                    }, function () {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            args[_i] = arguments[_i];
                        }
                        return reject(args);
                    });
                }
                else {
                    result = callInstance(pluginObj, methodName, args, opts, resolve, reject);
                }
                if (result && !!result.then) {
                    result.then(resolve, reject);
                }
                else {
                    reject();
                }
            });
        }
        else {
            var pluginResult_1, rej_1;
            var p = getPromise(function (resolve, reject) {
                if (opts.destruct) {
                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, function () {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            args[_i] = arguments[_i];
                        }
                        return resolve(args);
                    }, function () {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            args[_i] = arguments[_i];
                        }
                        return reject(args);
                    });
                }
                else {
                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, resolve, reject);
                }
                rej_1 = reject;
            });
            // Angular throws an error on unhandled rejection, but in this case we have already printed
            // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason
            // to error
            if (pluginResult_1 && pluginResult_1.error) {
                p.catch(function () { });
                typeof rej_1 === 'function' && rej_1(pluginResult_1.error);
            }
            return p;
        }
    };
}
//# sourceMappingURL=common.js.map

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(11);
function symbolIteratorPonyfill(root) {
    var Symbol = root.Symbol;
    if (typeof Symbol === 'function') {
        if (!Symbol.iterator) {
            Symbol.iterator = Symbol('iterator polyfill');
        }
        return Symbol.iterator;
    }
    else {
        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)
        var Set_1 = root.Set;
        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {
            return '@@iterator';
        }
        var Map_1 = root.Map;
        // required for compatability with es6-shim
        if (Map_1) {
            var keys = Object.getOwnPropertyNames(Map_1.prototype);
            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.
                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {
                    return key;
                }
            }
        }
        return '@@iterator';
    }
}
exports.symbolIteratorPonyfill = symbolIteratorPonyfill;
exports.iterator = symbolIteratorPonyfill(root_1.root);
/**
 * @deprecated use iterator instead
 */
exports.$$iterator = exports.iterator;
//# sourceMappingURL=iterator.js.map

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
/**
 * Represents a push-based event or value that an {@link Observable} can emit.
 * This class is particularly useful for operators that manage notifications,
 * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and
 * others. Besides wrapping the actual delivered value, it also annotates it
 * with metadata of, for instance, what type of push message it is (`next`,
 * `error`, or `complete`).
 *
 * @see {@link materialize}
 * @see {@link dematerialize}
 * @see {@link observeOn}
 *
 * @class Notification<T>
 */
var Notification = (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    /**
     * Delivers to the given `observer` the value wrapped by this Notification.
     * @param {Observer} observer
     * @return
     */
    Notification.prototype.observe = function (observer) {
        switch (this.kind) {
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        }
    };
    /**
     * Given some {@link Observer} callbacks, deliver the value represented by the
     * current Notification to the correctly corresponding callback.
     * @param {function(value: T): void} next An Observer `next` callback.
     * @param {function(err: any): void} [error] An Observer `error` callback.
     * @param {function(): void} [complete] An Observer `complete` callback.
     * @return {any}
     */
    Notification.prototype.do = function (next, error, complete) {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        }
    };
    /**
     * Takes an Observer or its individual callback functions, and calls `observe`
     * or `do` methods accordingly.
     * @param {Observer|function(value: T): void} nextOrObserver An Observer or
     * the `next` callback.
     * @param {function(err: any): void} [error] An Observer `error` callback.
     * @param {function(): void} [complete] An Observer `complete` callback.
     * @return {any}
     */
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
            return this.observe(nextOrObserver);
        }
        else {
            return this.do(nextOrObserver, error, complete);
        }
    };
    /**
     * Returns a simple Observable that just delivers the notification represented
     * by this Notification instance.
     * @return {any}
     */
    Notification.prototype.toObservable = function () {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return Observable_1.Observable.of(this.value);
            case 'E':
                return Observable_1.Observable.throw(this.error);
            case 'C':
                return Observable_1.Observable.empty();
        }
        throw new Error('unexpected notification kind value');
    };
    /**
     * A shortcut to create a Notification instance of the type `next` from a
     * given value.
     * @param {T} value The `next` value.
     * @return {Notification<T>} The "next" Notification representing the
     * argument.
     */
    Notification.createNext = function (value) {
        if (typeof value !== 'undefined') {
            return new Notification('N', value);
        }
        return Notification.undefinedValueNotification;
    };
    /**
     * A shortcut to create a Notification instance of the type `error` from a
     * given error.
     * @param {any} [err] The `error` error.
     * @return {Notification<T>} The "error" Notification representing the
     * argument.
     */
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    /**
     * A shortcut to create a Notification instance of the type `complete`.
     * @return {Notification<any>} The valueless "complete" Notification.
     */
    Notification.createComplete = function () {
        return Notification.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
}());
exports.Notification = Notification;
//# sourceMappingURL=Notification.js.map

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var subscribeToResult_1 = __webpack_require__(5);
var OuterSubscriber_1 = __webpack_require__(4);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link mergeAll}.</span>
 *
 * <img src="./img/mergeMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger.
 *
 * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>
 * var letters = Rx.Observable.of('a', 'b', 'c');
 * var result = letters.mergeMap(x =>
 *   Rx.Observable.interval(1000).map(i => x+i)
 * );
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // a0
 * // b0
 * // c0
 * // a1
 * // b1
 * // c1
 * // continues to list a,b,c with respective ascending integers
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and merging the results of the Observables obtained
 * from this transformation.
 * @method mergeMap
 * @owner Observable
 */
function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return function mergeMapOperatorFunction(source) {
        if (typeof resultSelector === 'number') {
            concurrent = resultSelector;
            resultSelector = null;
        }
        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));
    };
}
exports.mergeMap = mergeMap;
var MergeMapOperator = (function () {
    function MergeMapOperator(project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        this.project = project;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));
    };
    return MergeMapOperator;
}());
exports.MergeMapOperator = MergeMapOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeMapSubscriber = (function (_super) {
    __extends(MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result, value, index);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeMapSubscriber = MergeMapSubscriber;
//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray_1 = __webpack_require__(13);
function isNumeric(val) {
    // parseFloat NaNs numeric-cast false positives (null|true|false|"")
    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
    // subtraction forces infinities to NaN
    // adding 1 corrects loss of precision from parseFloat (#15100)
    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;
}
exports.isNumeric = isNumeric;
;
//# sourceMappingURL=isNumeric.js.map

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(11);
var Action_1 = __webpack_require__(231);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AsyncAction = (function (_super) {
    __extends(AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
        this.pending = false;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (this.closed) {
            return this;
        }
        // Always replace the current state with the new state.
        this.state = state;
        // Set the pending flag indicating that this action has been scheduled, or
        // has recursively rescheduled itself.
        this.pending = true;
        var id = this.id;
        var scheduler = this.scheduler;
        //
        // Important implementation note:
        //
        // Actions only execute once by default, unless rescheduled from within the
        // scheduled callback. This allows us to implement single and repeat
        // actions via the same code path, without adding API surface area, as well
        // as mimic traditional recursion but across asynchronous boundaries.
        //
        // However, JS runtimes and timers distinguish between intervals achieved by
        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of
        // serial `setTimeout` calls can be individually delayed, which delays
        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to
        // guarantee the interval callback will be invoked more precisely to the
        // interval period, regardless of load.
        //
        // Therefore, we use `setInterval` to schedule single and repeat actions.
        // If the action reschedules itself with the same delay, the interval is not
        // canceled. If the action doesn't reschedule, or reschedules with a
        // different delay, the interval will be canceled after scheduled callback
        // execution.
        //
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.delay = delay;
        // If this action has already an async Id, don't request a new one.
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If this action is rescheduled with the same delay time, don't clear the interval id.
        if (delay !== null && this.delay === delay && this.pending === false) {
            return id;
        }
        // Otherwise, if the action's delay time is different from the current delay,
        // or the action has been rescheduled before it's executed, clear the interval id
        return root_1.root.clearInterval(id) && undefined || undefined;
    };
    /**
     * Immediately executes this action and the `work` it contains.
     * @return {any}
     */
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            // Dequeue if the action didn't reschedule itself. Don't call
            // unsubscribe(), because the action could reschedule later.
            // For example:
            // ```
            // scheduler.schedule(function doWork(counter) {
            //   /* ... I'm a busy worker bee ... */
            //   var originalAction = this;
            //   /* wait 100ms before rescheduling the action */
            //   setTimeout(function () {
            //     originalAction.schedule(counter + 1);
            //   }, 100);
            // }, 1000);
            // ```
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
        this.delay = null;
    };
    return AsyncAction;
}(Action_1.Action));
exports.AsyncAction = AsyncAction;
//# sourceMappingURL=AsyncAction.js.map

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Scheduler_1 = __webpack_require__(232);
var AsyncScheduler = (function (_super) {
    __extends(AsyncScheduler, _super);
    function AsyncScheduler() {
        _super.apply(this, arguments);
        this.actions = [];
        /**
         * A flag to indicate whether the Scheduler is currently executing a batch of
         * queued actions.
         * @type {boolean}
         */
        this.active = false;
        /**
         * An internal ID used to track the latest asynchronous task such as those
         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and
         * others.
         * @type {any}
         */
        this.scheduled = undefined;
    }
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift()); // exhaust the scheduler queue
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(Scheduler_1.Scheduler));
exports.AsyncScheduler = AsyncScheduler;
//# sourceMappingURL=AsyncScheduler.js.map

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Applies a given `project` function to each value emitted by the source
 * Observable, and emits the resulting values as an Observable.
 *
 * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),
 * it passes each source value through a transformation function to get
 * corresponding output values.</span>
 *
 * <img src="./img/map.png" width="100%">
 *
 * Similar to the well known `Array.prototype.map` function, this operator
 * applies a projection to each value and emits that projection in the output
 * Observable.
 *
 * @example <caption>Map every click to the clientX position of that click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks.map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link mapTo}
 * @see {@link pluck}
 *
 * @param {function(value: T, index: number): R} project The function to apply
 * to each `value` emitted by the source Observable. The `index` parameter is
 * the number `i` for the i-th emission that has happened since the
 * subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to define what `this` is in the
 * `project` function.
 * @return {Observable<R>} An Observable that emits the values from the source
 * Observable transformed by the given `project` function.
 * @method map
 * @owner Observable
 */
function map(project, thisArg) {
    return function mapOperation(source) {
        if (typeof project !== 'function') {
            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
        }
        return source.lift(new MapOperator(project, thisArg));
    };
}
exports.map = map;
var MapOperator = (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());
exports.MapOperator = MapOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MapSubscriber = (function (_super) {
    __extends(MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        _super.call(this, destination);
        this.project = project;
        this.count = 0;
        this.thisArg = thisArg || this;
    }
    // NOTE: This looks unoptimized, but it's actually purposefully NOT
    // using try/catch optimizations.
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=map.js.map

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an element was queried at a certain index of an
 * Observable, but no such index or position exists in that sequence.
 *
 * @see {@link elementAt}
 * @see {@link take}
 * @see {@link takeLast}
 *
 * @class ArgumentOutOfRangeError
 */
var ArgumentOutOfRangeError = (function (_super) {
    __extends(ArgumentOutOfRangeError, _super);
    function ArgumentOutOfRangeError() {
        var err = _super.call(this, 'argument out of range');
        this.name = err.name = 'ArgumentOutOfRangeError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return ArgumentOutOfRangeError;
}(Error));
exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;
//# sourceMappingURL=ArgumentOutOfRangeError.js.map

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var scan_1 = __webpack_require__(55);
var takeLast_1 = __webpack_require__(56);
var defaultIfEmpty_1 = __webpack_require__(50);
var pipe_1 = __webpack_require__(41);
/* tslint:enable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns the
 * accumulated result when the source completes, given an optional seed value.
 *
 * <span class="informal">Combines together all values emitted on the source,
 * using an accumulator function that knows how to join a new source value into
 * the accumulation from the past.</span>
 *
 * <img src="./img/reduce.png" width="100%">
 *
 * Like
 * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),
 * `reduce` applies an `accumulator` function against an accumulation and each
 * value of the source Observable (from the past) to reduce it to a single
 * value, emitted on the output Observable. Note that `reduce` will only emit
 * one value, only when the source Observable completes. It is equivalent to
 * applying operator {@link scan} followed by operator {@link last}.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events that happened in 5 seconds</caption>
 * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')
 *   .takeUntil(Rx.Observable.interval(5000));
 * var ones = clicksInFiveSeconds.mapTo(1);
 * var seed = 0;
 * var count = ones.reduce((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link count}
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link scan}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function
 * called on each source value.
 * @param {R} [seed] The initial accumulation value.
 * @return {Observable<R>} An Observable that emits a single value that is the
 * result of accumulating the values emitted by the source Observable.
 * @method reduce
 * @owner Observable
 */
function reduce(accumulator, seed) {
    // providing a seed of `undefined` *should* be valid and trigger
    // hasSeed! so don't use `seed !== undefined` checks!
    // For this reason, we have to check it here at the original call site
    // otherwise inside Operator/Subscriber we won't know if `undefined`
    // means they didn't provide anything or if they literally provided `undefined`
    if (arguments.length >= 2) {
        return function reduceOperatorFunctionWithSeed(source) {
            return pipe_1.pipe(scan_1.scan(accumulator, seed), takeLast_1.takeLast(1), defaultIfEmpty_1.defaultIfEmpty(seed))(source);
        };
    }
    return function reduceOperatorFunction(source) {
        return pipe_1.pipe(scan_1.scan(function (acc, value, index) {
            return accumulator(acc, value, index + 1);
        }), takeLast_1.takeLast(1))(source);
    };
}
exports.reduce = reduce;
//# sourceMappingURL=reduce.js.map

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isFunction(x) {
    return typeof x === 'function';
}
exports.isFunction = isFunction;
//# sourceMappingURL=isFunction.js.map

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(11);
var Symbol = root_1.root.Symbol;
exports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?
    Symbol.for('rxSubscriber') : '@@rxSubscriber';
/**
 * @deprecated use rxSubscriber instead
 */
exports.$$rxSubscriber = exports.rxSubscriber;
//# sourceMappingURL=rxSubscriber.js.map

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(11);
function getSymbolObservable(context) {
    var $$observable;
    var Symbol = context.Symbol;
    if (typeof Symbol === 'function') {
        if (Symbol.observable) {
            $$observable = Symbol.observable;
        }
        else {
            $$observable = Symbol('observable');
            Symbol.observable = $$observable;
        }
    }
    else {
        $$observable = '@@observable';
    }
    return $$observable;
}
exports.getSymbolObservable = getSymbolObservable;
exports.observable = getSymbolObservable(root_1.root);
/**
 * @deprecated use observable instead
 */
exports.$$observable = exports.observable;
//# sourceMappingURL=observable.js.map

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var fromEvent_1 = __webpack_require__(172);
Observable_1.Observable.fromEvent = fromEvent_1.fromEvent;
//# sourceMappingURL=fromEvent.js.map

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an action is invalid because the object has been
 * unsubscribed.
 *
 * @see {@link Subject}
 * @see {@link BehaviorSubject}
 *
 * @class ObjectUnsubscribedError
 */
var ObjectUnsubscribedError = (function (_super) {
    __extends(ObjectUnsubscribedError, _super);
    function ObjectUnsubscribedError() {
        var err = _super.call(this, 'object unsubscribed');
        this.name = err.name = 'ObjectUnsubscribedError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return ObjectUnsubscribedError;
}(Error));
exports.ObjectUnsubscribedError = ObjectUnsubscribedError;
//# sourceMappingURL=ObjectUnsubscribedError.js.map

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var Subscription_1 = __webpack_require__(7);
/**
 * @class AsyncSubject<T>
 */
var AsyncSubject = (function (_super) {
    __extends(AsyncSubject, _super);
    function AsyncSubject() {
        _super.apply(this, arguments);
        this.value = null;
        this.hasNext = false;
        this.hasCompleted = false;
    }
    AsyncSubject.prototype._subscribe = function (subscriber) {
        if (this.hasError) {
            subscriber.error(this.thrownError);
            return Subscription_1.Subscription.EMPTY;
        }
        else if (this.hasCompleted && this.hasNext) {
            subscriber.next(this.value);
            subscriber.complete();
            return Subscription_1.Subscription.EMPTY;
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.hasCompleted) {
            this.value = value;
            this.hasNext = true;
        }
    };
    AsyncSubject.prototype.error = function (error) {
        if (!this.hasCompleted) {
            _super.prototype.error.call(this, error);
        }
    };
    AsyncSubject.prototype.complete = function () {
        this.hasCompleted = true;
        if (this.hasNext) {
            _super.prototype.next.call(this, this.value);
        }
        _super.prototype.complete.call(this);
    };
    return AsyncSubject;
}(Subject_1.Subject));
exports.AsyncSubject = AsyncSubject;
//# sourceMappingURL=AsyncSubject.js.map

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ArrayObservable_1 = __webpack_require__(14);
var isArray_1 = __webpack_require__(13);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
var none = {};
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from this Observable with values from
 * Observables passed as arguments. This is done by subscribing to each
 * Observable, in order, and collecting an array of each of the most recent
 * values any time any of the input Observables emits, then either taking that
 * array and passing it as arguments to an optional `project` function and
 * emitting the return value of that, or just emitting the array of recent
 * values directly if there is no `project` function.
 *
 * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method combineLatest
 * @owner Observable
 */
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = null;
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    // if the first and only other argument besides the resultSelector is an array
    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`
    if (observables.length === 1 && isArray_1.isArray(observables[0])) {
        observables = observables[0].slice();
    }
    return function (source) { return source.lift.call(new ArrayObservable_1.ArrayObservable([source].concat(observables)), new CombineLatestOperator(project)); };
}
exports.combineLatest = combineLatest;
var CombineLatestOperator = (function () {
    function CombineLatestOperator(project) {
        this.project = project;
    }
    CombineLatestOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));
    };
    return CombineLatestOperator;
}());
exports.CombineLatestOperator = CombineLatestOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CombineLatestSubscriber = (function (_super) {
    __extends(CombineLatestSubscriber, _super);
    function CombineLatestSubscriber(destination, project) {
        _super.call(this, destination);
        this.project = project;
        this.active = 0;
        this.values = [];
        this.observables = [];
    }
    CombineLatestSubscriber.prototype._next = function (observable) {
        this.values.push(none);
        this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            this.active = len;
            this.toRespond = len;
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));
            }
        }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
        if ((this.active -= 1) === 0) {
            this.destination.complete();
        }
    };
    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var values = this.values;
        var oldVal = values[outerIndex];
        var toRespond = !this.toRespond
            ? 0
            : oldVal === none ? --this.toRespond : this.toRespond;
        values[outerIndex] = innerValue;
        if (toRespond === 0) {
            if (this.project) {
                this._tryProject(values);
            }
            else {
                this.destination.next(values.slice());
            }
        }
    };
    CombineLatestSubscriber.prototype._tryProject = function (values) {
        var result;
        try {
            result = this.project.apply(this, values);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return CombineLatestSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.CombineLatestSubscriber = CombineLatestSubscriber;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var Notification_1 = __webpack_require__(19);
/**
 *
 * Re-emits all notifications from source Observable with specified scheduler.
 *
 * <span class="informal">Ensure a specific scheduler is used, from outside of an Observable.</span>
 *
 * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule
 * notifications emitted by the source Observable. It might be useful, if you do not have control over
 * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.
 *
 * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,
 * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal
 * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits
 * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.
 * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split
 * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source
 * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a
 * little bit more, to ensure that they are emitted at expected moments.
 *
 * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications
 * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`
 * will delay all notifications - including error notifications - while `delay` will pass through error
 * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator
 * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used
 * for notification emissions in general.
 *
 * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>
 * const intervals = Rx.Observable.interval(10); // Intervals are scheduled
 *                                               // with async scheduler by default...
 *
 * intervals
 * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame
 * .subscribe(val => {                           // scheduler to ensure smooth animation.
 *   someDiv.style.height = val + 'px';
 * });
 *
 * @see {@link delay}
 *
 * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.
 * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.
 * @return {Observable<T>} Observable that emits the same notifications as the source Observable,
 * but with provided scheduler.
 *
 * @method observeOn
 * @owner Observable
 */
function observeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return function observeOnOperatorFunction(source) {
        return source.lift(new ObserveOnOperator(scheduler, delay));
    };
}
exports.observeOn = observeOn;
var ObserveOnOperator = (function () {
    function ObserveOnOperator(scheduler, delay) {
        if (delay === void 0) { delay = 0; }
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
}());
exports.ObserveOnOperator = ObserveOnOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ObserveOnSubscriber = (function (_super) {
    __extends(ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
        if (delay === void 0) { delay = 0; }
        _super.call(this, destination);
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
        var notification = arg.notification, destination = arg.destination;
        notification.observe(destination);
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
        this.scheduleMessage(Notification_1.Notification.createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
        this.scheduleMessage(Notification_1.Notification.createError(err));
    };
    ObserveOnSubscriber.prototype._complete = function () {
        this.scheduleMessage(Notification_1.Notification.createComplete());
    };
    return ObserveOnSubscriber;
}(Subscriber_1.Subscriber));
exports.ObserveOnSubscriber = ObserveOnSubscriber;
var ObserveOnMessage = (function () {
    function ObserveOnMessage(notification, destination) {
        this.notification = notification;
        this.destination = destination;
    }
    return ObserveOnMessage;
}());
exports.ObserveOnMessage = ObserveOnMessage;
//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeMap_1 = __webpack_require__(20);
var identity_1 = __webpack_require__(74);
/**
 * Converts a higher-order Observable into a first-order Observable which
 * concurrently delivers all values that are emitted on the inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables.</span>
 *
 * <img src="./img/mergeAll.png" width="100%">
 *
 * `mergeAll` subscribes to an Observable that emits Observables, also known as
 * a higher-order Observable. Each time it observes one of these emitted inner
 * Observables, it subscribes to that and delivers all the values from the
 * inner Observable on the output Observable. The output Observable only
 * completes once all inner Observables have completed. Any error delivered by
 * a inner Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var firstOrder = higherOrder.mergeAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));
 * var firstOrder = higherOrder.mergeAll(2);
 * firstOrder.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link merge}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits values coming from all the
 * inner Observables emitted by the source Observable.
 * @method mergeAll
 * @owner Observable
 */
function mergeAll(concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return mergeMap_1.mergeMap(identity_1.identity, null, concurrent);
}
exports.mergeAll = mergeAll;
//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isDate(value) {
    return value instanceof Date && !isNaN(+value);
}
exports.isDate = isDate;
//# sourceMappingURL=isDate.js.map

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ArrayObservable_1 = __webpack_require__(14);
var isArray_1 = __webpack_require__(13);
var Subscriber_1 = __webpack_require__(3);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
var iterator_1 = __webpack_require__(18);
/* tslint:enable:max-line-length */
/**
 * @param observables
 * @return {Observable<R>}
 * @method zip
 * @owner Observable
 */
function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return function zipOperatorFunction(source) {
        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));
    };
}
exports.zip = zip;
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each
 * of its input Observables.
 *
 * If the latest parameter is a function, this function is used to compute the created value from the input values.
 * Otherwise, an array of the input values is returned.
 *
 * @example <caption>Combine age and name from different sources</caption>
 *
 * let age$ = Observable.of<number>(27, 25, 29);
 * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');
 * let isDev$ = Observable.of<boolean>(true, true, false);
 *
 * Observable
 *     .zip(age$,
 *          name$,
 *          isDev$,
 *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))
 *     .subscribe(x => console.log(x));
 *
 * // outputs
 * // { age: 27, name: 'Foo', isDev: true }
 * // { age: 25, name: 'Bar', isDev: true }
 * // { age: 29, name: 'Beer', isDev: false }
 *
 * @param observables
 * @return {Observable<R>}
 * @static true
 * @name zip
 * @owner Observable
 */
function zipStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = observables[observables.length - 1];
    if (typeof project === 'function') {
        observables.pop();
    }
    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));
}
exports.zipStatic = zipStatic;
var ZipOperator = (function () {
    function ZipOperator(project) {
        this.project = project;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ZipSubscriber(subscriber, this.project));
    };
    return ZipOperator;
}());
exports.ZipOperator = ZipOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ZipSubscriber = (function (_super) {
    __extends(ZipSubscriber, _super);
    function ZipSubscriber(destination, project, values) {
        if (values === void 0) { values = Object.create(null); }
        _super.call(this, destination);
        this.iterators = [];
        this.active = 0;
        this.project = (typeof project === 'function') ? project : null;
        this.values = values;
    }
    ZipSubscriber.prototype._next = function (value) {
        var iterators = this.iterators;
        if (isArray_1.isArray(value)) {
            iterators.push(new StaticArrayIterator(value));
        }
        else if (typeof value[iterator_1.iterator] === 'function') {
            iterators.push(new StaticIterator(value[iterator_1.iterator]()));
        }
        else {
            iterators.push(new ZipBufferIterator(this.destination, this, value));
        }
    };
    ZipSubscriber.prototype._complete = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        if (len === 0) {
            this.destination.complete();
            return;
        }
        this.active = len;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (iterator.stillUnsubscribed) {
                this.add(iterator.subscribe(iterator, i));
            }
            else {
                this.active--; // not an observable
            }
        }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
        this.active--;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    ZipSubscriber.prototype.checkIterators = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        var destination = this.destination;
        // abort if not all of them have values
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                return;
            }
        }
        var shouldComplete = false;
        var args = [];
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            var result = iterator.next();
            // check to see if it's completed now that you've gotten
            // the next value.
            if (iterator.hasCompleted()) {
                shouldComplete = true;
            }
            if (result.done) {
                destination.complete();
                return;
            }
            args.push(result.value);
        }
        if (this.project) {
            this._tryProject(args);
        }
        else {
            destination.next(args);
        }
        if (shouldComplete) {
            destination.complete();
        }
    };
    ZipSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return ZipSubscriber;
}(Subscriber_1.Subscriber));
exports.ZipSubscriber = ZipSubscriber;
var StaticIterator = (function () {
    function StaticIterator(iterator) {
        this.iterator = iterator;
        this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
        return true;
    };
    StaticIterator.prototype.next = function () {
        var result = this.nextResult;
        this.nextResult = this.iterator.next();
        return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
        var nextResult = this.nextResult;
        return nextResult && nextResult.done;
    };
    return StaticIterator;
}());
var StaticArrayIterator = (function () {
    function StaticArrayIterator(array) {
        this.array = array;
        this.index = 0;
        this.length = 0;
        this.length = array.length;
    }
    StaticArrayIterator.prototype[iterator_1.iterator] = function () {
        return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
        var i = this.index++;
        var array = this.array;
        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
        return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
        return this.array.length === this.index;
    };
    return StaticArrayIterator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ZipBufferIterator = (function (_super) {
    __extends(ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable) {
        _super.call(this, destination);
        this.parent = parent;
        this.observable = observable;
        this.stillUnsubscribed = true;
        this.buffer = [];
        this.isComplete = false;
    }
    ZipBufferIterator.prototype[iterator_1.iterator] = function () {
        return this;
    };
    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next
    //    this is legit because `next()` will never be called by a subscription in this case.
    ZipBufferIterator.prototype.next = function () {
        var buffer = this.buffer;
        if (buffer.length === 0 && this.isComplete) {
            return { value: null, done: true };
        }
        else {
            return { value: buffer.shift(), done: false };
        }
    };
    ZipBufferIterator.prototype.hasValue = function () {
        return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
        return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
        if (this.buffer.length > 0) {
            this.isComplete = true;
            this.parent.notifyInactive();
        }
        else {
            this.destination.complete();
        }
    };
    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.buffer.push(innerValue);
        this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function (value, index) {
        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);
    };
    return ZipBufferIterator;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=zip.js.map

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var queue_1 = __webpack_require__(79);
var Subscription_1 = __webpack_require__(7);
var observeOn_1 = __webpack_require__(34);
var ObjectUnsubscribedError_1 = __webpack_require__(31);
var SubjectSubscription_1 = __webpack_require__(67);
/**
 * @class ReplaySubject<T>
 */
var ReplaySubject = (function (_super) {
    __extends(ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
        _super.call(this);
        this.scheduler = scheduler;
        this._events = [];
        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        this._windowTime = windowTime < 1 ? 1 : windowTime;
    }
    ReplaySubject.prototype.next = function (value) {
        var now = this._getNow();
        this._events.push(new ReplayEvent(now, value));
        this._trimBufferThenGetEvents();
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        var _events = this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        var subscription;
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else if (this.hasError) {
            subscription = Subscription_1.Subscription.EMPTY;
        }
        else if (this.isStopped) {
            subscription = Subscription_1.Subscription.EMPTY;
        }
        else {
            this.observers.push(subscriber);
            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);
        }
        if (scheduler) {
            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));
        }
        var len = _events.length;
        for (var i = 0; i < len && !subscriber.closed; i++) {
            subscriber.next(_events[i].value);
        }
        if (this.hasError) {
            subscriber.error(this.thrownError);
        }
        else if (this.isStopped) {
            subscriber.complete();
        }
        return subscription;
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || queue_1.queue).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        // Trim events that fall out of the time window.
        // Start at the front of the list. Break early once
        // we encounter an event that falls within the window.
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(Subject_1.Subject));
exports.ReplaySubject = ReplaySubject;
var ReplayEvent = (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());
//# sourceMappingURL=ReplaySubject.js.map

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an Observable or a sequence was queried but has no
 * elements.
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link single}
 *
 * @class EmptyError
 */
var EmptyError = (function (_super) {
    __extends(EmptyError, _super);
    function EmptyError() {
        var err = _super.call(this, 'no elements in sequence');
        this.name = err.name = 'EmptyError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return EmptyError;
}(Error));
exports.EmptyError = EmptyError;
//# sourceMappingURL=EmptyError.js.map

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
exports.defaultThrottleConfig = {
    leading: true,
    trailing: false
};
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for a duration determined by another Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link throttleTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/throttle.png" width="100%">
 *
 * `throttle` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled by calling the `durationSelector` function with the source value,
 * which returns the "duration" Observable. When the duration Observable emits a
 * value or completes, the timer is disabled, and this process repeats for the
 * next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttle(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration for each source value, returned as an Observable or a Promise.
 * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults
 * to `{ leading: true, trailing: false }`.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttle
 * @owner Observable
 */
function throttle(durationSelector, config) {
    if (config === void 0) { config = exports.defaultThrottleConfig; }
    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };
}
exports.throttle = throttle;
var ThrottleOperator = (function () {
    function ThrottleOperator(durationSelector, leading, trailing) {
        this.durationSelector = durationSelector;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
    };
    return ThrottleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc
 * @ignore
 * @extends {Ignored}
 */
var ThrottleSubscriber = (function (_super) {
    __extends(ThrottleSubscriber, _super);
    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
        _super.call(this, destination);
        this.destination = destination;
        this.durationSelector = durationSelector;
        this._leading = _leading;
        this._trailing = _trailing;
        this._hasTrailingValue = false;
    }
    ThrottleSubscriber.prototype._next = function (value) {
        if (this.throttled) {
            if (this._trailing) {
                this._hasTrailingValue = true;
                this._trailingValue = value;
            }
        }
        else {
            var duration = this.tryDurationSelector(value);
            if (duration) {
                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));
            }
            if (this._leading) {
                this.destination.next(value);
                if (this._trailing) {
                    this._hasTrailingValue = true;
                    this._trailingValue = value;
                }
            }
        }
    };
    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
        try {
            return this.durationSelector(value);
        }
        catch (err) {
            this.destination.error(err);
            return null;
        }
    };
    ThrottleSubscriber.prototype._unsubscribe = function () {
        var _a = this, throttled = _a.throttled, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue, _trailing = _a._trailing;
        this._trailingValue = null;
        this._hasTrailingValue = false;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
    };
    ThrottleSubscriber.prototype._sendTrailing = function () {
        var _a = this, destination = _a.destination, throttled = _a.throttled, _trailing = _a._trailing, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue;
        if (throttled && _trailing && _hasTrailingValue) {
            destination.next(_trailingValue);
            this._trailingValue = null;
            this._hasTrailingValue = false;
        }
    };
    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._sendTrailing();
        this._unsubscribe();
    };
    ThrottleSubscriber.prototype.notifyComplete = function () {
        this._sendTrailing();
        this._unsubscribe();
    };
    return ThrottleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=throttle.js.map

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var noop_1 = __webpack_require__(42);
/* tslint:enable:max-line-length */
function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i - 0] = arguments[_i];
    }
    return pipeFromArray(fns);
}
exports.pipe = pipe;
/* @internal */
function pipeFromArray(fns) {
    if (!fns) {
        return noop_1.noop;
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
exports.pipeFromArray = pipeFromArray;
//# sourceMappingURL=pipe.js.map

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* tslint:disable:no-empty */
function noop() { }
exports.noop = noop;
//# sourceMappingURL=noop.js.map

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ScalarObservable = (function (_super) {
    __extends(ScalarObservable, _super);
    function ScalarObservable(value, scheduler) {
        _super.call(this);
        this.value = value;
        this.scheduler = scheduler;
        this._isScalar = true;
        if (scheduler) {
            this._isScalar = false;
        }
    }
    ScalarObservable.create = function (value, scheduler) {
        return new ScalarObservable(value, scheduler);
    };
    ScalarObservable.dispatch = function (state) {
        var done = state.done, value = state.value, subscriber = state.subscriber;
        if (done) {
            subscriber.complete();
            return;
        }
        subscriber.next(value);
        if (subscriber.closed) {
            return;
        }
        state.done = true;
        this.schedule(state);
    };
    ScalarObservable.prototype._subscribe = function (subscriber) {
        var value = this.value;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ScalarObservable.dispatch, 0, {
                done: false, value: value, subscriber: subscriber
            });
        }
        else {
            subscriber.next(value);
            if (!subscriber.closed) {
                subscriber.complete();
            }
        }
    };
    return ScalarObservable;
}(Observable_1.Observable));
exports.ScalarObservable = ScalarObservable;
//# sourceMappingURL=ScalarObservable.js.map

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isScheduler_1 = __webpack_require__(12);
var of_1 = __webpack_require__(70);
var from_1 = __webpack_require__(71);
var concatAll_1 = __webpack_require__(45);
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from given
 * Observable and then moves on to the next.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * `concat` joins multiple Observables together, by subscribing to them one at a time and
 * merging their results into the output Observable. You can pass either an array of
 * Observables, or put them directly as arguments. Passing an empty array will result
 * in Observable that completes immediately.
 *
 * `concat` will subscribe to first input Observable and emit all its values, without
 * changing or affecting them in any way. When that Observable completes, it will
 * subscribe to then next Observable passed and, again, emit its values. This will be
 * repeated, until the operator runs out of Observables. When last input Observable completes,
 * `concat` will complete as well. At any given moment only one Observable passed to operator
 * emits values. If you would like to emit values from passed Observables concurrently, check out
 * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,
 * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.
 *
 * Note that if some input Observable never completes, `concat` will also never complete
 * and Observables following the one that did not complete will never be subscribed. On the other
 * hand, if some Observable simply completes immediately after it is subscribed, it will be
 * invisible for `concat`, which will just move on to the next Observable.
 *
 * If any Observable in chain errors, instead of passing control to the next Observable,
 * `concat` will error immediately as well. Observables that would be subscribed after
 * the one that emitted error, never will.
 *
 * If you pass to `concat` the same Observable many times, its stream of values
 * will be "replayed" on every subscription, which means you can repeat given Observable
 * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,
 * you can always use {@link repeat}.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = Rx.Observable.concat(timer, sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 *
 * @example <caption>Concatenate an array of 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 *
 * @example <caption>Concatenate the same Observable to repeat it</caption>
 * const timer = Rx.Observable.interval(1000).take(2);
 *
 * Rx.Observable.concat(timer, timer) // concating the same Observable!
 * .subscribe(
 *   value => console.log(value),
 *   err => {},
 *   () => console.log('...and it is done!')
 * );
 *
 * // Logs:
 * // 0 after 1s
 * // 1 after 2s
 * // 0 after 3s
 * // 1 after 4s
 * // "...and it is done!" also after 4s
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {ObservableInput} input1 An input Observable to concatenate with others.
 * @param {ObservableInput} input2 An input Observable to concatenate with others.
 * More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @static true
 * @name concat
 * @owner Observable
 */
function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    if (observables.length === 1 || (observables.length === 2 && isScheduler_1.isScheduler(observables[1]))) {
        return from_1.from(observables[0]);
    }
    return concatAll_1.concatAll()(of_1.of.apply(void 0, observables));
}
exports.concat = concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeAll_1 = __webpack_require__(35);
/**
 * Converts a higher-order Observable into a first-order Observable by
 * concatenating the inner Observables in order.
 *
 * <span class="informal">Flattens an Observable-of-Observables by putting one
 * inner Observable after the other.</span>
 *
 * <img src="./img/concatAll.png" width="100%">
 *
 * Joins every Observable emitted by the source (a higher-order Observable), in
 * a serial fashion. It subscribes to each inner Observable only after the
 * previous inner Observable has completed, and merges all of their values into
 * the returned observable.
 *
 * __Warning:__ If the source Observable emits Observables quickly and
 * endlessly, and the inner Observables it emits generally complete slower than
 * the source emits, you can run into memory issues as the incoming Observables
 * collect in an unbounded buffer.
 *
 * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));
 * var firstOrder = higherOrder.concatAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link combineAll}
 * @see {@link concat}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable emitting values from all the inner
 * Observables concatenated.
 * @method concatAll
 * @owner Observable
 */
function concatAll() {
    return mergeAll_1.mergeAll(1);
}
exports.concatAll = concatAll;
//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var ArrayObservable_1 = __webpack_require__(14);
var mergeAll_1 = __webpack_require__(35);
var isScheduler_1 = __webpack_require__(12);
/* tslint:enable:max-line-length */
function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return function (source) { return source.lift.call(mergeStatic.apply(void 0, [source].concat(observables))); };
}
exports.merge = merge;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (as arguments), and simply
 * forwards (without doing any transformation) all the values from all the input
 * Observables to the output Observable. The output Observable only completes
 * once all input Observables have completed. Any error delivered by an input
 * Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = Rx.Observable.merge(clicks, timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // timer will emit ascending values, one every second(1000ms) to console
 * // clicks logs MouseEvents to console everytime the "document" is clicked
 * // Since the two streams are merged you see these happening
 * // as they occur.
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - First timer1 and timer2 will run concurrently
 * // - timer1 will emit a value every 1000ms for 10 iterations
 * // - timer2 will emit a value every 2000ms for 6 iterations
 * // - after timer1 hits it's max iteration, timer2 will
 * //   continue, and timer3 will start to run concurrently with timer2
 * // - when timer2 hits it's max iteration it terminates, and
 * //   timer3 will continue to emit a value every 500ms until it is complete
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {...ObservableInput} observables Input Observables to merge together.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} an Observable that emits items that are the result of
 * every input Observable.
 * @static true
 * @name merge
 * @owner Observable
 */
function mergeStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (isScheduler_1.isScheduler(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {
        return observables[0];
    }
    return mergeAll_1.mergeAll(concurrent)(new ArrayObservable_1.ArrayObservable(observables, scheduler));
}
exports.mergeStatic = mergeStatic;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isArray_1 = __webpack_require__(13);
var ArrayObservable_1 = __webpack_require__(14);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    // if the only argument is an array, it was most likely called with
    // `race([obs1, obs2, ...])`
    if (observables.length === 1) {
        if (isArray_1.isArray(observables[0])) {
            observables = observables[0];
        }
        else {
            return observables[0];
        }
    }
    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());
}
exports.race = race;
var RaceOperator = (function () {
    function RaceOperator() {
    }
    RaceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RaceSubscriber(subscriber));
    };
    return RaceOperator;
}());
exports.RaceOperator = RaceOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RaceSubscriber = (function (_super) {
    __extends(RaceSubscriber, _super);
    function RaceSubscriber(destination) {
        _super.call(this, destination);
        this.hasFirst = false;
        this.observables = [];
        this.subscriptions = [];
    }
    RaceSubscriber.prototype._next = function (observable) {
        this.observables.push(observable);
    };
    RaceSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            for (var i = 0; i < len && !this.hasFirst; i++) {
                var observable = observables[i];
                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);
                if (this.subscriptions) {
                    this.subscriptions.push(subscription);
                }
                this.add(subscription);
            }
            this.observables = null;
        }
    };
    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (!this.hasFirst) {
            this.hasFirst = true;
            for (var i = 0; i < this.subscriptions.length; i++) {
                if (i !== outerIndex) {
                    var subscription = this.subscriptions[i];
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
            }
            this.subscriptions = null;
        }
        this.destination.next(innerValue);
    };
    return RaceSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.RaceSubscriber = RaceSubscriber;
//# sourceMappingURL=race.js.map

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var FromObservable_1 = __webpack_require__(72);
var isArray_1 = __webpack_require__(13);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/* tslint:enable:max-line-length */
/**
 * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one
 * that was passed.
 *
 * <span class="informal">Execute series of Observables no matter what, even if it means swallowing errors.</span>
 *
 * <img src="./img/onErrorResumeNext.png" width="100%">
 *
 * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as
 * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same
 * as the source.
 *
 * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.
 * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`
 * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting
 * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another
 * Observable in provided series, no matter if previous Observable completed or ended with an error. This will
 * be happening until there is no more Observables left in the series, at which point returned Observable will
 * complete - even if the last subscribed stream ended with an error.
 *
 * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive
 * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable
 * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with
 * an error.
 *
 * Note that you do not get any access to errors emitted by the Observables. In particular do not
 * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take
 * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.
 *
 *
 * @example <caption>Subscribe to the next Observable after map fails</caption>
 * Rx.Observable.of(1, 2, 3, 0)
 *   .map(x => {
 *       if (x === 0) { throw Error(); }
         return 10 / x;
 *   })
 *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))
 *   .subscribe(
 *     val => console.log(val),
 *     err => console.log(err),          // Will never be called.
 *     () => console.log('that\'s it!')
 *   );
 *
 * // Logs:
 * // 10
 * // 5
 * // 3.3333333333333335
 * // 1
 * // 2
 * // 3
 * // "that's it!"
 *
 * @see {@link concat}
 * @see {@link catch}
 *
 * @param {...ObservableInput} observables Observables passed either directly or as an array.
 * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes
 * to the next passed Observable and so on, until it completes or runs out of Observables.
 * @method onErrorResumeNext
 * @owner Observable
 */
function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i - 0] = arguments[_i];
    }
    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
        nextSources = nextSources[0];
    }
    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };
}
exports.onErrorResumeNext = onErrorResumeNext;
/* tslint:enable:max-line-length */
function onErrorResumeNextStatic() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i - 0] = arguments[_i];
    }
    var source = null;
    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
        nextSources = nextSources[0];
    }
    source = nextSources.shift();
    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));
}
exports.onErrorResumeNextStatic = onErrorResumeNextStatic;
var OnErrorResumeNextOperator = (function () {
    function OnErrorResumeNextOperator(nextSources) {
        this.nextSources = nextSources;
    }
    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
    };
    return OnErrorResumeNextOperator;
}());
var OnErrorResumeNextSubscriber = (function (_super) {
    __extends(OnErrorResumeNextSubscriber, _super);
    function OnErrorResumeNextSubscriber(destination, nextSources) {
        _super.call(this, destination);
        this.destination = destination;
        this.nextSources = nextSources;
    }
    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._error = function (err) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._complete = function () {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
        var next = this.nextSources.shift();
        if (next) {
            this.add(subscribeToResult_1.subscribeToResult(this, next));
        }
        else {
            this.destination.complete();
        }
    };
    return OnErrorResumeNextSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeMap_1 = __webpack_require__(20);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, in a serialized fashion waiting for each one to complete before
 * merging the next.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link concatAll}.</span>
 *
 * <img src="./img/concatMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each new inner Observable is
 * concatenated with the previous inner Observable.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMapTo}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking values from each projected inner
 * Observable sequentially.
 * @method concatMap
 * @owner Observable
 */
function concatMap(project, resultSelector) {
    return mergeMap_1.mergeMap(project, resultSelector, 1);
}
exports.concatMap = concatMap;
//# sourceMappingURL=concatMap.js.map

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * Emits a given value if the source Observable completes without emitting any
 * `next` value, otherwise mirrors the source Observable.
 *
 * <span class="informal">If the source Observable turns out to be empty, then
 * this operator will emit a default value.</span>
 *
 * <img src="./img/defaultIfEmpty.png" width="100%">
 *
 * `defaultIfEmpty` emits the values emitted by the source Observable or a
 * specified default value if the source Observable is empty (completes without
 * having emitted any `next` value).
 *
 * @example <caption>If no clicks happen in 5 seconds, then emit "no clicks"</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));
 * var result = clicksBeforeFive.defaultIfEmpty('no clicks');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link empty}
 * @see {@link last}
 *
 * @param {any} [defaultValue=null] The default value used if the source
 * Observable is empty.
 * @return {Observable} An Observable that emits either the specified
 * `defaultValue` if the source Observable emits no items, or the values emitted
 * by the source Observable.
 * @method defaultIfEmpty
 * @owner Observable
 */
function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) { defaultValue = null; }
    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };
}
exports.defaultIfEmpty = defaultIfEmpty;
var DefaultIfEmptyOperator = (function () {
    function DefaultIfEmptyOperator(defaultValue) {
        this.defaultValue = defaultValue;
    }
    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    };
    return DefaultIfEmptyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DefaultIfEmptySubscriber = (function (_super) {
    __extends(DefaultIfEmptySubscriber, _super);
    function DefaultIfEmptySubscriber(destination, defaultValue) {
        _super.call(this, destination);
        this.defaultValue = defaultValue;
        this.isEmpty = true;
    }
    DefaultIfEmptySubscriber.prototype._next = function (value) {
        this.isEmpty = false;
        this.destination.next(value);
    };
    DefaultIfEmptySubscriber.prototype._complete = function () {
        if (this.isEmpty) {
            this.destination.next(this.defaultValue);
        }
        this.destination.complete();
    };
    return DefaultIfEmptySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)
 *   .distinctUntilChanged()
 *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4
 *
 * @example <caption>An example using a compare function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinctUntilChanged
 * @owner Observable
 */
function distinctUntilChanged(compare, keySelector) {
    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };
}
exports.distinctUntilChanged = distinctUntilChanged;
var DistinctUntilChangedOperator = (function () {
    function DistinctUntilChangedOperator(compare, keySelector) {
        this.compare = compare;
        this.keySelector = keySelector;
    }
    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    };
    return DistinctUntilChangedOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DistinctUntilChangedSubscriber = (function (_super) {
    __extends(DistinctUntilChangedSubscriber, _super);
    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.hasKey = false;
        if (typeof compare === 'function') {
            this.compare = compare;
        }
    }
    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
        return x === y;
    };
    DistinctUntilChangedSubscriber.prototype._next = function (value) {
        var keySelector = this.keySelector;
        var key = value;
        if (keySelector) {
            key = tryCatch_1.tryCatch(this.keySelector)(value);
            if (key === errorObject_1.errorObject) {
                return this.destination.error(errorObject_1.errorObject.e);
            }
        }
        var result = false;
        if (this.hasKey) {
            result = tryCatch_1.tryCatch(this.compare)(this.key, key);
            if (result === errorObject_1.errorObject) {
                return this.destination.error(errorObject_1.errorObject.e);
            }
        }
        else {
            this.hasKey = true;
        }
        if (Boolean(result) === false) {
            this.key = key;
            this.destination.next(value);
        }
    };
    return DistinctUntilChangedSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * Filter items emitted by the source Observable by only emitting those that
 * satisfy a specified predicate.
 *
 * <span class="informal">Like
 * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),
 * it only emits a value from the source if it passes a criterion function.</span>
 *
 * <img src="./img/filter.png" width="100%">
 *
 * Similar to the well-known `Array.prototype.filter` method, this operator
 * takes values from the source Observable, passes them through a `predicate`
 * function and only emits those values that yielded `true`.
 *
 * @example <caption>Emit only click events whose target was a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');
 * clicksOnDivs.subscribe(x => console.log(x));
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 * @see {@link ignoreElements}
 * @see {@link partition}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted, if `false` the value is not passed to the output
 * Observable. The `index` parameter is the number `i` for the i-th source
 * emission that has happened since the subscription, starting from the number
 * `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of values from the source that were
 * allowed by the `predicate` function.
 * @method filter
 * @owner Observable
 */
function filter(predicate, thisArg) {
    return function filterOperatorFunction(source) {
        return source.lift(new FilterOperator(predicate, thisArg));
    };
}
exports.filter = filter;
var FilterOperator = (function () {
    function FilterOperator(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FilterSubscriber = (function (_super) {
    __extends(FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.count = 0;
    }
    // the try catch block below is left specifically for
    // optimization and perf reasons. a tryCatcher is not necessary here.
    FilterSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.predicate.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.destination.next(value);
        }
    };
    return FilterSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=filter.js.map

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Emits only the first value emitted by the source Observable that meets some
 * condition.
 *
 * <span class="informal">Finds the first value that passes some test and emits
 * that.</span>
 *
 * <img src="./img/find.png" width="100%">
 *
 * `find` searches for the first item in the source Observable that matches the
 * specified condition embodied by the `predicate`, and returns the first
 * occurrence in the source. Unlike {@link first}, the `predicate` is required
 * in `find`, and does not emit an error if a valid value is not found.
 *
 * @example <caption>Find and emit the first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.find(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link first}
 * @see {@link findIndex}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable<T>} An Observable of the first item that matches the
 * condition.
 * @method find
 * @owner Observable
 */
function find(predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError('predicate is not a function');
    }
    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };
}
exports.find = find;
var FindValueOperator = (function () {
    function FindValueOperator(predicate, source, yieldIndex, thisArg) {
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
    }
    FindValueOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    };
    return FindValueOperator;
}());
exports.FindValueOperator = FindValueOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FindValueSubscriber = (function (_super) {
    __extends(FindValueSubscriber, _super);
    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
        this.index = 0;
    }
    FindValueSubscriber.prototype.notifyComplete = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    FindValueSubscriber.prototype._next = function (value) {
        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
        var index = this.index++;
        try {
            var result = predicate.call(thisArg || this, value, index, this.source);
            if (result) {
                this.notifyComplete(this.yieldIndex ? index : value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    FindValueSubscriber.prototype._complete = function () {
        this.notifyComplete(this.yieldIndex ? -1 : undefined);
    };
    return FindValueSubscriber;
}(Subscriber_1.Subscriber));
exports.FindValueSubscriber = FindValueSubscriber;
//# sourceMappingURL=find.js.map

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Ignores source values for a duration determined by another Observable, then
 * emits the most recent value from the source Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link auditTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/audit.png" width="100%">
 *
 * `audit` is similar to `throttle`, but emits the last value from the silenced
 * time window, instead of the first value. `audit` emits the most recent value
 * from the source Observable on the output Observable as soon as its internal
 * timer becomes disabled, and ignores source values while the timer is enabled.
 * Initially, the timer is disabled. As soon as the first source value arrives,
 * the timer is enabled by calling the `durationSelector` function with the
 * source value, which returns the "duration" Observable. When the duration
 * Observable emits a value or completes, the timer is disabled, then the most
 * recent source value is emitted on the output Observable, and this process
 * repeats for the next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.audit(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration, returned as an Observable or a Promise.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method audit
 * @owner Observable
 */
function audit(durationSelector) {
    return function auditOperatorFunction(source) {
        return source.lift(new AuditOperator(durationSelector));
    };
}
exports.audit = audit;
var AuditOperator = (function () {
    function AuditOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    AuditOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
    };
    return AuditOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AuditSubscriber = (function (_super) {
    __extends(AuditSubscriber, _super);
    function AuditSubscriber(destination, durationSelector) {
        _super.call(this, destination);
        this.durationSelector = durationSelector;
        this.hasValue = false;
    }
    AuditSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);
            if (duration === errorObject_1.errorObject) {
                this.destination.error(errorObject_1.errorObject.e);
            }
            else {
                var innerSubscription = subscribeToResult_1.subscribeToResult(this, duration);
                if (innerSubscription.closed) {
                    this.clearThrottle();
                }
                else {
                    this.add(this.throttled = innerSubscription);
                }
            }
        }
    };
    AuditSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        this.clearThrottle();
    };
    AuditSubscriber.prototype.notifyComplete = function () {
        this.clearThrottle();
    };
    return AuditSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=audit.js.map

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns each
 * intermediate result, with an optional seed value.
 *
 * <span class="informal">It's like {@link reduce}, but emits the current
 * accumulation whenever the source emits a value.</span>
 *
 * <img src="./img/scan.png" width="100%">
 *
 * Combines together all values emitted on the source, using an accumulator
 * function that knows how to join a new source value into the accumulation from
 * the past. Is similar to {@link reduce}, but emits the intermediate
 * accumulations.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var ones = clicks.mapTo(1);
 * var seed = 0;
 * var count = ones.scan((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link reduce}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator
 * The accumulator function called on each source value.
 * @param {T|R} [seed] The initial accumulation value.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method scan
 * @owner Observable
 */
function scan(accumulator, seed) {
    var hasSeed = false;
    // providing a seed of `undefined` *should* be valid and trigger
    // hasSeed! so don't use `seed !== undefined` checks!
    // For this reason, we have to check it here at the original call site
    // otherwise inside Operator/Subscriber we won't know if `undefined`
    // means they didn't provide anything or if they literally provided `undefined`
    if (arguments.length >= 2) {
        hasSeed = true;
    }
    return function scanOperatorFunction(source) {
        return source.lift(new ScanOperator(accumulator, seed, hasSeed));
    };
}
exports.scan = scan;
var ScanOperator = (function () {
    function ScanOperator(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) { hasSeed = false; }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
    }
    ScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    };
    return ScanOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ScanSubscriber = (function (_super) {
    __extends(ScanSubscriber, _super);
    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
        _super.call(this, destination);
        this.accumulator = accumulator;
        this._seed = _seed;
        this.hasSeed = hasSeed;
        this.index = 0;
    }
    Object.defineProperty(ScanSubscriber.prototype, "seed", {
        get: function () {
            return this._seed;
        },
        set: function (value) {
            this.hasSeed = true;
            this._seed = value;
        },
        enumerable: true,
        configurable: true
    });
    ScanSubscriber.prototype._next = function (value) {
        if (!this.hasSeed) {
            this.seed = value;
            this.destination.next(value);
        }
        else {
            return this._tryNext(value);
        }
    };
    ScanSubscriber.prototype._tryNext = function (value) {
        var index = this.index++;
        var result;
        try {
            result = this.accumulator(this.seed, value, index);
        }
        catch (err) {
            this.destination.error(err);
        }
        this.seed = result;
        this.destination.next(result);
    };
    return ScanSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=scan.js.map

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var ArgumentOutOfRangeError_1 = __webpack_require__(25);
var EmptyObservable_1 = __webpack_require__(15);
/**
 * Emits only the last `count` values emitted by the source Observable.
 *
 * <span class="informal">Remembers the latest `count` values, then emits those
 * only when the source completes.</span>
 *
 * <img src="./img/takeLast.png" width="100%">
 *
 * `takeLast` returns an Observable that emits at most the last `count` values
 * emitted by the source Observable. If the source emits fewer than `count`
 * values then all of its values are emitted. This operator must wait until the
 * `complete` notification emission from the source in order to emit the `next`
 * values on the output Observable, because otherwise it is impossible to know
 * whether or not more values will be emitted on the source. For this reason,
 * all values are emitted synchronously, followed by the complete notification.
 *
 * @example <caption>Take the last 3 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 100);
 * var lastThree = many.takeLast(3);
 * lastThree.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of values to emit from the end of
 * the sequence of values emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits at most the last count
 * values emitted by the source Observable.
 * @method takeLast
 * @owner Observable
 */
function takeLast(count) {
    return function takeLastOperatorFunction(source) {
        if (count === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        else {
            return source.lift(new TakeLastOperator(count));
        }
    };
}
exports.takeLast = takeLast;
var TakeLastOperator = (function () {
    function TakeLastOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    TakeLastOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
    };
    return TakeLastOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeLastSubscriber = (function (_super) {
    __extends(TakeLastSubscriber, _super);
    function TakeLastSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.ring = new Array();
        this.count = 0;
    }
    TakeLastSubscriber.prototype._next = function (value) {
        var ring = this.ring;
        var total = this.total;
        var count = this.count++;
        if (ring.length < total) {
            ring.push(value);
        }
        else {
            var index = count % total;
            ring[index] = value;
        }
    };
    TakeLastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var count = this.count;
        if (count > 0) {
            var total = this.count >= this.total ? this.total : this.count;
            var ring = this.ring;
            for (var i = 0; i < total; i++) {
                var idx = (count++) % total;
                destination.next(ring[idx]);
            }
        }
        destination.complete();
    };
    return TakeLastSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=takeLast.js.map

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
function refCount() {
    return function refCountOperatorFunction(source) {
        return source.lift(new RefCountOperator(source));
    };
}
exports.refCount = refCount;
var RefCountOperator = (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = (function (_super) {
    __extends(RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        ///
        // Compare the local RefCountSubscriber's connection Subscription to the
        // connection Subscription on the shared ConnectableObservable. In cases
        // where the ConnectableObservable source synchronously emits values, and
        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,
        // execution continues to here before the RefCountOperator has a chance to
        // supply the RefCountSubscriber with the shared connection Subscription.
        // For example:
        // ```
        // Observable.range(0, 10)
        //   .publish()
        //   .refCount()
        //   .take(5)
        //   .subscribe();
        // ```
        // In order to account for this case, RefCountSubscriber should only dispose
        // the ConnectableObservable's shared connection Subscription if the
        // connection Subscription exists, *and* either:
        //   a. RefCountSubscriber doesn't have a reference to the shared connection
        //      Subscription yet, or,
        //   b. RefCountSubscriber's connection Subscription reference is identical
        //      to the shared connection Subscription
        ///
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=refCount.js.map

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, emitting values only from the most recently projected Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link switch}.</span>
 *
 * <img src="./img/switchMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each time it observes one of these
 * inner Observables, the output Observable begins emitting the items emitted by
 * that inner Observable. When a new inner Observable is emitted, `switchMap`
 * stops emitting items from the earlier-emitted inner Observable and begins
 * emitting items from the new one. It continues to behave like this for
 * subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switch}
 * @see {@link switchMapTo}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking only the values from the most recently
 * projected inner Observable.
 * @method switchMap
 * @owner Observable
 */
function switchMap(project, resultSelector) {
    return function switchMapOperatorFunction(source) {
        return source.lift(new SwitchMapOperator(project, resultSelector));
    };
}
exports.switchMap = switchMap;
var SwitchMapOperator = (function () {
    function SwitchMapOperator(project, resultSelector) {
        this.project = project;
        this.resultSelector = resultSelector;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));
    };
    return SwitchMapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchMapSubscriber = (function (_super) {
    __extends(SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project, resultSelector) {
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.index = 0;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result, value, index);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return SwitchMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var map_1 = __webpack_require__(24);
/**
 * @param scheduler
 * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timestamp
 * @owner Observable
 */
function timestamp(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return map_1.map(function (value) { return new Timestamp(value, scheduler.now()); });
    // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));
}
exports.timestamp = timestamp;
var Timestamp = (function () {
    function Timestamp(value, timestamp) {
        this.value = value;
        this.timestamp = timestamp;
    }
    return Timestamp;
}());
exports.Timestamp = Timestamp;
;
//# sourceMappingURL=timestamp.js.map

/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NFC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Ndef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return NfcUtil; });
/* unused harmony export TextHelper */
/* unused harmony export UriHelper */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var NFCOriginal = /** @class */ (function (_super) {
    __extends(NFCOriginal, _super);
    function NFCOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NFCOriginal.prototype.beginSession = function (onSuccess, onFailure) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "beginSession", { "observable": true, "successIndex": 0, "errorIndex": 3, "clearFunction": "invalidateSession", "clearWithArgs": true }, arguments); };
    NFCOriginal.prototype.addNdefListener = function (onSuccess, onFailure) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addNdefListener", { "observable": true, "successIndex": 0, "errorIndex": 3, "clearFunction": "removeNdefListener", "clearWithArgs": true }, arguments); };
    NFCOriginal.prototype.addTagDiscoveredListener = function (onSuccess, onFailure) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addTagDiscoveredListener", { "observable": true, "successIndex": 0, "errorIndex": 3, "clearFunction": "removeTagDiscoveredListener", "clearWithArgs": true }, arguments); };
    NFCOriginal.prototype.addMimeTypeListener = function (mimeType, onSuccess, onFailure) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addMimeTypeListener", { "observable": true, "successIndex": 1, "errorIndex": 4, "clearFunction": "removeMimeTypeListener", "clearWithArgs": true }, arguments); };
    NFCOriginal.prototype.addNdefFormatableListener = function (onSuccess, onFailure) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addNdefFormatableListener", { "observable": true, "successIndex": 0, "errorIndex": 3 }, arguments); };
    NFCOriginal.prototype.write = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "write", {}, arguments); };
    NFCOriginal.prototype.makeReadyOnly = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "makeReadyOnly", {}, arguments); };
    NFCOriginal.prototype.share = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "share", {}, arguments); };
    NFCOriginal.prototype.unshare = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unshare", {}, arguments); };
    NFCOriginal.prototype.erase = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "erase", {}, arguments); };
    NFCOriginal.prototype.handover = function (uris) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "handover", {}, arguments); };
    NFCOriginal.prototype.stopHandover = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopHandover", {}, arguments); };
    NFCOriginal.prototype.showSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showSettings", {}, arguments); };
    NFCOriginal.prototype.enabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enabled", {}, arguments); };
    NFCOriginal.prototype.bytesToString = function (bytes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "bytesToString", { "sync": true }, arguments); };
    NFCOriginal.prototype.stringToBytes = function (str) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stringToBytes", { "sync": true }, arguments); };
    NFCOriginal.prototype.bytesToHexString = function (bytes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "bytesToHexString", { "sync": true }, arguments); };
    NFCOriginal.pluginName = "NFC";
    NFCOriginal.plugin = "phonegap-nfc";
    NFCOriginal.pluginRef = "nfc";
    NFCOriginal.repo = "https://github.com/chariotsolutions/phonegap-nfc";
    NFCOriginal.platforms = ["Android", "BlackBerry 10", "Windows", "Windows Phone 8"];
    return NFCOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var NFC = new NFCOriginal();

var NdefOriginal = /** @class */ (function (_super) {
    __extends(NdefOriginal, _super);
    function NdefOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NdefOriginal.prototype.record = function (tnf, type, id, payload) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "record", { "sync": true }, arguments); };
    NdefOriginal.prototype.textRecord = function (text, languageCode, id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "textRecord", { "sync": true }, arguments); };
    NdefOriginal.prototype.uriRecord = function (uri, id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "uriRecord", { "sync": true }, arguments); };
    NdefOriginal.prototype.absoluteUriRecord = function (uri, payload, id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "absoluteUriRecord", { "sync": true }, arguments); };
    NdefOriginal.prototype.mimeMediaRecord = function (mimeType, payload) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "mimeMediaRecord", { "sync": true }, arguments); };
    NdefOriginal.prototype.smartPoster = function (ndefRecords, id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "smartPoster", { "sync": true }, arguments); };
    NdefOriginal.prototype.emptyRecord = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "emptyRecord", { "sync": true }, arguments); };
    NdefOriginal.prototype.androidApplicationRecord = function (packageName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "androidApplicationRecord", { "sync": true }, arguments); };
    NdefOriginal.prototype.encodeMessage = function (ndefRecords) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "encodeMessage", { "sync": true }, arguments); };
    NdefOriginal.prototype.decodeMessage = function (bytes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "decodeMessage", { "sync": true }, arguments); };
    NdefOriginal.prototype.docodeTnf = function (tnf_byte) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "docodeTnf", { "sync": true }, arguments); };
    NdefOriginal.prototype.encodeTnf = function (mb, me, cf, sr, il, tnf) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "encodeTnf", { "sync": true }, arguments); };
    NdefOriginal.prototype.tnfToString = function (tnf) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "tnfToString", { "sync": true }, arguments); };
    Object.defineProperty(NdefOriginal.prototype, "TNF_EMPTY", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "TNF_EMPTY"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "TNF_EMPTY", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "TNF_WELL_KNOWN", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "TNF_WELL_KNOWN"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "TNF_WELL_KNOWN", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "TNF_MIME_MEDIA", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "TNF_MIME_MEDIA"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "TNF_MIME_MEDIA", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "TNF_ABSOLUTE_URI", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "TNF_ABSOLUTE_URI"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "TNF_ABSOLUTE_URI", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "TNF_EXTERNAL_TYPE", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "TNF_EXTERNAL_TYPE"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "TNF_EXTERNAL_TYPE", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "TNF_UNKNOWN", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "TNF_UNKNOWN"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "TNF_UNKNOWN", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "TNF_UNCHANGED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "TNF_UNCHANGED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "TNF_UNCHANGED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "TNF_RESERVED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "TNF_RESERVED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "TNF_RESERVED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "RTD_TEXT", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "RTD_TEXT"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "RTD_TEXT", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "RTD_URI", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "RTD_URI"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "RTD_URI", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "RTD_SMART_POSTER", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "RTD_SMART_POSTER"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "RTD_SMART_POSTER", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "RTD_ALTERNATIVE_CARRIER", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "RTD_ALTERNATIVE_CARRIER"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "RTD_ALTERNATIVE_CARRIER", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "RTD_HANDOVER_CARRIER", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "RTD_HANDOVER_CARRIER"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "RTD_HANDOVER_CARRIER", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "RTD_HANDOVER_REQUEST", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "RTD_HANDOVER_REQUEST"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "RTD_HANDOVER_REQUEST", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "RTD_HANDOVER_SELECT", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "RTD_HANDOVER_SELECT"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "RTD_HANDOVER_SELECT", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "textHelper", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "textHelper"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "textHelper", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NdefOriginal.prototype, "uriHelper", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "uriHelper"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "uriHelper", value); },
        enumerable: true,
        configurable: true
    });
    NdefOriginal.pluginName = "NFC";
    NdefOriginal.plugin = "phonegap-nfc";
    NdefOriginal.pluginRef = "ndef";
    return NdefOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Ndef = new NdefOriginal();

var NfcUtilOriginal = /** @class */ (function (_super) {
    __extends(NfcUtilOriginal, _super);
    function NfcUtilOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NfcUtilOriginal.prototype.toHex = function (i) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "toHex", { "sync": true }, arguments); };
    NfcUtilOriginal.prototype.toPrintable = function (i) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "toPrintable", { "sync": true }, arguments); };
    NfcUtilOriginal.prototype.bytesToString = function (i) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "bytesToString", { "sync": true }, arguments); };
    NfcUtilOriginal.prototype.stringToBytes = function (s) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stringToBytes", { "sync": true }, arguments); };
    NfcUtilOriginal.prototype.bytesToHexString = function (bytes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "bytesToHexString", { "sync": true }, arguments); };
    NfcUtilOriginal.prototype.isType = function (record, tnf, type) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isType", { "sync": true }, arguments); };
    NfcUtilOriginal.pluginName = "NFC";
    NfcUtilOriginal.plugin = "phonegap-nfc";
    NfcUtilOriginal.pluginRef = "util";
    return NfcUtilOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var NfcUtil = new NfcUtilOriginal();

var TextHelper = /** @class */ (function (_super) {
    __extends(TextHelper, _super);
    function TextHelper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TextHelper.prototype.decodePayload = function (data) {
        return;
    };
    TextHelper.prototype.encodePayload = function (text, lang) {
        return;
    };
    return TextHelper;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));

var UriHelper = /** @class */ (function (_super) {
    __extends(UriHelper, _super);
    function UriHelper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UriHelper.prototype.decodePayload = function (data) {
        return;
    };
    UriHelper.prototype.encodePayload = function (uri) {
        return;
    };
    return UriHelper;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["checkReady"] = checkReady;
function checkReady() {
    var DEVICE_READY_TIMEOUT = 5000;
    // To help developers using cordova, we listen for the device ready event and
    // log an error if it didn't fire in a reasonable amount of time. Generally,
    // when this happens, developers should remove and reinstall plugins, since
    // an inconsistent plugin is often the culprit.
    var before = Date.now();
    var didFireReady = false;
    document.addEventListener('deviceready', function () {
        console.log("Ionic Native: deviceready event fired after " + (Date.now() - before) + " ms");
        didFireReady = true;
    });
    setTimeout(function () {
        if (!didFireReady && !!window.cordova) {
            console.warn("Ionic Native: deviceready did not fire within " + DEVICE_READY_TIMEOUT + "ms. This can happen when plugins are in an inconsistent state. Try removing plugins from plugins/ and reinstalling them.");
        }
    }, DEVICE_READY_TIMEOUT);
}
//# sourceMappingURL=bootstrap.js.map

/***/ }),
/* 62 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isObject(x) {
    return x != null && typeof x === 'object';
}
exports.isObject = isObject;
//# sourceMappingURL=isObject.js.map

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when one or more errors have occurred during the
 * `unsubscribe` of a {@link Subscription}.
 */
var UnsubscriptionError = (function (_super) {
    __extends(UnsubscriptionError, _super);
    function UnsubscriptionError(errors) {
        _super.call(this);
        this.errors = errors;
        var err = Error.call(this, errors ?
            errors.length + " errors occurred during unsubscription:\n  " + errors.map(function (err, i) { return ((i + 1) + ") " + err.toString()); }).join('\n  ') : '');
        this.name = err.name = 'UnsubscriptionError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return UnsubscriptionError;
}(Error));
exports.UnsubscriptionError = UnsubscriptionError;
//# sourceMappingURL=UnsubscriptionError.js.map

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.empty = {
    closed: true,
    next: function (value) { },
    error: function (err) { throw err; },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* tslint:disable:no-unused-variable */
// Subject imported before Observable to bypass circular dependency issue since
// Subject extends Observable and Observable references Subject in it's
// definition
var Subject_1 = __webpack_require__(9);
exports.Subject = Subject_1.Subject;
exports.AnonymousSubject = Subject_1.AnonymousSubject;
/* tslint:enable:no-unused-variable */
var Observable_1 = __webpack_require__(0);
exports.Observable = Observable_1.Observable;
// statics
/* tslint:disable:no-use-before-declare */
__webpack_require__(196);
__webpack_require__(199);
__webpack_require__(202);
__webpack_require__(205);
__webpack_require__(208);
__webpack_require__(211);
__webpack_require__(213);
__webpack_require__(216);
__webpack_require__(30);
__webpack_require__(217);
__webpack_require__(220);
__webpack_require__(222);
__webpack_require__(225);
__webpack_require__(228);
__webpack_require__(75);
__webpack_require__(234);
__webpack_require__(235);
__webpack_require__(238);
__webpack_require__(239);
__webpack_require__(241);
__webpack_require__(244);
__webpack_require__(247);
__webpack_require__(250);
__webpack_require__(253);
__webpack_require__(255);
//dom
__webpack_require__(257);
__webpack_require__(259);
//operators
__webpack_require__(265);
__webpack_require__(267);
__webpack_require__(269);
__webpack_require__(271);
__webpack_require__(273);
__webpack_require__(275);
__webpack_require__(277);
__webpack_require__(279);
__webpack_require__(281);
__webpack_require__(283);
__webpack_require__(285);
__webpack_require__(287);
__webpack_require__(289);
__webpack_require__(291);
__webpack_require__(293);
__webpack_require__(295);
__webpack_require__(297);
__webpack_require__(299);
__webpack_require__(301);
__webpack_require__(303);
__webpack_require__(306);
__webpack_require__(308);
__webpack_require__(310);
__webpack_require__(312);
__webpack_require__(314);
__webpack_require__(316);
__webpack_require__(318);
__webpack_require__(320);
__webpack_require__(322);
__webpack_require__(324);
__webpack_require__(326);
__webpack_require__(328);
__webpack_require__(330);
__webpack_require__(335);
__webpack_require__(337);
__webpack_require__(339);
__webpack_require__(341);
__webpack_require__(343);
__webpack_require__(345);
__webpack_require__(347);
__webpack_require__(349);
__webpack_require__(351);
__webpack_require__(353);
__webpack_require__(355);
__webpack_require__(357);
__webpack_require__(358);
__webpack_require__(360);
__webpack_require__(362);
__webpack_require__(364);
__webpack_require__(366);
__webpack_require__(368);
__webpack_require__(370);
__webpack_require__(372);
__webpack_require__(374);
__webpack_require__(376);
__webpack_require__(379);
__webpack_require__(381);
__webpack_require__(383);
__webpack_require__(385);
__webpack_require__(387);
__webpack_require__(389);
__webpack_require__(391);
__webpack_require__(393);
__webpack_require__(395);
__webpack_require__(397);
__webpack_require__(399);
__webpack_require__(401);
__webpack_require__(403);
__webpack_require__(405);
__webpack_require__(407);
__webpack_require__(409);
__webpack_require__(411);
__webpack_require__(413);
__webpack_require__(415);
__webpack_require__(417);
__webpack_require__(419);
__webpack_require__(421);
__webpack_require__(423);
__webpack_require__(425);
__webpack_require__(434);
__webpack_require__(436);
__webpack_require__(438);
__webpack_require__(440);
__webpack_require__(442);
__webpack_require__(444);
__webpack_require__(446);
__webpack_require__(448);
__webpack_require__(450);
__webpack_require__(452);
__webpack_require__(453);
__webpack_require__(455);
__webpack_require__(457);
__webpack_require__(459);
__webpack_require__(461);
__webpack_require__(462);
__webpack_require__(464);
__webpack_require__(466);
__webpack_require__(468);
__webpack_require__(470);
__webpack_require__(472);
__webpack_require__(474);
__webpack_require__(476);
/* tslint:disable:no-unused-variable */
var Subscription_1 = __webpack_require__(7);
exports.Subscription = Subscription_1.Subscription;
var Subscriber_1 = __webpack_require__(3);
exports.Subscriber = Subscriber_1.Subscriber;
var AsyncSubject_1 = __webpack_require__(32);
exports.AsyncSubject = AsyncSubject_1.AsyncSubject;
var ReplaySubject_1 = __webpack_require__(38);
exports.ReplaySubject = ReplaySubject_1.ReplaySubject;
var BehaviorSubject_1 = __webpack_require__(123);
exports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;
var ConnectableObservable_1 = __webpack_require__(117);
exports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;
var Notification_1 = __webpack_require__(19);
exports.Notification = Notification_1.Notification;
var EmptyError_1 = __webpack_require__(39);
exports.EmptyError = EmptyError_1.EmptyError;
var ArgumentOutOfRangeError_1 = __webpack_require__(25);
exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
var ObjectUnsubscribedError_1 = __webpack_require__(31);
exports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;
var TimeoutError_1 = __webpack_require__(153);
exports.TimeoutError = TimeoutError_1.TimeoutError;
var UnsubscriptionError_1 = __webpack_require__(64);
exports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;
var timeInterval_1 = __webpack_require__(150);
exports.TimeInterval = timeInterval_1.TimeInterval;
var timestamp_1 = __webpack_require__(59);
exports.Timestamp = timestamp_1.Timestamp;
var TestScheduler_1 = __webpack_require__(478);
exports.TestScheduler = TestScheduler_1.TestScheduler;
var VirtualTimeScheduler_1 = __webpack_require__(166);
exports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;
var AjaxObservable_1 = __webpack_require__(78);
exports.AjaxResponse = AjaxObservable_1.AjaxResponse;
exports.AjaxError = AjaxObservable_1.AjaxError;
exports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;
var pipe_1 = __webpack_require__(41);
exports.pipe = pipe_1.pipe;
var asap_1 = __webpack_require__(142);
var async_1 = __webpack_require__(6);
var queue_1 = __webpack_require__(79);
var animationFrame_1 = __webpack_require__(481);
var rxSubscriber_1 = __webpack_require__(28);
var iterator_1 = __webpack_require__(18);
var observable_1 = __webpack_require__(29);
var _operators = __webpack_require__(485);
exports.operators = _operators;
/* tslint:enable:no-unused-variable */
/**
 * @typedef {Object} Rx.Scheduler
 * @property {Scheduler} queue Schedules on a queue in the current event frame
 * (trampoline scheduler). Use this for iteration operations.
 * @property {Scheduler} asap Schedules on the micro task queue, which uses the
 * fastest transport mechanism available, either Node.js' `process.nextTick()`
 * or Web Worker MessageChannel or setTimeout or others. Use this for
 * asynchronous conversions.
 * @property {Scheduler} async Schedules work with `setInterval`. Use this for
 * time-based operations.
 * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.
 * Use this for synchronizing with the platform's painting
 */
var Scheduler = {
    asap: asap_1.asap,
    queue: queue_1.queue,
    animationFrame: animationFrame_1.animationFrame,
    async: async_1.async
};
exports.Scheduler = Scheduler;
/**
 * @typedef {Object} Rx.Symbol
 * @property {Symbol|string} rxSubscriber A symbol to use as a property name to
 * retrieve an "Rx safe" Observer from an object. "Rx safety" can be defined as
 * an object that has all of the traits of an Rx Subscriber, including the
 * ability to add and remove subscriptions to the subscription chain and
 * guarantees involving event triggering (can't "next" after unsubscription,
 * etc).
 * @property {Symbol|string} observable A symbol to use as a property name to
 * retrieve an Observable as defined by the [ECMAScript "Observable" spec](https://github.com/zenparsing/es-observable).
 * @property {Symbol|string} iterator The ES6 symbol to use as a property name
 * to retrieve an iterator from an object.
 */
var Symbol = {
    rxSubscriber: rxSubscriber_1.rxSubscriber,
    observable: observable_1.observable,
    iterator: iterator_1.iterator
};
exports.Symbol = Symbol;
//# sourceMappingURL=Rx.js.map

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(7);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubjectSubscription = (function (_super) {
    __extends(SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        _super.call(this);
        this.subject = subject;
        this.subscriber = subscriber;
        this.closed = false;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(Subscription_1.Subscription));
exports.SubjectSubscription = SubjectSubscription;
//# sourceMappingURL=SubjectSubscription.js.map

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

exports.isArrayLike = (function (x) { return x && typeof x.length === 'number'; });
//# sourceMappingURL=isArrayLike.js.map

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function isPromise(value) {
    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
exports.isPromise = isPromise;
//# sourceMappingURL=isPromise.js.map

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayObservable_1 = __webpack_require__(14);
exports.of = ArrayObservable_1.ArrayObservable.of;
//# sourceMappingURL=of.js.map

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FromObservable_1 = __webpack_require__(72);
exports.from = FromObservable_1.FromObservable.create;
//# sourceMappingURL=from.js.map

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isArray_1 = __webpack_require__(13);
var isArrayLike_1 = __webpack_require__(68);
var isPromise_1 = __webpack_require__(69);
var PromiseObservable_1 = __webpack_require__(73);
var IteratorObservable_1 = __webpack_require__(206);
var ArrayObservable_1 = __webpack_require__(14);
var ArrayLikeObservable_1 = __webpack_require__(207);
var iterator_1 = __webpack_require__(18);
var Observable_1 = __webpack_require__(0);
var observeOn_1 = __webpack_require__(34);
var observable_1 = __webpack_require__(29);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromObservable = (function (_super) {
    __extends(FromObservable, _super);
    function FromObservable(ish, scheduler) {
        _super.call(this, null);
        this.ish = ish;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable from an Array, an array-like object, a Promise, an
     * iterable object, or an Observable-like object.
     *
     * <span class="informal">Converts almost anything to an Observable.</span>
     *
     * <img src="./img/from.png" width="100%">
     *
     * Convert various other objects and data types into Observables. `from`
     * converts a Promise or an array-like or an
     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)
     * object into an Observable that emits the items in that promise or array or
     * iterable. A String, in this context, is treated as an array of characters.
     * Observable-like objects (contains a function named with the ES2015 Symbol
     * for Observable) can also be converted through this operator.
     *
     * @example <caption>Converts an array to an Observable</caption>
     * var array = [10, 20, 30];
     * var result = Rx.Observable.from(array);
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following:
     * // 10 20 30
     *
     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>
     * function* generateDoubles(seed) {
     *   var i = seed;
     *   while (true) {
     *     yield i;
     *     i = 2 * i; // double it
     *   }
     * }
     *
     * var iterator = generateDoubles(3);
     * var result = Rx.Observable.from(iterator).take(10);
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following:
     * // 3 6 12 24 48 96 192 384 768 1536
     *
     * @see {@link create}
     * @see {@link fromEvent}
     * @see {@link fromEventPattern}
     * @see {@link fromPromise}
     *
     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an
     * Observable-like, an Array, an iterable or an array-like object to be
     * converted.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * emissions of values.
     * @return {Observable<T>} The Observable whose values are originally from the
     * input object that was converted.
     * @static true
     * @name from
     * @owner Observable
     */
    FromObservable.create = function (ish, scheduler) {
        if (ish != null) {
            if (typeof ish[observable_1.observable] === 'function') {
                if (ish instanceof Observable_1.Observable && !scheduler) {
                    return ish;
                }
                return new FromObservable(ish, scheduler);
            }
            else if (isArray_1.isArray(ish)) {
                return new ArrayObservable_1.ArrayObservable(ish, scheduler);
            }
            else if (isPromise_1.isPromise(ish)) {
                return new PromiseObservable_1.PromiseObservable(ish, scheduler);
            }
            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {
                return new IteratorObservable_1.IteratorObservable(ish, scheduler);
            }
            else if (isArrayLike_1.isArrayLike(ish)) {
                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);
            }
        }
        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');
    };
    FromObservable.prototype._subscribe = function (subscriber) {
        var ish = this.ish;
        var scheduler = this.scheduler;
        if (scheduler == null) {
            return ish[observable_1.observable]().subscribe(subscriber);
        }
        else {
            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));
        }
    };
    return FromObservable;
}(Observable_1.Observable));
exports.FromObservable = FromObservable;
//# sourceMappingURL=FromObservable.js.map

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(11);
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var PromiseObservable = (function (_super) {
    __extends(PromiseObservable, _super);
    function PromiseObservable(promise, scheduler) {
        _super.call(this);
        this.promise = promise;
        this.scheduler = scheduler;
    }
    /**
     * Converts a Promise to an Observable.
     *
     * <span class="informal">Returns an Observable that just emits the Promise's
     * resolved value, then completes.</span>
     *
     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an
     * Observable. If the Promise resolves with a value, the output Observable
     * emits that resolved value as a `next`, and then completes. If the Promise
     * is rejected, then the output Observable emits the corresponding Error.
     *
     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>
     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link bindCallback}
     * @see {@link from}
     *
     * @param {PromiseLike<T>} promise The promise to be converted.
     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling
     * the delivery of the resolved value (or the rejection).
     * @return {Observable<T>} An Observable which wraps the Promise.
     * @static true
     * @name fromPromise
     * @owner Observable
     */
    PromiseObservable.create = function (promise, scheduler) {
        return new PromiseObservable(promise, scheduler);
    };
    PromiseObservable.prototype._subscribe = function (subscriber) {
        var _this = this;
        var promise = this.promise;
        var scheduler = this.scheduler;
        if (scheduler == null) {
            if (this._isScalar) {
                if (!subscriber.closed) {
                    subscriber.next(this.value);
                    subscriber.complete();
                }
            }
            else {
                promise.then(function (value) {
                    _this.value = value;
                    _this._isScalar = true;
                    if (!subscriber.closed) {
                        subscriber.next(value);
                        subscriber.complete();
                    }
                }, function (err) {
                    if (!subscriber.closed) {
                        subscriber.error(err);
                    }
                })
                    .then(null, function (err) {
                    // escape the promise trap, throw unhandled errors
                    root_1.root.setTimeout(function () { throw err; });
                });
            }
        }
        else {
            if (this._isScalar) {
                if (!subscriber.closed) {
                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });
                }
            }
            else {
                promise.then(function (value) {
                    _this.value = value;
                    _this._isScalar = true;
                    if (!subscriber.closed) {
                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));
                    }
                }, function (err) {
                    if (!subscriber.closed) {
                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));
                    }
                })
                    .then(null, function (err) {
                    // escape the promise trap, throw unhandled errors
                    root_1.root.setTimeout(function () { throw err; });
                });
            }
        }
    };
    return PromiseObservable;
}(Observable_1.Observable));
exports.PromiseObservable = PromiseObservable;
function dispatchNext(arg) {
    var value = arg.value, subscriber = arg.subscriber;
    if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
    }
}
function dispatchError(arg) {
    var err = arg.err, subscriber = arg.subscriber;
    if (!subscriber.closed) {
        subscriber.error(err);
    }
}
//# sourceMappingURL=PromiseObservable.js.map

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function identity(x) {
    return x;
}
exports.identity = identity;
//# sourceMappingURL=identity.js.map

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var merge_1 = __webpack_require__(233);
Observable_1.Observable.merge = merge_1.merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var merge_1 = __webpack_require__(46);
var merge_2 = __webpack_require__(46);
exports.mergeStatic = merge_2.mergeStatic;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (either the source or an
 * Observable given as argument), and simply forwards (without doing any
 * transformation) all the values from all the input Observables to the output
 * Observable. The output Observable only completes once all input Observables
 * have completed. Any error delivered by an input Observable will be immediately
 * emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = clicks.merge(timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = timer1.merge(timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {ObservableInput} other An input Observable to merge with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} An Observable that emits items that are the result of
 * every input Observable.
 * @method merge
 * @owner Observable
 */
function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return merge_1.merge.apply(void 0, observables)(this);
}
exports.merge = merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TimerObservable_1 = __webpack_require__(254);
exports.timer = TimerObservable_1.TimerObservable.create;
//# sourceMappingURL=timer.js.map

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(11);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var Observable_1 = __webpack_require__(0);
var Subscriber_1 = __webpack_require__(3);
var map_1 = __webpack_require__(24);
function getCORSRequest() {
    if (root_1.root.XMLHttpRequest) {
        return new root_1.root.XMLHttpRequest();
    }
    else if (!!root_1.root.XDomainRequest) {
        return new root_1.root.XDomainRequest();
    }
    else {
        throw new Error('CORS is not supported by your browser');
    }
}
function getXMLHttpRequest() {
    if (root_1.root.XMLHttpRequest) {
        return new root_1.root.XMLHttpRequest();
    }
    else {
        var progId = void 0;
        try {
            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];
            for (var i = 0; i < 3; i++) {
                try {
                    progId = progIds[i];
                    if (new root_1.root.ActiveXObject(progId)) {
                        break;
                    }
                }
                catch (e) {
                }
            }
            return new root_1.root.ActiveXObject(progId);
        }
        catch (e) {
            throw new Error('XMLHttpRequest is not supported by your browser');
        }
    }
}
function ajaxGet(url, headers) {
    if (headers === void 0) { headers = null; }
    return new AjaxObservable({ method: 'GET', url: url, headers: headers });
}
exports.ajaxGet = ajaxGet;
;
function ajaxPost(url, body, headers) {
    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });
}
exports.ajaxPost = ajaxPost;
;
function ajaxDelete(url, headers) {
    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });
}
exports.ajaxDelete = ajaxDelete;
;
function ajaxPut(url, body, headers) {
    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });
}
exports.ajaxPut = ajaxPut;
;
function ajaxPatch(url, body, headers) {
    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });
}
exports.ajaxPatch = ajaxPatch;
;
var mapResponse = map_1.map(function (x, index) { return x.response; });
function ajaxGetJSON(url, headers) {
    return mapResponse(new AjaxObservable({
        method: 'GET',
        url: url,
        responseType: 'json',
        headers: headers
    }));
}
exports.ajaxGetJSON = ajaxGetJSON;
;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var AjaxObservable = (function (_super) {
    __extends(AjaxObservable, _super);
    function AjaxObservable(urlOrRequest) {
        _super.call(this);
        var request = {
            async: true,
            createXHR: function () {
                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();
            },
            crossDomain: false,
            withCredentials: false,
            headers: {},
            method: 'GET',
            responseType: 'json',
            timeout: 0
        };
        if (typeof urlOrRequest === 'string') {
            request.url = urlOrRequest;
        }
        else {
            for (var prop in urlOrRequest) {
                if (urlOrRequest.hasOwnProperty(prop)) {
                    request[prop] = urlOrRequest[prop];
                }
            }
        }
        this.request = request;
    }
    AjaxObservable.prototype._subscribe = function (subscriber) {
        return new AjaxSubscriber(subscriber, this.request);
    };
    /**
     * Creates an observable for an Ajax request with either a request object with
     * url, headers, etc or a string for a URL.
     *
     * @example
     * source = Rx.Observable.ajax('/products');
     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });
     *
     * @param {string|Object} request Can be one of the following:
     *   A string of the URL to make the Ajax call.
     *   An object with the following properties
     *   - url: URL of the request
     *   - body: The body of the request
     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE
     *   - async: Whether the request is async
     *   - headers: Optional headers
     *   - crossDomain: true if a cross domain request, else false
     *   - createXHR: a function to override if you need to use an alternate
     *   XMLHttpRequest implementation.
     *   - resultSelector: a function to use to alter the output value type of
     *   the Observable. Gets {@link AjaxResponse} as an argument.
     * @return {Observable} An observable sequence containing the XMLHttpRequest.
     * @static true
     * @name ajax
     * @owner Observable
    */
    AjaxObservable.create = (function () {
        var create = function (urlOrRequest) {
            return new AjaxObservable(urlOrRequest);
        };
        create.get = ajaxGet;
        create.post = ajaxPost;
        create.delete = ajaxDelete;
        create.put = ajaxPut;
        create.patch = ajaxPatch;
        create.getJSON = ajaxGetJSON;
        return create;
    })();
    return AjaxObservable;
}(Observable_1.Observable));
exports.AjaxObservable = AjaxObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AjaxSubscriber = (function (_super) {
    __extends(AjaxSubscriber, _super);
    function AjaxSubscriber(destination, request) {
        _super.call(this, destination);
        this.request = request;
        this.done = false;
        var headers = request.headers = request.headers || {};
        // force CORS if requested
        if (!request.crossDomain && !headers['X-Requested-With']) {
            headers['X-Requested-With'] = 'XMLHttpRequest';
        }
        // ensure content type is set
        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {
            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';
        }
        // properly serialize body
        request.body = this.serializeBody(request.body, request.headers['Content-Type']);
        this.send();
    }
    AjaxSubscriber.prototype.next = function (e) {
        this.done = true;
        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;
        var response = new AjaxResponse(e, xhr, request);
        destination.next(response);
    };
    AjaxSubscriber.prototype.send = function () {
        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;
        var createXHR = request.createXHR;
        var xhr = tryCatch_1.tryCatch(createXHR).call(request);
        if (xhr === errorObject_1.errorObject) {
            this.error(errorObject_1.errorObject.e);
        }
        else {
            this.xhr = xhr;
            // set up the events before open XHR
            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest
            // You need to add the event listeners before calling open() on the request.
            // Otherwise the progress events will not fire.
            this.setupEvents(xhr, request);
            // open XHR
            var result = void 0;
            if (user) {
                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);
            }
            else {
                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);
            }
            if (result === errorObject_1.errorObject) {
                this.error(errorObject_1.errorObject.e);
                return null;
            }
            // timeout, responseType and withCredentials can be set once the XHR is open
            if (async) {
                xhr.timeout = request.timeout;
                xhr.responseType = request.responseType;
            }
            if ('withCredentials' in xhr) {
                xhr.withCredentials = !!request.withCredentials;
            }
            // set headers
            this.setHeaders(xhr, headers);
            // finally send the request
            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);
            if (result === errorObject_1.errorObject) {
                this.error(errorObject_1.errorObject.e);
                return null;
            }
        }
        return xhr;
    };
    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {
        if (!body || typeof body === 'string') {
            return body;
        }
        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {
            return body;
        }
        if (contentType) {
            var splitIndex = contentType.indexOf(';');
            if (splitIndex !== -1) {
                contentType = contentType.substring(0, splitIndex);
            }
        }
        switch (contentType) {
            case 'application/x-www-form-urlencoded':
                return Object.keys(body).map(function (key) { return (encodeURI(key) + "=" + encodeURI(body[key])); }).join('&');
            case 'application/json':
                return JSON.stringify(body);
            default:
                return body;
        }
    };
    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {
        for (var key in headers) {
            if (headers.hasOwnProperty(key)) {
                xhr.setRequestHeader(key, headers[key]);
            }
        }
    };
    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {
        var progressSubscriber = request.progressSubscriber;
        function xhrTimeout(e) {
            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
            if (progressSubscriber) {
                progressSubscriber.error(e);
            }
            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.
        }
        ;
        xhr.ontimeout = xhrTimeout;
        xhrTimeout.request = request;
        xhrTimeout.subscriber = this;
        xhrTimeout.progressSubscriber = progressSubscriber;
        if (xhr.upload && 'withCredentials' in xhr) {
            if (progressSubscriber) {
                var xhrProgress_1;
                xhrProgress_1 = function (e) {
                    var progressSubscriber = xhrProgress_1.progressSubscriber;
                    progressSubscriber.next(e);
                };
                if (root_1.root.XDomainRequest) {
                    xhr.onprogress = xhrProgress_1;
                }
                else {
                    xhr.upload.onprogress = xhrProgress_1;
                }
                xhrProgress_1.progressSubscriber = progressSubscriber;
            }
            var xhrError_1;
            xhrError_1 = function (e) {
                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;
                if (progressSubscriber) {
                    progressSubscriber.error(e);
                }
                subscriber.error(new AjaxError('ajax error', this, request));
            };
            xhr.onerror = xhrError_1;
            xhrError_1.request = request;
            xhrError_1.subscriber = this;
            xhrError_1.progressSubscriber = progressSubscriber;
        }
        function xhrReadyStateChange(e) {
            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
            if (this.readyState === 4) {
                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
                var status_1 = this.status === 1223 ? 204 : this.status;
                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);
                // fix status code when it is 0 (0 status is undocumented).
                // Occurs when accessing file resources or on Android 4.1 stock browser
                // while retrieving files from application cache.
                if (status_1 === 0) {
                    status_1 = response ? 200 : 0;
                }
                if (200 <= status_1 && status_1 < 300) {
                    if (progressSubscriber) {
                        progressSubscriber.complete();
                    }
                    subscriber.next(e);
                    subscriber.complete();
                }
                else {
                    if (progressSubscriber) {
                        progressSubscriber.error(e);
                    }
                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));
                }
            }
        }
        ;
        xhr.onreadystatechange = xhrReadyStateChange;
        xhrReadyStateChange.subscriber = this;
        xhrReadyStateChange.progressSubscriber = progressSubscriber;
        xhrReadyStateChange.request = request;
    };
    AjaxSubscriber.prototype.unsubscribe = function () {
        var _a = this, done = _a.done, xhr = _a.xhr;
        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {
            xhr.abort();
        }
        _super.prototype.unsubscribe.call(this);
    };
    return AjaxSubscriber;
}(Subscriber_1.Subscriber));
exports.AjaxSubscriber = AjaxSubscriber;
/**
 * A normalized AJAX response.
 *
 * @see {@link ajax}
 *
 * @class AjaxResponse
 */
var AjaxResponse = (function () {
    function AjaxResponse(originalEvent, xhr, request) {
        this.originalEvent = originalEvent;
        this.xhr = xhr;
        this.request = request;
        this.status = xhr.status;
        this.responseType = xhr.responseType || request.responseType;
        this.response = parseXhrResponse(this.responseType, xhr);
    }
    return AjaxResponse;
}());
exports.AjaxResponse = AjaxResponse;
/**
 * A normalized AJAX error.
 *
 * @see {@link ajax}
 *
 * @class AjaxError
 */
var AjaxError = (function (_super) {
    __extends(AjaxError, _super);
    function AjaxError(message, xhr, request) {
        _super.call(this, message);
        this.message = message;
        this.xhr = xhr;
        this.request = request;
        this.status = xhr.status;
        this.responseType = xhr.responseType || request.responseType;
        this.response = parseXhrResponse(this.responseType, xhr);
    }
    return AjaxError;
}(Error));
exports.AjaxError = AjaxError;
function parseXhrResponse(responseType, xhr) {
    switch (responseType) {
        case 'json':
            if ('response' in xhr) {
                //IE does not support json as responseType, parse it internally
                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');
            }
            else {
                return JSON.parse(xhr.responseText || 'null');
            }
        case 'xml':
            return xhr.responseXML;
        case 'text':
        default:
            return ('response' in xhr) ? xhr.response : xhr.responseText;
    }
}
/**
 * @see {@link ajax}
 *
 * @class AjaxTimeoutError
 */
var AjaxTimeoutError = (function (_super) {
    __extends(AjaxTimeoutError, _super);
    function AjaxTimeoutError(xhr, request) {
        _super.call(this, 'ajax timeout', xhr, request);
    }
    return AjaxTimeoutError;
}(AjaxError));
exports.AjaxTimeoutError = AjaxTimeoutError;
//# sourceMappingURL=AjaxObservable.js.map

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var QueueAction_1 = __webpack_require__(262);
var QueueScheduler_1 = __webpack_require__(263);
/**
 *
 * Queue Scheduler
 *
 * <span class="informal">Put every next task on a queue, instead of executing it immediately</span>
 *
 * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.
 *
 * When used without delay, it schedules given task synchronously - executes it right when
 * it is scheduled. However when called recursively, that is when inside the scheduled task,
 * another task is scheduled with queue scheduler, instead of executing immediately as well,
 * that task will be put on a queue and wait for current one to finish.
 *
 * This means that when you execute task with `queue` scheduler, you are sure it will end
 * before any other task scheduled with that scheduler will start.
 *
 * @examples <caption>Schedule recursively first, then do something</caption>
 *
 * Rx.Scheduler.queue.schedule(() => {
 *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue
 *
 *   console.log('first');
 * });
 *
 * // Logs:
 * // "first"
 * // "second"
 *
 *
 * @example <caption>Reschedule itself recursively</caption>
 *
 * Rx.Scheduler.queue.schedule(function(state) {
 *   if (state !== 0) {
 *     console.log('before', state);
 *     this.schedule(state - 1); // `this` references currently executing Action,
 *                               // which we reschedule with new state
 *     console.log('after', state);
 *   }
 * }, 0, 3);
 *
 * // In scheduler that runs recursively, you would expect:
 * // "before", 3
 * // "before", 2
 * // "before", 1
 * // "after", 1
 * // "after", 2
 * // "after", 3
 *
 * // But with queue it logs:
 * // "before", 3
 * // "after", 3
 * // "before", 2
 * // "after", 2
 * // "before", 1
 * // "after", 1
 *
 *
 * @static true
 * @name queue
 * @owner Scheduler
 */
exports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);
//# sourceMappingURL=queue.js.map

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Buffers the source Observable values until `closingNotifier` emits.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when another Observable emits.</span>
 *
 * <img src="./img/buffer.png" width="100%">
 *
 * Buffers the incoming Observable values until the given `closingNotifier`
 * Observable emits a value, at which point it emits the buffer on the output
 * Observable and starts a new buffer internally, awaiting the next time
 * `closingNotifier` emits.
 *
 * @example <caption>On every click, emit array of most recent interval events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var buffered = interval.buffer(clicks);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link window}
 *
 * @param {Observable<any>} closingNotifier An Observable that signals the
 * buffer to be emitted on the output Observable.
 * @return {Observable<T[]>} An Observable of buffers, which are arrays of
 * values.
 * @method buffer
 * @owner Observable
 */
function buffer(closingNotifier) {
    return function bufferOperatorFunction(source) {
        return source.lift(new BufferOperator(closingNotifier));
    };
}
exports.buffer = buffer;
var BufferOperator = (function () {
    function BufferOperator(closingNotifier) {
        this.closingNotifier = closingNotifier;
    }
    BufferOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    };
    return BufferOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferSubscriber = (function (_super) {
    __extends(BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) {
        _super.call(this, destination);
        this.buffer = [];
        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));
    }
    BufferSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    };
    return BufferSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=buffer.js.map

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Buffers the source Observable values until the size hits the maximum
 * `bufferSize` given.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when its size reaches `bufferSize`.</span>
 *
 * <img src="./img/bufferCount.png" width="100%">
 *
 * Buffers a number of values from the source Observable by `bufferSize` then
 * emits the buffer and clears it, and starts a new buffer each
 * `startBufferEvery` values. If `startBufferEvery` is not provided or is
 * `null`, then new buffers are started immediately at the start of the source
 * and when each buffer closes and is emitted.
 *
 * @example <caption>Emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>On every click, emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2, 1);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link pairwise}
 * @see {@link windowCount}
 *
 * @param {number} bufferSize The maximum size of the buffer emitted.
 * @param {number} [startBufferEvery] Interval at which to start a new buffer.
 * For example if `startBufferEvery` is `2`, then a new buffer will be started
 * on every other value from the source. A new buffer is started at the
 * beginning of the source by default.
 * @return {Observable<T[]>} An Observable of arrays of buffered values.
 * @method bufferCount
 * @owner Observable
 */
function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) { startBufferEvery = null; }
    return function bufferCountOperatorFunction(source) {
        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
    };
}
exports.bufferCount = bufferCount;
var BufferCountOperator = (function () {
    function BufferCountOperator(bufferSize, startBufferEvery) {
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        if (!startBufferEvery || bufferSize === startBufferEvery) {
            this.subscriberClass = BufferCountSubscriber;
        }
        else {
            this.subscriberClass = BufferSkipCountSubscriber;
        }
    }
    BufferCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
    };
    return BufferCountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferCountSubscriber = (function (_super) {
    __extends(BufferCountSubscriber, _super);
    function BufferCountSubscriber(destination, bufferSize) {
        _super.call(this, destination);
        this.bufferSize = bufferSize;
        this.buffer = [];
    }
    BufferCountSubscriber.prototype._next = function (value) {
        var buffer = this.buffer;
        buffer.push(value);
        if (buffer.length == this.bufferSize) {
            this.destination.next(buffer);
            this.buffer = [];
        }
    };
    BufferCountSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer.length > 0) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    return BufferCountSubscriber;
}(Subscriber_1.Subscriber));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferSkipCountSubscriber = (function (_super) {
    __extends(BufferSkipCountSubscriber, _super);
    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
        _super.call(this, destination);
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        this.buffers = [];
        this.count = 0;
    }
    BufferSkipCountSubscriber.prototype._next = function (value) {
        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;
        this.count++;
        if (count % startBufferEvery === 0) {
            buffers.push([]);
        }
        for (var i = buffers.length; i--;) {
            var buffer = buffers[i];
            buffer.push(value);
            if (buffer.length === bufferSize) {
                buffers.splice(i, 1);
                this.destination.next(buffer);
            }
        }
    };
    BufferSkipCountSubscriber.prototype._complete = function () {
        var _a = this, buffers = _a.buffers, destination = _a.destination;
        while (buffers.length > 0) {
            var buffer = buffers.shift();
            if (buffer.length > 0) {
                destination.next(buffer);
            }
        }
        _super.prototype._complete.call(this);
    };
    return BufferSkipCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=bufferCount.js.map

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(6);
var Subscriber_1 = __webpack_require__(3);
var isScheduler_1 = __webpack_require__(12);
/* tslint:enable:max-line-length */
/**
 * Buffers the source Observable values for a specific time period.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * those arrays periodically in time.</span>
 *
 * <img src="./img/bufferTime.png" width="100%">
 *
 * Buffers values from the source for a specific time duration `bufferTimeSpan`.
 * Unless the optional argument `bufferCreationInterval` is given, it emits and
 * resets the buffer every `bufferTimeSpan` milliseconds. If
 * `bufferCreationInterval` is given, this operator opens the buffer every
 * `bufferCreationInterval` milliseconds and closes (emits and resets) the
 * buffer every `bufferTimeSpan` milliseconds. When the optional argument
 * `maxBufferSize` is specified, the buffer will be closed either after
 * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.
 *
 * @example <caption>Every second, emit an array of the recent click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(1000);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(2000, 5000);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link windowTime}
 *
 * @param {number} bufferTimeSpan The amount of time to fill each buffer array.
 * @param {number} [bufferCreationInterval] The interval at which to start new
 * buffers.
 * @param {number} [maxBufferSize] The maximum buffer size.
 * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the
 * intervals that determine buffer boundaries.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferTime
 * @owner Observable
 */
function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = async_1.async;
    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return function bufferTimeOperatorFunction(source) {
        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
    };
}
exports.bufferTime = bufferTime;
var BufferTimeOperator = (function () {
    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
    }
    BufferTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
    };
    return BufferTimeOperator;
}());
var Context = (function () {
    function Context() {
        this.buffer = [];
    }
    return Context;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferTimeSubscriber = (function (_super) {
    __extends(BufferTimeSubscriber, _super);
    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        _super.call(this, destination);
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
        this.contexts = [];
        var context = this.openContext();
        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
        if (this.timespanOnly) {
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
        else {
            var closeState = { subscriber: this, context: context };
            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };
            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
        }
    }
    BufferTimeSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        var filledBufferContext;
        for (var i = 0; i < len; i++) {
            var context = contexts[i];
            var buffer = context.buffer;
            buffer.push(value);
            if (buffer.length == this.maxBufferSize) {
                filledBufferContext = context;
            }
        }
        if (filledBufferContext) {
            this.onBufferFull(filledBufferContext);
        }
    };
    BufferTimeSubscriber.prototype._error = function (err) {
        this.contexts.length = 0;
        _super.prototype._error.call(this, err);
    };
    BufferTimeSubscriber.prototype._complete = function () {
        var _a = this, contexts = _a.contexts, destination = _a.destination;
        while (contexts.length > 0) {
            var context = contexts.shift();
            destination.next(context.buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferTimeSubscriber.prototype._unsubscribe = function () {
        this.contexts = null;
    };
    BufferTimeSubscriber.prototype.onBufferFull = function (context) {
        this.closeContext(context);
        var closeAction = context.closeAction;
        closeAction.unsubscribe();
        this.remove(closeAction);
        if (!this.closed && this.timespanOnly) {
            context = this.openContext();
            var bufferTimeSpan = this.bufferTimeSpan;
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
    };
    BufferTimeSubscriber.prototype.openContext = function () {
        var context = new Context();
        this.contexts.push(context);
        return context;
    };
    BufferTimeSubscriber.prototype.closeContext = function (context) {
        this.destination.next(context.buffer);
        var contexts = this.contexts;
        var spliceIndex = contexts ? contexts.indexOf(context) : -1;
        if (spliceIndex >= 0) {
            contexts.splice(contexts.indexOf(context), 1);
        }
    };
    return BufferTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchBufferTimeSpanOnly(state) {
    var subscriber = state.subscriber;
    var prevContext = state.context;
    if (prevContext) {
        subscriber.closeContext(prevContext);
    }
    if (!subscriber.closed) {
        state.context = subscriber.openContext();
        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
    }
}
function dispatchBufferCreation(state) {
    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
    var context = subscriber.openContext();
    var action = this;
    if (!subscriber.closed) {
        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
        action.schedule(state, bufferCreationInterval);
    }
}
function dispatchBufferClose(arg) {
    var subscriber = arg.subscriber, context = arg.context;
    subscriber.closeContext(context);
}
//# sourceMappingURL=bufferTime.js.map

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(7);
var subscribeToResult_1 = __webpack_require__(5);
var OuterSubscriber_1 = __webpack_require__(4);
/**
 * Buffers the source Observable values starting from an emission from
 * `openings` and ending when the output of `closingSelector` emits.
 *
 * <span class="informal">Collects values from the past as an array. Starts
 * collecting only when `opening` emits, and calls the `closingSelector`
 * function to get an Observable that tells when to close the buffer.</span>
 *
 * <img src="./img/bufferToggle.png" width="100%">
 *
 * Buffers values from the source by opening the buffer via signals from an
 * Observable provided to `openings`, and closing and sending the buffers when
 * a Subscribable or Promise returned by the `closingSelector` function emits.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var buffered = clicks.bufferToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferWhen}
 * @see {@link windowToggle}
 *
 * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new
 * buffers.
 * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns a Subscribable or Promise,
 * which, when it emits, signals that the associated buffer should be emitted
 * and cleared.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferToggle
 * @owner Observable
 */
function bufferToggle(openings, closingSelector) {
    return function bufferToggleOperatorFunction(source) {
        return source.lift(new BufferToggleOperator(openings, closingSelector));
    };
}
exports.bufferToggle = bufferToggle;
var BufferToggleOperator = (function () {
    function BufferToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    BufferToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return BufferToggleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferToggleSubscriber = (function (_super) {
    __extends(BufferToggleSubscriber, _super);
    function BufferToggleSubscriber(destination, openings, closingSelector) {
        _super.call(this, destination);
        this.openings = openings;
        this.closingSelector = closingSelector;
        this.contexts = [];
        this.add(subscribeToResult_1.subscribeToResult(this, openings));
    }
    BufferToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        for (var i = 0; i < len; i++) {
            contexts[i].buffer.push(value);
        }
    };
    BufferToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context = contexts.shift();
            context.subscription.unsubscribe();
            context.buffer = null;
            context.subscription = null;
        }
        this.contexts = null;
        _super.prototype._error.call(this, err);
    };
    BufferToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context = contexts.shift();
            this.destination.next(context.buffer);
            context.subscription.unsubscribe();
            context.buffer = null;
            context.subscription = null;
        }
        this.contexts = null;
        _super.prototype._complete.call(this);
    };
    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
    };
    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
        this.closeBuffer(innerSub.context);
    };
    BufferToggleSubscriber.prototype.openBuffer = function (value) {
        try {
            var closingSelector = this.closingSelector;
            var closingNotifier = closingSelector.call(this, value);
            if (closingNotifier) {
                this.trySubscribe(closingNotifier);
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    BufferToggleSubscriber.prototype.closeBuffer = function (context) {
        var contexts = this.contexts;
        if (contexts && context) {
            var buffer = context.buffer, subscription = context.subscription;
            this.destination.next(buffer);
            contexts.splice(contexts.indexOf(context), 1);
            this.remove(subscription);
            subscription.unsubscribe();
        }
    };
    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
        var contexts = this.contexts;
        var buffer = [];
        var subscription = new Subscription_1.Subscription();
        var context = { buffer: buffer, subscription: subscription };
        contexts.push(context);
        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);
        if (!innerSubscription || innerSubscription.closed) {
            this.closeBuffer(context);
        }
        else {
            innerSubscription.context = context;
            this.add(innerSubscription);
            subscription.add(innerSubscription);
        }
    };
    return BufferToggleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=bufferToggle.js.map

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(7);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Buffers the source Observable values, using a factory function of closing
 * Observables to determine when to close, emit, and reset the buffer.
 *
 * <span class="informal">Collects values from the past as an array. When it
 * starts collecting values, it calls a function that returns an Observable that
 * tells when to close the buffer and restart collecting.</span>
 *
 * <img src="./img/bufferWhen.png" width="100%">
 *
 * Opens a buffer immediately, then closes the buffer when the observable
 * returned by calling `closingSelector` function emits a value. When it closes
 * the buffer, it immediately opens a new buffer and repeats the process.
 *
 * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferWhen(() =>
 *   Rx.Observable.interval(1000 + Math.random() * 4000)
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link windowWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals buffer closure.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferWhen
 * @owner Observable
 */
function bufferWhen(closingSelector) {
    return function (source) {
        return source.lift(new BufferWhenOperator(closingSelector));
    };
}
exports.bufferWhen = bufferWhen;
var BufferWhenOperator = (function () {
    function BufferWhenOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    BufferWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
    };
    return BufferWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferWhenSubscriber = (function (_super) {
    __extends(BufferWhenSubscriber, _super);
    function BufferWhenSubscriber(destination, closingSelector) {
        _super.call(this, destination);
        this.closingSelector = closingSelector;
        this.subscribing = false;
        this.openBuffer();
    }
    BufferWhenSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferWhenSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferWhenSubscriber.prototype._unsubscribe = function () {
        this.buffer = null;
        this.subscribing = false;
    };
    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openBuffer();
    };
    BufferWhenSubscriber.prototype.notifyComplete = function () {
        if (this.subscribing) {
            this.complete();
        }
        else {
            this.openBuffer();
        }
    };
    BufferWhenSubscriber.prototype.openBuffer = function () {
        var closingSubscription = this.closingSubscription;
        if (closingSubscription) {
            this.remove(closingSubscription);
            closingSubscription.unsubscribe();
        }
        var buffer = this.buffer;
        if (this.buffer) {
            this.destination.next(buffer);
        }
        this.buffer = [];
        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();
        if (closingNotifier === errorObject_1.errorObject) {
            this.error(errorObject_1.errorObject.e);
        }
        else {
            closingSubscription = new Subscription_1.Subscription();
            this.closingSubscription = closingSubscription;
            this.add(closingSubscription);
            this.subscribing = true;
            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));
            this.subscribing = false;
        }
    };
    return BufferWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=bufferWhen.js.map

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Catches errors on the observable to be handled by returning a new observable or throwing an error.
 *
 * <img src="./img/catch.png" width="100%">
 *
 * @example <caption>Continues with a different Observable when there's an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n == 4) {
 * 	     throw 'four!';
 *     }
 *	   return n;
 *   })
 *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, I, II, III, IV, V
 *
 * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n === 4) {
 * 	     throw 'four!';
 *     }
 * 	   return n;
 *   })
 *   .catch((err, caught) => caught)
 *   .take(30)
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, 1, 2, 3, ...
 *
 * @example <caption>Throws a new error when the source Observable throws an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 *     if (n == 4) {
 *       throw 'four!';
 *     }
 *     return n;
 *   })
 *   .catch(err => {
 *     throw 'error in source. Details: ' + err;
 *   })
 *   .subscribe(
 *     x => console.log(x),
 *     err => console.log(err)
 *   );
 *   // 1, 2, 3, error in source. Details: four!
 *
 * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which
 *  is the source observable, in case you'd like to "retry" that observable by returning it again. Whatever observable
 *  is returned by the `selector` will be used to continue the observable chain.
 * @return {Observable} An observable that originates from either the source or the observable returned by the
 *  catch `selector` function.
 * @name catchError
 */
function catchError(selector) {
    return function catchErrorOperatorFunction(source) {
        var operator = new CatchOperator(selector);
        var caught = source.lift(operator);
        return (operator.caught = caught);
    };
}
exports.catchError = catchError;
var CatchOperator = (function () {
    function CatchOperator(selector) {
        this.selector = selector;
    }
    CatchOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
    };
    return CatchOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CatchSubscriber = (function (_super) {
    __extends(CatchSubscriber, _super);
    function CatchSubscriber(destination, selector, caught) {
        _super.call(this, destination);
        this.selector = selector;
        this.caught = caught;
    }
    // NOTE: overriding `error` instead of `_error` because we don't want
    // to have this flag this subscriber as `isStopped`. We can mimic the
    // behavior of the RetrySubscriber (from the `retry` operator), where
    // we unsubscribe from our source chain, reset our Subscriber flags,
    // then subscribe to the selector result.
    CatchSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var result = void 0;
            try {
                result = this.selector(err, this.caught);
            }
            catch (err2) {
                _super.prototype.error.call(this, err2);
                return;
            }
            this._unsubscribeAndRecycle();
            this.add(subscribeToResult_1.subscribeToResult(this, result));
        }
    };
    return CatchSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=catchError.js.map

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var combineLatest_1 = __webpack_require__(33);
function combineAll(project) {
    return function (source) { return source.lift(new combineLatest_1.CombineLatestOperator(project)); };
}
exports.combineAll = combineAll;
//# sourceMappingURL=combineAll.js.map

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concat_1 = __webpack_require__(44);
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins this Observable with multiple other Observables by subscribing to them
 * one at a time, starting with the source, and merging their results into the
 * output Observable. Will wait for each Observable to complete before moving
 * on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = timer.concat(sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = timer1.concat(timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {ObservableInput} other An input Observable to concatenate after the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @method concat
 * @owner Observable
 */
function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return function (source) { return source.lift.call(concat_1.concat.apply(void 0, [source].concat(observables))); };
}
exports.concat = concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concatMap_1 = __webpack_require__(49);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in a serialized fashion on the output Observable.
 *
 * <span class="informal">It's like {@link concatMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/concatMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. Each new `innerObservable`
 * instance emitted on the output Observable is concatenated with the previous
 * `innerObservable` instance.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter
 * set to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link mergeMapTo}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An observable of values merged together by joining the
 * passed observable with itself, one after the other, for each value emitted
 * from the source.
 * @method concatMapTo
 * @owner Observable
 */
function concatMapTo(innerObservable, resultSelector) {
    return concatMap_1.concatMap(function () { return innerObservable; }, resultSelector);
}
exports.concatMapTo = concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Counts the number of emissions on the source and emits that number when the
 * source completes.
 *
 * <span class="informal">Tells how many values were emitted, when the source
 * completes.</span>
 *
 * <img src="./img/count.png" width="100%">
 *
 * `count` transforms an Observable that emits values into an Observable that
 * emits a single value that represents the number of values emitted by the
 * source Observable. If the source Observable terminates with an error, `count`
 * will pass this error notification along without emitting a value first. If
 * the source Observable does not terminate at all, `count` will neither emit
 * a value nor terminate. This operator takes an optional `predicate` function
 * as argument, in which case the output emission will represent the number of
 * source values that matched `true` with the `predicate`.
 *
 * @example <caption>Counts how many seconds have passed before the first click happened</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var secondsBeforeClick = seconds.takeUntil(clicks);
 * var result = secondsBeforeClick.count();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>
 * var numbers = Rx.Observable.range(1, 7);
 * var result = numbers.count(i => i % 2 === 1);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 4
 *
 * @see {@link max}
 * @see {@link min}
 * @see {@link reduce}
 *
 * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A
 * boolean function to select what values are to be counted. It is provided with
 * arguments of:
 * - `value`: the value from the source Observable.
 * - `index`: the (zero-based) "index" of the value from the source Observable.
 * - `source`: the source Observable instance itself.
 * @return {Observable} An Observable of one number that represents the count as
 * described above.
 * @method count
 * @owner Observable
 */
function count(predicate) {
    return function (source) { return source.lift(new CountOperator(predicate, source)); };
}
exports.count = count;
var CountOperator = (function () {
    function CountOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    CountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
    };
    return CountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CountSubscriber = (function (_super) {
    __extends(CountSubscriber, _super);
    function CountSubscriber(destination, predicate, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.count = 0;
        this.index = 0;
    }
    CountSubscriber.prototype._next = function (value) {
        if (this.predicate) {
            this._tryPredicate(value);
        }
        else {
            this.count++;
        }
    };
    CountSubscriber.prototype._tryPredicate = function (value) {
        var result;
        try {
            result = this.predicate(value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.count++;
        }
    };
    CountSubscriber.prototype._complete = function () {
        this.destination.next(this.count);
        this.destination.complete();
    };
    return CountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=count.js.map

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Converts an Observable of {@link Notification} objects into the emissions
 * that they represent.
 *
 * <span class="informal">Unwraps {@link Notification} objects as actual `next`,
 * `error` and `complete` emissions. The opposite of {@link materialize}.</span>
 *
 * <img src="./img/dematerialize.png" width="100%">
 *
 * `dematerialize` is assumed to operate an Observable that only emits
 * {@link Notification} objects as `next` emissions, and does not emit any
 * `error`. Such Observable is the output of a `materialize` operation. Those
 * notifications are then unwrapped using the metadata they contain, and emitted
 * as `next`, `error`, and `complete` on the output Observable.
 *
 * Use this operator in conjunction with {@link materialize}.
 *
 * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>
 * var notifA = new Rx.Notification('N', 'A');
 * var notifB = new Rx.Notification('N', 'B');
 * var notifE = new Rx.Notification('E', void 0,
 *   new TypeError('x.toUpperCase is not a function')
 * );
 * var materialized = Rx.Observable.of(notifA, notifB, notifE);
 * var upperCase = materialized.dematerialize();
 * upperCase.subscribe(x => console.log(x), e => console.error(e));
 *
 * // Results in:
 * // A
 * // B
 * // TypeError: x.toUpperCase is not a function
 *
 * @see {@link Notification}
 * @see {@link materialize}
 *
 * @return {Observable} An Observable that emits items and notifications
 * embedded in Notification objects emitted by the source Observable.
 * @method dematerialize
 * @owner Observable
 */
function dematerialize() {
    return function dematerializeOperatorFunction(source) {
        return source.lift(new DeMaterializeOperator());
    };
}
exports.dematerialize = dematerialize;
var DeMaterializeOperator = (function () {
    function DeMaterializeOperator() {
    }
    DeMaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DeMaterializeSubscriber(subscriber));
    };
    return DeMaterializeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DeMaterializeSubscriber = (function (_super) {
    __extends(DeMaterializeSubscriber, _super);
    function DeMaterializeSubscriber(destination) {
        _super.call(this, destination);
    }
    DeMaterializeSubscriber.prototype._next = function (value) {
        value.observe(this.destination);
    };
    return DeMaterializeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=dematerialize.js.map

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Emits a value from the source Observable only after a particular time span
 * determined by another Observable has passed without another source emission.
 *
 * <span class="informal">It's like {@link debounceTime}, but the time span of
 * emission silence is determined by a second Observable.</span>
 *
 * <img src="./img/debounce.png" width="100%">
 *
 * `debounce` delays values emitted by the source Observable, but drops previous
 * pending delayed emissions if a new value arrives on the source Observable.
 * This operator keeps track of the most recent value from the source
 * Observable, and spawns a duration Observable by calling the
 * `durationSelector` function. The value is emitted only when the duration
 * Observable emits a value or completes, and if no other value was emitted on
 * the source Observable since the duration Observable was spawned. If a new
 * value appears before the duration Observable emits, the previous value will
 * be dropped and will not be emitted on the output Observable.
 *
 * Like {@link debounceTime}, this is a rate-limiting operator, and also a
 * delay-like operator since output emissions do not necessarily occur at the
 * same time as they did on the source Observable.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounce(() => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the timeout
 * duration for each source value, returned as an Observable or a Promise.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified duration Observable returned by
 * `durationSelector`, and may drop some values if they occur too frequently.
 * @method debounce
 * @owner Observable
 */
function debounce(durationSelector) {
    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };
}
exports.debounce = debounce;
var DebounceOperator = (function () {
    function DebounceOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    DebounceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
    };
    return DebounceOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DebounceSubscriber = (function (_super) {
    __extends(DebounceSubscriber, _super);
    function DebounceSubscriber(destination, durationSelector) {
        _super.call(this, destination);
        this.durationSelector = durationSelector;
        this.hasValue = false;
        this.durationSubscription = null;
    }
    DebounceSubscriber.prototype._next = function (value) {
        try {
            var result = this.durationSelector.call(this, value);
            if (result) {
                this._tryNext(value, result);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DebounceSubscriber.prototype._complete = function () {
        this.emitValue();
        this.destination.complete();
    };
    DebounceSubscriber.prototype._tryNext = function (value, duration) {
        var subscription = this.durationSubscription;
        this.value = value;
        this.hasValue = true;
        if (subscription) {
            subscription.unsubscribe();
            this.remove(subscription);
        }
        subscription = subscribeToResult_1.subscribeToResult(this, duration);
        if (!subscription.closed) {
            this.add(this.durationSubscription = subscription);
        }
    };
    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    DebounceSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            var value = this.value;
            var subscription = this.durationSubscription;
            if (subscription) {
                this.durationSubscription = null;
                subscription.unsubscribe();
                this.remove(subscription);
            }
            this.value = null;
            this.hasValue = false;
            _super.prototype._next.call(this, value);
        }
    };
    return DebounceSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=debounce.js.map

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var async_1 = __webpack_require__(6);
/**
 * Emits a value from the source Observable only after a particular time span
 * has passed without another source emission.
 *
 * <span class="informal">It's like {@link delay}, but passes only the most
 * recent value from each burst of emissions.</span>
 *
 * <img src="./img/debounceTime.png" width="100%">
 *
 * `debounceTime` delays values emitted by the source Observable, but drops
 * previous pending delayed emissions if a new value arrives on the source
 * Observable. This operator keeps track of the most recent value from the
 * source Observable, and emits that only when `dueTime` enough time has passed
 * without any other value appearing on the source Observable. If a new value
 * appears before `dueTime` silence occurs, the previous value will be dropped
 * and will not be emitted on the output Observable.
 *
 * This is a rate-limiting operator, because it is impossible for more than one
 * value to be emitted in any time window of duration `dueTime`, but it is also
 * a delay-like operator since output emissions do not occur at the same time as
 * they did on the source Observable. Optionally takes a {@link IScheduler} for
 * managing timers.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounceTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} dueTime The timeout duration in milliseconds (or the time
 * unit determined internally by the optional `scheduler`) for the window of
 * time required to wait for emission silence before emitting the most recent
 * source value.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the timeout for each value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified `dueTime`, and may drop some values if they occur
 * too frequently.
 * @method debounceTime
 * @owner Observable
 */
function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };
}
exports.debounceTime = debounceTime;
var DebounceTimeOperator = (function () {
    function DebounceTimeOperator(dueTime, scheduler) {
        this.dueTime = dueTime;
        this.scheduler = scheduler;
    }
    DebounceTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
    };
    return DebounceTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DebounceTimeSubscriber = (function (_super) {
    __extends(DebounceTimeSubscriber, _super);
    function DebounceTimeSubscriber(destination, dueTime, scheduler) {
        _super.call(this, destination);
        this.dueTime = dueTime;
        this.scheduler = scheduler;
        this.debouncedSubscription = null;
        this.lastValue = null;
        this.hasValue = false;
    }
    DebounceTimeSubscriber.prototype._next = function (value) {
        this.clearDebounce();
        this.lastValue = value;
        this.hasValue = true;
        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    };
    DebounceTimeSubscriber.prototype._complete = function () {
        this.debouncedNext();
        this.destination.complete();
    };
    DebounceTimeSubscriber.prototype.debouncedNext = function () {
        this.clearDebounce();
        if (this.hasValue) {
            this.destination.next(this.lastValue);
            this.lastValue = null;
            this.hasValue = false;
        }
    };
    DebounceTimeSubscriber.prototype.clearDebounce = function () {
        var debouncedSubscription = this.debouncedSubscription;
        if (debouncedSubscription !== null) {
            this.remove(debouncedSubscription);
            debouncedSubscription.unsubscribe();
            this.debouncedSubscription = null;
        }
    };
    return DebounceTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNext(subscriber) {
    subscriber.debouncedNext();
}
//# sourceMappingURL=debounceTime.js.map

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(6);
var isDate_1 = __webpack_require__(36);
var Subscriber_1 = __webpack_require__(3);
var Notification_1 = __webpack_require__(19);
/**
 * Delays the emission of items from the source Observable by a given timeout or
 * until a given Date.
 *
 * <span class="informal">Time shifts each item by some specified amount of
 * milliseconds.</span>
 *
 * <img src="./img/delay.png" width="100%">
 *
 * If the delay argument is a Number, this operator time shifts the source
 * Observable by that amount of time expressed in milliseconds. The relative
 * time intervals between the values are preserved.
 *
 * If the delay argument is a Date, this operator time shifts the start of the
 * Observable execution until the given date occurs.
 *
 * @example <caption>Delay each click by one second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @example <caption>Delay all clicks until a future date happens</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var date = new Date('March 15, 2050 12:00:00'); // in the future
 * var delayedClicks = clicks.delay(date); // click emitted only after that date
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 *
 * @param {number|Date} delay The delay duration in milliseconds (a `number`) or
 * a `Date` until which the emission of the source items is delayed.
 * @param {Scheduler} [scheduler=async] The IScheduler to use for
 * managing the timers that handle the time-shift for each item.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified timeout or Date.
 * @method delay
 * @owner Observable
 */
function delay(delay, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    var absoluteDelay = isDate_1.isDate(delay);
    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };
}
exports.delay = delay;
var DelayOperator = (function () {
    function DelayOperator(delay, scheduler) {
        this.delay = delay;
        this.scheduler = scheduler;
    }
    DelayOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
    };
    return DelayOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DelaySubscriber = (function (_super) {
    __extends(DelaySubscriber, _super);
    function DelaySubscriber(destination, delay, scheduler) {
        _super.call(this, destination);
        this.delay = delay;
        this.scheduler = scheduler;
        this.queue = [];
        this.active = false;
        this.errored = false;
    }
    DelaySubscriber.dispatch = function (state) {
        var source = state.source;
        var queue = source.queue;
        var scheduler = state.scheduler;
        var destination = state.destination;
        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
            queue.shift().notification.observe(destination);
        }
        if (queue.length > 0) {
            var delay_1 = Math.max(0, queue[0].time - scheduler.now());
            this.schedule(state, delay_1);
        }
        else {
            source.active = false;
        }
    };
    DelaySubscriber.prototype._schedule = function (scheduler) {
        this.active = true;
        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
            source: this, destination: this.destination, scheduler: scheduler
        }));
    };
    DelaySubscriber.prototype.scheduleNotification = function (notification) {
        if (this.errored === true) {
            return;
        }
        var scheduler = this.scheduler;
        var message = new DelayMessage(scheduler.now() + this.delay, notification);
        this.queue.push(message);
        if (this.active === false) {
            this._schedule(scheduler);
        }
    };
    DelaySubscriber.prototype._next = function (value) {
        this.scheduleNotification(Notification_1.Notification.createNext(value));
    };
    DelaySubscriber.prototype._error = function (err) {
        this.errored = true;
        this.queue = [];
        this.destination.error(err);
    };
    DelaySubscriber.prototype._complete = function () {
        this.scheduleNotification(Notification_1.Notification.createComplete());
    };
    return DelaySubscriber;
}(Subscriber_1.Subscriber));
var DelayMessage = (function () {
    function DelayMessage(time, notification) {
        this.time = time;
        this.notification = notification;
    }
    return DelayMessage;
}());
//# sourceMappingURL=delay.js.map

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var Observable_1 = __webpack_require__(0);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Delays the emission of items from the source Observable by a given time span
 * determined by the emissions of another Observable.
 *
 * <span class="informal">It's like {@link delay}, but the time span of the
 * delay duration is determined by a second Observable.</span>
 *
 * <img src="./img/delayWhen.png" width="100%">
 *
 * `delayWhen` time shifts each emitted value from the source Observable by a
 * time span determined by another Observable. When the source emits a value,
 * the `delayDurationSelector` function is called with the source value as
 * argument, and should return an Observable, called the "duration" Observable.
 * The source value is emitted on the output Observable only when the duration
 * Observable emits a value or completes.
 *
 * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which
 * is an Observable. When `subscriptionDelay` emits its first value or
 * completes, the source Observable is subscribed to and starts behaving like
 * described in the previous paragraph. If `subscriptionDelay` is not provided,
 * `delayWhen` will subscribe to the source Observable as soon as the output
 * Observable is subscribed.
 *
 * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delayWhen(event =>
 *   Rx.Observable.interval(Math.random() * 5000)
 * );
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounce}
 * @see {@link delay}
 *
 * @param {function(value: T): Observable} delayDurationSelector A function that
 * returns an Observable for each value emitted by the source Observable, which
 * is then used to delay the emission of that item on the output Observable
 * until the Observable returned from this function emits a value.
 * @param {Observable} subscriptionDelay An Observable that triggers the
 * subscription to the source Observable once it emits any value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by an amount of time specified by the Observable returned by
 * `delayDurationSelector`.
 * @method delayWhen
 * @owner Observable
 */
function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return function (source) {
            return new SubscriptionDelayObservable(source, subscriptionDelay)
                .lift(new DelayWhenOperator(delayDurationSelector));
        };
    }
    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };
}
exports.delayWhen = delayWhen;
var DelayWhenOperator = (function () {
    function DelayWhenOperator(delayDurationSelector) {
        this.delayDurationSelector = delayDurationSelector;
    }
    DelayWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
    };
    return DelayWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DelayWhenSubscriber = (function (_super) {
    __extends(DelayWhenSubscriber, _super);
    function DelayWhenSubscriber(destination, delayDurationSelector) {
        _super.call(this, destination);
        this.delayDurationSelector = delayDurationSelector;
        this.completed = false;
        this.delayNotifierSubscriptions = [];
        this.values = [];
    }
    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(outerValue);
        this.removeSubscription(innerSub);
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        var value = this.removeSubscription(innerSub);
        if (value) {
            this.destination.next(value);
        }
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype._next = function (value) {
        try {
            var delayNotifier = this.delayDurationSelector(value);
            if (delayNotifier) {
                this.tryDelay(delayNotifier, value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DelayWhenSubscriber.prototype._complete = function () {
        this.completed = true;
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
        subscription.unsubscribe();
        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
        var value = null;
        if (subscriptionIdx !== -1) {
            value = this.values[subscriptionIdx];
            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
            this.values.splice(subscriptionIdx, 1);
        }
        return value;
    };
    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);
        if (notifierSubscription && !notifierSubscription.closed) {
            this.add(notifierSubscription);
            this.delayNotifierSubscriptions.push(notifierSubscription);
        }
        this.values.push(value);
    };
    DelayWhenSubscriber.prototype.tryComplete = function () {
        if (this.completed && this.delayNotifierSubscriptions.length === 0) {
            this.destination.complete();
        }
    };
    return DelayWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubscriptionDelayObservable = (function (_super) {
    __extends(SubscriptionDelayObservable, _super);
    function SubscriptionDelayObservable(source, subscriptionDelay) {
        _super.call(this);
        this.source = source;
        this.subscriptionDelay = subscriptionDelay;
    }
    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
    };
    return SubscriptionDelayObservable;
}(Observable_1.Observable));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubscriptionDelaySubscriber = (function (_super) {
    __extends(SubscriptionDelaySubscriber, _super);
    function SubscriptionDelaySubscriber(parent, source) {
        _super.call(this);
        this.parent = parent;
        this.source = source;
        this.sourceSubscribed = false;
    }
    SubscriptionDelaySubscriber.prototype._next = function (unused) {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype._error = function (err) {
        this.unsubscribe();
        this.parent.error(err);
    };
    SubscriptionDelaySubscriber.prototype._complete = function () {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
        if (!this.sourceSubscribed) {
            this.sourceSubscribed = true;
            this.unsubscribe();
            this.source.subscribe(this.parent);
        }
    };
    return SubscriptionDelaySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=delayWhen.js.map

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
var Set_1 = __webpack_require__(305);
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.
 *
 * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will
 * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the
 * source observable directly with an equality check against previous values.
 *
 * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.
 *
 * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the
 * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`
 * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so
 * that the internal `Set` can be "flushed", basically clearing it of values.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)
 *   .distinct()
 *   .subscribe(x => console.log(x)); // 1, 2, 3, 4
 *
 * @example <caption>An example using a keySelector function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     .distinct((p: Person) => p.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 *
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [keySelector] Optional function to select which value you want to check as distinct.
 * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinct
 * @owner Observable
 */
function distinct(keySelector, flushes) {
    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };
}
exports.distinct = distinct;
var DistinctOperator = (function () {
    function DistinctOperator(keySelector, flushes) {
        this.keySelector = keySelector;
        this.flushes = flushes;
    }
    DistinctOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
    };
    return DistinctOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DistinctSubscriber = (function (_super) {
    __extends(DistinctSubscriber, _super);
    function DistinctSubscriber(destination, keySelector, flushes) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.values = new Set_1.Set();
        if (flushes) {
            this.add(subscribeToResult_1.subscribeToResult(this, flushes));
        }
    }
    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values.clear();
    };
    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DistinctSubscriber.prototype._next = function (value) {
        if (this.keySelector) {
            this._useKeySelector(value);
        }
        else {
            this._finalizeNext(value, value);
        }
    };
    DistinctSubscriber.prototype._useKeySelector = function (value) {
        var key;
        var destination = this.destination;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this._finalizeNext(key, value);
    };
    DistinctSubscriber.prototype._finalizeNext = function (key, value) {
        var values = this.values;
        if (!values.has(key)) {
            values.add(key);
            this.destination.next(value);
        }
    };
    return DistinctSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.DistinctSubscriber = DistinctSubscriber;
//# sourceMappingURL=distinct.js.map

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var distinctUntilChanged_1 = __webpack_require__(51);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,
 * using a property accessed by using the key provided to check if the two items are distinct.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>An example comparing the name of persons</caption>
 *
 *  interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'},
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilKeyChanged('name')
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @example <caption>An example comparing the first letters of the name</caption>
 *
 * interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo1'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo2'},
 *     { age: 6, name: 'Foo3'})
 *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo1' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo2' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 *
 * @param {string} key String key for object property lookup on each item.
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.
 * @method distinctUntilKeyChanged
 * @owner Observable
 */
function distinctUntilKeyChanged(key, compare) {
    return distinctUntilChanged_1.distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });
}
exports.distinctUntilKeyChanged = distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/* tslint:enable:max-line-length */
/**
 * Perform a side effect for every emission on the source Observable, but return
 * an Observable that is identical to the source.
 *
 * <span class="informal">Intercepts each emission on the source and runs a
 * function, but returns an output which is identical to the source as long as errors don't occur.</span>
 *
 * <img src="./img/do.png" width="100%">
 *
 * Returns a mirrored Observable of the source Observable, but modified so that
 * the provided Observer is called to perform a side effect for every value,
 * error, and completion emitted by the source. Any errors that are thrown in
 * the aforementioned Observer or handlers are safely sent down the error path
 * of the output Observable.
 *
 * This operator is useful for debugging your Observables for the correct values
 * or performing other side effects.
 *
 * Note: this is different to a `subscribe` on the Observable. If the Observable
 * returned by `do` is not subscribed, the side effects specified by the
 * Observer will never happen. `do` therefore simply spies on existing
 * execution, it does not trigger an execution to happen like `subscribe` does.
 *
 * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks
 *   .do(ev => console.log(ev))
 *   .map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link map}
 * @see {@link subscribe}
 *
 * @param {Observer|function} [nextOrObserver] A normal Observer object or a
 * callback for `next`.
 * @param {function} [error] Callback for errors in the source.
 * @param {function} [complete] Callback for the completion of the source.
 * @return {Observable} An Observable identical to the source, but runs the
 * specified Observer or callback(s) for each item.
 * @name tap
 */
function tap(nextOrObserver, error, complete) {
    return function tapOperatorFunction(source) {
        return source.lift(new DoOperator(nextOrObserver, error, complete));
    };
}
exports.tap = tap;
var DoOperator = (function () {
    function DoOperator(nextOrObserver, error, complete) {
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    }
    DoOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    };
    return DoOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DoSubscriber = (function (_super) {
    __extends(DoSubscriber, _super);
    function DoSubscriber(destination, nextOrObserver, error, complete) {
        _super.call(this, destination);
        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);
        safeSubscriber.syncErrorThrowable = true;
        this.add(safeSubscriber);
        this.safeSubscriber = safeSubscriber;
    }
    DoSubscriber.prototype._next = function (value) {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.next(value);
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.next(value);
        }
    };
    DoSubscriber.prototype._error = function (err) {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.error(err);
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.error(err);
        }
    };
    DoSubscriber.prototype._complete = function () {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.complete();
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.complete();
        }
    };
    return DoSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=tap.js.map

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Converts a higher-order Observable into a first-order Observable by dropping
 * inner Observables while the previous inner Observable has not yet completed.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * next inner Observables while the current inner is still executing.</span>
 *
 * <img src="./img/exhaust.png" width="100%">
 *
 * `exhaust` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable begins emitting the items emitted by that
 * inner Observable. So far, it behaves like {@link mergeAll}. However,
 * `exhaust` ignores every new inner Observable if the previous Observable has
 * not yet completed. Once that one completes, it will accept and flatten the
 * next inner Observable and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));
 * var result = higherOrder.exhaust();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link switch}
 * @see {@link mergeAll}
 * @see {@link exhaustMap}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable that takes a source of Observables and propagates the first observable
 * exclusively until it completes before subscribing to the next.
 * @method exhaust
 * @owner Observable
 */
function exhaust() {
    return function (source) { return source.lift(new SwitchFirstOperator()); };
}
exports.exhaust = exhaust;
var SwitchFirstOperator = (function () {
    function SwitchFirstOperator() {
    }
    SwitchFirstOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchFirstSubscriber(subscriber));
    };
    return SwitchFirstOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchFirstSubscriber = (function (_super) {
    __extends(SwitchFirstSubscriber, _super);
    function SwitchFirstSubscriber(destination) {
        _super.call(this, destination);
        this.hasCompleted = false;
        this.hasSubscription = false;
    }
    SwitchFirstSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.hasSubscription = true;
            this.add(subscribeToResult_1.subscribeToResult(this, value));
        }
    };
    SwitchFirstSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=exhaust.js.map

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable only if the previous projected Observable has completed.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link exhaust}.</span>
 *
 * <img src="./img/exhaustMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. When it projects a source value to
 * an Observable, the output Observable begins emitting the items emitted by
 * that projected Observable. However, `exhaustMap` ignores every new projected
 * Observable if the previous projected Observable has not yet completed. Once
 * that one completes, it will accept and flatten the next projected Observable
 * and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaust}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable containing projected Observables
 * of each item of the source, ignoring projected Observables that start before
 * their preceding Observable has completed.
 * @method exhaustMap
 * @owner Observable
 */
function exhaustMap(project, resultSelector) {
    return function (source) { return source.lift(new SwitchFirstMapOperator(project, resultSelector)); };
}
exports.exhaustMap = exhaustMap;
var SwitchFirstMapOperator = (function () {
    function SwitchFirstMapOperator(project, resultSelector) {
        this.project = project;
        this.resultSelector = resultSelector;
    }
    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));
    };
    return SwitchFirstMapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchFirstMapSubscriber = (function (_super) {
    __extends(SwitchFirstMapSubscriber, _super);
    function SwitchFirstMapSubscriber(destination, project, resultSelector) {
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.hasSubscription = false;
        this.hasCompleted = false;
        this.index = 0;
    }
    SwitchFirstMapSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.tryNext(value);
        }
    };
    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {
        var index = this.index++;
        var destination = this.destination;
        try {
            var result = this.project(value, index);
            this.hasSubscription = true;
            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));
        }
        catch (err) {
            destination.error(err);
        }
    };
    SwitchFirstMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        try {
            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
            destination.next(result);
        }
        catch (err) {
            destination.error(err);
        }
    };
    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=exhaustMap.js.map

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/* tslint:enable:max-line-length */
/**
 * Recursively projects each source value to an Observable which is merged in
 * the output Observable.
 *
 * <span class="informal">It's similar to {@link mergeMap}, but applies the
 * projection function to every source value as well as every output value.
 * It's recursive.</span>
 *
 * <img src="./img/expand.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger. *Expand* will re-emit on the output
 * Observable every source value. Then, each output value is given to the
 * `project` function which returns an inner Observable to be merged on the
 * output Observable. Those output values resulting from the projection are also
 * given to the `project` function to produce new output values. This is how
 * *expand* behaves recursively.
 *
 * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var powersOfTwo = clicks
 *   .mapTo(1)
 *   .expand(x => Rx.Observable.of(2 * x).delay(1000))
 *   .take(10);
 * powersOfTwo.subscribe(x => console.log(x));
 *
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 *
 * @param {function(value: T, index: number) => Observable} project A function
 * that, when applied to an item emitted by the source or the output Observable,
 * returns an Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each projected inner Observable.
 * @return {Observable} An Observable that emits the source values and also
 * result of applying the projection function to each value emitted on the
 * output Observable and and merging the results of the Observables obtained
 * from this transformation.
 * @method expand
 * @owner Observable
 */
function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (scheduler === void 0) { scheduler = undefined; }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };
}
exports.expand = expand;
var ExpandOperator = (function () {
    function ExpandOperator(project, concurrent, scheduler) {
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
    }
    ExpandOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
    };
    return ExpandOperator;
}());
exports.ExpandOperator = ExpandOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ExpandSubscriber = (function (_super) {
    __extends(ExpandSubscriber, _super);
    function ExpandSubscriber(destination, project, concurrent, scheduler) {
        _super.call(this, destination);
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
        this.index = 0;
        this.active = 0;
        this.hasCompleted = false;
        if (concurrent < Number.POSITIVE_INFINITY) {
            this.buffer = [];
        }
    }
    ExpandSubscriber.dispatch = function (arg) {
        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
        subscriber.subscribeToProjection(result, value, index);
    };
    ExpandSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (destination.closed) {
            this._complete();
            return;
        }
        var index = this.index++;
        if (this.active < this.concurrent) {
            destination.next(value);
            var result = tryCatch_1.tryCatch(this.project)(value, index);
            if (result === errorObject_1.errorObject) {
                destination.error(errorObject_1.errorObject.e);
            }
            else if (!this.scheduler) {
                this.subscribeToProjection(result, value, index);
            }
            else {
                var state = { subscriber: this, result: result, value: value, index: index };
                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
        this.active++;
        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));
    };
    ExpandSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._next(innerValue);
    };
    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer && buffer.length > 0) {
            this._next(buffer.shift());
        }
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return ExpandSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.ExpandSubscriber = ExpandSubscriber;
//# sourceMappingURL=expand.js.map

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var ArgumentOutOfRangeError_1 = __webpack_require__(25);
/**
 * Emits the single value at the specified `index` in a sequence of emissions
 * from the source Observable.
 *
 * <span class="informal">Emits only the i-th value, then completes.</span>
 *
 * <img src="./img/elementAt.png" width="100%">
 *
 * `elementAt` returns an Observable that emits the item at the specified
 * `index` in the source Observable, or a default value if that `index` is out
 * of range and the `default` argument is provided. If the `default` argument is
 * not given and the `index` is out of range, the output Observable will emit an
 * `ArgumentOutOfRangeError` error.
 *
 * @example <caption>Emit only the third click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.elementAt(2);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // click 1 = nothing
 * // click 2 = nothing
 * // click 3 = MouseEvent object logged to console
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link skip}
 * @see {@link single}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the
 * Observable has completed before emitting the i-th `next` notification.
 *
 * @param {number} index Is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {T} [defaultValue] The default value returned for missing indices.
 * @return {Observable} An Observable that emits a single item, if it is found.
 * Otherwise, will emit the default value if given. If not, then emits an error.
 * @method elementAt
 * @owner Observable
 */
function elementAt(index, defaultValue) {
    return function (source) { return source.lift(new ElementAtOperator(index, defaultValue)); };
}
exports.elementAt = elementAt;
var ElementAtOperator = (function () {
    function ElementAtOperator(index, defaultValue) {
        this.index = index;
        this.defaultValue = defaultValue;
        if (index < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    ElementAtOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));
    };
    return ElementAtOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ElementAtSubscriber = (function (_super) {
    __extends(ElementAtSubscriber, _super);
    function ElementAtSubscriber(destination, index, defaultValue) {
        _super.call(this, destination);
        this.index = index;
        this.defaultValue = defaultValue;
    }
    ElementAtSubscriber.prototype._next = function (x) {
        if (this.index-- === 0) {
            this.destination.next(x);
            this.destination.complete();
        }
    };
    ElementAtSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index >= 0) {
            if (typeof this.defaultValue !== 'undefined') {
                destination.next(this.defaultValue);
            }
            else {
                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);
            }
        }
        destination.complete();
    };
    return ElementAtSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=elementAt.js.map

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var Subscription_1 = __webpack_require__(7);
/**
 * Returns an Observable that mirrors the source Observable, but will call a specified function when
 * the source terminates on complete or error.
 * @param {function} callback Function to be called when source terminates.
 * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.
 * @method finally
 * @owner Observable
 */
function finalize(callback) {
    return function (source) { return source.lift(new FinallyOperator(callback)); };
}
exports.finalize = finalize;
var FinallyOperator = (function () {
    function FinallyOperator(callback) {
        this.callback = callback;
    }
    FinallyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FinallySubscriber(subscriber, this.callback));
    };
    return FinallyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FinallySubscriber = (function (_super) {
    __extends(FinallySubscriber, _super);
    function FinallySubscriber(destination, callback) {
        _super.call(this, destination);
        this.add(new Subscription_1.Subscription(callback));
    }
    return FinallySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=finalize.js.map

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var find_1 = __webpack_require__(53);
/**
 * Emits only the index of the first value emitted by the source Observable that
 * meets some condition.
 *
 * <span class="informal">It's like {@link find}, but emits the index of the
 * found value, not the value itself.</span>
 *
 * <img src="./img/findIndex.png" width="100%">
 *
 * `findIndex` searches for the first item in the source Observable that matches
 * the specified condition embodied by the `predicate`, and returns the
 * (zero-based) index of the first occurrence in the source. Unlike
 * {@link first}, the `predicate` is required in `findIndex`, and does not emit
 * an error if a valid value is not found.
 *
 * @example <caption>Emit the index of first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link first}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of the index of the first item that
 * matches the condition.
 * @method find
 * @owner Observable
 */
function findIndex(predicate, thisArg) {
    return function (source) { return source.lift(new find_1.FindValueOperator(predicate, source, true, thisArg)); };
}
exports.findIndex = findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var EmptyError_1 = __webpack_require__(39);
/**
 * Emits only the first value (or the first value that meets some condition)
 * emitted by the source Observable.
 *
 * <span class="informal">Emits only the first value. Or emits only the first
 * value that passes some test.</span>
 *
 * <img src="./img/first.png" width="100%">
 *
 * If called with no arguments, `first` emits the first value of the source
 * Observable, then completes. If called with a `predicate` function, `first`
 * emits the first value of the source that matches the specified condition. It
 * may also take a `resultSelector` function to produce the output value from
 * the input value, and a `defaultValue` to emit in case the source completes
 * before it is able to emit a valid value. Throws an error if `defaultValue`
 * was not provided and a matching element is not found.
 *
 * @example <caption>Emit only the first click that happens on the DOM</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Emits the first click that happens on a DIV</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link take}
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]
 * An optional function called with each item to test for condition matching.
 * @param {function(value: T, index: number): R} [resultSelector] A function to
 * produce the value on the output Observable based on the values
 * and the indices of the source Observable. The arguments passed to this
 * function are:
 * - `value`: the value that was emitted on the source.
 * - `index`: the "index" of the value from the source.
 * @param {R} [defaultValue] The default value emitted in case no valid value
 * was found on the source.
 * @return {Observable<T|R>} An Observable of the first item that matches the
 * condition.
 * @method first
 * @owner Observable
 */
function first(predicate, resultSelector, defaultValue) {
    return function (source) { return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source)); };
}
exports.first = first;
var FirstOperator = (function () {
    function FirstOperator(predicate, resultSelector, defaultValue, source) {
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
    }
    FirstOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));
    };
    return FirstOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FirstSubscriber = (function (_super) {
    __extends(FirstSubscriber, _super);
    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
        this.index = 0;
        this.hasCompleted = false;
        this._emitted = false;
    }
    FirstSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this._tryPredicate(value, index);
        }
        else {
            this._emit(value, index);
        }
    };
    FirstSubscriber.prototype._tryPredicate = function (value, index) {
        var result;
        try {
            result = this.predicate(value, index, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this._emit(value, index);
        }
    };
    FirstSubscriber.prototype._emit = function (value, index) {
        if (this.resultSelector) {
            this._tryResultSelector(value, index);
            return;
        }
        this._emitFinal(value);
    };
    FirstSubscriber.prototype._tryResultSelector = function (value, index) {
        var result;
        try {
            result = this.resultSelector(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this._emitFinal(result);
    };
    FirstSubscriber.prototype._emitFinal = function (value) {
        var destination = this.destination;
        if (!this._emitted) {
            this._emitted = true;
            destination.next(value);
            destination.complete();
            this.hasCompleted = true;
        }
    };
    FirstSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {
            destination.next(this.defaultValue);
            destination.complete();
        }
        else if (!this.hasCompleted) {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return FirstSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=first.js.map

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var Subscription_1 = __webpack_require__(7);
var Observable_1 = __webpack_require__(0);
var Subject_1 = __webpack_require__(9);
var Map_1 = __webpack_require__(332);
var FastMap_1 = __webpack_require__(334);
/* tslint:enable:max-line-length */
/**
 * Groups the items emitted by an Observable according to a specified criterion,
 * and emits these grouped items as `GroupedObservables`, one
 * {@link GroupedObservable} per group.
 *
 * <img src="./img/groupBy.png" width="100%">
 *
 * @example <caption>Group objects by id and return as array</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs3'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *     )
 *     .groupBy(p => p.id)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // [ { id: 1, name: 'aze1' },
 * //   { id: 1, name: 'erg1' },
 * //   { id: 1, name: 'df1' } ]
 * //
 * // [ { id: 2, name: 'sf2' },
 * //   { id: 2, name: 'dg2' },
 * //   { id: 2, name: 'sfqfb2' },
 * //   { id: 2, name: 'qsgqsfg2' } ]
 * //
 * // [ { id: 3, name: 'qfs3' } ]
 *
 * @example <caption>Pivot data on the id field</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs1'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *                   )
 *     .groupBy(p => p.id, p => p.name)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], ["" + group$.key]))
 *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }
 * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }
 * // { id: 3, values: [ 'qfs1' ] }
 *
 * @param {function(value: T): K} keySelector A function that extracts the key
 * for each item.
 * @param {function(value: T): R} [elementSelector] A function that extracts the
 * return element for each item.
 * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]
 * A function that returns an Observable to determine how long each group should
 * exist.
 * @return {Observable<GroupedObservable<K,R>>} An Observable that emits
 * GroupedObservables, each of which corresponds to a unique key value and each
 * of which emits those items from the source Observable that share that key
 * value.
 * @method groupBy
 * @owner Observable
 */
function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return function (source) {
        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
    };
}
exports.groupBy = groupBy;
var GroupByOperator = (function () {
    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
    }
    GroupByOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
    };
    return GroupByOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var GroupBySubscriber = (function (_super) {
    __extends(GroupBySubscriber, _super);
    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
        this.groups = null;
        this.attemptedToUnsubscribe = false;
        this.count = 0;
    }
    GroupBySubscriber.prototype._next = function (value) {
        var key;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            this.error(err);
            return;
        }
        this._group(value, key);
    };
    GroupBySubscriber.prototype._group = function (value, key) {
        var groups = this.groups;
        if (!groups) {
            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();
        }
        var group = groups.get(key);
        var element;
        if (this.elementSelector) {
            try {
                element = this.elementSelector(value);
            }
            catch (err) {
                this.error(err);
            }
        }
        else {
            element = value;
        }
        if (!group) {
            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();
            groups.set(key, group);
            var groupedObservable = new GroupedObservable(key, group, this);
            this.destination.next(groupedObservable);
            if (this.durationSelector) {
                var duration = void 0;
                try {
                    duration = this.durationSelector(new GroupedObservable(key, group));
                }
                catch (err) {
                    this.error(err);
                    return;
                }
                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
            }
        }
        if (!group.closed) {
            group.next(element);
        }
    };
    GroupBySubscriber.prototype._error = function (err) {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.error(err);
            });
            groups.clear();
        }
        this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function () {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.complete();
            });
            groups.clear();
        }
        this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function (key) {
        this.groups.delete(key);
    };
    GroupBySubscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.attemptedToUnsubscribe = true;
            if (this.count === 0) {
                _super.prototype.unsubscribe.call(this);
            }
        }
    };
    return GroupBySubscriber;
}(Subscriber_1.Subscriber));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var GroupDurationSubscriber = (function (_super) {
    __extends(GroupDurationSubscriber, _super);
    function GroupDurationSubscriber(key, group, parent) {
        _super.call(this, group);
        this.key = key;
        this.group = group;
        this.parent = parent;
    }
    GroupDurationSubscriber.prototype._next = function (value) {
        this.complete();
    };
    GroupDurationSubscriber.prototype._unsubscribe = function () {
        var _a = this, parent = _a.parent, key = _a.key;
        this.key = this.parent = null;
        if (parent) {
            parent.removeGroup(key);
        }
    };
    return GroupDurationSubscriber;
}(Subscriber_1.Subscriber));
/**
 * An Observable representing values belonging to the same group represented by
 * a common key. The values emitted by a GroupedObservable come from the source
 * Observable. The common key is available as the field `key` on a
 * GroupedObservable instance.
 *
 * @class GroupedObservable<K, T>
 */
var GroupedObservable = (function (_super) {
    __extends(GroupedObservable, _super);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
        _super.call(this);
        this.key = key;
        this.groupSubject = groupSubject;
        this.refCountSubscription = refCountSubscription;
    }
    GroupedObservable.prototype._subscribe = function (subscriber) {
        var subscription = new Subscription_1.Subscription();
        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
        if (refCountSubscription && !refCountSubscription.closed) {
            subscription.add(new InnerRefCountSubscription(refCountSubscription));
        }
        subscription.add(groupSubject.subscribe(subscriber));
        return subscription;
    };
    return GroupedObservable;
}(Observable_1.Observable));
exports.GroupedObservable = GroupedObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var InnerRefCountSubscription = (function (_super) {
    __extends(InnerRefCountSubscription, _super);
    function InnerRefCountSubscription(parent) {
        _super.call(this);
        this.parent = parent;
        parent.count++;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function () {
        var parent = this.parent;
        if (!parent.closed && !this.closed) {
            _super.prototype.unsubscribe.call(this);
            parent.count -= 1;
            if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                parent.unsubscribe();
            }
        }
    };
    return InnerRefCountSubscription;
}(Subscription_1.Subscription));
//# sourceMappingURL=groupBy.js.map

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var noop_1 = __webpack_require__(42);
/**
 * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.
 *
 * <img src="./img/ignoreElements.png" width="100%">
 *
 * @return {Observable} An empty Observable that only calls `complete`
 * or `error`, based on which one is called by the source Observable.
 * @method ignoreElements
 * @owner Observable
 */
function ignoreElements() {
    return function ignoreElementsOperatorFunction(source) {
        return source.lift(new IgnoreElementsOperator());
    };
}
exports.ignoreElements = ignoreElements;
var IgnoreElementsOperator = (function () {
    function IgnoreElementsOperator() {
    }
    IgnoreElementsOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new IgnoreElementsSubscriber(subscriber));
    };
    return IgnoreElementsOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var IgnoreElementsSubscriber = (function (_super) {
    __extends(IgnoreElementsSubscriber, _super);
    function IgnoreElementsSubscriber() {
        _super.apply(this, arguments);
    }
    IgnoreElementsSubscriber.prototype._next = function (unused) {
        noop_1.noop();
    };
    return IgnoreElementsSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=ignoreElements.js.map

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
function isEmpty() {
    return function (source) { return source.lift(new IsEmptyOperator()); };
}
exports.isEmpty = isEmpty;
var IsEmptyOperator = (function () {
    function IsEmptyOperator() {
    }
    IsEmptyOperator.prototype.call = function (observer, source) {
        return source.subscribe(new IsEmptySubscriber(observer));
    };
    return IsEmptyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var IsEmptySubscriber = (function (_super) {
    __extends(IsEmptySubscriber, _super);
    function IsEmptySubscriber(destination) {
        _super.call(this, destination);
    }
    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
        var destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    };
    IsEmptySubscriber.prototype._next = function (value) {
        this.notifyComplete(false);
    };
    IsEmptySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return IsEmptySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=isEmpty.js.map

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var audit_1 = __webpack_require__(54);
var timer_1 = __webpack_require__(77);
/**
 * Ignores source values for `duration` milliseconds, then emits the most recent
 * value from the source Observable, then repeats this process.
 *
 * <span class="informal">When it sees a source values, it ignores that plus
 * the next ones for `duration` milliseconds, and then it emits the most recent
 * value from the source.</span>
 *
 * <img src="./img/auditTime.png" width="100%">
 *
 * `auditTime` is similar to `throttleTime`, but emits the last value from the
 * silenced time window, instead of the first value. `auditTime` emits the most
 * recent value from the source Observable on the output Observable as soon as
 * its internal timer becomes disabled, and ignores source values while the
 * timer is enabled. Initially, the timer is disabled. As soon as the first
 * source value arrives, the timer is enabled. After `duration` milliseconds (or
 * the time unit determined internally by the optional `scheduler`) has passed,
 * the timer is disabled, then the most recent source value is emitted on the
 * output Observable, and this process repeats for the next source value.
 * Optionally takes a {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.auditTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} duration Time to wait before emitting the most recent source
 * value, measured in milliseconds or the time unit determined internally
 * by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the rate-limiting behavior.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method auditTime
 * @owner Observable
 */
function auditTime(duration, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return audit_1.audit(function () { return timer_1.timer(duration, scheduler); });
}
exports.auditTime = auditTime;
//# sourceMappingURL=auditTime.js.map

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var EmptyError_1 = __webpack_require__(39);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits only the last item emitted by the source Observable.
 * It optionally takes a predicate function as a parameter, in which case, rather than emitting
 * the last item from the source Observable, the resulting Observable will emit the last item
 * from the source Observable that satisfies the predicate.
 *
 * <img src="./img/last.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {function} predicate - The condition any source emitted item has to satisfy.
 * @return {Observable} An Observable that emits only the last item satisfying the given condition
 * from the source, or an NoSuchElementException if no such items are emitted.
 * @throws - Throws if no items that match the predicate are emitted by the source Observable.
 * @method last
 * @owner Observable
 */
function last(predicate, resultSelector, defaultValue) {
    return function (source) { return source.lift(new LastOperator(predicate, resultSelector, defaultValue, source)); };
}
exports.last = last;
var LastOperator = (function () {
    function LastOperator(predicate, resultSelector, defaultValue, source) {
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
    }
    LastOperator.prototype.call = function (observer, source) {
        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));
    };
    return LastOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var LastSubscriber = (function (_super) {
    __extends(LastSubscriber, _super);
    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
        this.hasValue = false;
        this.index = 0;
        if (typeof defaultValue !== 'undefined') {
            this.lastValue = defaultValue;
            this.hasValue = true;
        }
    }
    LastSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this._tryPredicate(value, index);
        }
        else {
            if (this.resultSelector) {
                this._tryResultSelector(value, index);
                return;
            }
            this.lastValue = value;
            this.hasValue = true;
        }
    };
    LastSubscriber.prototype._tryPredicate = function (value, index) {
        var result;
        try {
            result = this.predicate(value, index, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            if (this.resultSelector) {
                this._tryResultSelector(value, index);
                return;
            }
            this.lastValue = value;
            this.hasValue = true;
        }
    };
    LastSubscriber.prototype._tryResultSelector = function (value, index) {
        var result;
        try {
            result = this.resultSelector(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.lastValue = result;
        this.hasValue = true;
    };
    LastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.hasValue) {
            destination.next(this.lastValue);
            destination.complete();
        }
        else {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return LastSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=last.js.map

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.
 *
 * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>
 *  Observable.of(1, 2, 3, 4, 5, 6)
 *     .every(x => x < 5)
 *     .subscribe(x => console.log(x)); // -> false
 *
 * @param {function} predicate A function for determining if an item meets a specified condition.
 * @param {any} [thisArg] Optional object to use for `this` in the callback.
 * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.
 * @method every
 * @owner Observable
 */
function every(predicate, thisArg) {
    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };
}
exports.every = every;
var EveryOperator = (function () {
    function EveryOperator(predicate, thisArg, source) {
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
    }
    EveryOperator.prototype.call = function (observer, source) {
        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
    };
    return EveryOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var EverySubscriber = (function (_super) {
    __extends(EverySubscriber, _super);
    function EverySubscriber(destination, predicate, thisArg, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
        this.index = 0;
        this.thisArg = thisArg || this;
    }
    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
        this.destination.next(everyValueMatch);
        this.destination.complete();
    };
    EverySubscriber.prototype._next = function (value) {
        var result = false;
        try {
            result = this.predicate.call(this.thisArg, value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (!result) {
            this.notifyComplete(false);
        }
    };
    EverySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return EverySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=every.js.map

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Emits the given constant value on the output Observable every time the source
 * Observable emits a value.
 *
 * <span class="informal">Like {@link map}, but it maps every source value to
 * the same output value every time.</span>
 *
 * <img src="./img/mapTo.png" width="100%">
 *
 * Takes a constant `value` as argument, and emits that whenever the source
 * Observable emits a value. In other words, ignores the actual source value,
 * and simply uses the emission moment to know when to emit the given `value`.
 *
 * @example <caption>Map every click to the string 'Hi'</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var greetings = clicks.mapTo('Hi');
 * greetings.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {any} value The value to map each source value to.
 * @return {Observable} An Observable that emits the given `value` every time
 * the source Observable emits something.
 * @method mapTo
 * @owner Observable
 */
function mapTo(value) {
    return function (source) { return source.lift(new MapToOperator(value)); };
}
exports.mapTo = mapTo;
var MapToOperator = (function () {
    function MapToOperator(value) {
        this.value = value;
    }
    MapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapToSubscriber(subscriber, this.value));
    };
    return MapToOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MapToSubscriber = (function (_super) {
    __extends(MapToSubscriber, _super);
    function MapToSubscriber(destination, value) {
        _super.call(this, destination);
        this.value = value;
    }
    MapToSubscriber.prototype._next = function (x) {
        this.destination.next(this.value);
    };
    return MapToSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var Notification_1 = __webpack_require__(19);
/**
 * Represents all of the notifications from the source Observable as `next`
 * emissions marked with their original types within {@link Notification}
 * objects.
 *
 * <span class="informal">Wraps `next`, `error` and `complete` emissions in
 * {@link Notification} objects, emitted as `next` on the output Observable.
 * </span>
 *
 * <img src="./img/materialize.png" width="100%">
 *
 * `materialize` returns an Observable that emits a `next` notification for each
 * `next`, `error`, or `complete` emission of the source Observable. When the
 * source Observable emits `complete`, the output Observable will emit `next` as
 * a Notification of type "complete", and then it will emit `complete` as well.
 * When the source Observable emits `error`, the output will emit `next` as a
 * Notification of type "error", and then `complete`.
 *
 * This operator is useful for producing metadata of the source Observable, to
 * be consumed as `next` emissions. Use it in conjunction with
 * {@link dematerialize}.
 *
 * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>
 * var letters = Rx.Observable.of('a', 'b', 13, 'd');
 * var upperCase = letters.map(x => x.toUpperCase());
 * var materialized = upperCase.materialize();
 * materialized.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - Notification {kind: "N", value: "A", error: undefined, hasValue: true}
 * // - Notification {kind: "N", value: "B", error: undefined, hasValue: true}
 * // - Notification {kind: "E", value: undefined, error: TypeError:
 * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x
 * //   [as project] (http://1…, hasValue: false}
 *
 * @see {@link Notification}
 * @see {@link dematerialize}
 *
 * @return {Observable<Notification<T>>} An Observable that emits
 * {@link Notification} objects that wrap the original emissions from the source
 * Observable with metadata.
 * @method materialize
 * @owner Observable
 */
function materialize() {
    return function materializeOperatorFunction(source) {
        return source.lift(new MaterializeOperator());
    };
}
exports.materialize = materialize;
var MaterializeOperator = (function () {
    function MaterializeOperator() {
    }
    MaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MaterializeSubscriber(subscriber));
    };
    return MaterializeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MaterializeSubscriber = (function (_super) {
    __extends(MaterializeSubscriber, _super);
    function MaterializeSubscriber(destination) {
        _super.call(this, destination);
    }
    MaterializeSubscriber.prototype._next = function (value) {
        this.destination.next(Notification_1.Notification.createNext(value));
    };
    MaterializeSubscriber.prototype._error = function (err) {
        var destination = this.destination;
        destination.next(Notification_1.Notification.createError(err));
        destination.complete();
    };
    MaterializeSubscriber.prototype._complete = function () {
        var destination = this.destination;
        destination.next(Notification_1.Notification.createComplete());
        destination.complete();
    };
    return MaterializeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=materialize.js.map

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var reduce_1 = __webpack_require__(26);
/**
 * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the largest value.
 *
 * <img src="./img/max.png" width="100%">
 *
 * @example <caption>Get the maximal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .max()
 *   .subscribe(x => console.log(x)); // -> 8
 *
 * @example <caption>Use a comparer function to get the maximal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'
 * }
 *
 * @see {@link min}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable} An Observable that emits item with the largest value.
 * @method max
 * @owner Observable
 */
function max(comparer) {
    var max = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
        : function (x, y) { return x > y ? x : y; };
    return reduce_1.reduce(max);
}
exports.max = max;
//# sourceMappingURL=max.js.map

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in the output Observable.
 *
 * <span class="informal">It's like {@link mergeMap}, but maps each value always
 * to the same inner Observable.</span>
 *
 * <img src="./img/mergeMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then merges those resulting Observables into one
 * single Observable, which is the output Observable.
 *
 * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable.
 * @method mergeMapTo
 * @owner Observable
 */
function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
        resultSelector = null;
    }
    return function (source) { return source.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent)); };
}
exports.mergeMapTo = mergeMapTo;
// TODO: Figure out correct signature here: an Operator<Observable<T>, R>
//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>
var MergeMapToOperator = (function () {
    function MergeMapToOperator(ish, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        this.ish = ish;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
    }
    MergeMapToOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));
    };
    return MergeMapToOperator;
}());
exports.MergeMapToOperator = MergeMapToOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeMapToSubscriber = (function (_super) {
    __extends(MergeMapToSubscriber, _super);
    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        _super.call(this, destination);
        this.ish = ish;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeMapToSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var resultSelector = this.resultSelector;
            var index = this.index++;
            var ish = this.ish;
            var destination = this.destination;
            this.active++;
            this._innerSub(ish, destination, resultSelector, value, index);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeMapToSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        var result;
        try {
            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        destination.next(result);
    };
    MergeMapToSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapToSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeMapToSubscriber = MergeMapToSubscriber;
//# sourceMappingURL=mergeMapTo.js.map

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var subscribeToResult_1 = __webpack_require__(5);
var OuterSubscriber_1 = __webpack_require__(4);
/**
 * Applies an accumulator function over the source Observable where the
 * accumulator function itself returns an Observable, then each intermediate
 * Observable returned is merged into the output Observable.
 *
 * <span class="informal">It's like {@link scan}, but the Observables returned
 * by the accumulator are merged into the outer Observable.</span>
 *
 * @example <caption>Count the number of click events</caption>
 * const click$ = Rx.Observable.fromEvent(document, 'click');
 * const one$ = click$.mapTo(1);
 * const seed = 0;
 * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);
 * count$.subscribe(x => console.log(x));
 *
 * // Results:
 * 1
 * 2
 * 3
 * 4
 * // ...and so on for each click
 *
 * @param {function(acc: R, value: T): Observable<R>} accumulator
 * The accumulator function called on each source value.
 * @param seed The initial accumulation value.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of
 * input Observables being subscribed to concurrently.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method mergeScan
 * @owner Observable
 */
function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };
}
exports.mergeScan = mergeScan;
var MergeScanOperator = (function () {
    function MergeScanOperator(accumulator, seed, concurrent) {
        this.accumulator = accumulator;
        this.seed = seed;
        this.concurrent = concurrent;
    }
    MergeScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
    };
    return MergeScanOperator;
}());
exports.MergeScanOperator = MergeScanOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeScanSubscriber = (function (_super) {
    __extends(MergeScanSubscriber, _super);
    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
        _super.call(this, destination);
        this.accumulator = accumulator;
        this.acc = acc;
        this.concurrent = concurrent;
        this.hasValue = false;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeScanSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var index = this.index++;
            var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);
            var destination = this.destination;
            if (ish === errorObject_1.errorObject) {
                destination.error(errorObject_1.errorObject.e);
            }
            else {
                this.active++;
                this._innerSub(ish, value, index);
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeScanSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var destination = this.destination;
        this.acc = innerValue;
        this.hasValue = true;
        destination.next(innerValue);
    };
    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    return MergeScanSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeScanSubscriber = MergeScanSubscriber;
//# sourceMappingURL=mergeScan.js.map

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var reduce_1 = __webpack_require__(26);
/**
 * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the smallest value.
 *
 * <img src="./img/min.png" width="100%">
 *
 * @example <caption>Get the minimal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .min()
 *   .subscribe(x => console.log(x)); // -> 2
 *
 * @example <caption>Use a comparer function to get the minimal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'
 * }
 *
 * @see {@link max}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable<R>} An Observable that emits item with the smallest value.
 * @method min
 * @owner Observable
 */
function min(comparer) {
    var min = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
        : function (x, y) { return x < y ? x : y; };
    return reduce_1.reduce(min);
}
exports.min = min;
//# sourceMappingURL=min.js.map

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var Observable_1 = __webpack_require__(0);
var Subscriber_1 = __webpack_require__(3);
var Subscription_1 = __webpack_require__(7);
var refCount_1 = __webpack_require__(57);
/**
 * @class ConnectableObservable<T>
 */
var ConnectableObservable = (function (_super) {
    __extends(ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        _super.call(this);
        this.source = source;
        this.subjectFactory = subjectFactory;
        this._refCount = 0;
        this._isComplete = false;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            this._isComplete = false;
            connection = this._connection = new Subscription_1.Subscription();
            connection.add(this.source
                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = Subscription_1.Subscription.EMPTY;
            }
            else {
                this._connection = connection;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return refCount_1.refCount()(this);
    };
    return ConnectableObservable;
}(Observable_1.Observable));
exports.ConnectableObservable = ConnectableObservable;
var connectableProto = ConnectableObservable.prototype;
exports.connectableObservableDescriptor = {
    operator: { value: null },
    _refCount: { value: 0, writable: true },
    _subject: { value: null, writable: true },
    _connection: { value: null, writable: true },
    _subscribe: { value: connectableProto._subscribe },
    _isComplete: { value: connectableProto._isComplete, writable: true },
    getSubject: { value: connectableProto.getSubject },
    connect: { value: connectableProto.connect },
    refCount: { value: connectableProto.refCount }
};
var ConnectableSubscriber = (function (_super) {
    __extends(ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this.connectable._isComplete = true;
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(Subject_1.SubjectSubscriber));
var RefCountOperator = (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = (function (_super) {
    __extends(RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        ///
        // Compare the local RefCountSubscriber's connection Subscription to the
        // connection Subscription on the shared ConnectableObservable. In cases
        // where the ConnectableObservable source synchronously emits values, and
        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,
        // execution continues to here before the RefCountOperator has a chance to
        // supply the RefCountSubscriber with the shared connection Subscription.
        // For example:
        // ```
        // Observable.range(0, 10)
        //   .publish()
        //   .refCount()
        //   .take(5)
        //   .subscribe();
        // ```
        // In order to account for this case, RefCountSubscriber should only dispose
        // the ConnectableObservable's shared connection Subscription if the
        // connection Subscription exists, *and* either:
        //   a. RefCountSubscriber doesn't have a reference to the shared connection
        //      Subscription yet, or,
        //   b. RefCountSubscriber's connection Subscription reference is identical
        //      to the shared connection Subscription
        ///
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=ConnectableObservable.js.map

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Groups pairs of consecutive emissions together and emits them as an array of
 * two values.
 *
 * <span class="informal">Puts the current value and previous value together as
 * an array, and emits that.</span>
 *
 * <img src="./img/pairwise.png" width="100%">
 *
 * The Nth emission from the source Observable will cause the output Observable
 * to emit an array [(N-1)th, Nth] of the previous and the current value, as a
 * pair. For this reason, `pairwise` emits on the second and subsequent
 * emissions from the source Observable, but not on the first emission, because
 * there is no previous value in that case.
 *
 * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var pairs = clicks.pairwise();
 * var distance = pairs.map(pair => {
 *   var x0 = pair[0].clientX;
 *   var y0 = pair[0].clientY;
 *   var x1 = pair[1].clientX;
 *   var y1 = pair[1].clientY;
 *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));
 * });
 * distance.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 *
 * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of
 * consecutive values from the source Observable.
 * @method pairwise
 * @owner Observable
 */
function pairwise() {
    return function (source) { return source.lift(new PairwiseOperator()); };
}
exports.pairwise = pairwise;
var PairwiseOperator = (function () {
    function PairwiseOperator() {
    }
    PairwiseOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new PairwiseSubscriber(subscriber));
    };
    return PairwiseOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var PairwiseSubscriber = (function (_super) {
    __extends(PairwiseSubscriber, _super);
    function PairwiseSubscriber(destination) {
        _super.call(this, destination);
        this.hasPrev = false;
    }
    PairwiseSubscriber.prototype._next = function (value) {
        if (this.hasPrev) {
            this.destination.next([this.prev, value]);
        }
        else {
            this.hasPrev = true;
        }
        this.prev = value;
    };
    return PairwiseSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=pairwise.js.map

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var not_1 = __webpack_require__(378);
var filter_1 = __webpack_require__(52);
/**
 * Splits the source Observable into two, one with values that satisfy a
 * predicate, and another with values that don't satisfy the predicate.
 *
 * <span class="informal">It's like {@link filter}, but returns two Observables:
 * one like the output of {@link filter}, and the other with values that did not
 * pass the condition.</span>
 *
 * <img src="./img/partition.png" width="100%">
 *
 * `partition` outputs an array with two Observables that partition the values
 * from the source Observable through the given `predicate` function. The first
 * Observable in that array emits source values for which the predicate argument
 * returns true. The second Observable emits source values for which the
 * predicate returns false. The first behaves like {@link filter} and the second
 * behaves like {@link filter} with the predicate negated.
 *
 * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');
 * var clicksOnDivs = parts[0];
 * var clicksElsewhere = parts[1];
 * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));
 * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));
 *
 * @see {@link filter}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted on the first Observable in the returned array, if
 * `false` the value is emitted on the second Observable in the array. The
 * `index` parameter is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {[Observable<T>, Observable<T>]} An array with two Observables: one
 * with values that passed the predicate, and another with values that did not
 * pass the predicate.
 * @method partition
 * @owner Observable
 */
function partition(predicate, thisArg) {
    return function (source) { return [
        filter_1.filter(predicate, thisArg)(source),
        filter_1.filter(not_1.not(predicate, thisArg))(source)
    ]; };
}
exports.partition = partition;
//# sourceMappingURL=partition.js.map

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var map_1 = __webpack_require__(24);
/**
 * Maps each source value (an object) to its specified nested property.
 *
 * <span class="informal">Like {@link map}, but meant only for picking one of
 * the nested properties of every emitted object.</span>
 *
 * <img src="./img/pluck.png" width="100%">
 *
 * Given a list of strings describing a path to an object property, retrieves
 * the value of a specified nested property from all values in the source
 * Observable. If a property can't be resolved, it will return `undefined` for
 * that value.
 *
 * @example <caption>Map every click to the tagName of the clicked target element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var tagNames = clicks.pluck('target', 'tagName');
 * tagNames.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {...string} properties The nested properties to pluck from each source
 * value (an object).
 * @return {Observable} A new Observable of property values from the source values.
 * @method pluck
 * @owner Observable
 */
function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i - 0] = arguments[_i];
    }
    var length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return function (source) { return map_1.map(plucker(properties, length))(source); };
}
exports.pluck = pluck;
function plucker(props, length) {
    var mapper = function (x) {
        var currentProp = x;
        for (var i = 0; i < length; i++) {
            var p = currentProp[props[i]];
            if (typeof p !== 'undefined') {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
//# sourceMappingURL=pluck.js.map

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Subject_1 = __webpack_require__(9);
var multicast_1 = __webpack_require__(16);
/* tslint:enable:max-line-length */
/**
 * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called
 * before it begins emitting items to those Observers that have subscribed to it.
 *
 * <img src="./img/publish.png" width="100%">
 *
 * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times
 * as needed, without causing multiple subscriptions to the source sequence.
 * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.
 * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.
 * @method publish
 * @owner Observable
 */
function publish(selector) {
    return selector ?
        multicast_1.multicast(function () { return new Subject_1.Subject(); }, selector) :
        multicast_1.multicast(new Subject_1.Subject());
}
exports.publish = publish;
//# sourceMappingURL=publish.js.map

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BehaviorSubject_1 = __webpack_require__(123);
var multicast_1 = __webpack_require__(16);
/**
 * @param value
 * @return {ConnectableObservable<T>}
 * @method publishBehavior
 * @owner Observable
 */
function publishBehavior(value) {
    return function (source) { return multicast_1.multicast(new BehaviorSubject_1.BehaviorSubject(value))(source); };
}
exports.publishBehavior = publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var ObjectUnsubscribedError_1 = __webpack_require__(31);
/**
 * @class BehaviorSubject<T>
 */
var BehaviorSubject = (function (_super) {
    __extends(BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        _super.call(this);
        this._value = _value;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: true,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) {
            subscriber.next(this._value);
        }
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        if (this.hasError) {
            throw this.thrownError;
        }
        else if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else {
            return this._value;
        }
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, this._value = value);
    };
    return BehaviorSubject;
}(Subject_1.Subject));
exports.BehaviorSubject = BehaviorSubject;
//# sourceMappingURL=BehaviorSubject.js.map

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ReplaySubject_1 = __webpack_require__(38);
var multicast_1 = __webpack_require__(16);
/* tslint:enable:max-line-length */
function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
        scheduler = selectorOrScheduler;
    }
    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
    var subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);
    return function (source) { return multicast_1.multicast(function () { return subject; }, selector)(source); };
}
exports.publishReplay = publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AsyncSubject_1 = __webpack_require__(32);
var multicast_1 = __webpack_require__(16);
function publishLast() {
    return function (source) { return multicast_1.multicast(new AsyncSubject_1.AsyncSubject())(source); };
}
exports.publishLast = publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray_1 = __webpack_require__(13);
var race_1 = __webpack_require__(47);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that mirrors the first source Observable to emit an item
 * from the combination of this Observable and supplied Observables.
 * @param {...Observables} ...observables Sources used to race for which Observable emits first.
 * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.
 * @method race
 * @owner Observable
 */
function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return function raceOperatorFunction(source) {
        // if the only argument is an array, it was most likely called with
        // `pair([obs1, obs2, ...])`
        if (observables.length === 1 && isArray_1.isArray(observables[0])) {
            observables = observables[0];
        }
        return source.lift.call(race_1.race.apply(void 0, [source].concat(observables)));
    };
}
exports.race = race;
//# sourceMappingURL=race.js.map

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var EmptyObservable_1 = __webpack_require__(15);
/**
 * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.
 *
 * <img src="./img/repeat.png" width="100%">
 *
 * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield
 * an empty Observable.
 * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most
 * count times.
 * @method repeat
 * @owner Observable
 */
function repeat(count) {
    if (count === void 0) { count = -1; }
    return function (source) {
        if (count === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        else if (count < 0) {
            return source.lift(new RepeatOperator(-1, source));
        }
        else {
            return source.lift(new RepeatOperator(count - 1, source));
        }
    };
}
exports.repeat = repeat;
var RepeatOperator = (function () {
    function RepeatOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RepeatOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
    };
    return RepeatOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RepeatSubscriber = (function (_super) {
    __extends(RepeatSubscriber, _super);
    function RepeatSubscriber(destination, count, source) {
        _super.call(this, destination);
        this.count = count;
        this.source = source;
    }
    RepeatSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.complete.call(this);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RepeatSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=repeat.js.map

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source
 * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable
 * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise
 * this method will resubscribe to the source Observable.
 *
 * <img src="./img/repeatWhen.png" width="100%">
 *
 * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with
 * which a user can `complete` or `error`, aborting the repetition.
 * @return {Observable} The source Observable modified with repeat logic.
 * @method repeatWhen
 * @owner Observable
 */
function repeatWhen(notifier) {
    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };
}
exports.repeatWhen = repeatWhen;
var RepeatWhenOperator = (function () {
    function RepeatWhenOperator(notifier) {
        this.notifier = notifier;
    }
    RepeatWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
    };
    return RepeatWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RepeatWhenSubscriber = (function (_super) {
    __extends(RepeatWhenSubscriber, _super);
    function RepeatWhenSubscriber(destination, notifier, source) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.source = source;
        this.sourceIsBeingSubscribedTo = true;
    }
    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.sourceIsBeingSubscribedTo = true;
        this.source.subscribe(this);
    };
    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        if (this.sourceIsBeingSubscribedTo === false) {
            return _super.prototype.complete.call(this);
        }
    };
    RepeatWhenSubscriber.prototype.complete = function () {
        this.sourceIsBeingSubscribedTo = false;
        if (!this.isStopped) {
            if (!this.retries) {
                this.subscribeToRetries();
            }
            else if (this.retriesSubscription.closed) {
                return _super.prototype.complete.call(this);
            }
            this._unsubscribeAndRecycle();
            this.notifications.next();
        }
    };
    RepeatWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
        if (notifications) {
            notifications.unsubscribe();
            this.notifications = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;
        this.notifications = null;
        this.retries = null;
        this.retriesSubscription = null;
        _super.prototype._unsubscribeAndRecycle.call(this);
        this.notifications = notifications;
        this.retries = retries;
        this.retriesSubscription = retriesSubscription;
        return this;
    };
    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
        this.notifications = new Subject_1.Subject();
        var retries = tryCatch_1.tryCatch(this.notifier)(this.notifications);
        if (retries === errorObject_1.errorObject) {
            return _super.prototype.complete.call(this);
        }
        this.retries = retries;
        this.retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);
    };
    return RepeatWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=repeatWhen.js.map

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given
 * as a number parameter) rather than propagating the `error` call.
 *
 * <img src="./img/retry.png" width="100%">
 *
 * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted
 * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second
 * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications
 * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].
 * @param {number} count - Number of retry attempts before failing.
 * @return {Observable} The source Observable modified with the retry logic.
 * @method retry
 * @owner Observable
 */
function retry(count) {
    if (count === void 0) { count = -1; }
    return function (source) { return source.lift(new RetryOperator(count, source)); };
}
exports.retry = retry;
var RetryOperator = (function () {
    function RetryOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RetryOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
    };
    return RetryOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RetrySubscriber = (function (_super) {
    __extends(RetrySubscriber, _super);
    function RetrySubscriber(destination, count, source) {
        _super.call(this, destination);
        this.count = count;
        this.source = source;
    }
    RetrySubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.error.call(this, err);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RetrySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=retry.js.map

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.
 * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child
 * subscription. Otherwise this method will resubscribe to the source Observable.
 *
 * <img src="./img/retryWhen.png" width="100%">
 *
 * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a
 * user can `complete` or `error`, aborting the retry.
 * @return {Observable} The source Observable modified with retry logic.
 * @method retryWhen
 * @owner Observable
 */
function retryWhen(notifier) {
    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };
}
exports.retryWhen = retryWhen;
var RetryWhenOperator = (function () {
    function RetryWhenOperator(notifier, source) {
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
    };
    return RetryWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RetryWhenSubscriber = (function (_super) {
    __extends(RetryWhenSubscriber, _super);
    function RetryWhenSubscriber(destination, notifier, source) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var errors = this.errors;
            var retries = this.retries;
            var retriesSubscription = this.retriesSubscription;
            if (!retries) {
                errors = new Subject_1.Subject();
                retries = tryCatch_1.tryCatch(this.notifier)(errors);
                if (retries === errorObject_1.errorObject) {
                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);
                }
                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);
            }
            else {
                this.errors = null;
                this.retriesSubscription = null;
            }
            this._unsubscribeAndRecycle();
            this.errors = errors;
            this.retries = retries;
            this.retriesSubscription = retriesSubscription;
            errors.next(err);
        }
    };
    RetryWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
        if (errors) {
            errors.unsubscribe();
            this.errors = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;
        this.errors = null;
        this.retries = null;
        this.retriesSubscription = null;
        this._unsubscribeAndRecycle();
        this.errors = errors;
        this.retries = retries;
        this.retriesSubscription = retriesSubscription;
        this.source.subscribe(this);
    };
    return RetryWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=retryWhen.js.map

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Emits the most recently emitted value from the source Observable whenever
 * another Observable, the `notifier`, emits.
 *
 * <span class="informal">It's like {@link sampleTime}, but samples whenever
 * the `notifier` Observable emits something.</span>
 *
 * <img src="./img/sample.png" width="100%">
 *
 * Whenever the `notifier` Observable emits a value or completes, `sample`
 * looks at the source Observable and emits whichever value it has most recently
 * emitted since the previous sampling, unless the source has not emitted
 * anything since the previous sampling. The `notifier` is subscribed to as soon
 * as the output Observable is subscribed.
 *
 * @example <caption>On every click, sample the most recent "seconds" timer</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = seconds.sample(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {Observable<any>} notifier The Observable to use for sampling the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable whenever the notifier Observable
 * emits value or completes.
 * @method sample
 * @owner Observable
 */
function sample(notifier) {
    return function (source) { return source.lift(new SampleOperator(notifier)); };
}
exports.sample = sample;
var SampleOperator = (function () {
    function SampleOperator(notifier) {
        this.notifier = notifier;
    }
    SampleOperator.prototype.call = function (subscriber, source) {
        var sampleSubscriber = new SampleSubscriber(subscriber);
        var subscription = source.subscribe(sampleSubscriber);
        subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber, this.notifier));
        return subscription;
    };
    return SampleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SampleSubscriber = (function (_super) {
    __extends(SampleSubscriber, _super);
    function SampleSubscriber() {
        _super.apply(this, arguments);
        this.hasValue = false;
    }
    SampleSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
    };
    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    SampleSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.value);
        }
    };
    return SampleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=sample.js.map

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var async_1 = __webpack_require__(6);
/**
 * Emits the most recently emitted value from the source Observable within
 * periodic time intervals.
 *
 * <span class="informal">Samples the source Observable at periodic time
 * intervals, emitting what it samples.</span>
 *
 * <img src="./img/sampleTime.png" width="100%">
 *
 * `sampleTime` periodically looks at the source Observable and emits whichever
 * value it has most recently emitted since the previous sampling, unless the
 * source has not emitted anything since the previous sampling. The sampling
 * happens periodically in time every `period` milliseconds (or the time unit
 * defined by the optional `scheduler` argument). The sampling starts as soon as
 * the output Observable is subscribed.
 *
 * @example <caption>Every second, emit the most recent click at most once</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.sampleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {number} period The sampling period expressed in milliseconds or the
 * time unit determined internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the sampling.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable at the specified time interval.
 * @method sampleTime
 * @owner Observable
 */
function sampleTime(period, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };
}
exports.sampleTime = sampleTime;
var SampleTimeOperator = (function () {
    function SampleTimeOperator(period, scheduler) {
        this.period = period;
        this.scheduler = scheduler;
    }
    SampleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
    };
    return SampleTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SampleTimeSubscriber = (function (_super) {
    __extends(SampleTimeSubscriber, _super);
    function SampleTimeSubscriber(destination, period, scheduler) {
        _super.call(this, destination);
        this.period = period;
        this.scheduler = scheduler;
        this.hasValue = false;
        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));
    }
    SampleTimeSubscriber.prototype._next = function (value) {
        this.lastValue = value;
        this.hasValue = true;
    };
    SampleTimeSubscriber.prototype.notifyNext = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.lastValue);
        }
    };
    return SampleTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNotification(state) {
    var subscriber = state.subscriber, period = state.period;
    subscriber.notifyNext();
    this.schedule(state, period);
}
//# sourceMappingURL=sampleTime.js.map

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
/**
 * Compares all values of two observables in sequence using an optional comparor function
 * and returns an observable of a single boolean value representing whether or not the two sequences
 * are equal.
 *
 * <span class="informal">Checks to see of all values emitted by both observables are equal, in order.</span>
 *
 * <img src="./img/sequenceEqual.png" width="100%">
 *
 * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either
 * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom
 * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the
 * observables completes, the operator will wait for the other observable to complete; If the other
 * observable emits before completing, the returned observable will emit `false` and complete. If one observable never
 * completes or emits after the other complets, the returned observable will never complete.
 *
 * @example <caption>figure out if the Konami code matches</caption>
 * var code = Rx.Observable.from([
 *  "ArrowUp",
 *  "ArrowUp",
 *  "ArrowDown",
 *  "ArrowDown",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "KeyB",
 *  "KeyA",
 *  "Enter" // no start key, clearly.
 * ]);
 *
 * var keys = Rx.Observable.fromEvent(document, 'keyup')
 *  .map(e => e.code);
 * var matches = keys.bufferCount(11, 1)
 *  .mergeMap(
 *    last11 =>
 *      Rx.Observable.from(last11)
 *        .sequenceEqual(code)
 *   );
 * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));
 *
 * @see {@link combineLatest}
 * @see {@link zip}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} compareTo The observable sequence to compare the source sequence to.
 * @param {function} [comparor] An optional function to compare each value pair
 * @return {Observable} An Observable of a single boolean value representing whether or not
 * the values emitted by both observables were equal in sequence.
 * @method sequenceEqual
 * @owner Observable
 */
function sequenceEqual(compareTo, comparor) {
    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparor)); };
}
exports.sequenceEqual = sequenceEqual;
var SequenceEqualOperator = (function () {
    function SequenceEqualOperator(compareTo, comparor) {
        this.compareTo = compareTo;
        this.comparor = comparor;
    }
    SequenceEqualOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));
    };
    return SequenceEqualOperator;
}());
exports.SequenceEqualOperator = SequenceEqualOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SequenceEqualSubscriber = (function (_super) {
    __extends(SequenceEqualSubscriber, _super);
    function SequenceEqualSubscriber(destination, compareTo, comparor) {
        _super.call(this, destination);
        this.compareTo = compareTo;
        this.comparor = comparor;
        this._a = [];
        this._b = [];
        this._oneComplete = false;
        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));
    }
    SequenceEqualSubscriber.prototype._next = function (value) {
        if (this._oneComplete && this._b.length === 0) {
            this.emit(false);
        }
        else {
            this._a.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype._complete = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
    };
    SequenceEqualSubscriber.prototype.checkValues = function () {
        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;
        while (_a.length > 0 && _b.length > 0) {
            var a = _a.shift();
            var b = _b.shift();
            var areEqual = false;
            if (comparor) {
                areEqual = tryCatch_1.tryCatch(comparor)(a, b);
                if (areEqual === errorObject_1.errorObject) {
                    this.destination.error(errorObject_1.errorObject.e);
                }
            }
            else {
                areEqual = a === b;
            }
            if (!areEqual) {
                this.emit(false);
            }
        }
    };
    SequenceEqualSubscriber.prototype.emit = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    SequenceEqualSubscriber.prototype.nextB = function (value) {
        if (this._oneComplete && this._a.length === 0) {
            this.emit(false);
        }
        else {
            this._b.push(value);
            this.checkValues();
        }
    };
    return SequenceEqualSubscriber;
}(Subscriber_1.Subscriber));
exports.SequenceEqualSubscriber = SequenceEqualSubscriber;
var SequenceEqualCompareToSubscriber = (function (_super) {
    __extends(SequenceEqualCompareToSubscriber, _super);
    function SequenceEqualCompareToSubscriber(destination, parent) {
        _super.call(this, destination);
        this.parent = parent;
    }
    SequenceEqualCompareToSubscriber.prototype._next = function (value) {
        this.parent.nextB(value);
    };
    SequenceEqualCompareToSubscriber.prototype._error = function (err) {
        this.parent.error(err);
    };
    SequenceEqualCompareToSubscriber.prototype._complete = function () {
        this.parent._complete();
    };
    return SequenceEqualCompareToSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=sequenceEqual.js.map

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var multicast_1 = __webpack_require__(16);
var refCount_1 = __webpack_require__(57);
var Subject_1 = __webpack_require__(9);
function shareSubjectFactory() {
    return new Subject_1.Subject();
}
/**
 * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one
 * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will
 * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.
 * This is an alias for .multicast(() => new Subject()).refCount().
 *
 * <img src="./img/share.png" width="100%">
 *
 * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.
 * @method share
 * @owner Observable
 */
function share() {
    return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };
}
exports.share = share;
;
//# sourceMappingURL=share.js.map

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ReplaySubject_1 = __webpack_require__(38);
/**
 * @method shareReplay
 * @owner Observable
 */
function shareReplay(bufferSize, windowTime, scheduler) {
    return function (source) { return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler)); };
}
exports.shareReplay = shareReplay;
function shareReplayOperator(bufferSize, windowTime, scheduler) {
    var subject;
    var refCount = 0;
    var subscription;
    var hasError = false;
    var isComplete = false;
    return function shareReplayOperation(source) {
        refCount++;
        if (!subject || hasError) {
            hasError = false;
            subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);
            subscription = source.subscribe({
                next: function (value) { subject.next(value); },
                error: function (err) {
                    hasError = true;
                    subject.error(err);
                },
                complete: function () {
                    isComplete = true;
                    subject.complete();
                },
            });
        }
        var innerSub = subject.subscribe(this);
        return function () {
            refCount--;
            innerSub.unsubscribe();
            if (subscription && refCount === 0 && isComplete) {
                subscription.unsubscribe();
            }
        };
    };
}
;
//# sourceMappingURL=shareReplay.js.map

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var EmptyError_1 = __webpack_require__(39);
/**
 * Returns an Observable that emits the single item emitted by the source Observable that matches a specified
 * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no
 * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.
 *
 * <img src="./img/single.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches
 * the predicate.
 .
 * @method single
 * @owner Observable
 */
function single(predicate) {
    return function (source) { return source.lift(new SingleOperator(predicate, source)); };
}
exports.single = single;
var SingleOperator = (function () {
    function SingleOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    SingleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
    };
    return SingleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SingleSubscriber = (function (_super) {
    __extends(SingleSubscriber, _super);
    function SingleSubscriber(destination, predicate, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.seenValue = false;
        this.index = 0;
    }
    SingleSubscriber.prototype.applySingleValue = function (value) {
        if (this.seenValue) {
            this.destination.error('Sequence contains more than one element');
        }
        else {
            this.seenValue = true;
            this.singleValue = value;
        }
    };
    SingleSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this.tryNext(value, index);
        }
        else {
            this.applySingleValue(value);
        }
    };
    SingleSubscriber.prototype.tryNext = function (value, index) {
        try {
            if (this.predicate(value, index, this.source)) {
                this.applySingleValue(value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    SingleSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index > 0) {
            destination.next(this.seenValue ? this.singleValue : undefined);
            destination.complete();
        }
        else {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return SingleSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=single.js.map

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Returns an Observable that skips the first `count` items emitted by the source Observable.
 *
 * <img src="./img/skip.png" width="100%">
 *
 * @param {Number} count - The number of times, items emitted by source Observable should be skipped.
 * @return {Observable} An Observable that skips values emitted by the source Observable.
 *
 * @method skip
 * @owner Observable
 */
function skip(count) {
    return function (source) { return source.lift(new SkipOperator(count)); };
}
exports.skip = skip;
var SkipOperator = (function () {
    function SkipOperator(total) {
        this.total = total;
    }
    SkipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipSubscriber(subscriber, this.total));
    };
    return SkipOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipSubscriber = (function (_super) {
    __extends(SkipSubscriber, _super);
    function SkipSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.count = 0;
    }
    SkipSubscriber.prototype._next = function (x) {
        if (++this.count > this.total) {
            this.destination.next(x);
        }
    };
    return SkipSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=skip.js.map

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var ArgumentOutOfRangeError_1 = __webpack_require__(25);
/**
 * Skip the last `count` values emitted by the source Observable.
 *
 * <img src="./img/skipLast.png" width="100%">
 *
 * `skipLast` returns an Observable that accumulates a queue with a length
 * enough to store the first `count` values. As more values are received,
 * values are taken from the front of the queue and produced on the result
 * sequence. This causes values to be delayed.
 *
 * @example <caption>Skip the last 2 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 5);
 * var skipLastTwo = many.skipLast(2);
 * skipLastTwo.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 1 2 3
 *
 * @see {@link skip}
 * @see {@link skipUntil}
 * @see {@link skipWhile}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws
 * ArgumentOutOrRangeError if `i < 0`.
 *
 * @param {number} count Number of elements to skip from the end of the source Observable.
 * @returns {Observable<T>} An Observable that skips the last count values
 * emitted by the source Observable.
 * @method skipLast
 * @owner Observable
 */
function skipLast(count) {
    return function (source) { return source.lift(new SkipLastOperator(count)); };
}
exports.skipLast = skipLast;
var SkipLastOperator = (function () {
    function SkipLastOperator(_skipCount) {
        this._skipCount = _skipCount;
        if (this._skipCount < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    SkipLastOperator.prototype.call = function (subscriber, source) {
        if (this._skipCount === 0) {
            // If we don't want to skip any values then just subscribe
            // to Subscriber without any further logic.
            return source.subscribe(new Subscriber_1.Subscriber(subscriber));
        }
        else {
            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
        }
    };
    return SkipLastOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipLastSubscriber = (function (_super) {
    __extends(SkipLastSubscriber, _super);
    function SkipLastSubscriber(destination, _skipCount) {
        _super.call(this, destination);
        this._skipCount = _skipCount;
        this._count = 0;
        this._ring = new Array(_skipCount);
    }
    SkipLastSubscriber.prototype._next = function (value) {
        var skipCount = this._skipCount;
        var count = this._count++;
        if (count < skipCount) {
            this._ring[count] = value;
        }
        else {
            var currentIndex = count % skipCount;
            var ring = this._ring;
            var oldValue = ring[currentIndex];
            ring[currentIndex] = value;
            this.destination.next(oldValue);
        }
    };
    return SkipLastSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=skipLast.js.map

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.
 *
 * <img src="./img/skipUntil.png" width="100%">
 *
 * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to
 * be mirrored by the resulting Observable.
 * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits
 * an item, then emits the remaining items.
 * @method skipUntil
 * @owner Observable
 */
function skipUntil(notifier) {
    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };
}
exports.skipUntil = skipUntil;
var SkipUntilOperator = (function () {
    function SkipUntilOperator(notifier) {
        this.notifier = notifier;
    }
    SkipUntilOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));
    };
    return SkipUntilOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipUntilSubscriber = (function (_super) {
    __extends(SkipUntilSubscriber, _super);
    function SkipUntilSubscriber(destination, notifier) {
        _super.call(this, destination);
        this.hasValue = false;
        this.isInnerStopped = false;
        this.add(subscribeToResult_1.subscribeToResult(this, notifier));
    }
    SkipUntilSubscriber.prototype._next = function (value) {
        if (this.hasValue) {
            _super.prototype._next.call(this, value);
        }
    };
    SkipUntilSubscriber.prototype._complete = function () {
        if (this.isInnerStopped) {
            _super.prototype._complete.call(this);
        }
        else {
            this.unsubscribe();
        }
    };
    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.hasValue = true;
    };
    SkipUntilSubscriber.prototype.notifyComplete = function () {
        this.isInnerStopped = true;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    return SkipUntilSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=skipUntil.js.map

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds
 * true, but emits all further source items as soon as the condition becomes false.
 *
 * <img src="./img/skipWhile.png" width="100%">
 *
 * @param {Function} predicate - A function to test each item emitted from the source Observable.
 * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the
 * specified predicate becomes false.
 * @method skipWhile
 * @owner Observable
 */
function skipWhile(predicate) {
    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };
}
exports.skipWhile = skipWhile;
var SkipWhileOperator = (function () {
    function SkipWhileOperator(predicate) {
        this.predicate = predicate;
    }
    SkipWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
    };
    return SkipWhileOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipWhileSubscriber = (function (_super) {
    __extends(SkipWhileSubscriber, _super);
    function SkipWhileSubscriber(destination, predicate) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.skipping = true;
        this.index = 0;
    }
    SkipWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (this.skipping) {
            this.tryCallPredicate(value);
        }
        if (!this.skipping) {
            destination.next(value);
        }
    };
    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
        try {
            var result = this.predicate(value, this.index++);
            this.skipping = Boolean(result);
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    return SkipWhileSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=skipWhile.js.map

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayObservable_1 = __webpack_require__(14);
var ScalarObservable_1 = __webpack_require__(43);
var EmptyObservable_1 = __webpack_require__(15);
var concat_1 = __webpack_require__(44);
var isScheduler_1 = __webpack_require__(12);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits the items you specify as arguments before it begins to emit
 * items emitted by the source Observable.
 *
 * <img src="./img/startWith.png" width="100%">
 *
 * @param {...T} values - Items you want the modified Observable to emit first.
 * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling
 * the emissions of the `next` notifications.
 * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items
 * emitted by the source Observable.
 * @method startWith
 * @owner Observable
 */
function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i - 0] = arguments[_i];
    }
    return function (source) {
        var scheduler = array[array.length - 1];
        if (isScheduler_1.isScheduler(scheduler)) {
            array.pop();
        }
        else {
            scheduler = null;
        }
        var len = array.length;
        if (len === 1) {
            return concat_1.concat(new ScalarObservable_1.ScalarObservable(array[0], scheduler), source);
        }
        else if (len > 1) {
            return concat_1.concat(new ArrayObservable_1.ArrayObservable(array, scheduler), source);
        }
        else {
            return concat_1.concat(new EmptyObservable_1.EmptyObservable(scheduler), source);
        }
    };
}
exports.startWith = startWith;
//# sourceMappingURL=startWith.js.map

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AsapAction_1 = __webpack_require__(429);
var AsapScheduler_1 = __webpack_require__(433);
/**
 *
 * Asap Scheduler
 *
 * <span class="informal">Perform task as fast as it can be performed asynchronously</span>
 *
 * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task
 * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing
 * code to end and then it will try to execute given task as fast as possible.
 *
 * `asap` scheduler will do its best to minimize time between end of currently executing code
 * and start of scheduled task. This makes it best candidate for performing so called "deferring".
 * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves
 * some (although minimal) unwanted delay.
 *
 * Note that using `asap` scheduler does not necessarily mean that your task will be first to process
 * after currently executing code. In particular, if some task was also scheduled with `asap` before,
 * that task will execute first. That being said, if you need to schedule task asynchronously, but
 * as soon as possible, `asap` scheduler is your best bet.
 *
 * @example <caption>Compare async and asap scheduler</caption>
 *
 * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...
 * Rx.Scheduler.asap.schedule(() => console.log('asap'));
 *
 * // Logs:
 * // "asap"
 * // "async"
 * // ... but 'asap' goes first!
 *
 * @static true
 * @name asap
 * @owner Scheduler
 */
exports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);
//# sourceMappingURL=asap.js.map

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(431);
exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var switchMap_1 = __webpack_require__(58);
var identity_1 = __webpack_require__(74);
function switchAll() {
    return switchMap_1.switchMap(identity_1.identity);
}
exports.switchAll = switchAll;
//# sourceMappingURL=switchAll.js.map

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is flattened multiple
 * times with {@link switch} in the output Observable.
 *
 * <span class="informal">It's like {@link switchMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/switchMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. The output Observables
 * emits values only from the most recently emitted instance of
 * `innerObservable`.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link switch}
 * @see {@link switchMap}
 * @see {@link mergeMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable, and taking only the values
 * from the most recently projected inner Observable.
 * @method switchMapTo
 * @owner Observable
 */
function switchMapTo(innerObservable, resultSelector) {
    return function (source) { return source.lift(new SwitchMapToOperator(innerObservable, resultSelector)); };
}
exports.switchMapTo = switchMapTo;
var SwitchMapToOperator = (function () {
    function SwitchMapToOperator(observable, resultSelector) {
        this.observable = observable;
        this.resultSelector = resultSelector;
    }
    SwitchMapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));
    };
    return SwitchMapToOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchMapToSubscriber = (function (_super) {
    __extends(SwitchMapToSubscriber, _super);
    function SwitchMapToSubscriber(destination, inner, resultSelector) {
        _super.call(this, destination);
        this.inner = inner;
        this.resultSelector = resultSelector;
        this.index = 0;
    }
    SwitchMapToSubscriber.prototype._next = function (value) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));
    };
    SwitchMapToSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapToSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        var result;
        try {
            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        destination.next(result);
    };
    return SwitchMapToSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=switchMapTo.js.map

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var ArgumentOutOfRangeError_1 = __webpack_require__(25);
var EmptyObservable_1 = __webpack_require__(15);
/**
 * Emits only the first `count` values emitted by the source Observable.
 *
 * <span class="informal">Takes the first `count` values from the source, then
 * completes.</span>
 *
 * <img src="./img/take.png" width="100%">
 *
 * `take` returns an Observable that emits only the first `count` values emitted
 * by the source Observable. If the source emits fewer than `count` values then
 * all of its values are emitted. After that, it completes, regardless if the
 * source completes.
 *
 * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>
 * var interval = Rx.Observable.interval(1000);
 * var five = interval.take(5);
 * five.subscribe(x => console.log(x));
 *
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of `next` values to emit.
 * @return {Observable<T>} An Observable that emits only the first `count`
 * values emitted by the source Observable, or all of the values from the source
 * if the source emits fewer than `count` values.
 * @method take
 * @owner Observable
 */
function take(count) {
    return function (source) {
        if (count === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        else {
            return source.lift(new TakeOperator(count));
        }
    };
}
exports.take = take;
var TakeOperator = (function () {
    function TakeOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    TakeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeSubscriber(subscriber, this.total));
    };
    return TakeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeSubscriber = (function (_super) {
    __extends(TakeSubscriber, _super);
    function TakeSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.count = 0;
    }
    TakeSubscriber.prototype._next = function (value) {
        var total = this.total;
        var count = ++this.count;
        if (count <= total) {
            this.destination.next(value);
            if (count === total) {
                this.destination.complete();
                this.unsubscribe();
            }
        }
    };
    return TakeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=take.js.map

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Emits the values emitted by the source Observable until a `notifier`
 * Observable emits a value.
 *
 * <span class="informal">Lets values pass until a second Observable,
 * `notifier`, emits something. Then, it completes.</span>
 *
 * <img src="./img/takeUntil.png" width="100%">
 *
 * `takeUntil` subscribes and begins mirroring the source Observable. It also
 * monitors a second Observable, `notifier` that you provide. If the `notifier`
 * emits a value or a complete notification, the output Observable stops
 * mirroring the source Observable and completes.
 *
 * @example <caption>Tick every second until the first click happens</caption>
 * var interval = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = interval.takeUntil(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @param {Observable} notifier The Observable whose first emitted value will
 * cause the output Observable of `takeUntil` to stop emitting values from the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable until such time as `notifier` emits its first value.
 * @method takeUntil
 * @owner Observable
 */
function takeUntil(notifier) {
    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };
}
exports.takeUntil = takeUntil;
var TakeUntilOperator = (function () {
    function TakeUntilOperator(notifier) {
        this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));
    };
    return TakeUntilOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeUntilSubscriber = (function (_super) {
    __extends(TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination, notifier) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.add(subscribeToResult_1.subscribeToResult(this, notifier));
    }
    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.complete();
    };
    TakeUntilSubscriber.prototype.notifyComplete = function () {
        // noop
    };
    return TakeUntilSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=takeUntil.js.map

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * Emits values emitted by the source Observable so long as each value satisfies
 * the given `predicate`, and then completes as soon as this `predicate` is not
 * satisfied.
 *
 * <span class="informal">Takes values from the source only while they pass the
 * condition given. When the first value does not satisfy, it completes.</span>
 *
 * <img src="./img/takeWhile.png" width="100%">
 *
 * `takeWhile` subscribes and begins mirroring the source Observable. Each value
 * emitted on the source is given to the `predicate` function which returns a
 * boolean, representing a condition to be satisfied by the source values. The
 * output Observable emits the source values until such time as the `predicate`
 * returns false, at which point `takeWhile` stops mirroring the source
 * Observable and completes the output Observable.
 *
 * @example <caption>Emit click events only while the clientX property is greater than 200</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.takeWhile(ev => ev.clientX > 200);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates a value emitted by the source Observable and returns a boolean.
 * Also takes the (zero-based) index as the second argument.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable so long as each value satisfies the condition defined by the
 * `predicate`, then completes.
 * @method takeWhile
 * @owner Observable
 */
function takeWhile(predicate) {
    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };
}
exports.takeWhile = takeWhile;
var TakeWhileOperator = (function () {
    function TakeWhileOperator(predicate) {
        this.predicate = predicate;
    }
    TakeWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));
    };
    return TakeWhileOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeWhileSubscriber = (function (_super) {
    __extends(TakeWhileSubscriber, _super);
    function TakeWhileSubscriber(destination, predicate) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.index = 0;
    }
    TakeWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        var result;
        try {
            result = this.predicate(value, this.index++);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this.nextOrComplete(value, result);
    };
    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
        var destination = this.destination;
        if (Boolean(predicateResult)) {
            destination.next(value);
        }
        else {
            destination.complete();
        }
    };
    return TakeWhileSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=takeWhile.js.map

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var async_1 = __webpack_require__(6);
var throttle_1 = __webpack_require__(40);
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for `duration` milliseconds, then repeats this process.
 *
 * <span class="informal">Lets a value pass, then ignores source values for the
 * next `duration` milliseconds.</span>
 *
 * <img src="./img/throttleTime.png" width="100%">
 *
 * `throttleTime` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled. After `duration` milliseconds (or the time unit determined
 * internally by the optional `scheduler`) has passed, the timer is disabled,
 * and this process repeats for the next source value. Optionally takes a
 * {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {number} duration Time to wait before emitting another value after
 * emitting the last value, measured in milliseconds or the time unit determined
 * internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the throttling.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttleTime
 * @owner Observable
 */
function throttleTime(duration, scheduler, config) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }
    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };
}
exports.throttleTime = throttleTime;
var ThrottleTimeOperator = (function () {
    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
        this.duration = duration;
        this.scheduler = scheduler;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
    };
    return ThrottleTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ThrottleTimeSubscriber = (function (_super) {
    __extends(ThrottleTimeSubscriber, _super);
    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
        _super.call(this, destination);
        this.duration = duration;
        this.scheduler = scheduler;
        this.leading = leading;
        this.trailing = trailing;
        this._hasTrailingValue = false;
        this._trailingValue = null;
    }
    ThrottleTimeSubscriber.prototype._next = function (value) {
        if (this.throttled) {
            if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
        else {
            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));
            if (this.leading) {
                this.destination.next(value);
            }
        }
    };
    ThrottleTimeSubscriber.prototype.clearThrottle = function () {
        var throttled = this.throttled;
        if (throttled) {
            if (this.trailing && this._hasTrailingValue) {
                this.destination.next(this._trailingValue);
                this._trailingValue = null;
                this._hasTrailingValue = false;
            }
            throttled.unsubscribe();
            this.remove(throttled);
            this.throttled = null;
        }
    };
    return ThrottleTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNext(arg) {
    var subscriber = arg.subscriber;
    subscriber.clearThrottle();
}
//# sourceMappingURL=throttleTime.js.map

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var timeInterval_1 = __webpack_require__(151);
exports.TimeInterval = timeInterval_1.TimeInterval;
/**
 * @param scheduler
 * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timeInterval
 * @owner Observable
 */
function timeInterval(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return timeInterval_1.timeInterval(scheduler)(this);
}
exports.timeInterval = timeInterval;
//# sourceMappingURL=timeInterval.js.map

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var async_1 = __webpack_require__(6);
function timeInterval(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return function (source) { return source.lift(new TimeIntervalOperator(scheduler)); };
}
exports.timeInterval = timeInterval;
var TimeInterval = (function () {
    function TimeInterval(value, interval) {
        this.value = value;
        this.interval = interval;
    }
    return TimeInterval;
}());
exports.TimeInterval = TimeInterval;
;
var TimeIntervalOperator = (function () {
    function TimeIntervalOperator(scheduler) {
        this.scheduler = scheduler;
    }
    TimeIntervalOperator.prototype.call = function (observer, source) {
        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));
    };
    return TimeIntervalOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeIntervalSubscriber = (function (_super) {
    __extends(TimeIntervalSubscriber, _super);
    function TimeIntervalSubscriber(destination, scheduler) {
        _super.call(this, destination);
        this.scheduler = scheduler;
        this.lastTime = 0;
        this.lastTime = scheduler.now();
    }
    TimeIntervalSubscriber.prototype._next = function (value) {
        var now = this.scheduler.now();
        var span = now - this.lastTime;
        this.lastTime = now;
        this.destination.next(new TimeInterval(value, span));
    };
    return TimeIntervalSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=timeInterval.js.map

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(6);
var isDate_1 = __webpack_require__(36);
var Subscriber_1 = __webpack_require__(3);
var TimeoutError_1 = __webpack_require__(153);
/**
 *
 * Errors if Observable does not emit a value in given time span.
 *
 * <span class="informal">Timeouts on Observable that doesn't emit values fast enough.</span>
 *
 * <img src="./img/timeout.png" width="100%">
 *
 * `timeout` operator accepts as an argument either a number or a Date.
 *
 * If number was provided, it returns an Observable that behaves like a source
 * Observable, unless there is a period of time where there is no value emitted.
 * So if you provide `100` as argument and first value comes after 50ms from
 * the moment of subscription, this value will be simply re-emitted by the resulting
 * Observable. If however after that 100ms passes without a second value being emitted,
 * stream will end with an error and source Observable will be unsubscribed.
 * These checks are performed throughout whole lifecycle of Observable - from the moment
 * it was subscribed to, until it completes or errors itself. Thus every value must be
 * emitted within specified period since previous value.
 *
 * If provided argument was Date, returned Observable behaves differently. It throws
 * if Observable did not complete before provided Date. This means that periods between
 * emission of particular values do not matter in this case. If Observable did not complete
 * before provided Date, source Observable will be unsubscribed. Other than that, resulting
 * stream behaves just as source Observable.
 *
 * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)
 * when returned Observable will check if source stream emitted value or completed.
 *
 * @example <caption>Check if ticks are emitted within certain timespan</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(1100) // Let's use bigger timespan to be safe,
 *                       // since `interval` might fire a bit later then scheduled.
 * .subscribe(
 *     value => console.log(value), // Will emit numbers just as regular `interval` would.
 *     err => console.log(err) // Will never be called.
 * );
 *
 * seconds.timeout(900).subscribe(
 *     value => console.log(value), // Will never be called.
 *     err => console.log(err) // Will emit error before even first value is emitted,
 *                             // since it did not arrive within 900ms period.
 * );
 *
 * @example <caption>Use Date to check if Observable completed</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(new Date("December 17, 2020 03:24:00"))
 * .subscribe(
 *     value => console.log(value), // Will emit values as regular `interval` would
 *                                  // until December 17, 2020 at 03:24:00.
 *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,
 *                             // since Observable did not complete by then.
 * );
 *
 * @see {@link timeoutWith}
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.
 * @method timeout
 * @owner Observable
 */
function timeout(due, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    var absoluteTimeout = isDate_1.isDate(due);
    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
    return function (source) { return source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError_1.TimeoutError())); };
}
exports.timeout = timeout;
var TimeoutOperator = (function () {
    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.scheduler = scheduler;
        this.errorInstance = errorInstance;
    }
    TimeoutOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));
    };
    return TimeoutOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeoutSubscriber = (function (_super) {
    __extends(TimeoutSubscriber, _super);
    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {
        _super.call(this, destination);
        this.absoluteTimeout = absoluteTimeout;
        this.waitFor = waitFor;
        this.scheduler = scheduler;
        this.errorInstance = errorInstance;
        this.action = null;
        this.scheduleTimeout();
    }
    TimeoutSubscriber.dispatchTimeout = function (subscriber) {
        subscriber.error(subscriber.errorInstance);
    };
    TimeoutSubscriber.prototype.scheduleTimeout = function () {
        var action = this.action;
        if (action) {
            // Recycle the action if we've already scheduled one. All the production
            // Scheduler Actions mutate their state/delay time and return themeselves.
            // VirtualActions are immutable, so they create and return a clone. In this
            // case, we need to set the action reference to the most recent VirtualAction,
            // to ensure that's the one we clone from next time.
            this.action = action.schedule(this, this.waitFor);
        }
        else {
            this.add(this.action = this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, this));
        }
    };
    TimeoutSubscriber.prototype._next = function (value) {
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
        _super.prototype._next.call(this, value);
    };
    TimeoutSubscriber.prototype._unsubscribe = function () {
        this.action = null;
        this.scheduler = null;
        this.errorInstance = null;
    };
    return TimeoutSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=timeout.js.map

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when duetime elapses.
 *
 * @see {@link timeout}
 *
 * @class TimeoutError
 */
var TimeoutError = (function (_super) {
    __extends(TimeoutError, _super);
    function TimeoutError() {
        var err = _super.call(this, 'Timeout has occurred');
        this.name = err.name = 'TimeoutError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return TimeoutError;
}(Error));
exports.TimeoutError = TimeoutError;
//# sourceMappingURL=TimeoutError.js.map

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(6);
var isDate_1 = __webpack_require__(36);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/* tslint:enable:max-line-length */
/**
 *
 * Errors if Observable does not emit a value in given time span, in case of which
 * subscribes to the second Observable.
 *
 * <span class="informal">It's a version of `timeout` operator that let's you specify fallback Observable.</span>
 *
 * <img src="./img/timeoutWith.png" width="100%">
 *
 * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,
 * still accepting as a first argument either a number or a Date, which control - respectively -
 * when values of source Observable should be emitted or when it should complete.
 *
 * The only difference is that it accepts a second, required parameter. This parameter
 * should be an Observable which will be subscribed when source Observable fails any timeout check.
 * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting
 * values from second Observable. Note that this fallback Observable is not checked for timeouts
 * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second
 * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that
 * stream completes, it completes as well.
 *
 * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided
 * here - as a third, optional parameter. It still is used to schedule timeout checks and -
 * as a consequence - when second Observable will be subscribed, since subscription happens
 * immediately after failing check.
 *
 * @example <caption>Add fallback observable</caption>
 * const seconds = Rx.Observable.interval(1000);
 * const minutes = Rx.Observable.interval(60 * 1000);
 *
 * seconds.timeoutWith(900, minutes)
 *     .subscribe(
 *         value => console.log(value), // After 900ms, will start emitting `minutes`,
 *                                      // since first value of `seconds` will not arrive fast enough.
 *         err => console.log(err) // Would be called after 900ms in case of `timeout`,
 *                                 // but here will never be called.
 *     );
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable
 *                          passed as a second parameter.
 * @method timeoutWith
 * @owner Observable
 */
function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return function (source) {
        var absoluteTimeout = isDate_1.isDate(due);
        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
    };
}
exports.timeoutWith = timeoutWith;
var TimeoutWithOperator = (function () {
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
    }
    TimeoutWithOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    };
    return TimeoutWithOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeoutWithSubscriber = (function (_super) {
    __extends(TimeoutWithSubscriber, _super);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
        _super.call(this, destination);
        this.absoluteTimeout = absoluteTimeout;
        this.waitFor = waitFor;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
        this.action = null;
        this.scheduleTimeout();
    }
    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
        var withObservable = subscriber.withObservable;
        subscriber._unsubscribeAndRecycle();
        subscriber.add(subscribeToResult_1.subscribeToResult(subscriber, withObservable));
    };
    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
        var action = this.action;
        if (action) {
            // Recycle the action if we've already scheduled one. All the production
            // Scheduler Actions mutate their state/delay time and return themeselves.
            // VirtualActions are immutable, so they create and return a clone. In this
            // case, we need to set the action reference to the most recent VirtualAction,
            // to ensure that's the one we clone from next time.
            this.action = action.schedule(this, this.waitFor);
        }
        else {
            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
        }
    };
    TimeoutWithSubscriber.prototype._next = function (value) {
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
        _super.prototype._next.call(this, value);
    };
    TimeoutWithSubscriber.prototype._unsubscribe = function () {
        this.action = null;
        this.scheduler = null;
        this.withObservable = null;
    };
    return TimeoutWithSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=timeoutWith.js.map

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var reduce_1 = __webpack_require__(26);
function toArrayReducer(arr, item, index) {
    arr.push(item);
    return arr;
}
function toArray() {
    return reduce_1.reduce(toArrayReducer, []);
}
exports.toArray = toArray;
//# sourceMappingURL=toArray.js.map

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Branch out the source Observable values as a nested Observable whenever
 * `windowBoundaries` emits.
 *
 * <span class="informal">It's like {@link buffer}, but emits a nested Observable
 * instead of an array.</span>
 *
 * <img src="./img/window.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping
 * windows. It emits the current window and opens a new one whenever the
 * Observable `windowBoundaries` emits an item. Because each window is an
 * Observable, the output is a higher-order Observable.
 *
 * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var result = clicks.window(interval)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link buffer}
 *
 * @param {Observable<any>} windowBoundaries An Observable that completes the
 * previous window and starts a new window.
 * @return {Observable<Observable<T>>} An Observable of windows, which are
 * Observables emitting values of the source Observable.
 * @method window
 * @owner Observable
 */
function window(windowBoundaries) {
    return function windowOperatorFunction(source) {
        return source.lift(new WindowOperator(windowBoundaries));
    };
}
exports.window = window;
var WindowOperator = (function () {
    function WindowOperator(windowBoundaries) {
        this.windowBoundaries = windowBoundaries;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        var windowSubscriber = new WindowSubscriber(subscriber);
        var sourceSubscription = source.subscribe(windowSubscriber);
        if (!sourceSubscription.closed) {
            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));
        }
        return sourceSubscription;
    };
    return WindowOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowSubscriber = (function (_super) {
    __extends(WindowSubscriber, _super);
    function WindowSubscriber(destination) {
        _super.call(this, destination);
        this.window = new Subject_1.Subject();
        destination.next(this.window);
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow();
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this._complete();
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
    };
    WindowSubscriber.prototype._unsubscribe = function () {
        this.window = null;
    };
    WindowSubscriber.prototype.openWindow = function () {
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var destination = this.destination;
        var newWindow = this.window = new Subject_1.Subject();
        destination.next(newWindow);
    };
    return WindowSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=window.js.map

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
var Subject_1 = __webpack_require__(9);
/**
 * Branch out the source Observable values as a nested Observable with each
 * nested Observable emitting at most `windowSize` values.
 *
 * <span class="informal">It's like {@link bufferCount}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowCount.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows every `startWindowEvery`
 * items, each containing no more than `windowSize` items. When the source
 * Observable completes or encounters an error, the output Observable emits
 * the current window and propagates the notification from the source
 * Observable. If `startWindowEvery` is not provided, then new windows are
 * started immediately at the start of the source and when each window completes
 * with size `windowSize`.
 *
 * @example <caption>Ignore every 3rd click event, starting from the first one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(3)
 *   .map(win => win.skip(1)) // skip first of every 3 clicks
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Ignore every 3rd click event, starting from the third one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(2, 3)
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link bufferCount}
 *
 * @param {number} windowSize The maximum number of values emitted by each
 * window.
 * @param {number} [startWindowEvery] Interval at which to start a new window.
 * For example if `startWindowEvery` is `2`, then a new window will be started
 * on every other value from the source. A new window is started at the
 * beginning of the source by default.
 * @return {Observable<Observable<T>>} An Observable of windows, which in turn
 * are Observable of values.
 * @method windowCount
 * @owner Observable
 */
function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) { startWindowEvery = 0; }
    return function windowCountOperatorFunction(source) {
        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
    };
}
exports.windowCount = windowCount;
var WindowCountOperator = (function () {
    function WindowCountOperator(windowSize, startWindowEvery) {
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
    }
    WindowCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
    };
    return WindowCountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowCountSubscriber = (function (_super) {
    __extends(WindowCountSubscriber, _super);
    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
        _super.call(this, destination);
        this.destination = destination;
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
        this.windows = [new Subject_1.Subject()];
        this.count = 0;
        destination.next(this.windows[0]);
    }
    WindowCountSubscriber.prototype._next = function (value) {
        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
        var destination = this.destination;
        var windowSize = this.windowSize;
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len && !this.closed; i++) {
            windows[i].next(value);
        }
        var c = this.count - windowSize + 1;
        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
            windows.shift().complete();
        }
        if (++this.count % startWindowEvery === 0 && !this.closed) {
            var window_1 = new Subject_1.Subject();
            windows.push(window_1);
            destination.next(window_1);
        }
    };
    WindowCountSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().error(err);
            }
        }
        this.destination.error(err);
    };
    WindowCountSubscriber.prototype._complete = function () {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().complete();
            }
        }
        this.destination.complete();
    };
    WindowCountSubscriber.prototype._unsubscribe = function () {
        this.count = 0;
        this.windows = null;
    };
    return WindowCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=windowCount.js.map

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var async_1 = __webpack_require__(6);
var Subscriber_1 = __webpack_require__(3);
var isNumeric_1 = __webpack_require__(21);
var isScheduler_1 = __webpack_require__(12);
function windowTime(windowTimeSpan) {
    var scheduler = async_1.async;
    var windowCreationInterval = null;
    var maxWindowSize = Number.POSITIVE_INFINITY;
    if (isScheduler_1.isScheduler(arguments[3])) {
        scheduler = arguments[3];
    }
    if (isScheduler_1.isScheduler(arguments[2])) {
        scheduler = arguments[2];
    }
    else if (isNumeric_1.isNumeric(arguments[2])) {
        maxWindowSize = arguments[2];
    }
    if (isScheduler_1.isScheduler(arguments[1])) {
        scheduler = arguments[1];
    }
    else if (isNumeric_1.isNumeric(arguments[1])) {
        windowCreationInterval = arguments[1];
    }
    return function windowTimeOperatorFunction(source) {
        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
    };
}
exports.windowTime = windowTime;
var WindowTimeOperator = (function () {
    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.maxWindowSize = maxWindowSize;
        this.scheduler = scheduler;
    }
    WindowTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
    };
    return WindowTimeOperator;
}());
var CountedSubject = (function (_super) {
    __extends(CountedSubject, _super);
    function CountedSubject() {
        _super.apply(this, arguments);
        this._numberOfNextedValues = 0;
    }
    CountedSubject.prototype.next = function (value) {
        this._numberOfNextedValues++;
        _super.prototype.next.call(this, value);
    };
    Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
        get: function () {
            return this._numberOfNextedValues;
        },
        enumerable: true,
        configurable: true
    });
    return CountedSubject;
}(Subject_1.Subject));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowTimeSubscriber = (function (_super) {
    __extends(WindowTimeSubscriber, _super);
    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        _super.call(this, destination);
        this.destination = destination;
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.maxWindowSize = maxWindowSize;
        this.scheduler = scheduler;
        this.windows = [];
        var window = this.openWindow();
        if (windowCreationInterval !== null && windowCreationInterval >= 0) {
            var closeState = { subscriber: this, window: window, context: null };
            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };
            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
        }
        else {
            var timeSpanOnlyState = { subscriber: this, window: window, windowTimeSpan: windowTimeSpan };
            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
        }
    }
    WindowTimeSubscriber.prototype._next = function (value) {
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len; i++) {
            var window_1 = windows[i];
            if (!window_1.closed) {
                window_1.next(value);
                if (window_1.numberOfNextedValues >= this.maxWindowSize) {
                    this.closeWindow(window_1);
                }
            }
        }
    };
    WindowTimeSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        while (windows.length > 0) {
            windows.shift().error(err);
        }
        this.destination.error(err);
    };
    WindowTimeSubscriber.prototype._complete = function () {
        var windows = this.windows;
        while (windows.length > 0) {
            var window_2 = windows.shift();
            if (!window_2.closed) {
                window_2.complete();
            }
        }
        this.destination.complete();
    };
    WindowTimeSubscriber.prototype.openWindow = function () {
        var window = new CountedSubject();
        this.windows.push(window);
        var destination = this.destination;
        destination.next(window);
        return window;
    };
    WindowTimeSubscriber.prototype.closeWindow = function (window) {
        window.complete();
        var windows = this.windows;
        windows.splice(windows.indexOf(window), 1);
    };
    return WindowTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchWindowTimeSpanOnly(state) {
    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
    if (window) {
        subscriber.closeWindow(window);
    }
    state.window = subscriber.openWindow();
    this.schedule(state, windowTimeSpan);
}
function dispatchWindowCreation(state) {
    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
    var window = subscriber.openWindow();
    var action = this;
    var context = { action: action, subscription: null };
    var timeSpanState = { subscriber: subscriber, window: window, context: context };
    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
    action.add(context.subscription);
    action.schedule(state, windowCreationInterval);
}
function dispatchWindowClose(state) {
    var subscriber = state.subscriber, window = state.window, context = state.context;
    if (context && context.action && context.subscription) {
        context.action.remove(context.subscription);
    }
    subscriber.closeWindow(window);
}
//# sourceMappingURL=windowTime.js.map

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var Subscription_1 = __webpack_require__(7);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Branch out the source Observable values as a nested Observable starting from
 * an emission from `openings` and ending when the output of `closingSelector`
 * emits.
 *
 * <span class="informal">It's like {@link bufferToggle}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowToggle.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows that contain those items
 * emitted by the source Observable between the time when the `openings`
 * Observable emits an item and when the Observable returned by
 * `closingSelector` emits an item.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var result = clicks.windowToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * ).mergeAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowWhen}
 * @see {@link bufferToggle}
 *
 * @param {Observable<O>} openings An observable of notifications to start new
 * windows.
 * @param {function(value: O): Observable} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns an Observable,
 * which, when it emits (either `next` or `complete`), signals that the
 * associated window should complete.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowToggle
 * @owner Observable
 */
function windowToggle(openings, closingSelector) {
    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };
}
exports.windowToggle = windowToggle;
var WindowToggleOperator = (function () {
    function WindowToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    WindowToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return WindowToggleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowToggleSubscriber = (function (_super) {
    __extends(WindowToggleSubscriber, _super);
    function WindowToggleSubscriber(destination, openings, closingSelector) {
        _super.call(this, destination);
        this.openings = openings;
        this.closingSelector = closingSelector;
        this.contexts = [];
        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));
    }
    WindowToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        if (contexts) {
            var len = contexts.length;
            for (var i = 0; i < len; i++) {
                contexts[i].window.next(value);
            }
        }
    };
    WindowToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.error(err);
                context.subscription.unsubscribe();
            }
        }
        _super.prototype._error.call(this, err);
    };
    WindowToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.complete();
                context.subscription.unsubscribe();
            }
        }
        _super.prototype._complete.call(this);
    };
    WindowToggleSubscriber.prototype._unsubscribe = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.unsubscribe();
                context.subscription.unsubscribe();
            }
        }
    };
    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (outerValue === this.openings) {
            var closingSelector = this.closingSelector;
            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);
            if (closingNotifier === errorObject_1.errorObject) {
                return this.error(errorObject_1.errorObject.e);
            }
            else {
                var window_1 = new Subject_1.Subject();
                var subscription = new Subscription_1.Subscription();
                var context = { window: window_1, subscription: subscription };
                this.contexts.push(context);
                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);
                if (innerSubscription.closed) {
                    this.closeWindow(this.contexts.length - 1);
                }
                else {
                    innerSubscription.context = context;
                    subscription.add(innerSubscription);
                }
                this.destination.next(window_1);
            }
        }
        else {
            this.closeWindow(this.contexts.indexOf(outerValue));
        }
    };
    WindowToggleSubscriber.prototype.notifyError = function (err) {
        this.error(err);
    };
    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
        if (inner !== this.openSubscription) {
            this.closeWindow(this.contexts.indexOf(inner.context));
        }
    };
    WindowToggleSubscriber.prototype.closeWindow = function (index) {
        if (index === -1) {
            return;
        }
        var contexts = this.contexts;
        var context = contexts[index];
        var window = context.window, subscription = context.subscription;
        contexts.splice(index, 1);
        window.complete();
        subscription.unsubscribe();
    };
    return WindowToggleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=windowToggle.js.map

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/**
 * Branch out the source Observable values as a nested Observable using a
 * factory function of closing Observables to determine when to start a new
 * window.
 *
 * <span class="informal">It's like {@link bufferWhen}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowWhen.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping windows.
 * It emits the current window and opens a new one whenever the Observable
 * produced by the specified `closingSelector` function emits an item. The first
 * window is opened immediately when subscribing to the output Observable.
 *
 * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks
 *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link bufferWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals (on either `next` or
 * `complete`) when to close the previous window and start a new one.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowWhen
 * @owner Observable
 */
function windowWhen(closingSelector) {
    return function windowWhenOperatorFunction(source) {
        return source.lift(new WindowOperator(closingSelector));
    };
}
exports.windowWhen = windowWhen;
var WindowOperator = (function () {
    function WindowOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
    };
    return WindowOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowSubscriber = (function (_super) {
    __extends(WindowSubscriber, _super);
    function WindowSubscriber(destination, closingSelector) {
        _super.call(this, destination);
        this.destination = destination;
        this.closingSelector = closingSelector;
        this.openWindow();
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
        if (this.closingNotification) {
            this.closingNotification.unsubscribe();
        }
    };
    WindowSubscriber.prototype.openWindow = function (innerSub) {
        if (innerSub === void 0) { innerSub = null; }
        if (innerSub) {
            this.remove(innerSub);
            innerSub.unsubscribe();
        }
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var window = this.window = new Subject_1.Subject();
        this.destination.next(window);
        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();
        if (closingNotifier === errorObject_1.errorObject) {
            var err = errorObject_1.errorObject.e;
            this.destination.error(err);
            this.window.error(err);
        }
        else {
            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));
        }
    };
    return WindowSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=windowWhen.js.map

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(4);
var subscribeToResult_1 = __webpack_require__(5);
/* tslint:enable:max-line-length */
/**
 * Combines the source Observable with other Observables to create an Observable
 * whose values are calculated from the latest values of each, only when the
 * source emits.
 *
 * <span class="informal">Whenever the source Observable emits a value, it
 * computes a formula using that value plus the latest values from other input
 * Observables, then emits the output of that formula.</span>
 *
 * <img src="./img/withLatestFrom.png" width="100%">
 *
 * `withLatestFrom` combines each value from the source Observable (the
 * instance) with the latest values from the other input Observables only when
 * the source emits a value, optionally using a `project` function to determine
 * the value to be emitted on the output Observable. All input Observables must
 * emit at least one value before the output Observable will emit a value.
 *
 * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var result = clicks.withLatestFrom(timer);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Function} [project] Projection function for combining values
 * together. Receives all values in order of the Observables passed, where the
 * first parameter is a value from the source Observable. (e.g.
 * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not
 * passed, arrays will be emitted on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method withLatestFrom
 * @owner Observable
 */
function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i - 0] = arguments[_i];
    }
    return function (source) {
        var project;
        if (typeof args[args.length - 1] === 'function') {
            project = args.pop();
        }
        var observables = args;
        return source.lift(new WithLatestFromOperator(observables, project));
    };
}
exports.withLatestFrom = withLatestFrom;
var WithLatestFromOperator = (function () {
    function WithLatestFromOperator(observables, project) {
        this.observables = observables;
        this.project = project;
    }
    WithLatestFromOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
    };
    return WithLatestFromOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WithLatestFromSubscriber = (function (_super) {
    __extends(WithLatestFromSubscriber, _super);
    function WithLatestFromSubscriber(destination, observables, project) {
        _super.call(this, destination);
        this.observables = observables;
        this.project = project;
        this.toRespond = [];
        var len = observables.length;
        this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            this.toRespond.push(i);
        }
        for (var i = 0; i < len; i++) {
            var observable = observables[i];
            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));
        }
    }
    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        var toRespond = this.toRespond;
        if (toRespond.length > 0) {
            var found = toRespond.indexOf(outerIndex);
            if (found !== -1) {
                toRespond.splice(found, 1);
            }
        }
    };
    WithLatestFromSubscriber.prototype.notifyComplete = function () {
        // noop
    };
    WithLatestFromSubscriber.prototype._next = function (value) {
        if (this.toRespond.length === 0) {
            var args = [value].concat(this.values);
            if (this.project) {
                this._tryProject(args);
            }
            else {
                this.destination.next(args);
            }
        }
    };
    WithLatestFromSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return WithLatestFromSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=withLatestFrom.js.map

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var zip_1 = __webpack_require__(37);
function zipAll(project) {
    return function (source) { return source.lift(new zip_1.ZipOperator(project)); };
}
exports.zipAll = zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var SubscriptionLog_1 = __webpack_require__(164);
var SubscriptionLoggable = (function () {
    function SubscriptionLoggable() {
        this.subscriptions = [];
    }
    SubscriptionLoggable.prototype.logSubscribedFrame = function () {
        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));
        return this.subscriptions.length - 1;
    };
    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {
        var subscriptionLogs = this.subscriptions;
        var oldSubscriptionLog = subscriptionLogs[index];
        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());
    };
    return SubscriptionLoggable;
}());
exports.SubscriptionLoggable = SubscriptionLoggable;
//# sourceMappingURL=SubscriptionLoggable.js.map

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var SubscriptionLog = (function () {
    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {
        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }
        this.subscribedFrame = subscribedFrame;
        this.unsubscribedFrame = unsubscribedFrame;
    }
    return SubscriptionLog;
}());
exports.SubscriptionLog = SubscriptionLog;
//# sourceMappingURL=SubscriptionLog.js.map

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function applyMixins(derivedCtor, baseCtors) {
    for (var i = 0, len = baseCtors.length; i < len; i++) {
        var baseCtor = baseCtors[i];
        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);
        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {
            var name_1 = propertyKeys[j];
            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];
        }
    }
}
exports.applyMixins = applyMixins;
//# sourceMappingURL=applyMixins.js.map

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(22);
var AsyncScheduler_1 = __webpack_require__(23);
var VirtualTimeScheduler = (function (_super) {
    __extends(VirtualTimeScheduler, _super);
    function VirtualTimeScheduler(SchedulerAction, maxFrames) {
        var _this = this;
        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }
        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }
        _super.call(this, SchedulerAction, function () { return _this.frame; });
        this.maxFrames = maxFrames;
        this.frame = 0;
        this.index = -1;
    }
    /**
     * Prompt the Scheduler to execute all of its queued actions, therefore
     * clearing its queue.
     * @return {void}
     */
    VirtualTimeScheduler.prototype.flush = function () {
        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
        var error, action;
        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        }
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    VirtualTimeScheduler.frameTimeFactor = 10;
    return VirtualTimeScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.VirtualTimeScheduler = VirtualTimeScheduler;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var VirtualAction = (function (_super) {
    __extends(VirtualAction, _super);
    function VirtualAction(scheduler, work, index) {
        if (index === void 0) { index = scheduler.index += 1; }
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
        this.index = index;
        this.active = true;
        this.index = scheduler.index = index;
    }
    VirtualAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (!this.id) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.active = false;
        // If an action is rescheduled, we save allocations by mutating its state,
        // pushing it to the end of the scheduler queue, and recycling the action.
        // But since the VirtualTimeScheduler is used for testing, VirtualActions
        // must be immutable so they can be inspected later.
        var action = new VirtualAction(this.scheduler, this.work);
        this.add(action);
        return action.schedule(state, delay);
    };
    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        this.delay = scheduler.frame + delay;
        var actions = scheduler.actions;
        actions.push(this);
        actions.sort(VirtualAction.sortActions);
        return true;
    };
    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        return undefined;
    };
    VirtualAction.prototype._execute = function (state, delay) {
        if (this.active === true) {
            return _super.prototype._execute.call(this, state, delay);
        }
    };
    VirtualAction.sortActions = function (a, b) {
        if (a.delay === b.delay) {
            if (a.index === b.index) {
                return 0;
            }
            else if (a.index > b.index) {
                return 1;
            }
            else {
                return -1;
            }
        }
        else if (a.delay > b.delay) {
            return 1;
        }
        else {
            return -1;
        }
    };
    return VirtualAction;
}(AsyncAction_1.AsyncAction));
exports.VirtualAction = VirtualAction;
//# sourceMappingURL=VirtualTimeScheduler.js.map

/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Mixpanel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return MixpanelPeople; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var MixpanelOriginal = /** @class */ (function (_super) {
    __extends(MixpanelOriginal, _super);
    function MixpanelOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MixpanelOriginal.prototype.alias = function (aliasId, originalId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "alias", {}, arguments); };
    MixpanelOriginal.prototype.distinctId = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "distinctId", {}, arguments); };
    MixpanelOriginal.prototype.flush = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "flush", {}, arguments); };
    MixpanelOriginal.prototype.identify = function (distinctId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "identify", {}, arguments); };
    MixpanelOriginal.prototype.init = function (token) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "init", {}, arguments); };
    MixpanelOriginal.prototype.registerSuperProperties = function (superProperties) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerSuperProperties", {}, arguments); };
    MixpanelOriginal.prototype.reset = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "reset", {}, arguments); };
    MixpanelOriginal.prototype.timeEvent = function (eventName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "timeEvent", {}, arguments); };
    MixpanelOriginal.prototype.track = function (eventName, eventProperties) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "track", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    MixpanelOriginal.pluginName = "Mixpanel";
    MixpanelOriginal.plugin = "cordova-plugin-mixpanel";
    MixpanelOriginal.pluginRef = "mixpanel";
    MixpanelOriginal.repo = "https://github.com/samzilverberg/cordova-mixpanel-plugin";
    MixpanelOriginal.platforms = ["Android", "Browser", "iOS"];
    return MixpanelOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Mixpanel = new MixpanelOriginal();

var MixpanelPeopleOriginal = /** @class */ (function (_super) {
    __extends(MixpanelPeopleOriginal, _super);
    function MixpanelPeopleOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MixpanelPeopleOriginal.prototype.identify = function (distinctId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "identify", {}, arguments); };
    MixpanelPeopleOriginal.prototype.increment = function (peopleProperties) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "increment", {}, arguments); };
    MixpanelPeopleOriginal.prototype.setPushId = function (pushId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setPushId", {}, arguments); };
    MixpanelPeopleOriginal.prototype.set = function (peopleProperties) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "set", {}, arguments); };
    MixpanelPeopleOriginal.prototype.setOnce = function (peopleProperties) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setOnce", {}, arguments); };
    MixpanelPeopleOriginal.plugin = "cordova-plugin-mixpanel";
    MixpanelPeopleOriginal.pluginRef = "mixpanel.people";
    MixpanelPeopleOriginal.pluginName = "Mixpanel";
    return MixpanelPeopleOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var MixpanelPeople = new MixpanelPeopleOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9taXhwYW5lbC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFpQzFDLDRCQUFpQjs7OztJQVM3Qyx3QkFBSyxhQUFDLE9BQWUsRUFBRSxVQUFrQjtJQVN6Qyw2QkFBVTtJQVFWLHdCQUFLO0lBVUwsMkJBQVEsYUFBQyxVQUFrQjtJQVUzQix1QkFBSSxhQUFDLEtBQWE7SUFVbEIsMENBQXVCLGFBQUMsZUFBb0I7SUFTNUMsd0JBQUs7SUFVTCw0QkFBUyxhQUFDLFNBQWlCO0lBYzNCLHdCQUFLLGFBQUMsU0FBaUIsRUFBRSxlQUFxQjs7Ozs7O21CQTNIaEQ7RUFrQzhCLGlCQUFpQjtTQUFsQyxRQUFROztJQXdHZSxrQ0FBaUI7Ozs7SUFRbkQsaUNBQVEsYUFBQyxVQUFrQjtJQVUzQixrQ0FBUyxhQUFDLGdCQUFxQjtJQVUvQixrQ0FBUyxhQUFDLE1BQWM7SUFVeEIsNEJBQUcsYUFBQyxnQkFBcUI7SUFVekIsZ0NBQU8sYUFBQyxnQkFBcUI7Ozs7eUJBMUwvQjtFQTBJb0MsaUJBQWlCO1NBQXhDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZGVjbGFyZSB2YXIgbWl4cGFuZWw6IGFueTtcblxuLyoqXG4gKiBAbmFtZSBNaXhwYW5lbFxuICogQGRlc2NyaXB0aW9uXG4gKiBDb3Jkb3ZhIFBsdWdpbiB0aGF0IHdyYXBzIE1peHBhbmVsIFNESyBmb3IgQW5kcm9pZCBhbmQgaU9TXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBNaXhwYW5lbCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvbWl4cGFuZWwnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgbWl4cGFuZWw6IE1peHBhbmVsLCBwcml2YXRlIG1peHBhbmVsUGVvcGxlOiBNaXhwYW5lbFBlb3BsZSkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5taXhwYW5lbC5pbml0KHRva2VuKVxuICogICAudGhlbihvblN1Y2Nlc3MpXG4gKiAgIC5jYXRjaChvbkVycm9yKTtcbiAqXG4gKiBgYGBcbiAqIEBjbGFzc2VzXG4gKiBNaXhwYW5lbFBlb3BsZVxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ01peHBhbmVsJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tbWl4cGFuZWwnLFxuICBwbHVnaW5SZWY6ICdtaXhwYW5lbCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vc2FtemlsdmVyYmVyZy9jb3Jkb3ZhLW1peHBhbmVsLXBsdWdpbicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0Jyb3dzZXInLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTWl4cGFuZWwgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSBhbGlhc0lkIHtzdHJpbmd9XG4gICAqIEBwYXJhbSBvcmlnaW5hbElkIHtzdHJpbmd9XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGFsaWFzKGFsaWFzSWQ6IHN0cmluZywgb3JpZ2luYWxJZDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZGlzdGluY3RJZCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBmbHVzaCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0gZGlzdGluY3RJZCB7c3RyaW5nfVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpZGVudGlmeShkaXN0aW5jdElkOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0gdG9rZW4ge3N0cmluZ31cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaW5pdCh0b2tlbjogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIHN1cGVyUHJvcGVydGllcyB7YW55fVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICByZWdpc3RlclN1cGVyUHJvcGVydGllcyhzdXBlclByb3BlcnRpZXM6IGFueSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlc2V0KCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSBldmVudE5hbWUge3N0cmluZ31cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgdGltZUV2ZW50KGV2ZW50TmFtZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIGV2ZW50TmFtZSB7c3RyaW5nfVxuICAgKiBAcGFyYW0gZXZlbnRQcm9wZXJ0aWVzIHthbnl9IG9wdGlvbmFsXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3VjY2Vzc0luZGV4OiAyLFxuICAgIGVycm9ySW5kZXg6IDNcbiAgfSlcbiAgdHJhY2soZXZlbnROYW1lOiBzdHJpbmcsIGV2ZW50UHJvcGVydGllcz86IGFueSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1taXhwYW5lbCcsXG4gIHBsdWdpblJlZjogJ21peHBhbmVsLnBlb3BsZScsXG4gIHBsdWdpbk5hbWU6ICdNaXhwYW5lbCdcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTWl4cGFuZWxQZW9wbGUgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSBkaXN0aW5jdElkIHtzdHJpbmd9XG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaWRlbnRpZnkoZGlzdGluY3RJZDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIHBlb3BsZVByb3BlcnRpZXMge3N0cmluZ31cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpbmNyZW1lbnQocGVvcGxlUHJvcGVydGllczogYW55KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIHB1c2hJZFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldFB1c2hJZChwdXNoSWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSBwZW9wbGVQcm9wZXJ0aWVzXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc2V0KHBlb3BsZVByb3BlcnRpZXM6IGFueSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSBwZW9wbGVQcm9wZXJ0aWVzXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc2V0T25jZShwZW9wbGVQcm9wZXJ0aWVzOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 168 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__plugins_action_sheet__ = __webpack_require__(169);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__plugins_admob_free__ = __webpack_require__(181);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__plugins_admob_pro__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__plugins_alipay__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__plugins_android_exoplayer__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__plugins_android_fingerprint_auth__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__plugins_android_full_screen__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__plugins_android_permissions__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__plugins_app_availability__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__plugins_app_minimize__ = __webpack_require__(189);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__plugins_app_preferences__ = __webpack_require__(190);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__plugins_app_rate__ = __webpack_require__(191);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__plugins_app_update__ = __webpack_require__(192);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__plugins_app_version__ = __webpack_require__(193);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__plugins_apple_pay__ = __webpack_require__(194);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__plugins_appodeal__ = __webpack_require__(195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__plugins_autostart__ = __webpack_require__(486);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__plugins_background_fetch__ = __webpack_require__(487);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__plugins_background_geolocation__ = __webpack_require__(488);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__plugins_background_mode__ = __webpack_require__(489);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__plugins_backlight__ = __webpack_require__(490);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__plugins_badge__ = __webpack_require__(491);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__plugins_barcode_scanner__ = __webpack_require__(492);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__plugins_base64__ = __webpack_require__(493);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__plugins_base64_to_gallery__ = __webpack_require__(494);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__plugins_battery_status__ = __webpack_require__(495);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__plugins_ble__ = __webpack_require__(496);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__plugins_bluetooth_serial__ = __webpack_require__(497);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__plugins_braintree__ = __webpack_require__(498);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__plugins_brightness__ = __webpack_require__(499);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__plugins_broadcaster__ = __webpack_require__(500);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__plugins_browser_tab__ = __webpack_require__(501);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__plugins_calendar__ = __webpack_require__(502);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__plugins_call_number__ = __webpack_require__(503);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__plugins_camera__ = __webpack_require__(504);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__plugins_camera_preview__ = __webpack_require__(505);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__plugins_card_io__ = __webpack_require__(506);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__plugins_clipboard__ = __webpack_require__(507);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__plugins_code_push__ = __webpack_require__(508);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__plugins_contacts__ = __webpack_require__(509);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__plugins_couchbase_lite__ = __webpack_require__(510);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__plugins_crop__ = __webpack_require__(511);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__plugins_date_picker__ = __webpack_require__(512);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__plugins_db_meter__ = __webpack_require__(513);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__plugins_deeplinks__ = __webpack_require__(514);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__plugins_device__ = __webpack_require__(515);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__plugins_device_accounts__ = __webpack_require__(516);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__plugins_device_feedback__ = __webpack_require__(517);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__plugins_device_motion__ = __webpack_require__(518);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__plugins_device_orientation__ = __webpack_require__(519);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__plugins_diagnostic__ = __webpack_require__(520);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__plugins_dialogs__ = __webpack_require__(521);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__plugins_dns__ = __webpack_require__(522);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__plugins_document_viewer__ = __webpack_require__(523);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__plugins_email_composer__ = __webpack_require__(524);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__plugins_estimote_beacons__ = __webpack_require__(525);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__plugins_extended_device_information__ = __webpack_require__(526);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__plugins_facebook__ = __webpack_require__(527);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__plugins_fcm__ = __webpack_require__(528);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__plugins_file__ = __webpack_require__(529);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__plugins_file_chooser__ = __webpack_require__(530);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__plugins_file_encryption__ = __webpack_require__(531);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__plugins_file_opener__ = __webpack_require__(532);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__plugins_file_path__ = __webpack_require__(533);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__plugins_file_transfer__ = __webpack_require__(534);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__plugins_fingerprint_aio__ = __webpack_require__(535);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__plugins_firebase__ = __webpack_require__(536);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__plugins_firebase_analytics__ = __webpack_require__(537);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__plugins_firebase_dynamic_links__ = __webpack_require__(538);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__plugins_flashlight__ = __webpack_require__(539);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__plugins_flurry_analytics__ = __webpack_require__(540);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__plugins_ftp__ = __webpack_require__(541);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__plugins_geofence__ = __webpack_require__(542);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__plugins_geolocation__ = __webpack_require__(543);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__plugins_globalization__ = __webpack_require__(544);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__plugins_google_analytics__ = __webpack_require__(545);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__plugins_google_maps__ = __webpack_require__(546);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__plugins_google_play_games_services__ = __webpack_require__(547);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__plugins_google_plus__ = __webpack_require__(548);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__plugins_gyroscope__ = __webpack_require__(549);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__plugins_header_color__ = __webpack_require__(550);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__plugins_health__ = __webpack_require__(551);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__plugins_health_kit__ = __webpack_require__(552);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__plugins_hotspot__ = __webpack_require__(553);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__plugins_http__ = __webpack_require__(554);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__plugins_httpd__ = __webpack_require__(555);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__plugins_hyper_track__ = __webpack_require__(556);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__plugins_ibeacon__ = __webpack_require__(557);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__plugins_image_picker__ = __webpack_require__(558);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__plugins_image_resizer__ = __webpack_require__(559);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__plugins_in_app_browser__ = __webpack_require__(560);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__plugins_in_app_purchase__ = __webpack_require__(561);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__plugins_in_app_purchase_2__ = __webpack_require__(562);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__plugins_index_app_content__ = __webpack_require__(563);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__plugins_insomnia__ = __webpack_require__(564);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__plugins_instagram__ = __webpack_require__(565);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__plugins_intel_security__ = __webpack_require__(566);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__plugins_intercom__ = __webpack_require__(567);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__plugins_is_debug__ = __webpack_require__(568);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99__plugins_jins_meme__ = __webpack_require__(569);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100__plugins_keyboard__ = __webpack_require__(570);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__plugins_keychain__ = __webpack_require__(571);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__plugins_keychain_touch_id__ = __webpack_require__(572);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_103__plugins_launch_navigator__ = __webpack_require__(573);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_104__plugins_launch_review__ = __webpack_require__(574);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_105__plugins_linkedin__ = __webpack_require__(575);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_106__plugins_local_notifications__ = __webpack_require__(576);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_107__plugins_location_accuracy__ = __webpack_require__(577);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_108__plugins_market__ = __webpack_require__(578);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_109__plugins_media__ = __webpack_require__(579);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_110__plugins_media_capture__ = __webpack_require__(580);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_111__plugins_mixpanel__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_112__plugins_mobile_accessibility__ = __webpack_require__(581);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_113__plugins_ms_adal__ = __webpack_require__(582);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_114__plugins_music_controls__ = __webpack_require__(583);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_115__plugins_native_audio__ = __webpack_require__(584);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_116__plugins_native_geocoder__ = __webpack_require__(585);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_117__plugins_native_keyboard__ = __webpack_require__(586);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_118__plugins_native_page_transitions__ = __webpack_require__(587);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_119__plugins_native_ringtones__ = __webpack_require__(588);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_120__plugins_native_storage__ = __webpack_require__(589);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_121__plugins_navigation_bar__ = __webpack_require__(590);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_122__plugins_network__ = __webpack_require__(591);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_123__plugins_network_interface__ = __webpack_require__(592);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_124__plugins_nfc__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_125__plugins_onesignal__ = __webpack_require__(593);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_126__plugins_open_native_settings__ = __webpack_require__(594);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_127__plugins_paypal__ = __webpack_require__(595);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_128__plugins_pedometer__ = __webpack_require__(596);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_129__plugins_phonegap_local_notification__ = __webpack_require__(597);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_130__plugins_photo_library__ = __webpack_require__(598);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_131__plugins_photo_viewer__ = __webpack_require__(599);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_132__plugins_pin_check__ = __webpack_require__(600);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_133__plugins_pin_dialog__ = __webpack_require__(601);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_134__plugins_pinterest__ = __webpack_require__(602);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_135__plugins_power_management__ = __webpack_require__(603);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_136__plugins_printer__ = __webpack_require__(604);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_137__plugins_pro__ = __webpack_require__(605);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_138__plugins_push__ = __webpack_require__(606);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_139__plugins_qqsdk__ = __webpack_require__(607);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_140__plugins_qr_scanner__ = __webpack_require__(608);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_141__plugins_regula_document_reader__ = __webpack_require__(609);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_142__plugins_rollbar__ = __webpack_require__(610);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_143__plugins_safari_view_controller__ = __webpack_require__(611);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_144__plugins_screen_orientation__ = __webpack_require__(612);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_145__plugins_screenshot__ = __webpack_require__(613);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_146__plugins_secure_storage__ = __webpack_require__(614);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_147__plugins_serial__ = __webpack_require__(615);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_148__plugins_shake__ = __webpack_require__(616);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_149__plugins_sim__ = __webpack_require__(617);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_150__plugins_sms__ = __webpack_require__(618);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_151__plugins_social_sharing__ = __webpack_require__(619);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_152__plugins_speech_recognition__ = __webpack_require__(620);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_153__plugins_spinner_dialog__ = __webpack_require__(621);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_154__plugins_splash_screen__ = __webpack_require__(622);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_155__plugins_sqlite__ = __webpack_require__(623);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_156__plugins_sqlite_porter__ = __webpack_require__(624);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_157__plugins_status_bar__ = __webpack_require__(625);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_158__plugins_stepcounter__ = __webpack_require__(626);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_159__plugins_streaming_media__ = __webpack_require__(627);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_160__plugins_stripe__ = __webpack_require__(628);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_161__plugins_taptic_engine__ = __webpack_require__(629);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_162__plugins_text_to_speech__ = __webpack_require__(630);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_163__plugins_themeable_browser__ = __webpack_require__(631);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_164__plugins_three_dee_touch__ = __webpack_require__(632);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_165__plugins_toast__ = __webpack_require__(633);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_166__plugins_touch_id__ = __webpack_require__(634);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_167__plugins_twitter_connect__ = __webpack_require__(635);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_168__plugins_uid__ = __webpack_require__(636);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_169__plugins_unique_device_id__ = __webpack_require__(637);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_170__plugins_user_agent__ = __webpack_require__(638);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_171__plugins_vibration__ = __webpack_require__(639);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_172__plugins_video_capture_plus__ = __webpack_require__(640);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_173__plugins_video_editor__ = __webpack_require__(641);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_174__plugins_video_player__ = __webpack_require__(642);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_175__plugins_web_intent__ = __webpack_require__(643);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_176__plugins_wheel_selector__ = __webpack_require__(644);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_177__plugins_youtube_video_player__ = __webpack_require__(645);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_178__plugins_zbar__ = __webpack_require__(646);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_179__plugins_zeroconf__ = __webpack_require__(647);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_180__plugins_zip__ = __webpack_require__(648);
























































































































































































window.IonicNative = {
ActionSheet: __WEBPACK_IMPORTED_MODULE_0__plugins_action_sheet__["a" /* ActionSheet */],
AdMobFree: __WEBPACK_IMPORTED_MODULE_1__plugins_admob_free__["a" /* AdMobFree */],
AdMobPro: __WEBPACK_IMPORTED_MODULE_2__plugins_admob_pro__["a" /* AdMobPro */],
Alipay: __WEBPACK_IMPORTED_MODULE_3__plugins_alipay__["a" /* Alipay */],
AndroidExoplayer: __WEBPACK_IMPORTED_MODULE_4__plugins_android_exoplayer__["a" /* AndroidExoplayer */],
AndroidFingerprintAuth: __WEBPACK_IMPORTED_MODULE_5__plugins_android_fingerprint_auth__["a" /* AndroidFingerprintAuth */],
AndroidFullScreen: __WEBPACK_IMPORTED_MODULE_6__plugins_android_full_screen__["a" /* AndroidFullScreen */],
AndroidPermissions: __WEBPACK_IMPORTED_MODULE_7__plugins_android_permissions__["a" /* AndroidPermissions */],
AppAvailability: __WEBPACK_IMPORTED_MODULE_8__plugins_app_availability__["a" /* AppAvailability */],
AppMinimize: __WEBPACK_IMPORTED_MODULE_9__plugins_app_minimize__["a" /* AppMinimize */],
AppPreferences: __WEBPACK_IMPORTED_MODULE_10__plugins_app_preferences__["a" /* AppPreferences */],
AppRate: __WEBPACK_IMPORTED_MODULE_11__plugins_app_rate__["a" /* AppRate */],
AppUpdate: __WEBPACK_IMPORTED_MODULE_12__plugins_app_update__["a" /* AppUpdate */],
AppVersion: __WEBPACK_IMPORTED_MODULE_13__plugins_app_version__["a" /* AppVersion */],
ApplePay: __WEBPACK_IMPORTED_MODULE_14__plugins_apple_pay__["a" /* ApplePay */],
Appodeal: __WEBPACK_IMPORTED_MODULE_15__plugins_appodeal__["a" /* Appodeal */],
Autostart: __WEBPACK_IMPORTED_MODULE_16__plugins_autostart__["a" /* Autostart */],
BackgroundFetch: __WEBPACK_IMPORTED_MODULE_17__plugins_background_fetch__["a" /* BackgroundFetch */],
BackgroundGeolocation: __WEBPACK_IMPORTED_MODULE_18__plugins_background_geolocation__["a" /* BackgroundGeolocation */],
BackgroundMode: __WEBPACK_IMPORTED_MODULE_19__plugins_background_mode__["a" /* BackgroundMode */],
Backlight: __WEBPACK_IMPORTED_MODULE_20__plugins_backlight__["a" /* Backlight */],
Badge: __WEBPACK_IMPORTED_MODULE_21__plugins_badge__["a" /* Badge */],
BarcodeScanner: __WEBPACK_IMPORTED_MODULE_22__plugins_barcode_scanner__["a" /* BarcodeScanner */],
Base64: __WEBPACK_IMPORTED_MODULE_23__plugins_base64__["a" /* Base64 */],
Base64ToGallery: __WEBPACK_IMPORTED_MODULE_24__plugins_base64_to_gallery__["a" /* Base64ToGallery */],
BatteryStatus: __WEBPACK_IMPORTED_MODULE_25__plugins_battery_status__["a" /* BatteryStatus */],
BLE: __WEBPACK_IMPORTED_MODULE_26__plugins_ble__["a" /* BLE */],
BluetoothSerial: __WEBPACK_IMPORTED_MODULE_27__plugins_bluetooth_serial__["a" /* BluetoothSerial */],
Braintree: __WEBPACK_IMPORTED_MODULE_28__plugins_braintree__["a" /* Braintree */],
Brightness: __WEBPACK_IMPORTED_MODULE_29__plugins_brightness__["a" /* Brightness */],
Broadcaster: __WEBPACK_IMPORTED_MODULE_30__plugins_broadcaster__["a" /* Broadcaster */],
BrowserTab: __WEBPACK_IMPORTED_MODULE_31__plugins_browser_tab__["a" /* BrowserTab */],
Calendar: __WEBPACK_IMPORTED_MODULE_32__plugins_calendar__["a" /* Calendar */],
CallNumber: __WEBPACK_IMPORTED_MODULE_33__plugins_call_number__["a" /* CallNumber */],
Camera: __WEBPACK_IMPORTED_MODULE_34__plugins_camera__["a" /* Camera */],
CameraPreview: __WEBPACK_IMPORTED_MODULE_35__plugins_camera_preview__["a" /* CameraPreview */],
CardIO: __WEBPACK_IMPORTED_MODULE_36__plugins_card_io__["a" /* CardIO */],
Clipboard: __WEBPACK_IMPORTED_MODULE_37__plugins_clipboard__["a" /* Clipboard */],
CodePush: __WEBPACK_IMPORTED_MODULE_38__plugins_code_push__["a" /* CodePush */],
Contacts: __WEBPACK_IMPORTED_MODULE_39__plugins_contacts__["a" /* Contacts */],
CouchbaseLite: __WEBPACK_IMPORTED_MODULE_40__plugins_couchbase_lite__["a" /* CouchbaseLite */],
Crop: __WEBPACK_IMPORTED_MODULE_41__plugins_crop__["a" /* Crop */],
DatePicker: __WEBPACK_IMPORTED_MODULE_42__plugins_date_picker__["a" /* DatePicker */],
DBMeter: __WEBPACK_IMPORTED_MODULE_43__plugins_db_meter__["a" /* DBMeter */],
Deeplinks: __WEBPACK_IMPORTED_MODULE_44__plugins_deeplinks__["a" /* Deeplinks */],
Device: __WEBPACK_IMPORTED_MODULE_45__plugins_device__["a" /* Device */],
DeviceAccounts: __WEBPACK_IMPORTED_MODULE_46__plugins_device_accounts__["a" /* DeviceAccounts */],
DeviceFeedback: __WEBPACK_IMPORTED_MODULE_47__plugins_device_feedback__["a" /* DeviceFeedback */],
DeviceMotion: __WEBPACK_IMPORTED_MODULE_48__plugins_device_motion__["a" /* DeviceMotion */],
DeviceOrientation: __WEBPACK_IMPORTED_MODULE_49__plugins_device_orientation__["a" /* DeviceOrientation */],
Diagnostic: __WEBPACK_IMPORTED_MODULE_50__plugins_diagnostic__["a" /* Diagnostic */],
Dialogs: __WEBPACK_IMPORTED_MODULE_51__plugins_dialogs__["a" /* Dialogs */],
DNS: __WEBPACK_IMPORTED_MODULE_52__plugins_dns__["a" /* DNS */],
DocumentViewer: __WEBPACK_IMPORTED_MODULE_53__plugins_document_viewer__["a" /* DocumentViewer */],
EmailComposer: __WEBPACK_IMPORTED_MODULE_54__plugins_email_composer__["a" /* EmailComposer */],
EstimoteBeacons: __WEBPACK_IMPORTED_MODULE_55__plugins_estimote_beacons__["a" /* EstimoteBeacons */],
ExtendedDeviceInformation: __WEBPACK_IMPORTED_MODULE_56__plugins_extended_device_information__["a" /* ExtendedDeviceInformation */],
Facebook: __WEBPACK_IMPORTED_MODULE_57__plugins_facebook__["a" /* Facebook */],
FCM: __WEBPACK_IMPORTED_MODULE_58__plugins_fcm__["a" /* FCM */],
File: __WEBPACK_IMPORTED_MODULE_59__plugins_file__["a" /* File */],
FileChooser: __WEBPACK_IMPORTED_MODULE_60__plugins_file_chooser__["a" /* FileChooser */],
FileEncryption: __WEBPACK_IMPORTED_MODULE_61__plugins_file_encryption__["a" /* FileEncryption */],
FileOpener: __WEBPACK_IMPORTED_MODULE_62__plugins_file_opener__["a" /* FileOpener */],
FilePath: __WEBPACK_IMPORTED_MODULE_63__plugins_file_path__["a" /* FilePath */],
FileTransfer: __WEBPACK_IMPORTED_MODULE_64__plugins_file_transfer__["a" /* FileTransfer */],
FingerprintAIO: __WEBPACK_IMPORTED_MODULE_65__plugins_fingerprint_aio__["a" /* FingerprintAIO */],
Firebase: __WEBPACK_IMPORTED_MODULE_66__plugins_firebase__["a" /* Firebase */],
FirebaseAnalytics: __WEBPACK_IMPORTED_MODULE_67__plugins_firebase_analytics__["a" /* FirebaseAnalytics */],
FirebaseDynamicLinks: __WEBPACK_IMPORTED_MODULE_68__plugins_firebase_dynamic_links__["a" /* FirebaseDynamicLinks */],
Flashlight: __WEBPACK_IMPORTED_MODULE_69__plugins_flashlight__["a" /* Flashlight */],
FlurryAnalytics: __WEBPACK_IMPORTED_MODULE_70__plugins_flurry_analytics__["a" /* FlurryAnalytics */],
FTP: __WEBPACK_IMPORTED_MODULE_71__plugins_ftp__["a" /* FTP */],
Geofence: __WEBPACK_IMPORTED_MODULE_72__plugins_geofence__["a" /* Geofence */],
Geolocation: __WEBPACK_IMPORTED_MODULE_73__plugins_geolocation__["a" /* Geolocation */],
Globalization: __WEBPACK_IMPORTED_MODULE_74__plugins_globalization__["a" /* Globalization */],
GoogleAnalytics: __WEBPACK_IMPORTED_MODULE_75__plugins_google_analytics__["a" /* GoogleAnalytics */],
GoogleMaps: __WEBPACK_IMPORTED_MODULE_76__plugins_google_maps__["a" /* GoogleMaps */],
GooglePlayGamesServices: __WEBPACK_IMPORTED_MODULE_77__plugins_google_play_games_services__["a" /* GooglePlayGamesServices */],
GooglePlus: __WEBPACK_IMPORTED_MODULE_78__plugins_google_plus__["a" /* GooglePlus */],
Gyroscope: __WEBPACK_IMPORTED_MODULE_79__plugins_gyroscope__["a" /* Gyroscope */],
HeaderColor: __WEBPACK_IMPORTED_MODULE_80__plugins_header_color__["a" /* HeaderColor */],
Health: __WEBPACK_IMPORTED_MODULE_81__plugins_health__["a" /* Health */],
HealthKit: __WEBPACK_IMPORTED_MODULE_82__plugins_health_kit__["a" /* HealthKit */],
Hotspot: __WEBPACK_IMPORTED_MODULE_83__plugins_hotspot__["a" /* Hotspot */],
HTTP: __WEBPACK_IMPORTED_MODULE_84__plugins_http__["a" /* HTTP */],
Httpd: __WEBPACK_IMPORTED_MODULE_85__plugins_httpd__["a" /* Httpd */],
HyperTrack: __WEBPACK_IMPORTED_MODULE_86__plugins_hyper_track__["a" /* HyperTrack */],
IBeacon: __WEBPACK_IMPORTED_MODULE_87__plugins_ibeacon__["a" /* IBeacon */],
ImagePicker: __WEBPACK_IMPORTED_MODULE_88__plugins_image_picker__["a" /* ImagePicker */],
ImageResizer: __WEBPACK_IMPORTED_MODULE_89__plugins_image_resizer__["a" /* ImageResizer */],
InAppBrowser: __WEBPACK_IMPORTED_MODULE_90__plugins_in_app_browser__["a" /* InAppBrowser */],
InAppPurchase: __WEBPACK_IMPORTED_MODULE_91__plugins_in_app_purchase__["a" /* InAppPurchase */],
InAppPurchase2: __WEBPACK_IMPORTED_MODULE_92__plugins_in_app_purchase_2__["a" /* InAppPurchase2 */],
IndexAppContent: __WEBPACK_IMPORTED_MODULE_93__plugins_index_app_content__["a" /* IndexAppContent */],
Insomnia: __WEBPACK_IMPORTED_MODULE_94__plugins_insomnia__["a" /* Insomnia */],
Instagram: __WEBPACK_IMPORTED_MODULE_95__plugins_instagram__["a" /* Instagram */],
IntelSecurity: __WEBPACK_IMPORTED_MODULE_96__plugins_intel_security__["a" /* IntelSecurity */],
Intercom: __WEBPACK_IMPORTED_MODULE_97__plugins_intercom__["a" /* Intercom */],
IsDebug: __WEBPACK_IMPORTED_MODULE_98__plugins_is_debug__["a" /* IsDebug */],
JinsMeme: __WEBPACK_IMPORTED_MODULE_99__plugins_jins_meme__["a" /* JinsMeme */],
Keyboard: __WEBPACK_IMPORTED_MODULE_100__plugins_keyboard__["a" /* Keyboard */],
Keychain: __WEBPACK_IMPORTED_MODULE_101__plugins_keychain__["a" /* Keychain */],
KeychainTouchId: __WEBPACK_IMPORTED_MODULE_102__plugins_keychain_touch_id__["a" /* KeychainTouchId */],
LaunchNavigator: __WEBPACK_IMPORTED_MODULE_103__plugins_launch_navigator__["a" /* LaunchNavigator */],
LaunchReview: __WEBPACK_IMPORTED_MODULE_104__plugins_launch_review__["a" /* LaunchReview */],
LinkedIn: __WEBPACK_IMPORTED_MODULE_105__plugins_linkedin__["a" /* LinkedIn */],
LocalNotifications: __WEBPACK_IMPORTED_MODULE_106__plugins_local_notifications__["a" /* LocalNotifications */],
LocationAccuracy: __WEBPACK_IMPORTED_MODULE_107__plugins_location_accuracy__["a" /* LocationAccuracy */],
Market: __WEBPACK_IMPORTED_MODULE_108__plugins_market__["a" /* Market */],
Media: __WEBPACK_IMPORTED_MODULE_109__plugins_media__["a" /* Media */],
MediaCapture: __WEBPACK_IMPORTED_MODULE_110__plugins_media_capture__["a" /* MediaCapture */],
Mixpanel: __WEBPACK_IMPORTED_MODULE_111__plugins_mixpanel__["a" /* Mixpanel */],
MixpanelPeople: __WEBPACK_IMPORTED_MODULE_111__plugins_mixpanel__["b" /* MixpanelPeople */],
MobileAccessibility: __WEBPACK_IMPORTED_MODULE_112__plugins_mobile_accessibility__["a" /* MobileAccessibility */],
MSAdal: __WEBPACK_IMPORTED_MODULE_113__plugins_ms_adal__["a" /* MSAdal */],
MusicControls: __WEBPACK_IMPORTED_MODULE_114__plugins_music_controls__["a" /* MusicControls */],
NativeAudio: __WEBPACK_IMPORTED_MODULE_115__plugins_native_audio__["a" /* NativeAudio */],
NativeGeocoder: __WEBPACK_IMPORTED_MODULE_116__plugins_native_geocoder__["a" /* NativeGeocoder */],
NativeKeyboard: __WEBPACK_IMPORTED_MODULE_117__plugins_native_keyboard__["a" /* NativeKeyboard */],
NativePageTransitions: __WEBPACK_IMPORTED_MODULE_118__plugins_native_page_transitions__["a" /* NativePageTransitions */],
NativeRingtones: __WEBPACK_IMPORTED_MODULE_119__plugins_native_ringtones__["a" /* NativeRingtones */],
NativeStorage: __WEBPACK_IMPORTED_MODULE_120__plugins_native_storage__["a" /* NativeStorage */],
NavigationBar: __WEBPACK_IMPORTED_MODULE_121__plugins_navigation_bar__["a" /* NavigationBar */],
Network: __WEBPACK_IMPORTED_MODULE_122__plugins_network__["a" /* Network */],
NetworkInterface: __WEBPACK_IMPORTED_MODULE_123__plugins_network_interface__["a" /* NetworkInterface */],
NFC: __WEBPACK_IMPORTED_MODULE_124__plugins_nfc__["a" /* NFC */],
Ndef: __WEBPACK_IMPORTED_MODULE_124__plugins_nfc__["b" /* Ndef */],
NfcUtil: __WEBPACK_IMPORTED_MODULE_124__plugins_nfc__["c" /* NfcUtil */],
OneSignal: __WEBPACK_IMPORTED_MODULE_125__plugins_onesignal__["a" /* OneSignal */],
OpenNativeSettings: __WEBPACK_IMPORTED_MODULE_126__plugins_open_native_settings__["a" /* OpenNativeSettings */],
PayPal: __WEBPACK_IMPORTED_MODULE_127__plugins_paypal__["a" /* PayPal */],
Pedometer: __WEBPACK_IMPORTED_MODULE_128__plugins_pedometer__["a" /* Pedometer */],
PhonegapLocalNotification: __WEBPACK_IMPORTED_MODULE_129__plugins_phonegap_local_notification__["a" /* PhonegapLocalNotification */],
PhotoLibrary: __WEBPACK_IMPORTED_MODULE_130__plugins_photo_library__["a" /* PhotoLibrary */],
PhotoViewer: __WEBPACK_IMPORTED_MODULE_131__plugins_photo_viewer__["a" /* PhotoViewer */],
PinCheck: __WEBPACK_IMPORTED_MODULE_132__plugins_pin_check__["a" /* PinCheck */],
PinDialog: __WEBPACK_IMPORTED_MODULE_133__plugins_pin_dialog__["a" /* PinDialog */],
Pinterest: __WEBPACK_IMPORTED_MODULE_134__plugins_pinterest__["a" /* Pinterest */],
PowerManagement: __WEBPACK_IMPORTED_MODULE_135__plugins_power_management__["a" /* PowerManagement */],
Printer: __WEBPACK_IMPORTED_MODULE_136__plugins_printer__["a" /* Printer */],
Pro: __WEBPACK_IMPORTED_MODULE_137__plugins_pro__["a" /* Pro */],
Push: __WEBPACK_IMPORTED_MODULE_138__plugins_push__["a" /* Push */],
QQSDK: __WEBPACK_IMPORTED_MODULE_139__plugins_qqsdk__["a" /* QQSDK */],
QRScanner: __WEBPACK_IMPORTED_MODULE_140__plugins_qr_scanner__["a" /* QRScanner */],
RegulaDocumentReader: __WEBPACK_IMPORTED_MODULE_141__plugins_regula_document_reader__["a" /* RegulaDocumentReader */],
Rollbar: __WEBPACK_IMPORTED_MODULE_142__plugins_rollbar__["a" /* Rollbar */],
SafariViewController: __WEBPACK_IMPORTED_MODULE_143__plugins_safari_view_controller__["a" /* SafariViewController */],
ScreenOrientation: __WEBPACK_IMPORTED_MODULE_144__plugins_screen_orientation__["a" /* ScreenOrientation */],
Screenshot: __WEBPACK_IMPORTED_MODULE_145__plugins_screenshot__["a" /* Screenshot */],
SecureStorage: __WEBPACK_IMPORTED_MODULE_146__plugins_secure_storage__["a" /* SecureStorage */],
Serial: __WEBPACK_IMPORTED_MODULE_147__plugins_serial__["a" /* Serial */],
Shake: __WEBPACK_IMPORTED_MODULE_148__plugins_shake__["a" /* Shake */],
Sim: __WEBPACK_IMPORTED_MODULE_149__plugins_sim__["a" /* Sim */],
SMS: __WEBPACK_IMPORTED_MODULE_150__plugins_sms__["a" /* SMS */],
SocialSharing: __WEBPACK_IMPORTED_MODULE_151__plugins_social_sharing__["a" /* SocialSharing */],
SpeechRecognition: __WEBPACK_IMPORTED_MODULE_152__plugins_speech_recognition__["a" /* SpeechRecognition */],
SpinnerDialog: __WEBPACK_IMPORTED_MODULE_153__plugins_spinner_dialog__["a" /* SpinnerDialog */],
SplashScreen: __WEBPACK_IMPORTED_MODULE_154__plugins_splash_screen__["a" /* SplashScreen */],
SQLite: __WEBPACK_IMPORTED_MODULE_155__plugins_sqlite__["a" /* SQLite */],
SQLitePorter: __WEBPACK_IMPORTED_MODULE_156__plugins_sqlite_porter__["a" /* SQLitePorter */],
StatusBar: __WEBPACK_IMPORTED_MODULE_157__plugins_status_bar__["a" /* StatusBar */],
Stepcounter: __WEBPACK_IMPORTED_MODULE_158__plugins_stepcounter__["a" /* Stepcounter */],
StreamingMedia: __WEBPACK_IMPORTED_MODULE_159__plugins_streaming_media__["a" /* StreamingMedia */],
Stripe: __WEBPACK_IMPORTED_MODULE_160__plugins_stripe__["a" /* Stripe */],
TapticEngine: __WEBPACK_IMPORTED_MODULE_161__plugins_taptic_engine__["a" /* TapticEngine */],
TextToSpeech: __WEBPACK_IMPORTED_MODULE_162__plugins_text_to_speech__["a" /* TextToSpeech */],
ThemeableBrowser: __WEBPACK_IMPORTED_MODULE_163__plugins_themeable_browser__["a" /* ThemeableBrowser */],
ThreeDeeTouch: __WEBPACK_IMPORTED_MODULE_164__plugins_three_dee_touch__["a" /* ThreeDeeTouch */],
Toast: __WEBPACK_IMPORTED_MODULE_165__plugins_toast__["a" /* Toast */],
TouchID: __WEBPACK_IMPORTED_MODULE_166__plugins_touch_id__["a" /* TouchID */],
TwitterConnect: __WEBPACK_IMPORTED_MODULE_167__plugins_twitter_connect__["a" /* TwitterConnect */],
Uid: __WEBPACK_IMPORTED_MODULE_168__plugins_uid__["a" /* Uid */],
UniqueDeviceID: __WEBPACK_IMPORTED_MODULE_169__plugins_unique_device_id__["a" /* UniqueDeviceID */],
UserAgent: __WEBPACK_IMPORTED_MODULE_170__plugins_user_agent__["a" /* UserAgent */],
Vibration: __WEBPACK_IMPORTED_MODULE_171__plugins_vibration__["a" /* Vibration */],
VideoCapturePlus: __WEBPACK_IMPORTED_MODULE_172__plugins_video_capture_plus__["a" /* VideoCapturePlus */],
VideoEditor: __WEBPACK_IMPORTED_MODULE_173__plugins_video_editor__["a" /* VideoEditor */],
VideoPlayer: __WEBPACK_IMPORTED_MODULE_174__plugins_video_player__["a" /* VideoPlayer */],
WebIntent: __WEBPACK_IMPORTED_MODULE_175__plugins_web_intent__["a" /* WebIntent */],
WheelSelector: __WEBPACK_IMPORTED_MODULE_176__plugins_wheel_selector__["a" /* WheelSelector */],
YoutubeVideoPlayer: __WEBPACK_IMPORTED_MODULE_177__plugins_youtube_video_player__["a" /* YoutubeVideoPlayer */],
ZBar: __WEBPACK_IMPORTED_MODULE_178__plugins_zbar__["a" /* ZBar */],
Zeroconf: __WEBPACK_IMPORTED_MODULE_179__plugins_zeroconf__["a" /* Zeroconf */],
Zip: __WEBPACK_IMPORTED_MODULE_180__plugins_zip__["a" /* Zip */]
};
__webpack_require__(61).checkReady();
__webpack_require__(649).initAngular1(window.IonicNative);

/***/ }),
/* 169 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ActionSheet; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var ActionSheetOriginal = /** @class */ (function (_super) {
    __extends(ActionSheetOriginal, _super);
    function ActionSheetOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Convenience property to select an Android theme value
         */
        _this.ANDROID_THEMES = {
            THEME_TRADITIONAL: 1,
            THEME_HOLO_DARK: 2,
            THEME_HOLO_LIGHT: 3,
            THEME_DEVICE_DEFAULT_DARK: 4,
            THEME_DEVICE_DEFAULT_LIGHT: 5
        };
        return _this;
    }
    ActionSheetOriginal.prototype.show = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", {}, arguments); };
    ActionSheetOriginal.prototype.hide = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hide", {}, arguments); };
    ActionSheetOriginal.pluginName = "ActionSheet";
    ActionSheetOriginal.plugin = "cordova-plugin-actionsheet";
    ActionSheetOriginal.pluginRef = "plugins.actionsheet";
    ActionSheetOriginal.repo = "https://github.com/EddyVerbruggen/cordova-plugin-actionsheet";
    ActionSheetOriginal.platforms = ["Android", "Browser", "iOS", "Windows", "Windows Phone 8"];
    return ActionSheetOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var ActionSheet = new ActionSheetOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9hY3Rpb24tc2hlZXQvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBa0d2QywrQkFBaUI7OztRQUVoRDs7V0FFRztRQUNILG9CQUFjLEdBTVY7WUFDRixpQkFBaUIsRUFBRSxDQUFDO1lBQ3BCLGVBQWUsRUFBRSxDQUFDO1lBQ2xCLGdCQUFnQixFQUFFLENBQUM7WUFDbkIseUJBQXlCLEVBQUUsQ0FBQztZQUM1QiwwQkFBMEIsRUFBRSxDQUFDO1NBQzlCLENBQUM7OztJQVNGLDBCQUFJLGFBQUMsT0FBNEI7SUFVakMsMEJBQUksYUFBQyxPQUFhOzs7Ozs7c0JBdklwQjtFQW1HaUMsaUJBQWlCO1NBQXJDLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBBY3Rpb25TaGVldE9wdGlvbnMge1xuXG4gIC8qKlxuICAgKiBUaGUgbGFiZWxzIGZvciB0aGUgYnV0dG9ucy4gVXNlcyB0aGUgaW5kZXggeFxuICAgKi9cbiAgYnV0dG9uTGFiZWxzOiBzdHJpbmdbXTtcblxuICAvKipcbiAgICogVGhlIHRpdGxlIGZvciB0aGUgYWN0aW9uc2hlZXRcbiAgICovXG4gIHRpdGxlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgc3VidGl0bGUgZm9yIHRoZSBhY3Rpb25zaGVldCAoSU9TIG9ubHkpXG4gICAqL1xuICBzdWJ0aXRsZT86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlbWUgdG8gYmUgdXNlZCBvbiBBbmRyb2lkXG4gICAqL1xuICBhbmRyb2lkVGhlbWU/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEVuYWJsZSBhIGNhbmNlbCBvbiBBbmRyb2lkXG4gICAqL1xuICBhbmRyb2lkRW5hYmxlQ2FuY2VsQnV0dG9uPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogRW5hYmxlIGEgY2FuY2VsIG9uIFdpbmRvd3MgUGhvbmVcbiAgICovXG4gIHdpbnBob25lRW5hYmxlQ2FuY2VsQnV0dG9uPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogQWRkIGEgY2FuY2VsIGJ1dHRvbiB3aXRoIHRleHRcbiAgICovXG4gIGFkZENhbmNlbEJ1dHRvbldpdGhMYWJlbD86IHN0cmluZztcblxuICAvKipcbiAgICogQWRkIGEgZGVzdHJ1Y3RpdmUgYnV0dG9uIHdpdGggdGV4dFxuICAgKi9cbiAgYWRkRGVzdHJ1Y3RpdmVCdXR0b25XaXRoTGFiZWw/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIE9uIGFuIGlQYWQsIHNldCB0aGUgWCxZIHBvc2l0aW9uXG4gICAqL1xuICBwb3NpdGlvbj86IG51bWJlcltdO1xuXG4gIC8qKlxuICAgKiBDaG9vc2UgaWYgZGVzdHJ1Y3RpdmUgYnV0dG9uIHdpbGwgYmUgdGhlIGxhc3RcbiAgICovXG4gIGRlc3RydWN0aXZlQnV0dG9uTGFzdD86IGJvb2xlYW47XG59XG5cbi8qKlxuICogQG5hbWUgQWN0aW9uIFNoZWV0XG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBBY3Rpb25TaGVldCBwbHVnaW4gc2hvd3MgYSBuYXRpdmUgbGlzdCBvZiBvcHRpb25zIHRoZSB1c2VyIGNhbiBjaG9vc2UgZnJvbS5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtcGx1Z2luLWFjdGlvbnNoZWV0YC4gRm9yIG1vcmUgaW5mbywgcGxlYXNlIHNlZSB0aGUgW0FjdGlvblNoZWV0IHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vRWRkeVZlcmJydWdnZW4vY29yZG92YS1wbHVnaW4tYWN0aW9uc2hlZXQpLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQWN0aW9uU2hlZXQsIEFjdGlvblNoZWV0T3B0aW9ucyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvYWN0aW9uLXNoZWV0JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGFjdGlvblNoZWV0OiBBY3Rpb25TaGVldCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICpcbiAqIGxldCBidXR0b25MYWJlbHMgPSBbJ1NoYXJlIHZpYSBGYWNlYm9vaycsICdTaGFyZSB2aWEgVHdpdHRlciddO1xuICpcbiAqIGNvbnN0IG9wdGlvbnM6IEFjdGlvblNoZWV0T3B0aW9ucyA9IHtcbiAqICAgdGl0bGU6ICdXaGF0IGRvIHlvdSB3YW50IHdpdGggdGhpcyBpbWFnZT8nLFxuICogICBzdWJ0aXRsZTogJ0Nob29zZSBhbiBhY3Rpb24nLFxuICogICBidXR0b25MYWJlbHM6IGJ1dHRvbkxhYmVscyxcbiAqICAgYWRkQ2FuY2VsQnV0dG9uV2l0aExhYmVsOiAnQ2FuY2VsJyxcbiAqICAgYWRkRGVzdHJ1Y3RpdmVCdXR0b25XaXRoTGFiZWw6ICdEZWxldGUnLFxuICogICBhbmRyb2lkVGhlbWU6IHRoaXMuYWN0aW9uU2hlZXQuQU5EUk9JRF9USEVNRVMuVEhFTUVfSE9MT19EQVJLLFxuICogICBkZXN0cnVjdGl2ZUJ1dHRvbkxhc3Q6IHRydWVcbiAqIH1cbiAqXG4gKiB0aGlzLmFjdGlvblNoZWV0LnNob3cob3B0aW9ucykudGhlbigoYnV0dG9uSW5kZXg6IG51bWJlcikgPT4ge1xuICogICBjb25zb2xlLmxvZygnQnV0dG9uIHByZXNzZWQ6ICcgKyBidXR0b25JbmRleCk7XG4gKiB9KTtcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIEFjdGlvblNoZWV0T3B0aW9uc1xuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0FjdGlvblNoZWV0JyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tYWN0aW9uc2hlZXQnLFxuICBwbHVnaW5SZWY6ICdwbHVnaW5zLmFjdGlvbnNoZWV0JyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9FZGR5VmVyYnJ1Z2dlbi9jb3Jkb3ZhLXBsdWdpbi1hY3Rpb25zaGVldCcsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0Jyb3dzZXInLCAnaU9TJywgJ1dpbmRvd3MnLCAnV2luZG93cyBQaG9uZSA4J11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQWN0aW9uU2hlZXQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIHByb3BlcnR5IHRvIHNlbGVjdCBhbiBBbmRyb2lkIHRoZW1lIHZhbHVlXG4gICAqL1xuICBBTkRST0lEX1RIRU1FUzoge1xuICAgIFRIRU1FX1RSQURJVElPTkFMOiBudW1iZXI7XG4gICAgVEhFTUVfSE9MT19EQVJLOiBudW1iZXI7XG4gICAgVEhFTUVfSE9MT19MSUdIVDogbnVtYmVyO1xuICAgIFRIRU1FX0RFVklDRV9ERUZBVUxUX0RBUks6IG51bWJlcjtcbiAgICBUSEVNRV9ERVZJQ0VfREVGQVVMVF9MSUdIVDogbnVtYmVyO1xuICB9ID0ge1xuICAgIFRIRU1FX1RSQURJVElPTkFMOiAxLFxuICAgIFRIRU1FX0hPTE9fREFSSzogMixcbiAgICBUSEVNRV9IT0xPX0xJR0hUOiAzLFxuICAgIFRIRU1FX0RFVklDRV9ERUZBVUxUX0RBUks6IDQsXG4gICAgVEhFTUVfREVWSUNFX0RFRkFVTFRfTElHSFQ6IDVcbiAgfTtcblxuICAvKipcbiAgICogU2hvdyBhIG5hdGl2ZSBBY3Rpb25TaGVldCBjb21wb25lbnQuIFNlZSBiZWxvdyBmb3Igb3B0aW9ucy5cbiAgICogQHBhcmFtIG9wdGlvbnMge0FjdGlvblNoZWV0T3B0aW9uc30gT3B0aW9ucyBTZWUgdGFibGUgYmVsb3dcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBpbmRleCBvZiB0aGVcbiAgICogICBidXR0b24gcHJlc3NlZCAoMSBiYXNlZCwgc28gMSwgMiwgMywgZXRjLilcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc2hvdyhvcHRpb25zPzogQWN0aW9uU2hlZXRPcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuXG4gIC8qKlxuICAgKiBQcm9nYW10aWNhbGx5IGhpZGUgdGhlIG5hdGl2ZSBBY3Rpb25TaGVldFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIGFjdGlvbnNoZWV0IGlzIGNsb3NlZFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBoaWRlKG9wdGlvbnM/OiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 170 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IonicNativePlugin; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__decorators_common__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(174);


var IonicNativePlugin = /** @class */ (function () {
    function IonicNativePlugin() {
    }
    /**
     * Returns a boolean that indicates whether the plugin is installed
     * @return {boolean}
     */
    IonicNativePlugin.installed = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__decorators_common__["a" /* checkAvailability */])(this.pluginRef) === true; };
    /**
     * Returns the original plugin object
     */
    IonicNativePlugin.getPlugin = function () { return Object(__WEBPACK_IMPORTED_MODULE_1__util__["a" /* get */])(window, this.pluginRef); };
    /**
     * Returns the plugin's name
     */
    IonicNativePlugin.getPluginName = function () { return this.pluginName; };
    /**
     * Returns the plugin's reference
     */
    IonicNativePlugin.getPluginRef = function () { return this.pluginRef; };
    /**
     * Returns the plugin's install name
     */
    IonicNativePlugin.getPluginInstallName = function () { return this.plugin; };
    /**
     * Returns the plugin's supported platforms
     */
    IonicNativePlugin.getSupportedPlatforms = function () { return this.platforms || []; };
    return IonicNativePlugin;
}());

//# sourceMappingURL=ionic-native-plugin.js.map

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Subscriber_1 = __webpack_require__(3);
var rxSubscriber_1 = __webpack_require__(28);
var Observer_1 = __webpack_require__(65);
function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof Subscriber_1.Subscriber) {
            return nextOrObserver;
        }
        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {
            return nextOrObserver[rxSubscriber_1.rxSubscriber]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new Subscriber_1.Subscriber(Observer_1.empty);
    }
    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);
}
exports.toSubscriber = toSubscriber;
//# sourceMappingURL=toSubscriber.js.map

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FromEventObservable_1 = __webpack_require__(173);
exports.fromEvent = FromEventObservable_1.FromEventObservable.create;
//# sourceMappingURL=fromEvent.js.map

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var tryCatch_1 = __webpack_require__(10);
var isFunction_1 = __webpack_require__(27);
var errorObject_1 = __webpack_require__(8);
var Subscription_1 = __webpack_require__(7);
var toString = Object.prototype.toString;
function isNodeStyleEventEmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}
function isJQueryStyleEventEmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}
function isNodeList(sourceObj) {
    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';
}
function isHTMLCollection(sourceObj) {
    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';
}
function isEventTarget(sourceObj) {
    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromEventObservable = (function (_super) {
    __extends(FromEventObservable, _super);
    function FromEventObservable(sourceObj, eventName, selector, options) {
        _super.call(this);
        this.sourceObj = sourceObj;
        this.eventName = eventName;
        this.selector = selector;
        this.options = options;
    }
    /* tslint:enable:max-line-length */
    /**
     * Creates an Observable that emits events of a specific type coming from the
     * given event target.
     *
     * <span class="informal">Creates an Observable from DOM events, or Node.js
     * EventEmitter events or others.</span>
     *
     * <img src="./img/fromEvent.png" width="100%">
     *
     * `fromEvent` accepts as a first argument event target, which is an object with methods
     * for registering event handler functions. As a second argument it takes string that indicates
     * type of event we want to listen for. `fromEvent` supports selected types of event targets,
     * which are described in detail below. If your event target does not match any of the ones listed,
     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.
     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event
     * handler functions have different names, but they all accept a string describing event type
     * and function itself, which will be called whenever said event happens.
     *
     * Every time resulting Observable is subscribed, event handler function will be registered
     * to event target on given event type. When that event fires, value
     * passed as a first argument to registered function will be emitted by output Observable.
     * When Observable is unsubscribed, function will be unregistered from event target.
     *
     * Note that if event target calls registered function with more than one argument, second
     * and following arguments will not appear in resulting stream. In order to get access to them,
     * you can pass to `fromEvent` optional project function, which will be called with all arguments
     * passed to event handler. Output Observable will then emit value returned by project function,
     * instead of the usual value.
     *
     * Remember that event targets listed below are checked via duck typing. It means that
     * no matter what kind of object you have and no matter what environment you work in,
     * you can safely use `fromEvent` on that object if it exposes described methods (provided
     * of course they behave as was described above). So for example if Node.js library exposes
     * event target which has the same method names as DOM EventTarget, `fromEvent` is still
     * a good choice.
     *
     * If the API you use is more callback then event handler oriented (subscribed
     * callback function fires only once and thus there is no need to manually
     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}
     * instead.
     *
     * `fromEvent` supports following types of event targets:
     *
     * **DOM EventTarget**
     *
     * This is an object with `addEventListener` and `removeEventListener` methods.
     *
     * In the browser, `addEventListener` accepts - apart from event type string and event
     * handler function arguments - optional third parameter, which is either an object or boolean,
     * both used for additional configuration how and when passed function will be called. When
     * `fromEvent` is used with event target of that type, you can provide this values
     * as third parameter as well.
     *
     * **Node.js EventEmitter**
     *
     * An object with `addListener` and `removeListener` methods.
     *
     * **JQuery-style event target**
     *
     * An object with `on` and `off` methods
     *
     * **DOM NodeList**
     *
     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.
     *
     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes
     * it contains and install event handler function in every of them. When returned Observable
     * is unsubscribed, function will be removed from all Nodes.
     *
     * **DOM HtmlCollection**
     *
     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is
     * installed and removed in each of elements.
     *
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * var clicks = Rx.Observable.fromEvent(document, 'click');
     * clicks.subscribe(x => console.log(x));
     *
     * // Results in:
     * // MouseEvent object logged to console every time a click
     * // occurs on the document.
     *
     *
     * @example <caption>Use addEventListener with capture option</caption>
     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter
     *                                                                          // which will be passed to addEventListener
     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');
     *
     * clicksInDocument.subscribe(() => console.log('document'));
     * clicksInDiv.subscribe(() => console.log('div'));
     *
     * // By default events bubble UP in DOM tree, so normally
     * // when we would click on div in document
     * // "div" would be logged first and then "document".
     * // Since we specified optional `capture` option, document
     * // will catch event when it goes DOWN DOM tree, so console
     * // will log "document" and then "div".
     *
     * @see {@link bindCallback}
     * @see {@link bindNodeCallback}
     * @see {@link fromEventPattern}
     *
     * @param {EventTargetLike} target The DOM EventTarget, Node.js
     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.
     * @param {string} eventName The event name of interest, being emitted by the
     * `target`.
     * @param {EventListenerOptions} [options] Options to pass through to addEventListener
     * @param {SelectorMethodSignature<T>} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEvent
     * @owner Observable
     */
    FromEventObservable.create = function (target, eventName, options, selector) {
        if (isFunction_1.isFunction(options)) {
            selector = options;
            options = undefined;
        }
        return new FromEventObservable(target, eventName, selector, options);
    };
    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {
        var unsubscribe;
        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {
            for (var i = 0, len = sourceObj.length; i < len; i++) {
                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
            }
        }
        else if (isEventTarget(sourceObj)) {
            var source_1 = sourceObj;
            sourceObj.addEventListener(eventName, handler, options);
            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };
        }
        else if (isJQueryStyleEventEmitter(sourceObj)) {
            var source_2 = sourceObj;
            sourceObj.on(eventName, handler);
            unsubscribe = function () { return source_2.off(eventName, handler); };
        }
        else if (isNodeStyleEventEmitter(sourceObj)) {
            var source_3 = sourceObj;
            sourceObj.addListener(eventName, handler);
            unsubscribe = function () { return source_3.removeListener(eventName, handler); };
        }
        else {
            throw new TypeError('Invalid event target');
        }
        subscriber.add(new Subscription_1.Subscription(unsubscribe));
    };
    FromEventObservable.prototype._subscribe = function (subscriber) {
        var sourceObj = this.sourceObj;
        var eventName = this.eventName;
        var options = this.options;
        var selector = this.selector;
        var handler = selector ? function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);
            if (result === errorObject_1.errorObject) {
                subscriber.error(errorObject_1.errorObject.e);
            }
            else {
                subscriber.next(result);
            }
        } : function (e) { return subscriber.next(e); };
        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);
    };
    return FromEventObservable;
}(Observable_1.Observable));
exports.FromEventObservable = FromEventObservable;
//# sourceMappingURL=FromEventObservable.js.map

/***/ }),
/* 174 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = get;
/* unused harmony export getPromise */
/**
 * @private
 */
function get(element, path) {
    var paths = path.split('.');
    var obj = element;
    for (var i = 0; i < paths.length; i++) {
        if (!obj) {
            return null;
        }
        obj = obj[paths[i]];
    }
    return obj;
}
/**
 * @private
 */
function getPromise(callback) {
    if (callback === void 0) { callback = function () { }; }
    var tryNativePromise = function () {
        if (window.Promise) {
            return new Promise(function (resolve, reject) {
                callback(resolve, reject);
            });
        }
        else {
            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');
        }
    };
    return tryNativePromise();
}
//# sourceMappingURL=util.js.map

/***/ }),
/* 175 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = cordova;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17);

function cordova(pluginObj, methodName, config, args) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__common__["d" /* wrap */])(pluginObj, methodName, config).apply(this, args);
}
//# sourceMappingURL=cordova.js.map

/***/ }),
/* 176 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = cordovaFunctionOverride;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);


function overrideFunction(pluginObj, methodName) {
    return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
        var availabilityCheck = Object(__WEBPACK_IMPORTED_MODULE_0__common__["a" /* checkAvailability */])(pluginObj, methodName);
        if (availabilityCheck === true) {
            var pluginInstance_1 = Object(__WEBPACK_IMPORTED_MODULE_0__common__["b" /* getPlugin */])(pluginObj.constructor.getPluginRef());
            pluginInstance_1[methodName] = observer.next.bind(observer);
            return function () { return pluginInstance_1[methodName] = function () { }; };
        }
        else {
            observer.error(availabilityCheck);
            observer.complete();
        }
    });
}
function cordovaFunctionOverride(pluginObj, methodName, args) {
    if (args === void 0) { args = []; }
    return overrideFunction(pluginObj, methodName);
}
//# sourceMappingURL=cordova-function-override.js.map

/***/ }),
/* 177 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = cordovaInstance;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17);

function cordovaInstance(pluginObj, methodName, config, args) {
    args = Array.from(args);
    return Object(__WEBPACK_IMPORTED_MODULE_0__common__["e" /* wrapInstance */])(pluginObj, methodName, config).apply(this, args);
}
//# sourceMappingURL=cordova-instance.js.map

/***/ }),
/* 178 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = cordovaPropertyGet;
/* harmony export (immutable) */ __webpack_exports__["b"] = cordovaPropertySet;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(17);

function cordovaPropertyGet(pluginObj, key) {
    if (Object(__WEBPACK_IMPORTED_MODULE_0__common__["a" /* checkAvailability */])(pluginObj, key) === true) {
        return Object(__WEBPACK_IMPORTED_MODULE_0__common__["b" /* getPlugin */])(pluginObj.constructor.getPluginRef())[key];
    }
    return null;
}
function cordovaPropertySet(pluginObj, key, value) {
    if (Object(__WEBPACK_IMPORTED_MODULE_0__common__["a" /* checkAvailability */])(pluginObj, key) === true) {
        Object(__WEBPACK_IMPORTED_MODULE_0__common__["b" /* getPlugin */])(pluginObj.constructor.getPluginRef())[key] = value;
    }
}
//# sourceMappingURL=cordova-property.js.map

/***/ }),
/* 179 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = instancePropertyGet;
/* harmony export (immutable) */ __webpack_exports__["b"] = instancePropertySet;
function instancePropertyGet(pluginObj, key) {
    if (!!pluginObj._objectInstance && !!pluginObj._objectInstance[key]) {
        return pluginObj._objectInstance[key];
    }
    return null;
}
function instancePropertySet(pluginObj, key, value) {
    if (!!pluginObj._objectInstance && !!pluginObj._objectInstance[key]) {
        pluginObj._objectInstance[key] = value;
    }
}
//# sourceMappingURL=instance-property.js.map

/***/ }),
/* 180 */
/***/ (function(module, exports) {

//# sourceMappingURL=interfaces.js.map

/***/ }),
/* 181 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export AdMobFreeBanner */
/* unused harmony export AdMobFreeInterstitial */
/* unused harmony export AdMobFreeRewardVideo */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdMobFree; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_fromEvent__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_fromEvent___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_fromEvent__);




var AdMobFreeBanner = /** @class */ (function () {
    function AdMobFreeBanner() {
    }
    AdMobFreeBanner.prototype.config = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "config", { "sync": true }, arguments); };
    AdMobFreeBanner.prototype.hide = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hide", { "otherPromise": true }, arguments); };
    AdMobFreeBanner.prototype.prepare = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "prepare", { "otherPromise": true }, arguments); };
    AdMobFreeBanner.prototype.remove = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "remove", { "otherPromise": true }, arguments); };
    AdMobFreeBanner.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "otherPromise": true }, arguments); };
    AdMobFreeBanner.pluginName = "AdMobFree";
    AdMobFreeBanner.plugin = "cordova-plugin-admob-free";
    AdMobFreeBanner.pluginRef = "admob.banner";
    return AdMobFreeBanner;
}());

var AdMobFreeInterstitial = /** @class */ (function () {
    function AdMobFreeInterstitial() {
    }
    AdMobFreeInterstitial.prototype.config = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "config", { "sync": true }, arguments); };
    AdMobFreeInterstitial.prototype.isReady = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isReady", { "otherPromise": true }, arguments); };
    AdMobFreeInterstitial.prototype.prepare = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "prepare", { "otherPromise": true }, arguments); };
    AdMobFreeInterstitial.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "otherPromise": true }, arguments); };
    AdMobFreeInterstitial.pluginName = "AdMobFree";
    AdMobFreeInterstitial.plugin = "cordova-plugin-admob-free";
    AdMobFreeInterstitial.pluginRef = "admob.interstitial";
    return AdMobFreeInterstitial;
}());

var AdMobFreeRewardVideo = /** @class */ (function () {
    function AdMobFreeRewardVideo() {
    }
    AdMobFreeRewardVideo.prototype.config = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "config", { "sync": true }, arguments); };
    AdMobFreeRewardVideo.prototype.isReady = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isReady", { "otherPromise": true }, arguments); };
    AdMobFreeRewardVideo.prototype.prepare = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "prepare", { "otherPromise": true }, arguments); };
    AdMobFreeRewardVideo.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "otherPromise": true }, arguments); };
    AdMobFreeRewardVideo.pluginName = "AdMobFree";
    AdMobFreeRewardVideo.plugin = "cordova-plugin-admob-free";
    AdMobFreeRewardVideo.pluginRef = "admob.rewardvideo";
    return AdMobFreeRewardVideo;
}());

var AdMobFreeOriginal = /** @class */ (function (_super) {
    __extends(AdMobFreeOriginal, _super);
    function AdMobFreeOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Convenience object to get event names
         * @type {Object}
         */
        _this.events = {
            BANNER_LOAD: 'admob.banner.events.LOAD',
            BANNER_LOAD_FAIL: 'admob.banner.events.LOAD_FAIL',
            BANNER_OPEN: 'admob.banner.events.OPEN',
            BANNER_CLOSE: 'admob.banner.events.CLOSE',
            BANNER_EXIT_APP: 'admob.banner.events.EXIT_APP',
            INTERSTITIAL_LOAD: 'admob.interstitial.events.LOAD',
            INTERSTITIAL_LOAD_FAIL: 'admob.interstitial.events.LOAD_FAIL',
            INTERSTITIAL_OPEN: 'admob.interstitial.events.OPEN',
            INTERSTITIAL_CLOSE: 'admob.interstitial.events.CLOSE',
            INTERSTITIAL_EXIT_APP: 'admob.interstitial.events.EXIT_APP',
            REWARD_VIDEO_LOAD: 'admob.rewardvideo.events.LOAD',
            REWARD_VIDEO_LOAD_FAIL: 'admob.rewardvideo.events.LOAD_FAIL',
            REWARD_VIDEO_OPEN: 'admob.rewardvideo.events.OPEN',
            REWARD_VIDEO_CLOSE: 'admob.rewardvideo.events.CLOSE',
            REWARD_VIDEO_EXIT_APP: 'admob.rewardvideo.events.EXIT_APP',
            REWARD_VIDEO_START: 'admob.rewardvideo.events.START',
            REWARD_VIDEO_REWARD: 'admob.rewardvideo.events.REWARD'
        };
        /**
         * Returns the AdMobFreeBanner object
         * @type {AdMobFreeBanner}
         */
        _this.banner = new AdMobFreeBanner();
        /**
         * Returns the AdMobFreeInterstitial object
         * @type {AdMobFreeInterstitial}
         */
        _this.interstitial = new AdMobFreeInterstitial();
        /**
         * Returns the AdMobFreeRewardVideo object
         * @type {AdMobFreeRewardVideo}
         */
        _this.rewardVideo = new AdMobFreeRewardVideo();
        return _this;
    }
    /**
     * Watch an event
     * @param event {string} event name
     * @return {Observable<any>}
     */
    AdMobFreeOriginal.prototype.on = function (event) {
        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"].fromEvent(document, event);
    };
    AdMobFreeOriginal.pluginName = "AdMobFree";
    AdMobFreeOriginal.plugin = "cordova-plugin-admob-free";
    AdMobFreeOriginal.pluginRef = "admob";
    AdMobFreeOriginal.repo = "https://github.com/ratson/cordova-plugin-admob-free";
    AdMobFreeOriginal.platforms = ["Android", "iOS"];
    return AdMobFreeOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AdMobFree = new AdMobFreeOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 182 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdMobPro; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var AdMobProOriginal = /** @class */ (function (_super) {
    __extends(AdMobProOriginal, _super);
    function AdMobProOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AD_POSITION = {
            NO_CHANGE: 0,
            TOP_LEFT: 1,
            TOP_CENTER: 2,
            TOP_RIGHT: 3,
            LEFT: 4,
            CENTER: 5,
            RIGHT: 6,
            BOTTOM_LEFT: 7,
            BOTTOM_CENTER: 8,
            BOTTOM_RIGHT: 9,
            POS_XY: 10
        };
        return _this;
    }
    AdMobProOriginal.prototype.createBanner = function (adIdOrOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createBanner", {}, arguments); };
    AdMobProOriginal.prototype.removeBanner = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "removeBanner", { "sync": true }, arguments); };
    AdMobProOriginal.prototype.showBanner = function (position) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showBanner", { "sync": true }, arguments); };
    AdMobProOriginal.prototype.showBannerAtXY = function (x, y) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showBannerAtXY", { "sync": true }, arguments); };
    AdMobProOriginal.prototype.hideBanner = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hideBanner", { "sync": true }, arguments); };
    AdMobProOriginal.prototype.prepareInterstitial = function (adIdOrOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "prepareInterstitial", {}, arguments); };
    AdMobProOriginal.prototype.showInterstitial = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showInterstitial", { "sync": true }, arguments); };
    AdMobProOriginal.prototype.prepareRewardVideoAd = function (adIdOrOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "prepareRewardVideoAd", {}, arguments); };
    AdMobProOriginal.prototype.showRewardVideoAd = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showRewardVideoAd", { "sync": true }, arguments); };
    AdMobProOriginal.prototype.setOptions = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setOptions", {}, arguments); };
    AdMobProOriginal.prototype.getAdSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAdSettings", {}, arguments); };
    AdMobProOriginal.prototype.onAdFailLoad = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onAdFailLoad", { "eventObservable": true, "event": "onAdFailLoad", "element": "document" }, arguments); };
    AdMobProOriginal.prototype.onAdLoaded = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onAdLoaded", { "eventObservable": true, "event": "onAdLoaded", "element": "document" }, arguments); };
    AdMobProOriginal.prototype.onAdPresent = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onAdPresent", { "eventObservable": true, "event": "onAdPresent", "element": "document" }, arguments); };
    AdMobProOriginal.prototype.onAdLeaveApp = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onAdLeaveApp", { "eventObservable": true, "event": "onAdLeaveApp", "element": "document" }, arguments); };
    AdMobProOriginal.prototype.onAdDismiss = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onAdDismiss", { "eventObservable": true, "event": "onAdDismiss", "element": "document" }, arguments); };
    AdMobProOriginal.pluginName = "AdMob Pro";
    AdMobProOriginal.plugin = "cordova-plugin-admobpro";
    AdMobProOriginal.pluginRef = "AdMob";
    AdMobProOriginal.repo = "https://github.com/floatinghotpot/cordova-admob-pro";
    AdMobProOriginal.platforms = ["Android", "iOS", "Windows Phone 8"];
    return AdMobProOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AdMobPro = new AdMobProOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 183 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Alipay; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var AlipayOriginal = /** @class */ (function (_super) {
    __extends(AlipayOriginal, _super);
    function AlipayOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AlipayOriginal.prototype.pay = function (order) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "pay", {}, arguments); };
    AlipayOriginal.pluginName = "Alipay";
    AlipayOriginal.plugin = "cordova-alipay-base";
    AlipayOriginal.pluginRef = "Alipay.Base";
    AlipayOriginal.repo = "https://github.com/xueron/cordova-alipay-base";
    AlipayOriginal.install = "ionic cordova plugin add cordova-alipay-base --variable ALI_PID=your_app_id";
    AlipayOriginal.installVariables = ["ALI_PID"];
    AlipayOriginal.platforms = ["Android", "iOS"];
    return AlipayOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Alipay = new AlipayOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9hbGlwYXkvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBMkc1QywwQkFBaUI7Ozs7SUFPM0Msb0JBQUcsYUFBQyxLQUEyQjs7Ozs7Ozs7aUJBbEhqQztFQTJHNEIsaUJBQWlCO1NBQWhDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuXG5leHBvcnQgaW50ZXJmYWNlIEFsaXBheU9yZGVyIHtcbiAgLyoqXG4gICAqIGFwcElkIGFzc2lnbmVkIGJ5IEFsaXBheVxuICAgKi9cbiAgYXBwX2lkOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEFwaSBuYW1lLlxuICAgKiBTaG91bGQgYmU6IGFsaXBheS50cmFkZS5hcHAucGF5XG4gICAqL1xuICBtZXRob2Q6IHN0cmluZztcblxuICAvKipcbiAgICogRGF0YSBmb3JtYXRcbiAgICogRGVmYXVsdDogXCJKU09OXCJcbiAgICovXG4gIGZvcm1hdD86IHN0cmluZztcblxuICAvKipcbiAgICogQ2hhcnNldFxuICAgKiBQb3NzaWJsZSB2YWx1ZXM6IFwiVVRGLThcIiwgXCJHQktcIlxuICAgKiBEZWZhdWx0OiBcIlVURi04XCJcbiAgICovXG4gIGNoYXJzZXQ6IHN0cmluZztcblxuICAvKipcbiAgICogU2lnbiBtZXRob2RcbiAgICogRGVmYXVsdDogJ1JTQSdcbiAgICovXG4gIHNpZ25fdHlwZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBTaWduIHZhbHVlLiBTaG91bGQgYmUgZ290IGZyb20gc2VydmVyIHNpZGUuXG4gICAqIERlZmF1bHQ6ICdSU0EnXG4gICAqL1xuICBzaWduOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRpbWVzdGFtcCwgZm9ybWF0ZWQgbGlrZSBcInl5eXktTU0tZGQgSEg6bW06c3NcIiwgZS5nLiAyMDE0LTA3LTI0IDAzOjA3OjUwXG4gICAqL1xuICB0aW1lc3RhbXA6IHN0cmluZztcblxuICAvKipcbiAgICogQXBpIHZlcnNpb24uIEZpeGVkIHZhbHVlICcxLjAnXG4gICAqL1xuICB2ZXJzaW9uOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIE5vdGlmeSB1cmwuXG4gICAqL1xuICBub3RpZnlfdXJsOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIGJpeiBjb250ZW50LiBmb3JtYXRlZCBpbiBqc29uLiBzZWUgYWxpcGF5IGRvYyBmb3IgZGV0YWlsLlxuICAgKi9cbiAgYml6X2NvbnRlbnQ6IHN0cmluZztcbn1cblxuLyoqXG4gKiBAbmFtZSBBbGlwYXlcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gaXMgdXNlZCBmb3IgQWxpcGF5IEFQUCBzdXBwb3J0LiBJbnRlZ3JhdGVkIHdpdGggdGhlIGxhdGVzdCBTREsuXG4gKlxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGBjb3Jkb3ZhLWFsaXBheS1iYXNlYC4gRm9yIG1vcmUgaW5mbywgcGxlYXNlIHNlZSB0aGUgW0FsaXBheSBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL3h1ZXJvbi9jb3Jkb3ZhLWFsaXBheS1iYXNlKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEFsaXBheSwgQWxpcGF5T3JkZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2FsaXBheSc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBhbGlwYXk6IEFsaXBheSkge1xuICpcbiAqIC8vIFNob3VsZCBnZXQgZnJvbSBzZXJ2ZXIgc2lkZSB3aXRoIHNpZ24uXG4gKiBjb25zdCBhbGlwYXlPcmRlcjogQWxpcGF5T3JkZXIgPSB7XG4gKiAgICAgICAuLi5cbiAqICAgICB9XG4gKlxuICpcbiAqIHRoaXMuYWxpcGF5LnBheShhbGlwYXlPcmRlcilcbiAqICAgIC50aGVuKHJlc3VsdCA9PiB7XG4gKiAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpOyAvLyBTdWNjZXNzXG4gKiAgICB9KVxuICogICAgLmNhdGNoKGVycm9yID0+IHtcbiAqICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsgLy8gRmFpbGVkXG4gKiAgICB9KTtcbiAqXG4gKiB9XG4gKlxuICpcbiAqIGBgYFxuICpcbiAqIEBpbnRlcmZhY2VzXG4gKiBBbGlwYXlPcmRlclxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0FsaXBheScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtYWxpcGF5LWJhc2UnLFxuICBwbHVnaW5SZWY6ICdBbGlwYXkuQmFzZScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20veHVlcm9uL2NvcmRvdmEtYWxpcGF5LWJhc2UnLFxuICBpbnN0YWxsOiAnaW9uaWMgY29yZG92YSBwbHVnaW4gYWRkIGNvcmRvdmEtYWxpcGF5LWJhc2UgLS12YXJpYWJsZSBBTElfUElEPXlvdXJfYXBwX2lkJyxcbiAgaW5zdGFsbFZhcmlhYmxlczogWydBTElfUElEJ10sXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEFsaXBheSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIE9wZW4gQWxpcGF5IHRvIHBlcmZvcm0gQXBwIHBheVxuICAgKiBAcGFyYW0gb3JkZXIgeyBBbGlwYXlPcmRlciB8IHN0cmluZyB9IGFsaXBheSBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgc3VjY2VzcyByZXR1cm4sIG9yIHJlamVjdHMgd2l0aCBhbiBlcnJvci5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcGF5KG9yZGVyOiBBbGlwYXlPcmRlciB8IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 184 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AndroidExoplayer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var AndroidExoplayerOriginal = /** @class */ (function (_super) {
    __extends(AndroidExoplayerOriginal, _super);
    function AndroidExoplayerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AndroidExoplayerOriginal.prototype.show = function (parameters) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "observable": true, "clearFunction": "close", "clearWithArgs": false, "successIndex": 1, "errorIndex": 2 }, arguments); };
    AndroidExoplayerOriginal.prototype.setStream = function (url, controller) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setStream", {}, arguments); };
    AndroidExoplayerOriginal.prototype.playPause = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "playPause", {}, arguments); };
    AndroidExoplayerOriginal.prototype.stop = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stop", {}, arguments); };
    AndroidExoplayerOriginal.prototype.seekTo = function (milliseconds) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "seekTo", {}, arguments); };
    AndroidExoplayerOriginal.prototype.seekBy = function (milliseconds) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "seekBy", {}, arguments); };
    AndroidExoplayerOriginal.prototype.getState = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getState", {}, arguments); };
    AndroidExoplayerOriginal.prototype.showController = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showController", {}, arguments); };
    AndroidExoplayerOriginal.prototype.hideController = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hideController", {}, arguments); };
    AndroidExoplayerOriginal.prototype.setController = function (controller) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setController", {}, arguments); };
    AndroidExoplayerOriginal.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "close", {}, arguments); };
    AndroidExoplayerOriginal.pluginName = "AndroidExoPlayer";
    AndroidExoplayerOriginal.plugin = "cordova-plugin-exoplayer";
    AndroidExoplayerOriginal.pluginRef = "ExoPlayer";
    AndroidExoplayerOriginal.repo = "https://github.com/frontyard/cordova-plugin-exoplayer";
    AndroidExoplayerOriginal.platforms = ["Android"];
    return AndroidExoplayerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AndroidExoplayer = new AndroidExoplayerOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 185 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AndroidFingerprintAuth; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var AndroidFingerprintAuthOriginal = /** @class */ (function (_super) {
    __extends(AndroidFingerprintAuthOriginal, _super);
    function AndroidFingerprintAuthOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AndroidFingerprintAuthOriginal.prototype.encrypt = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "encrypt", {}, arguments); };
    AndroidFingerprintAuthOriginal.prototype.decrypt = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "decrypt", {}, arguments); };
    AndroidFingerprintAuthOriginal.prototype.isAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAvailable", {}, arguments); };
    AndroidFingerprintAuthOriginal.prototype.delete = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "delete", {}, arguments); };
    AndroidFingerprintAuthOriginal.pluginName = "AndroidFingerprintAuth";
    AndroidFingerprintAuthOriginal.plugin = "cordova-plugin-android-fingerprint-auth";
    AndroidFingerprintAuthOriginal.pluginRef = "FingerprintAuth";
    AndroidFingerprintAuthOriginal.repo = "https://github.com/mjwheatley/cordova-plugin-android-fingerprint-auth";
    AndroidFingerprintAuthOriginal.platforms = ["Android"];
    return AndroidFingerprintAuthOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AndroidFingerprintAuth = new AndroidFingerprintAuthOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 186 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export AndroidSystemUiFlags */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AndroidFullScreen; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


/**
 * Bit flag values for setSystemUiVisibility()
 * @see  https://developer.android.com/reference/android/view/View.html#setSystemUiVisibility(int)
 */
var AndroidSystemUiFlags;
(function (AndroidSystemUiFlags) {
    /** View has requested the system UI (status bar) to be visible (the default). SYSTEM_UI_FLAG_VISIBLE */
    AndroidSystemUiFlags[AndroidSystemUiFlags["Visible"] = 0] = "Visible";
    /** View has requested the system UI to enter an unobtrusive "low profile" mode. SYSTEM_UI_FLAG_LOW_PROFILE */
    AndroidSystemUiFlags[AndroidSystemUiFlags["LowProfile"] = 1] = "LowProfile";
    /** View has requested that the system navigation be temporarily hidden. SYSTEM_UI_FLAG_HIDE_NAVIGATION */
    AndroidSystemUiFlags[AndroidSystemUiFlags["HideNavigation"] = 2] = "HideNavigation";
    /** View has requested to go into the normal fullscreen mode so that its content can take over the screen while still allowing the user to interact with the application. SYSTEM_UI_FLAG_FULLSCREEN */
    AndroidSystemUiFlags[AndroidSystemUiFlags["Fullscreen"] = 4] = "Fullscreen";
    /** Requests the navigation bar to draw in a mode that is compatible with light navigation bar backgrounds. SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR */
    AndroidSystemUiFlags[AndroidSystemUiFlags["LightNavigationBar"] = 16] = "LightNavigationBar";
    /** When using other layout flags, we would like a stable view of the content insets given to fitSystemWindows(Rect). SYSTEM_UI_FLAG_LAYOUT_STABLE */
    AndroidSystemUiFlags[AndroidSystemUiFlags["LayoutStable"] = 256] = "LayoutStable";
    /** View would like its window to be laid out as if it has requested SYSTEM_UI_FLAG_HIDE_NAVIGATION, even if it currently hasn't. SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION */
    AndroidSystemUiFlags[AndroidSystemUiFlags["LayoutHideNavigation"] = 512] = "LayoutHideNavigation";
    /** View would like its window to be laid out as if it has requested SYSTEM_UI_FLAG_FULLSCREEN, even if it currently hasn't. SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN */
    AndroidSystemUiFlags[AndroidSystemUiFlags["LayoutFullscreen"] = 1024] = "LayoutFullscreen";
    /** View would like to remain interactive when hiding the navigation bar with SYSTEM_UI_FLAG_HIDE_NAVIGATION. SYSTEM_UI_FLAG_IMMERSIVE */
    AndroidSystemUiFlags[AndroidSystemUiFlags["Immersive"] = 2048] = "Immersive";
    /** View would like to remain interactive when hiding the status bar with SYSTEM_UI_FLAG_FULLSCREEN and/or hiding the navigation bar with SYSTEM_UI_FLAG_HIDE_NAVIGATION. SYSTEM_UI_FLAG_IMMERSIVE_STICKY */
    AndroidSystemUiFlags[AndroidSystemUiFlags["ImmersiveSticky"] = 4096] = "ImmersiveSticky";
    /** Requests the status bar to draw in a mode that is compatible with light status bar backgrounds. SYSTEM_UI_FLAG_LIGHT_STATUS_BAR */
    AndroidSystemUiFlags[AndroidSystemUiFlags["LightStatusBar"] = 8192] = "LightStatusBar";
})(AndroidSystemUiFlags || (AndroidSystemUiFlags = {}));
var AndroidFullScreenOriginal = /** @class */ (function (_super) {
    __extends(AndroidFullScreenOriginal, _super);
    function AndroidFullScreenOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AndroidFullScreenOriginal.prototype.isSupported = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isSupported", {}, arguments); };
    AndroidFullScreenOriginal.prototype.isImmersiveModeSupported = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isImmersiveModeSupported", {}, arguments); };
    AndroidFullScreenOriginal.prototype.immersiveWidth = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "immersiveWidth", {}, arguments); };
    AndroidFullScreenOriginal.prototype.immersiveHeight = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "immersiveHeight", {}, arguments); };
    AndroidFullScreenOriginal.prototype.leanMode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "leanMode", {}, arguments); };
    AndroidFullScreenOriginal.prototype.showSystemUI = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showSystemUI", {}, arguments); };
    AndroidFullScreenOriginal.prototype.showUnderStatusBar = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showUnderStatusBar", {}, arguments); };
    AndroidFullScreenOriginal.prototype.showUnderSystemUI = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showUnderSystemUI", {}, arguments); };
    AndroidFullScreenOriginal.prototype.immersiveMode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "immersiveMode", {}, arguments); };
    AndroidFullScreenOriginal.prototype.setSystemUiVisibility = function (visibility) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setSystemUiVisibility", {}, arguments); };
    AndroidFullScreenOriginal.pluginName = "AndroidFullScreen";
    AndroidFullScreenOriginal.plugin = "cordova-plugin-fullscreen";
    AndroidFullScreenOriginal.pluginRef = "AndroidFullScreen";
    AndroidFullScreenOriginal.repo = "https://github.com/mesmotronic/cordova-plugin-fullscreen";
    AndroidFullScreenOriginal.platforms = ["Android"];
    return AndroidFullScreenOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AndroidFullScreen = new AndroidFullScreenOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9hbmRyb2lkLWZ1bGwtc2NyZWVuL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDO0FBRXhFOzs7R0FHRztBQUNILE1BQU0sQ0FBTixJQUFZLG9CQXVCWDtBQXZCRCxXQUFZLG9CQUFvQjtJQUM5Qix3R0FBd0c7SUFDeEcscUVBQVcsQ0FBQTtJQUNYLDhHQUE4RztJQUM5RywyRUFBYyxDQUFBO0lBQ2QsMEdBQTBHO0lBQzFHLG1GQUFrQixDQUFBO0lBQ2xCLHNNQUFzTTtJQUN0TSwyRUFBYyxDQUFBO0lBQ2Qsa0pBQWtKO0lBQ2xKLDRGQUF1QixDQUFBO0lBQ3ZCLHFKQUFxSjtJQUNySixpRkFBa0IsQ0FBQTtJQUNsQiwwS0FBMEs7SUFDMUssaUdBQTBCLENBQUE7SUFDMUIsZ0tBQWdLO0lBQ2hLLDBGQUF1QixDQUFBO0lBQ3ZCLHlJQUF5STtJQUN6SSw0RUFBZ0IsQ0FBQTtJQUNoQiw0TUFBNE07SUFDNU0sd0ZBQXNCLENBQUE7SUFDdEIsc0lBQXNJO0lBQ3RJLHNGQUFxQixDQUFBO0FBQ3ZCLENBQUMsRUF2Qlcsb0JBQW9CLEtBQXBCLG9CQUFvQixRQXVCL0I7O0lBOEJzQyxxQ0FBaUI7Ozs7SUFNdEQsdUNBQVc7SUFTWCxvREFBd0I7SUFTeEIsMENBQWM7SUFTZCwyQ0FBZTtJQVNmLG9DQUFRO0lBU1Isd0NBQVk7SUFTWiw4Q0FBa0I7SUFTbEIsNkNBQWlCO0lBU2pCLHlDQUFhO0lBV2IsaURBQXFCLGFBQUMsVUFBZ0M7Ozs7Ozs0QkFySnhEO0VBNER1QyxpQkFBaUI7U0FBM0MsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQml0IGZsYWcgdmFsdWVzIGZvciBzZXRTeXN0ZW1VaVZpc2liaWxpdHkoKVxuICogQHNlZSAgaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vcmVmZXJlbmNlL2FuZHJvaWQvdmlldy9WaWV3Lmh0bWwjc2V0U3lzdGVtVWlWaXNpYmlsaXR5KGludClcbiAqL1xuZXhwb3J0IGVudW0gQW5kcm9pZFN5c3RlbVVpRmxhZ3Mge1xuICAvKiogVmlldyBoYXMgcmVxdWVzdGVkIHRoZSBzeXN0ZW0gVUkgKHN0YXR1cyBiYXIpIHRvIGJlIHZpc2libGUgKHRoZSBkZWZhdWx0KS4gU1lTVEVNX1VJX0ZMQUdfVklTSUJMRSAqL1xuICBWaXNpYmxlID0gMCxcbiAgLyoqIFZpZXcgaGFzIHJlcXVlc3RlZCB0aGUgc3lzdGVtIFVJIHRvIGVudGVyIGFuIHVub2J0cnVzaXZlIFwibG93IHByb2ZpbGVcIiBtb2RlLiBTWVNURU1fVUlfRkxBR19MT1dfUFJPRklMRSAqL1xuICBMb3dQcm9maWxlID0gMSxcbiAgLyoqIFZpZXcgaGFzIHJlcXVlc3RlZCB0aGF0IHRoZSBzeXN0ZW0gbmF2aWdhdGlvbiBiZSB0ZW1wb3JhcmlseSBoaWRkZW4uIFNZU1RFTV9VSV9GTEFHX0hJREVfTkFWSUdBVElPTiAqL1xuICBIaWRlTmF2aWdhdGlvbiA9IDIsXG4gIC8qKiBWaWV3IGhhcyByZXF1ZXN0ZWQgdG8gZ28gaW50byB0aGUgbm9ybWFsIGZ1bGxzY3JlZW4gbW9kZSBzbyB0aGF0IGl0cyBjb250ZW50IGNhbiB0YWtlIG92ZXIgdGhlIHNjcmVlbiB3aGlsZSBzdGlsbCBhbGxvd2luZyB0aGUgdXNlciB0byBpbnRlcmFjdCB3aXRoIHRoZSBhcHBsaWNhdGlvbi4gU1lTVEVNX1VJX0ZMQUdfRlVMTFNDUkVFTiAqL1xuICBGdWxsc2NyZWVuID0gNCxcbiAgLyoqIFJlcXVlc3RzIHRoZSBuYXZpZ2F0aW9uIGJhciB0byBkcmF3IGluIGEgbW9kZSB0aGF0IGlzIGNvbXBhdGlibGUgd2l0aCBsaWdodCBuYXZpZ2F0aW9uIGJhciBiYWNrZ3JvdW5kcy4gU1lTVEVNX1VJX0ZMQUdfTElHSFRfTkFWSUdBVElPTl9CQVIgKi9cbiAgTGlnaHROYXZpZ2F0aW9uQmFyID0gMTYsXG4gIC8qKiBXaGVuIHVzaW5nIG90aGVyIGxheW91dCBmbGFncywgd2Ugd291bGQgbGlrZSBhIHN0YWJsZSB2aWV3IG9mIHRoZSBjb250ZW50IGluc2V0cyBnaXZlbiB0byBmaXRTeXN0ZW1XaW5kb3dzKFJlY3QpLiBTWVNURU1fVUlfRkxBR19MQVlPVVRfU1RBQkxFICovXG4gIExheW91dFN0YWJsZSA9IDI1NixcbiAgLyoqIFZpZXcgd291bGQgbGlrZSBpdHMgd2luZG93IHRvIGJlIGxhaWQgb3V0IGFzIGlmIGl0IGhhcyByZXF1ZXN0ZWQgU1lTVEVNX1VJX0ZMQUdfSElERV9OQVZJR0FUSU9OLCBldmVuIGlmIGl0IGN1cnJlbnRseSBoYXNuJ3QuIFNZU1RFTV9VSV9GTEFHX0xBWU9VVF9ISURFX05BVklHQVRJT04gKi9cbiAgTGF5b3V0SGlkZU5hdmlnYXRpb24gPSA1MTIsXG4gIC8qKiBWaWV3IHdvdWxkIGxpa2UgaXRzIHdpbmRvdyB0byBiZSBsYWlkIG91dCBhcyBpZiBpdCBoYXMgcmVxdWVzdGVkIFNZU1RFTV9VSV9GTEFHX0ZVTExTQ1JFRU4sIGV2ZW4gaWYgaXQgY3VycmVudGx5IGhhc24ndC4gU1lTVEVNX1VJX0ZMQUdfTEFZT1VUX0ZVTExTQ1JFRU4gKi9cbiAgTGF5b3V0RnVsbHNjcmVlbiA9IDEwMjQsXG4gIC8qKiBWaWV3IHdvdWxkIGxpa2UgdG8gcmVtYWluIGludGVyYWN0aXZlIHdoZW4gaGlkaW5nIHRoZSBuYXZpZ2F0aW9uIGJhciB3aXRoIFNZU1RFTV9VSV9GTEFHX0hJREVfTkFWSUdBVElPTi4gU1lTVEVNX1VJX0ZMQUdfSU1NRVJTSVZFICovXG4gIEltbWVyc2l2ZSA9IDIwNDgsXG4gIC8qKiBWaWV3IHdvdWxkIGxpa2UgdG8gcmVtYWluIGludGVyYWN0aXZlIHdoZW4gaGlkaW5nIHRoZSBzdGF0dXMgYmFyIHdpdGggU1lTVEVNX1VJX0ZMQUdfRlVMTFNDUkVFTiBhbmQvb3IgaGlkaW5nIHRoZSBuYXZpZ2F0aW9uIGJhciB3aXRoIFNZU1RFTV9VSV9GTEFHX0hJREVfTkFWSUdBVElPTi4gU1lTVEVNX1VJX0ZMQUdfSU1NRVJTSVZFX1NUSUNLWSAqL1xuICBJbW1lcnNpdmVTdGlja3kgPSA0MDk2LFxuICAvKiogUmVxdWVzdHMgdGhlIHN0YXR1cyBiYXIgdG8gZHJhdyBpbiBhIG1vZGUgdGhhdCBpcyBjb21wYXRpYmxlIHdpdGggbGlnaHQgc3RhdHVzIGJhciBiYWNrZ3JvdW5kcy4gU1lTVEVNX1VJX0ZMQUdfTElHSFRfU1RBVFVTX0JBUiAqL1xuICBMaWdodFN0YXR1c0JhciA9IDgxOTJcbn1cblxuLyoqXG4gKiBAbmFtZSBBbmRyb2lkIEZ1bGwgU2NyZWVuXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoaXMgcGx1Z2luIGVuYWJsZXMgZGV2ZWxvcGVycyB0byBvZmZlciB1c2VycyBhIHRydWUgZnVsbCBzY3JlZW4gZXhwZXJpZW5jZSBpbiB0aGVpciBDb3Jkb3ZhIGFuZCBQaG9uZUdhcCBhcHBzIGZvciBBbmRyb2lkLlxuICogVXNpbmcgQW5kcm9pZCA0LjArLCB5b3UgY2FuIHVzZSB0cnVlIGZ1bGwgc2NyZWVuIGluIFwibGVhbiBtb2RlXCIsIHRoZSB3YXkgeW91IHNlZSBpbiBhcHBzIGxpa2UgWW91VHViZSwgZXhwYW5kaW5nIHRoZSBhcHAgcmlnaHQgdG8gdGhlIGVkZ2VzIG9mIHRoZSBzY3JlZW4sIGhpZGluZyB0aGUgc3RhdHVzIGFuZCBuYXZpZ2F0aW9uIGJhcnMgdW50aWwgdGhlIHVzZXIgbmV4dCBpbnRlcmFjdHMuIFRoaXMgaXMgaWRlYWxseSBzdWl0ZWQgdG8gdmlkZW8gb3IgY3V0LXNjZW5lIGNvbnRlbnQuXG4gKiBJbiBBbmRyb2lkIDQuNCssIGhvd2V2ZXIsIHlvdSBjYW4gbm93IGVudGVyIHRydWUgZnVsbCBzY3JlZW4sIGZ1bGx5IGludGVyYWN0aXZlIGltbWVyc2l2ZSBtb2RlLiBJbiB0aGlzIG1vZGUsIHlvdXIgYXBwIHdpbGwgcmVtYWluIGluIHRydWUgZnVsbCBzY3JlZW4gdW50aWwgeW91IGNob29zZSBvdGhlcndpc2U7IHVzZXJzIGNhbiBzd2lwZSBkb3duIGZyb20gdGhlIHRvcCBvZiB0aGUgc2NyZWVuIHRvIHRlbXBvcmFyaWx5IGRpc3BsYXkgdGhlIHN5c3RlbSBVSS5cbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQW5kcm9pZEZ1bGxTY3JlZW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2FuZHJvaWQtZnVsbC1zY3JlZW4nO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgYW5kcm9pZEZ1bGxTY3JlZW46IEFuZHJvaWRGdWxsU2NyZWVuKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmFuZHJvaWRGdWxsU2NyZWVuLmlzSW1tZXJzaXZlTW9kZVN1cHBvcnRlZCgpXG4gKiAgIC50aGVuKCgpID0+IHRoaXMuYW5kcm9pZEZ1bGxTY3JlZW4uaW1tZXJzaXZlTW9kZSgpKVxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUubG9nKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnQW5kcm9pZEZ1bGxTY3JlZW4nLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1mdWxsc2NyZWVuJyxcbiAgcGx1Z2luUmVmOiAnQW5kcm9pZEZ1bGxTY3JlZW4nLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL21lc21vdHJvbmljL2NvcmRvdmEtcGx1Z2luLWZ1bGxzY3JlZW4nLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEFuZHJvaWRGdWxsU2NyZWVuIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogSXMgdGhpcyBwbHVnaW4gc3VwcG9ydGVkP1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc1N1cHBvcnRlZCgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogSXMgaW1tZXJzaXZlIG1vZGUgc3VwcG9ydGVkP1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc0ltbWVyc2l2ZU1vZGVTdXBwb3J0ZWQoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSB3aWR0aCBvZiB0aGUgc2NyZWVuIGluIGltbWVyc2l2ZSBtb2RlLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPG51bWJlcj59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGltbWVyc2l2ZVdpZHRoKCk6IFByb21pc2U8bnVtYmVyPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBoZWlnaHQgb2YgdGhlIHNjcmVlbiBpbiBpbW1lcnNpdmUgbW9kZS5cbiAgICogQHJldHVybiB7UHJvbWlzZTxudW1iZXI+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpbW1lcnNpdmVIZWlnaHQoKTogUHJvbWlzZTxudW1iZXI+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogSGlkZSBzeXN0ZW0gVUkgdW50aWwgdXNlciBpbnRlcmFjdHMuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8dm9pZD59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGxlYW5Nb2RlKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTaG93IHN5c3RlbSBVSS5cbiAgICogQHJldHVybiB7UHJvbWlzZTx2b2lkPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc2hvd1N5c3RlbVVJKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeHRlbmQgeW91ciBhcHAgdW5kZXJuZWF0aCB0aGUgc3RhdHVzIGJhciAoQW5kcm9pZCA0LjQrIG9ubHkpLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzaG93VW5kZXJTdGF0dXNCYXIoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEV4dGVuZCB5b3VyIGFwcCB1bmRlcm5lYXRoIHRoZSBzeXN0ZW0gVUkgKEFuZHJvaWQgNC40KyBvbmx5KS5cbiAgICogQHJldHVybiB7UHJvbWlzZTx2b2lkPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc2hvd1VuZGVyU3lzdGVtVUkoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEhpZGUgc3lzdGVtIFVJIGFuZCBrZWVwIGl0IGhpZGRlbiAoQW5kcm9pZCA0LjQrIG9ubHkpLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpbW1lcnNpdmVNb2RlKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYW51YWxseSBzZXQgdGhlIHRoZSBzeXN0ZW0gVUkgdG8gYSBjdXN0b20gbW9kZS4gVGhpcyBtaXJyb3JzIHRoZSBBbmRyb2lkIG1ldGhvZCBvZiB0aGUgc2FtZSBuYW1lLiAoQW5kcm9pZCA0LjQrIG9ubHkpLlxuICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL3JlZmVyZW5jZS9hbmRyb2lkL3ZpZXcvVmlldy5odG1sI3NldFN5c3RlbVVpVmlzaWJpbGl0eShpbnQpXG4gICAqIEBwYXJhbSB7QW5kcm9pZFN5c3RlbVVpRmxhZ3N9IHZpc2liaWxpdHkgQml0d2lzZS1PUiBvZiBmbGFncyBpbiBBbmRyb2lkU3lzdGVtVWlGbGFnc1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXRTeXN0ZW1VaVZpc2liaWxpdHkodmlzaWJpbGl0eTogQW5kcm9pZFN5c3RlbVVpRmxhZ3MpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 187 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AndroidPermissions; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var AndroidPermissionsOriginal = /** @class */ (function (_super) {
    __extends(AndroidPermissionsOriginal, _super);
    function AndroidPermissionsOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.PERMISSION = {
            ACCESS_CHECKIN_PROPERTIES: 'android.permission.ACCESS_CHECKIN_PROPERTIES',
            ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',
            ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',
            ACCESS_LOCATION_EXTRA_COMMANDS: 'android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',
            ACCESS_MOCK_LOCATION: 'android.permission.ACCESS_MOCK_LOCATION',
            ACCESS_NETWORK_STATE: 'android.permission.ACCESS_NETWORK_STATE',
            ACCESS_SURFACE_FLINGER: 'android.permission.ACCESS_SURFACE_FLINGER',
            ACCESS_WIFI_STATE: 'android.permission.ACCESS_WIFI_STATE',
            ACCOUNT_MANAGER: 'android.permission.ACCOUNT_MANAGER',
            ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',
            AUTHENTICATE_ACCOUNTS: 'android.permission.AUTHENTICATE_ACCOUNTS',
            BATTERY_STATS: 'android.permission.BATTERY_STATS',
            BIND_ACCESSIBILITY_SERVICE: 'android.permission.BIND_ACCESSIBILITY_SERVICE',
            BIND_APPWIDGET: 'android.permission.BIND_APPWIDGET',
            BIND_CARRIER_MESSAGING_SERVICE: 'android.permission.BIND_CARRIER_MESSAGING_SERVICE',
            BIND_DEVICE_ADMIN: 'android.permission.BIND_DEVICE_ADMIN',
            BIND_DREAM_SERVICE: 'android.permission.BIND_DREAM_SERVICE',
            BIND_INPUT_METHOD: 'android.permission.BIND_INPUT_METHOD',
            BIND_NFC_SERVICE: 'android.permission.BIND_NFC_SERVICE',
            BIND_NOTIFICATION_LISTENER_SERVICE: 'android.permission.BIND_NOTIFICATION_LISTENER_SERVICE',
            BIND_PRINT_SERVICE: 'android.permission.BIND_PRINT_SERVICE',
            BIND_REMOTEVIEWS: 'android.permission.BIND_REMOTEVIEWS',
            BIND_TEXT_SERVICE: 'android.permission.BIND_TEXT_SERVICE',
            BIND_TV_INPUT: 'android.permission.BIND_TV_INPUT',
            BIND_VOICE_INTERACTION: 'android.permission.BIND_VOICE_INTERACTION',
            BIND_VPN_SERVICE: 'android.permission.BIND_VPN_SERVICE',
            BIND_WALLPAPER: 'android.permission.BIND_WALLPAPER',
            BLUETOOTH: 'android.permission.BLUETOOTH',
            BLUETOOTH_ADMIN: 'android.permission.BLUETOOTH_ADMIN',
            BLUETOOTH_PRIVILEGED: 'android.permission.BLUETOOTH_PRIVILEGED',
            BODY_SENSORS: 'android.permission.BODY_SENSORS',
            BRICK: 'android.permission.BRICK',
            BROADCAST_PACKAGE_REMOVED: 'android.permission.BROADCAST_PACKAGE_REMOVED',
            BROADCAST_SMS: 'android.permission.BROADCAST_SMS',
            BROADCAST_STICKY: 'android.permission.BROADCAST_STICKY',
            BROADCAST_WAP_PUSH: 'android.permission.BROADCAST_WAP_PUSH',
            CALL_PHONE: 'android.permission.CALL_PHONE',
            CALL_PRIVILEGED: 'android.permission.CALL_PRIVILEGED',
            CAMERA: 'android.permission.CAMERA',
            CAPTURE_AUDIO_OUTPUT: 'android.permission.CAPTURE_AUDIO_OUTPUT',
            CAPTURE_SECURE_VIDEO_OUTPUT: 'android.permission.CAPTURE_SECURE_VIDEO_OUTPUT',
            CAPTURE_VIDEO_OUTPUT: 'android.permission.CAPTURE_VIDEO_OUTPUT',
            CHANGE_COMPONENT_ENABLED_STATE: 'android.permission.CHANGE_COMPONENT_ENABLED_STATE',
            CHANGE_CONFIGURATION: 'android.permission.CHANGE_CONFIGURATION',
            CHANGE_NETWORK_STATE: 'android.permission.CHANGE_NETWORK_STATE',
            CHANGE_WIFI_MULTICAST_STATE: 'android.permission.CHANGE_WIFI_MULTICAST_STATE',
            CHANGE_WIFI_STATE: 'android.permission.CHANGE_WIFI_STATE',
            CLEAR_APP_CACHE: 'android.permission.CLEAR_APP_CACHE',
            CLEAR_APP_USER_DATA: 'android.permission.CLEAR_APP_USER_DATA',
            CONTROL_LOCATION_UPDATES: 'android.permission.CONTROL_LOCATION_UPDATES',
            DELETE_CACHE_FILES: 'android.permission.DELETE_CACHE_FILES',
            DELETE_PACKAGES: 'android.permission.DELETE_PACKAGES',
            DEVICE_POWER: 'android.permission.DEVICE_POWER',
            DIAGNOSTIC: 'android.permission.DIAGNOSTIC',
            DISABLE_KEYGUARD: 'android.permission.DISABLE_KEYGUARD',
            DUMP: 'android.permission.DUMP',
            EXPAND_STATUS_BAR: 'android.permission.EXPAND_STATUS_BAR',
            FACTORY_TEST: 'android.permission.FACTORY_TEST',
            FLASHLIGHT: 'android.permission.FLASHLIGHT',
            FORCE_BACK: 'android.permission.FORCE_BACK',
            GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',
            GET_PACKAGE_SIZE: 'android.permission.GET_PACKAGE_SIZE',
            GET_TASKS: 'android.permission.GET_TASKS',
            GET_TOP_ACTIVITY_INFO: 'android.permission.GET_TOP_ACTIVITY_INFO',
            GLOBAL_SEARCH: 'android.permission.GLOBAL_SEARCH',
            HARDWARE_TEST: 'android.permission.HARDWARE_TEST',
            INJECT_EVENTS: 'android.permission.INJECT_EVENTS',
            INSTALL_LOCATION_PROVIDER: 'android.permission.INSTALL_LOCATION_PROVIDER',
            INSTALL_PACKAGES: 'android.permission.INSTALL_PACKAGES',
            INSTALL_SHORTCUT: 'com.android.launcher.permission.INSTALL_SHORTCUT',
            INTERNAL_SYSTEM_WINDOW: 'android.permission.INTERNAL_SYSTEM_WINDOW',
            INTERNET: 'android.permission.INTERNET',
            KILL_BACKGROUND_PROCESSES: 'android.permission.KILL_BACKGROUND_PROCESSES',
            LOCATION_HARDWARE: 'android.permission.LOCATION_HARDWARE',
            MANAGE_ACCOUNTS: 'android.permission.MANAGE_ACCOUNTS',
            MANAGE_APP_TOKENS: 'android.permission.MANAGE_APP_TOKENS',
            MANAGE_DOCUMENTS: 'android.permission.MANAGE_DOCUMENTS',
            MASTER_CLEAR: 'android.permission.MASTER_CLEAR',
            MEDIA_CONTENT_CONTROL: 'android.permission.MEDIA_CONTENT_CONTROL',
            MODIFY_AUDIO_SETTINGS: 'android.permission.MODIFY_AUDIO_SETTINGS',
            MODIFY_PHONE_STATE: 'android.permission.MODIFY_PHONE_STATE',
            MOUNT_FORMAT_FILESYSTEMS: 'android.permission.MOUNT_FORMAT_FILESYSTEMS',
            MOUNT_UNMOUNT_FILESYSTEMS: 'android.permission.MOUNT_UNMOUNT_FILESYSTEMS',
            NFC: 'android.permission.NFC',
            PERSISTENT_ACTIVITY: 'android.permission.PERSISTENT_ACTIVITY',
            PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',
            READ_CALENDAR: 'android.permission.READ_CALENDAR',
            READ_CALL_LOG: 'android.permission.READ_CALL_LOG',
            READ_CONTACTS: 'android.permission.READ_CONTACTS',
            READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',
            READ_FRAME_BUFFER: 'android.permission.READ_FRAME_BUFFER',
            READ_HISTORY_BOOKMARKS: 'com.android.browser.permission.READ_HISTORY_BOOKMARKS',
            READ_INPUT_STATE: 'android.permission.READ_INPUT_STATE',
            READ_LOGS: 'android.permission.READ_LOGS',
            READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',
            READ_PROFILE: 'android.permission.READ_PROFILE',
            READ_SMS: 'android.permission.READ_SMS',
            READ_SOCIAL_STREAM: 'android.permission.READ_SOCIAL_STREAM',
            READ_SYNC_SETTINGS: 'android.permission.READ_SYNC_SETTINGS',
            READ_SYNC_STATS: 'android.permission.READ_SYNC_STATS',
            READ_USER_DICTIONARY: 'android.permission.READ_USER_DICTIONARY',
            READ_VOICEMAIL: 'com.android.voicemail.permission.READ_VOICEMAIL',
            REBOOT: 'android.permission.REBOOT',
            RECEIVE_BOOT_COMPLETED: 'android.permission.RECEIVE_BOOT_COMPLETED',
            RECEIVE_MMS: 'android.permission.RECEIVE_MMS',
            RECEIVE_SMS: 'android.permission.RECEIVE_SMS',
            RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',
            RECORD_AUDIO: 'android.permission.RECORD_AUDIO',
            REORDER_TASKS: 'android.permission.REORDER_TASKS',
            RESTART_PACKAGES: 'android.permission.RESTART_PACKAGES',
            SEND_RESPOND_VIA_MESSAGE: 'android.permission.SEND_RESPOND_VIA_MESSAGE',
            SEND_SMS: 'android.permission.SEND_SMS',
            SET_ACTIVITY_WATCHER: 'android.permission.SET_ACTIVITY_WATCHER',
            SET_ALARM: 'com.android.alarm.permission.SET_ALARM',
            SET_ALWAYS_FINISH: 'android.permission.SET_ALWAYS_FINISH',
            SET_ANIMATION_SCALE: 'android.permission.SET_ANIMATION_SCALE',
            SET_DEBUG_APP: 'android.permission.SET_DEBUG_APP',
            SET_ORIENTATION: 'android.permission.SET_ORIENTATION',
            SET_POINTER_SPEED: 'android.permission.SET_POINTER_SPEED',
            SET_PREFERRED_APPLICATIONS: 'android.permission.SET_PREFERRED_APPLICATIONS',
            SET_PROCESS_LIMIT: 'android.permission.SET_PROCESS_LIMIT',
            SET_TIME: 'android.permission.SET_TIME',
            SET_TIME_ZONE: 'android.permission.SET_TIME_ZONE',
            SET_WALLPAPER: 'android.permission.SET_WALLPAPER',
            SET_WALLPAPER_HINTS: 'android.permission.SET_WALLPAPER_HINTS',
            SIGNAL_PERSISTENT_PROCESSES: 'android.permission.SIGNAL_PERSISTENT_PROCESSES',
            STATUS_BAR: 'android.permission.STATUS_BAR',
            SUBSCRIBED_FEEDS_READ: 'android.permission.SUBSCRIBED_FEEDS_READ',
            SUBSCRIBED_FEEDS_WRITE: 'android.permission.SUBSCRIBED_FEEDS_WRITE',
            SYSTEM_ALERT_WINDOW: 'android.permission.SYSTEM_ALERT_WINDOW',
            TRANSMIT_IR: 'android.permission.TRANSMIT_IR',
            UNINSTALL_SHORTCUT: 'com.android.launcher.permission.UNINSTALL_SHORTCUT',
            UPDATE_DEVICE_STATS: 'android.permission.UPDATE_DEVICE_STATS',
            USE_CREDENTIALS: 'android.permission.USE_CREDENTIALS',
            USE_SIP: 'android.permission.USE_SIP',
            VIBRATE: 'android.permission.VIBRATE',
            WAKE_LOCK: 'android.permission.WAKE_LOCK',
            WRITE_APN_SETTINGS: 'android.permission.WRITE_APN_SETTINGS',
            WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',
            WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',
            WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',
            WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE',
            WRITE_GSERVICES: 'android.permission.WRITE_GSERVICES',
            WRITE_HISTORY_BOOKMARKS: 'com.android.browser.permission.WRITE_HISTORY_BOOKMARKS',
            WRITE_PROFILE: 'android.permission.WRITE_PROFILE',
            WRITE_SECURE_SETTINGS: 'android.permission.WRITE_SECURE_SETTINGS',
            WRITE_SETTINGS: 'android.permission.WRITE_SETTINGS',
            WRITE_SMS: 'android.permission.WRITE_SMS',
            WRITE_SOCIAL_STREAM: 'android.permission.WRITE_SOCIAL_STREAM',
            WRITE_SYNC_SETTINGS: 'android.permission.WRITE_SYNC_SETTINGS',
            WRITE_USER_DICTIONARY: 'android.permission.WRITE_USER_DICTIONARY',
            WRITE_VOICEMAIL: 'com.android.voicemail.permission.WRITE_VOICEMAIL',
        };
        return _this;
    }
    AndroidPermissionsOriginal.prototype.checkPermission = function (permission) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "checkPermission", {}, arguments); };
    AndroidPermissionsOriginal.prototype.requestPermission = function (permission) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestPermission", {}, arguments); };
    AndroidPermissionsOriginal.prototype.requestPermissions = function (permissions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestPermissions", {}, arguments); };
    AndroidPermissionsOriginal.prototype.hasPermission = function (permission) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasPermission", {}, arguments); };
    AndroidPermissionsOriginal.pluginName = "AndroidPermissions";
    AndroidPermissionsOriginal.plugin = "cordova-plugin-android-permissions";
    AndroidPermissionsOriginal.pluginRef = "cordova.plugins.permissions";
    AndroidPermissionsOriginal.repo = "https://github.com/NeoLSN/cordova-plugin-android-permissions";
    AndroidPermissionsOriginal.platforms = ["Android"];
    return AndroidPermissionsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AndroidPermissions = new AndroidPermissionsOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 188 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppAvailability; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var AppAvailabilityOriginal = /** @class */ (function (_super) {
    __extends(AppAvailabilityOriginal, _super);
    function AppAvailabilityOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppAvailabilityOriginal.prototype.check = function (app) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "check", {}, arguments); };
    AppAvailabilityOriginal.pluginName = "AppAvailability";
    AppAvailabilityOriginal.plugin = "cordova-plugin-appavailability";
    AppAvailabilityOriginal.pluginRef = "appAvailability";
    AppAvailabilityOriginal.repo = "https://github.com/ohh2ahh/AppAvailability";
    AppAvailabilityOriginal.platforms = ["Android", "iOS"];
    return AppAvailabilityOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AppAvailability = new AppAvailabilityOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9hcHAtYXZhaWxhYmlsaXR5L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQXlDbkMsbUNBQWlCOzs7O0lBUXBELCtCQUFLLGFBQUMsR0FBVzs7Ozs7OzBCQWxEbkI7RUEwQ3FDLGlCQUFpQjtTQUF6QyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgQXBwIEF2YWlsYWJpbGl0eVxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiBhbGxvd3MgeW91IHRvIGNoZWNrIGlmIGFuIGFwcCBpcyBpbnN0YWxsZWQgb24gdGhlIHVzZXIncyBkZXZpY2UuIEl0IHJlcXVpcmVzIGFuIFVSSSBTY2hlbWUgKGUuZy4gdHdpdHRlcjovLykgb24gaU9TIG9yIGEgUGFja2FnZSBOYW1lIChlLmcgY29tLnR3aXR0ZXIuYW5kcm9pZCkgb24gQW5kcm9pZC5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogY29yZG92YS1wbHVnaW4tYXBwYXZhaWxhYmlsaXR5LiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbQXBwQXZhaWxhYmlsaXR5IHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vb2hoMmFoaC9BcHBBdmFpbGFiaWxpdHkpLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQXBwQXZhaWxhYmlsaXR5IH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9hcHAtYXZhaWxhYmlsaXR5JztcbiAqIGltcG9ydCB7IFBsYXRmb3JtIH0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBhcHBBdmFpbGFiaWxpdHk6IEFwcEF2YWlsYWJpbGl0eSwgcHJpdmF0ZSBwbGF0Zm9ybTogUGxhdGZvcm0pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIGxldCBhcHA7XG4gKlxuICogaWYgKHRoaXMucGxhdGZvcm0uaXMoJ2lvcycpKSB7XG4gKiAgIGFwcCA9ICd0d2l0dGVyOi8vJztcbiAqIH0gZWxzZSBpZiAodGhpcy5wbGF0Zm9ybS5pcygnYW5kcm9pZCcpKSB7XG4gKiAgIGFwcCA9ICdjb20udHdpdHRlci5hbmRyb2lkJztcbiAqIH1cbiAqXG4gKiB0aGlzLmFwcEF2YWlsYWJpbGl0eS5jaGVjayhhcHApXG4gKiAgIC50aGVuKFxuICogICAgICh5ZXM6IHN0cmluZykgPT4gY29uc29sZS5sb2coYXBwICsgJyBpcyBhdmFpbGFibGUnKSxcbiAqICAgICAobm86IHN0cmluZykgPT4gY29uc29sZS5sb2coYXBwICsgJyBpcyBOT1QgYXZhaWxhYmxlJylcbiAqICAgKTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0FwcEF2YWlsYWJpbGl0eScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWFwcGF2YWlsYWJpbGl0eScsXG4gIHBsdWdpblJlZjogJ2FwcEF2YWlsYWJpbGl0eScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vb2hoMmFoaC9BcHBBdmFpbGFiaWxpdHknLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBcHBBdmFpbGFiaWxpdHkgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiBhbiBhcHAgaXMgYXZhaWxhYmxlIG9uIGRldmljZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gYXBwIFBhY2thZ2UgbmFtZSBvbiBhbmRyb2lkLCBvciBVUkkgc2NoZW1lIG9uIGlPU1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgY2hlY2soYXBwOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 189 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppMinimize; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var AppMinimizeOriginal = /** @class */ (function (_super) {
    __extends(AppMinimizeOriginal, _super);
    function AppMinimizeOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppMinimizeOriginal.prototype.minimize = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "minimize", {}, arguments); };
    AppMinimizeOriginal.pluginName = "AppMinimize";
    AppMinimizeOriginal.plugin = "cordova-plugin-appminimize";
    AppMinimizeOriginal.pluginRef = "plugins.appMinimize";
    AppMinimizeOriginal.repo = "https://github.com/tomloprod/cordova-plugin-appminimize";
    AppMinimizeOriginal.platforms = ["Android"];
    return AppMinimizeOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AppMinimize = new AppMinimizeOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9hcHAtbWluaW1pemUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBZ0N2QywrQkFBaUI7Ozs7SUFPaEQsOEJBQVE7Ozs7OztzQkF2Q1Y7RUFnQ2lDLGlCQUFpQjtTQUFyQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgQXBwIE1pbmltaXplXG4gKiBAZGVzY3JpcHRpb25cbiAqIEFwcE1pbmltaXplIGlzIGEgcGx1Z2luIHRvIG1pbmltaXplIHRoZSBhcHBsaWNhdGlvbiBvbiBhbmRyb2lkIGRldmljZXNcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFBsYXRmcm9tIH0gZnJvbSAnaW9uaWMtYW5ndWxhcic7XG4gKiBpbXBvcnQgeyBBcHBNaW5pbWl6ZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvYXBwLW1pbmltaXplJztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBwbGF0Zm9ybTogUGxhdGZvcm0sIHByaXZhdGUgYXBwTWluaW1pemU6IEFwcE1pbmltaXplKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLnBsYXRmb3JtLnJlZ2lzdGVyQmFja0J1dHRvbkFjdGlvbigoKSA9PiB7XG4gKiAgICB0aGlzLmFwcE1pbmltaXplLm1pbmltaXplKCk7XG4gKiB9KTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdBcHBNaW5pbWl6ZScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWFwcG1pbmltaXplJyxcbiAgcGx1Z2luUmVmOiAncGx1Z2lucy5hcHBNaW5pbWl6ZScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vdG9tbG9wcm9kL2NvcmRvdmEtcGx1Z2luLWFwcG1pbmltaXplJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBcHBNaW5pbWl6ZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogTWluaW1pemVzIHRoZSBhcHBsaWNhdGlvblxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIG1pbmltaXplKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 190 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppPreferences; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var AppPreferencesOriginal = /** @class */ (function (_super) {
    __extends(AppPreferencesOriginal, _super);
    function AppPreferencesOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppPreferencesOriginal.prototype.fetch = function (dict, key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "fetch", { "callbackOrder": "reverse" }, arguments); };
    AppPreferencesOriginal.prototype.store = function (dict, key, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "store", { "callbackOrder": "reverse" }, arguments); };
    AppPreferencesOriginal.prototype.remove = function (dict, key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "remove", { "callbackOrder": "reverse" }, arguments); };
    AppPreferencesOriginal.prototype.clearAll = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "clearAll", { "callbackOrder": "reverse" }, arguments); };
    AppPreferencesOriginal.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "callbackOrder": "reverse" }, arguments); };
    AppPreferencesOriginal.prototype.watch = function (subscribe) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "watch", { "observable": true }, arguments); };
    AppPreferencesOriginal.prototype.suite = function (suiteName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "suite", { "platforms": ["Android"], "sync": true }, arguments); };
    AppPreferencesOriginal.prototype.iosSuite = function (suiteName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "iosSuite", { "platforms": ["iOS"], "sync": true }, arguments); };
    AppPreferencesOriginal.prototype.cloudSync = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "cloudSync", { "platforms": ["iOS", "Windows", "Windows Phone 8"] }, arguments); };
    AppPreferencesOriginal.prototype.defaults = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "defaults", { "platforms": ["iOS", "Windows", "Windows Phone 8"] }, arguments); };
    AppPreferencesOriginal.pluginName = "AppPreferences";
    AppPreferencesOriginal.plugin = "cordova-plugin-app-preferences";
    AppPreferencesOriginal.pluginRef = "plugins.appPreferences";
    AppPreferencesOriginal.repo = "https://github.com/apla/me.apla.cordova.app-preferences";
    AppPreferencesOriginal.platforms = ["Android", "BlackBerry 10", "Browser", "iOS", "macOS", "Windows 8", "Windows Phone"];
    return AppPreferencesOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AppPreferences = new AppPreferencesOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9hcHAtcHJlZmVyZW5jZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQTZCVCxrQ0FBaUI7Ozs7SUFZbkQsOEJBQUssYUFBQyxJQUFZLEVBQUUsR0FBWTtJQWVoQyw4QkFBSyxhQUFDLElBQVksRUFBRSxHQUFXLEVBQUUsS0FBVztJQWM1QywrQkFBTSxhQUFDLElBQVksRUFBRSxHQUFZO0lBWWpDLGlDQUFRO0lBWVIsNkJBQUk7SUFhSiw4QkFBSyxhQUFDLFNBQWtCO0lBZXhCLDhCQUFLLGFBQUMsU0FBaUI7SUFRdkIsaUNBQVEsYUFBQyxTQUFpQjtJQVkxQixrQ0FBUztJQVlULGlDQUFROzs7Ozs7eUJBM0pWO0VBOEJvQyxpQkFBaUI7U0FBeEMsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgQXBwIFByZWZlcmVuY2VzXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoaXMgcGx1Z2luIGFsbG93cyB5b3UgdG8gcmVhZCBhbmQgd3JpdGUgYXBwIHByZWZlcmVuY2VzXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBBcHBQcmVmZXJlbmNlcyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvYXBwLXByZWZlcmVuY2VzJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwcFByZWZlcmVuY2VzOiBBcHBQcmVmZXJlbmNlcykgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5hcHBQcmVmZXJlbmNlcy5mZXRjaCgna2V5JykudGhlbigocmVzKSA9PiB7IGNvbnNvbGUubG9nKHJlcyk7IH0pO1xuICpcbiAqIGBgYFxuICpcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdBcHBQcmVmZXJlbmNlcycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWFwcC1wcmVmZXJlbmNlcycsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMuYXBwUHJlZmVyZW5jZXMnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2FwbGEvbWUuYXBsYS5jb3Jkb3ZhLmFwcC1wcmVmZXJlbmNlcycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0JsYWNrQmVycnkgMTAnLCAnQnJvd3NlcicsICdpT1MnLCAnbWFjT1MnLCAnV2luZG93cyA4JywgJ1dpbmRvd3MgUGhvbmUnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBcHBQcmVmZXJlbmNlcyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogR2V0IGEgcHJlZmVyZW5jZSB2YWx1ZVxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGljdCBEaWN0aW9uYXJ5IGZvciBrZXkgKE9QVElPTkFMKVxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IEtleVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIGZldGNoKGRpY3Q6IHN0cmluZywga2V5Pzogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2V0IGEgcHJlZmVyZW5jZSB2YWx1ZVxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGljdCBEaWN0aW9uYXJ5IGZvciBrZXkgKE9QVElPTkFMKVxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IEtleVxuICAgKiBAcGFyYW0ge2FueX0gdmFsdWUgVmFsdWVcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBzdG9yZShkaWN0OiBzdHJpbmcsIGtleTogc3RyaW5nLCB2YWx1ZT86IGFueSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSB2YWx1ZSBmcm9tIHByZWZlcmVuY2VzXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkaWN0IERpY3Rpb25hcnkgZm9yIGtleSAoT1BUSU9OQUwpXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgS2V5XG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAgcmVtb3ZlKGRpY3Q6IHN0cmluZywga2V5Pzogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2xlYXIgcHJlZmVyZW5jZXNcbiAgICpcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBjbGVhckFsbCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTaG93IG5hdGl2ZSBwcmVmZXJlbmNlcyBpbnRlcmZhY2VcbiAgICpcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBzaG93KCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNob3cgbmF0aXZlIHByZWZlcmVuY2VzIGludGVyZmFjZVxuICAgKlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHN1YnNjcmliZSB0cnVlIHZhbHVlIHRvIHN1YnNjcmliZSwgZmFsc2UgLSB1bnN1YnNjcmliZVxuICAgKiBAcmV0dXJuIHtPYnNlcnZhYmxlPGFueT59IFJldHVybnMgYW4gb2JzZXJ2YWJsZVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWVcbiAgfSlcbiAgd2F0Y2goc3Vic2NyaWJlOiBib29sZWFuKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIG5hbWVkIGNvbmZpZ3VyYXRpb24gY29udGV4dFxuICAgKiBJbiBpT1MgeW91J2xsIGdldCBhIHN1aXRlIGNvbmZpZ3VyYXRpb24sIG9uIEFuZHJvaWQg4oCUIG5hbWVkIGZpbGVcbiAgICogU3VwcG9ydHM6IEFuZHJvaWQsIGlPU1xuICAgKiBAcGFyYW0ge3N0cmluZ30gc3VpdGVOYW1lIHN1aXRlIG5hbWVcbiAgICogQHJldHVybnMge09iamVjdH0gQ3VzdG9tIG9iamVjdCwgYm91bmQgdG8gdGhhdCBzdWl0ZVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHBsYXRmb3JtczogWydBbmRyb2lkJ10sXG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBzdWl0ZShzdWl0ZU5hbWU6IHN0cmluZyk6IGFueSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgQENvcmRvdmEoe1xuICAgIHBsYXRmb3JtczogWydpT1MnXSxcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIGlvc1N1aXRlKHN1aXRlTmFtZTogc3RyaW5nKTogYW55IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIGNsb3VkIHN5bmNocm9uaXplZCBjb25maWd1cmF0aW9uIGNvbnRleHRcbiAgICogQ3VycmVudGx5IHN1cHBvcnRzIFdpbmRvd3MgYW5kIGlPUy9tYWNPU1xuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBDdXN0b20gb2JqZWN0LCBib3VuZCB0byB0aGF0IHN1aXRlXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgcGxhdGZvcm1zOiBbJ2lPUycsICdXaW5kb3dzJywgJ1dpbmRvd3MgUGhvbmUgOCddXG4gIH0pXG4gIGNsb3VkU3luYygpOiBPYmplY3Qge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gZGVmYXVsdCBjb25maWd1cmF0aW9uIGNvbnRleHRcbiAgICogQ3VycmVudGx5IHN1cHBvcnRzIFdpbmRvd3MgYW5kIGlPUy9tYWNPU1xuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBDdXN0b20gT2JqZWN0LCBib3VuZCB0byB0aGF0IHN1aXRlXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgcGxhdGZvcm1zOiBbJ2lPUycsICdXaW5kb3dzJywgJ1dpbmRvd3MgUGhvbmUgOCddXG4gIH0pXG4gIGRlZmF1bHRzKCk6IE9iamVjdCB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 191 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppRate; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var AppRateOriginal = /** @class */ (function (_super) {
    __extends(AppRateOriginal, _super);
    function AppRateOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppRateOriginal.prototype.promptForRating = function (immediately) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "promptForRating", {}, arguments); };
    AppRateOriginal.prototype.navigateToAppStore = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "navigateToAppStore", {}, arguments); };
    Object.defineProperty(AppRateOriginal.prototype, "preferences", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "preferences"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "preferences", value); },
        enumerable: true,
        configurable: true
    });
    AppRateOriginal.pluginName = "AppRate";
    AppRateOriginal.plugin = "cordova-plugin-apprate";
    AppRateOriginal.pluginRef = "AppRate";
    AppRateOriginal.repo = "https://github.com/pushandplay/cordova-plugin-apprate";
    AppRateOriginal.platforms = ["Android", "BlackBerry 10", "iOS", "Windows"];
    return AppRateOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AppRate = new AppRateOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9hcHAtcmF0ZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTyxrRkFBdUQsTUFBTSxvQkFBb0IsQ0FBQzs7SUF5SjVELDJCQUFpQjs7OztJQWM1QyxpQ0FBZSxhQUFDLFdBQW9CO0lBT3BDLG9DQUFrQjswQkFkbEIsZ0NBQVc7Ozs7Ozs7Ozs7O2tCQWpLYjtFQTBKNkIsaUJBQWlCO1NBQWpDLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBDb3Jkb3ZhUHJvcGVydHksIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFwcFJhdGVQcmVmZXJlbmNlcyB7XG5cbiAgLyoqXG4gICAqIEN1c3RvbSBCQ1AgNDcgbGFuZ3VhZ2UgdGFnXG4gICAqL1xuICB1c2VMYW5ndWFnZT86IHN0cmluZztcblxuICAvKipcbiAgICogQ3VzdG9tIGFwcGxpY2F0aW9uIHRpdGxlXG4gICAqL1xuICBkaXNwbGF5QXBwTmFtZT86IHN0cmluZztcblxuICAvKipcbiAgICogU2hvdyBkaWFsb2cgYWdhaW4gd2hlbiBhcHBsaWNhdGlvbiB2ZXJzaW9uIHdpbGwgYmUgdXBkYXRlZC4gRGVmYXVsdHMgdG8gYHRydWVgXG4gICAqL1xuICBwcm9tcHRBZ2FpbkZvckVhY2hOZXdWZXJzaW9uPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogY291bnQgb2YgcnVucyBvZiBhcHBsaWNhdGlvbiBiZWZvcmUgZGlhbG9nIHdpbGwgYmUgZGlzcGxheWVkLiBEZWZhdWx0cyB0byBgM2BcbiAgICovXG4gIHVzZXNVbnRpbFByb21wdD86IG51bWJlcjtcblxuICAvKipcbiAgICogU2ltcGxlIE1vZGUgdG8gZGlzcGxheSB0aGUgcmF0ZSBkaWFsb2cgZGlyZWN0bHkgYW5kIGJ5cGFzcyBuZWdhdGl2ZSBmZWVkYmFjayBmaWx0ZXJpbmcgZmxvd1xuICAgKi9cbiAgc2ltcGxlTW9kZT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIGxlYXZlIGFwcCBvciBubyB3aGVuIGFwcGxpY2F0aW9uIHBhZ2Ugb3BlbmVkIGluIGFwcCBzdG9yZSAobm93IHN1cHBvcnRlZCBvbmx5IGZvciBpT1MpLiBEZWZhdWx0cyB0byBgZmFsc2VgXG4gICAqL1xuICBpbkFwcFJldmlldz86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIHVzZSBjdXN0b20gdmlldyBmb3IgcmF0ZSBkaWFsb2cuIERlZmF1bHRzIHRvIGBmYWxzZWBcbiAgICovXG4gIHVzZUN1c3RvbVJhdGVEaWFsb2c/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBDdXN0b20gbG9jYWxlIG9iamVjdFxuICAgKi9cbiAgY3VzdG9tTG9jYWxlPzogYW55O1xuXG4gIC8qKlxuICAgKiBDYWxsYmFja3MgZm9yIGV2ZW50c1xuICAgKi9cbiAgY2FsbGJhY2tzPzogQXBwUmF0ZUNhbGxiYWNrcztcblxuICAvKipcbiAgICogQXBwIFN0b3JlIFVSTFNcbiAgICovXG4gIHN0b3JlQXBwVVJMPzogQXBwVXJscztcblxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwcFJhdGVDYWxsYmFja3Mge1xuXG4gIC8qKlxuICAgKiBjYWxsIGJhY2sgZnVuY3Rpb24uIGNhbGxlZCB3aGVuIHVzZXIgY2xpY2tlZCBvbiByYXRlLWRpYWxvZyBidXR0b25zXG4gICAqL1xuICBvbkJ1dHRvbkNsaWNrZWQ/OiBGdW5jdGlvbjtcblxuICAvKipcbiAgICogY2FsbCBiYWNrIGZ1bmN0aW9uLiBjYWxsZWQgd2hlbiByYXRlLWRpYWxvZyBzaG93aW5nXG4gICAqL1xuICBvblJhdGVEaWFsb2dTaG93PzogRnVuY3Rpb247XG4gIC8qKlxuICAgKiBjYWxsIGJhY2sgZnVuY3Rpb24uIGNhbGxlZCB3aGVuIHVzZXIgY2xpY2tlZCBvbiBuZWdhdGl2ZSBmZWVkYmFja1xuICAgKi9cbiAgaGFuZGxlTmVnYXRpdmVGZWVkYmFjaz86IEZ1bmN0aW9uO1xuXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBwVXJscyB7XG5cbiAgLyoqXG4gICAqIGFwcGxpY2F0aW9uIGlkIGluIEFwcFN0b3JlXG4gICAqL1xuICBpb3M/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIGFwcGxpY2F0aW9uIFVSTCBpbiBHb29nbGVQbGF5XG4gICAqL1xuICBhbmRyb2lkPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBhcHBsaWNhdGlvbiBVUkwgaW4gV2luZG93cyBTdG9yZVxuICAgKi9cbiAgd2luZG93cz86IHN0cmluZztcblxuICAvKipcbiAgICogYXBwbGljYXRpb24gVVJMIGluIEFwcFdvcmxkXG4gICAqL1xuICBibGFja2JlcnJ5Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBhcHBsaWNhdGlvbiBVUkwgaW4gV2luZG93c1N0b3JlXG4gICAqL1xuICB3aW5kb3dzOD86IHN0cmluZztcblxufVxuXG4vKipcbiAqIEBuYW1lIEFwcCBSYXRlXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBBcHBSYXRlIHBsdWdpbiBtYWtlcyBpdCBlYXN5IHRvIHByb21wdCB0aGUgdXNlciB0byByYXRlIHlvdXIgYXBwLCBlaXRoZXIgbm93LCBsYXRlciwgb3IgbmV2ZXIuXG4gKlxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGNvcmRvdmEtcGx1Z2luLWFwcHJhdGUuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtBcHBSYXRlIHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vcHVzaGFuZHBsYXkvY29yZG92YS1wbHVnaW4tYXBwcmF0ZSkuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBBcHBSYXRlIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9hcHAtcmF0ZSc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBhcHBSYXRlOiBBcHBSYXRlKSB7IH1cbiAqXG4gKiAuLi5cbiAqIC8vIHNldCBjZXJ0YWluIHByZWZlcmVuY2VzXG4gKiB0aGlzLmFwcFJhdGUucHJlZmVyZW5jZXMuc3RvcmVBcHBVUkwgPSB7XG4gKiAgIGlvczogJzxhcHBfaWQ+JyxcbiAqICAgYW5kcm9pZDogJ21hcmtldDovL2RldGFpbHM/aWQ9PHBhY2thZ2VfbmFtZT4nLFxuICogICB3aW5kb3dzOiAnbXMtd2luZG93cy1zdG9yZTovL3Jldmlldy8/UHJvZHVjdElkPTxzdG9yZV9pZD4nXG4gKiB9XG4gKlxuICogdGhpcy5hcHBSYXRlLnByb21wdEZvclJhdGluZyh0cnVlKTtcbiAqXG4gKiAvLyBvciwgb3ZlcnJpZGUgdGhlIHdob2xlIHByZWZlcmVuY2VzIG9iamVjdFxuICogdGhpcy5hcHBSYXRlLnByZWZlcmVuY2VzID0ge1xuICogICB1c2VzVW50aWxQcm9tcHQ6IDMsXG4gKiAgIHN0b3JlQXBwVVJMOiB7XG4gKiAgICBpb3M6ICc8YXBwX2lkPicsXG4gKiAgICBhbmRyb2lkOiAnbWFya2V0Oi8vZGV0YWlscz9pZD08cGFja2FnZV9uYW1lPicsXG4gKiAgICB3aW5kb3dzOiAnbXMtd2luZG93cy1zdG9yZTovL3Jldmlldy8/UHJvZHVjdElkPTxzdG9yZV9pZD4nXG4gKiAgIH1cbiAqIH1cbiAqXG4gKiB0aGlzLmFwcFJhdGUucHJvbXB0Rm9yUmF0aW5nKGZhbHNlKTtcbiAqIGBgYFxuICpcbiAqIEBpbnRlcmZhY2VzXG4gKiBBcHBSYXRlUHJlZmVyZW5jZXNcbiAqIEFwcFVybHNcbiAqIEFwcFJhdGVDYWxsYmFja3NcbiAqXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnQXBwUmF0ZScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWFwcHJhdGUnLFxuICBwbHVnaW5SZWY6ICdBcHBSYXRlJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9wdXNoYW5kcGxheS9jb3Jkb3ZhLXBsdWdpbi1hcHByYXRlJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnQmxhY2tCZXJyeSAxMCcsICdpT1MnLCAnV2luZG93cyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEFwcFJhdGUgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIENvbmZpZ3VyZSB2YXJpb3VzIHNldHRpbmdzIGZvciB0aGUgUmF0aW5nIFZpZXcuXG4gICAqIFNlZSB0YWJsZSBiZWxvdyBmb3Igb3B0aW9uc1xuICAgKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIHByZWZlcmVuY2VzOiBBcHBSYXRlUHJlZmVyZW5jZXM7XG5cbiAgLyoqXG4gICAqIFByb21wdHMgdGhlIHVzZXIgZm9yIHJhdGluZ1xuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGltbWVkaWF0ZWx5ICBTaG93IHRoZSByYXRpbmcgcHJvbXB0IGltbWVkaWF0ZWx5LlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBwcm9tcHRGb3JSYXRpbmcoaW1tZWRpYXRlbHk6IGJvb2xlYW4pOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBJbW1lZGlhdGVseSBzZW5kIHRoZSB1c2VyIHRvIHRoZSBhcHAgc3RvcmUgcmF0aW5nIHBhZ2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgbmF2aWdhdGVUb0FwcFN0b3JlKCk6IHZvaWQge1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 192 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppUpdate; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var AppUpdateOriginal = /** @class */ (function (_super) {
    __extends(AppUpdateOriginal, _super);
    function AppUpdateOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppUpdateOriginal.prototype.checkAppUpdate = function (updateUrl) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "checkAppUpdate", { "callbackOrder": "reverse" }, arguments); };
    AppUpdateOriginal.pluginName = "AppUpdate";
    AppUpdateOriginal.plugin = "cordova-plugin-app-update";
    AppUpdateOriginal.pluginRef = "AppUpdate";
    AppUpdateOriginal.repo = "https://github.com/vaenow/cordova-plugin-app-update";
    AppUpdateOriginal.platforms = ["Android"];
    return AppUpdateOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AppUpdate = new AppUpdateOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9hcHAtdXBkYXRlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQTBDekMsNkJBQWlCOzs7O0lBUzlDLGtDQUFjLGFBQUMsU0FBaUI7Ozs7OztvQkFuRGxDO0VBMEMrQixpQkFBaUI7U0FBbkMsU0FBUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIEFwcCBVcGRhdGVcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gZG9lcyBzZWxmLXVwZGF0ZSBmb3IgYW5kcm9pZFxuICpcbiAqIEB1c2FnZVxuICpcbiAqIFlvdSBzaG91bGQgZmlyc3QgaG9zdCBhbiBYTUwgZmlsZSBvbiB5b3VyIHNlcnZlciB3aXRoIHRoZSBmb2xsb3dpbmcgZGF0YSBpbiBpdDpcbiAqIGBgYHhtbFxuICogPHVwZGF0ZT5cbiAqICAgICA8dmVyc2lvbj4zMDIwNDg8L3ZlcnNpb24+XG4gKiAgICAgPG5hbWU+QVBLIE5hbWU8L25hbWU+XG4gKiAgICAgPHVybD5odHRwczovL3lvdXItcmVtb3RlLWFwaS5jb20vWW91ckFwcC5hcGs8L3VybD5cbiAqIDwvdXBkYXRlPlxuICogYGBgXG4gKlxuICogVGhlbiB1c2UgdGhlIGZvbGxvd2luZyBjb2RlOlxuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEFwcFVwZGF0ZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvYXBwLXVwZGF0ZSc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBhcHBVcGRhdGU6IEFwcFVwZGF0ZSkge1xuICpcbiAqICAgIGNvbnN0IHVwZGF0ZVVybCA9ICdodHRwOi8veW91ci1yZW1vdGUtYXBpLmNvbS91cGRhdGUueG1sJztcbiAqICAgIHRoaXMuYXBwVXBkYXRlLmNoZWNrQXBwVXBkYXRlKHVwZGF0ZVVybCk7XG4gKlxuICogfVxuICogYGBgXG4gKlxuICogVGhlIHBsdWdpbiB3aWxsIGNvbXBhcmUgdGhlIGFwcCB2ZXJzaW9uIGFuZCB1cGRhdGUgaXQgYXV0b21hdGljYWxseSBpZiB0aGUgQVBJIGhhcyBhIG5ld2VyIHZlcnNpb24gdG8gaW5zdGFsbC5cbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdBcHBVcGRhdGUnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1hcHAtdXBkYXRlJyxcbiAgcGx1Z2luUmVmOiAnQXBwVXBkYXRlJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS92YWVub3cvY29yZG92YS1wbHVnaW4tYXBwLXVwZGF0ZScsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQXBwVXBkYXRlIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogQ2hlY2sgYW5kIHVwZGF0ZVxuICAgKiBAcGFyYW0gdXBkYXRlVXJsIHtzdHJpbmd9IHVwZGF0ZSBhcGkgdXJsXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHNvbWV0aGluZyBoYXBwZW5zXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIGNoZWNrQXBwVXBkYXRlKHVwZGF0ZVVybDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 193 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppVersion; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var AppVersionOriginal = /** @class */ (function (_super) {
    __extends(AppVersionOriginal, _super);
    function AppVersionOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppVersionOriginal.prototype.getAppName = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAppName", {}, arguments); };
    AppVersionOriginal.prototype.getPackageName = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPackageName", {}, arguments); };
    AppVersionOriginal.prototype.getVersionCode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getVersionCode", {}, arguments); };
    AppVersionOriginal.prototype.getVersionNumber = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getVersionNumber", {}, arguments); };
    AppVersionOriginal.pluginName = "AppVersion";
    AppVersionOriginal.plugin = "cordova-plugin-app-version";
    AppVersionOriginal.pluginRef = "cordova.getAppVersion";
    AppVersionOriginal.repo = "https://github.com/whiteoctober/cordova-plugin-app-version";
    AppVersionOriginal.platforms = ["Android", "iOS", "Windows"];
    return AppVersionOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var AppVersion = new AppVersionOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9hcHAtdmVyc2lvbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFrQ3hDLDhCQUFpQjs7OztJQU8vQywrQkFBVTtJQVNWLG1DQUFjO0lBU2QsbUNBQWM7SUFTZCxxQ0FBZ0I7Ozs7OztxQkFyRWxCO0VBbUNnQyxpQkFBaUI7U0FBcEMsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5cbi8qKlxuICogQG5hbWUgQXBwIFZlcnNpb25cbiAqIEBkZXNjcmlwdGlvblxuICogUmVhZHMgdGhlIHZlcnNpb24gb2YgeW91ciBhcHAgZnJvbSB0aGUgdGFyZ2V0IGJ1aWxkIHNldHRpbmdzLlxuICpcbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBgY29yZG92YS1wbHVnaW4tYXBwLXZlcnNpb25gLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbQ29yZG92YSBBcHAgVmVyc2lvbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vd2hpdGVvY3RvYmVyL2NvcmRvdmEtcGx1Z2luLWFwcC12ZXJzaW9uKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEFwcFZlcnNpb24gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2FwcC12ZXJzaW9uJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwcFZlcnNpb246IEFwcFZlcnNpb24pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiB0aGlzLmFwcFZlcnNpb24uZ2V0QXBwTmFtZSgpO1xuICogdGhpcy5hcHBWZXJzaW9uLmdldFBhY2thZ2VOYW1lKCk7XG4gKiB0aGlzLmFwcFZlcnNpb24uZ2V0VmVyc2lvbkNvZGUoKTtcbiAqIHRoaXMuYXBwVmVyc2lvbi5nZXRWZXJzaW9uTnVtYmVyKCk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnQXBwVmVyc2lvbicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWFwcC12ZXJzaW9uJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5nZXRBcHBWZXJzaW9uJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS93aGl0ZW9jdG9iZXIvY29yZG92YS1wbHVnaW4tYXBwLXZlcnNpb24nLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnLCAnV2luZG93cyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEFwcFZlcnNpb24gZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIG5hbWUgb2YgdGhlIGFwcFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRBcHBOYW1lKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHBhY2thZ2UgbmFtZSBvZiB0aGUgYXBwXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldFBhY2thZ2VOYW1lKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGJ1aWxkIGlkZW50aWZpZXIgb2YgdGhlIGFwcFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRWZXJzaW9uQ29kZSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSB2ZXJzaW9uIG9mIHRoZSBhcHBcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0VmVyc2lvbk51bWJlcigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 194 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ApplePay; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ionic_native_core__ = __webpack_require__(2);



var ApplePayOriginal = /** @class */ (function (_super) {
    __extends(ApplePayOriginal, _super);
    function ApplePayOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ApplePayOriginal.prototype.canMakePayments = function () { return Object(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__["cordova"])(this, "canMakePayments", { "otherPromise": true }, arguments); };
    ApplePayOriginal.prototype.startListeningForShippingContactSelection = function () { return Object(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__["cordova"])(this, "startListeningForShippingContactSelection", { "observable": true, "clearFunction": "stopListeningForShippingContactSelection" }, arguments); };
    ApplePayOriginal.prototype.stopListeningForShippingContactSelection = function () { return Object(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__["cordova"])(this, "stopListeningForShippingContactSelection", { "otherPromise": true }, arguments); };
    ApplePayOriginal.prototype.updateItemsAndShippingMethods = function (list) { return Object(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__["cordova"])(this, "updateItemsAndShippingMethods", { "otherPromise": true }, arguments); };
    ApplePayOriginal.prototype.makePaymentRequest = function (order) { return Object(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__["cordova"])(this, "makePaymentRequest", { "otherPromise": true }, arguments); };
    ApplePayOriginal.prototype.completeLastTransaction = function (complete) { return Object(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__["cordova"])(this, "completeLastTransaction", { "otherPromise": true }, arguments); };
    ApplePayOriginal.pluginName = "ApplePay";
    ApplePayOriginal.plugin = "cordova-plugin-applepay";
    ApplePayOriginal.pluginRef = "ApplePay";
    ApplePayOriginal.repo = "https://github.com/samkelleher/cordova-plugin-applepay";
    ApplePayOriginal.platforms = ["iOS"];
    return ApplePayOriginal;
}(__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__["IonicNativePlugin"]));
var ApplePay = new ApplePayOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 195 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Appodeal; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs__);



var AppodealOriginal = /** @class */ (function (_super) {
    __extends(AppodealOriginal, _super);
    function AppodealOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // available types of advertisements
        _this.AD_TYPES = {
            INTERSTITIAL: 1,
            SKIPPABLE_VIDEO: 2,
            BANNER: 4,
            BANNER_BOTTOM: 8,
            BANNER_TOP: 16,
            REWARDED_VIDEO: 128,
            NON_SKIPPABLE_VIDEO: 256
        };
        return _this;
    }
    AppodealOriginal.prototype.initialize = function (appKey, adType) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "initialize", {}, arguments); };
    AppodealOriginal.prototype.isInitialized = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isInitialized", {}, arguments); };
    AppodealOriginal.prototype.show = function (adType) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", {}, arguments); };
    AppodealOriginal.prototype.showWithPlacement = function (adType, placement) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showWithPlacement", {}, arguments); };
    AppodealOriginal.prototype.hide = function (adType) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hide", {}, arguments); };
    AppodealOriginal.prototype.confirm = function (adType) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "confirm", {}, arguments); };
    AppodealOriginal.prototype.isLoaded = function (adType) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isLoaded", {}, arguments); };
    AppodealOriginal.prototype.isPrecache = function (adType) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isPrecache", {}, arguments); };
    AppodealOriginal.prototype.setAutoCache = function (adType, autoCache) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setAutoCache", {}, arguments); };
    AppodealOriginal.prototype.cache = function (adType) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "cache", {}, arguments); };
    AppodealOriginal.prototype.setOnLoadedTriggerBoth = function (set) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setOnLoadedTriggerBoth", {}, arguments); };
    AppodealOriginal.prototype.setSmartBanners = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setSmartBanners", {}, arguments); };
    AppodealOriginal.prototype.setBannerBackground = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setBannerBackground", {}, arguments); };
    AppodealOriginal.prototype.setBannerAnimation = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setBannerAnimation", {}, arguments); };
    AppodealOriginal.prototype.set728x90Banners = function (value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "set728x90Banners", {}, arguments); };
    AppodealOriginal.prototype.setLogging = function (logging) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setLogging", {}, arguments); };
    AppodealOriginal.prototype.setTesting = function (testing) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setTesting", {}, arguments); };
    AppodealOriginal.prototype.resetUUID = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "resetUUID", {}, arguments); };
    AppodealOriginal.prototype.getVersion = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getVersion", {}, arguments); };
    AppodealOriginal.prototype.disableNetwork = function (network, adType) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableNetwork", {}, arguments); };
    AppodealOriginal.prototype.disableNetworkType = function (network, adType) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableNetworkType", {}, arguments); };
    AppodealOriginal.prototype.disableLocationPermissionCheck = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableLocationPermissionCheck", {}, arguments); };
    AppodealOriginal.prototype.disableWriteExternalStoragePermissionCheck = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableWriteExternalStoragePermissionCheck", {}, arguments); };
    AppodealOriginal.prototype.enableInterstitialCallbacks = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableInterstitialCallbacks", {}, arguments); };
    AppodealOriginal.prototype.enableSkippableVideoCallbacks = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableSkippableVideoCallbacks", {}, arguments); };
    AppodealOriginal.prototype.enableNonSkippableVideoCallbacks = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableNonSkippableVideoCallbacks", {}, arguments); };
    AppodealOriginal.prototype.enableBannerCallbacks = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableBannerCallbacks", {}, arguments); };
    AppodealOriginal.prototype.enableRewardedVideoCallbacks = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableRewardedVideoCallbacks", {}, arguments); };
    AppodealOriginal.prototype.setCustomBooleanRule = function (name, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setCustomBooleanRule", {}, arguments); };
    AppodealOriginal.prototype.setCustomIntegerRule = function (name, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setCustomIntegerRule", {}, arguments); };
    AppodealOriginal.prototype.setCustomDoubleRule = function (name, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setCustomDoubleRule", {}, arguments); };
    AppodealOriginal.prototype.setCustomStringRule = function (name, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setCustomStringRule", {}, arguments); };
    AppodealOriginal.prototype.setUserId = function (id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setUserId", {}, arguments); };
    AppodealOriginal.prototype.setEmail = function (email) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setEmail", {}, arguments); };
    AppodealOriginal.prototype.setBirthday = function (birthday) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setBirthday", {}, arguments); };
    AppodealOriginal.prototype.setAge = function (age) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setAge", {}, arguments); };
    AppodealOriginal.prototype.setGender = function (gender) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setGender", {}, arguments); };
    AppodealOriginal.prototype.setOccupation = function (occupation) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setOccupation", {}, arguments); };
    AppodealOriginal.prototype.setRelation = function (relation) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setRelation", {}, arguments); };
    AppodealOriginal.prototype.setSmoking = function (smoking) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setSmoking", {}, arguments); };
    AppodealOriginal.prototype.setAlcohol = function (alcohol) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setAlcohol", {}, arguments); };
    AppodealOriginal.prototype.setInterests = function (interests) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setInterests", {}, arguments); };
    AppodealOriginal.prototype.onInterstitialLoaded = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onInterstitialLoaded", { "eventObservable": true, "event": "onInterstitialLoaded", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onInterstitialFailedToLoad = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onInterstitialFailedToLoad", { "eventObservable": true, "event": "onInterstitialFailedToLoad", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onInterstitialShown = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onInterstitialShown", { "eventObservable": true, "event": "onInterstitialShown", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onInterstitialClicked = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onInterstitialClicked", { "eventObservable": true, "event": "onInterstitialClicked", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onInterstitialClosed = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onInterstitialClosed", { "eventObservable": true, "event": "onInterstitialClosed", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onSkippableVideoLoaded = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onSkippableVideoLoaded", { "eventObservable": true, "event": "onSkippableVideoLoaded", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onSkippableVideoFailedToLoad = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onSkippableVideoFailedToLoad", { "eventObservable": true, "event": "onSkippableVideoFailedToLoad", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onSkippableVideoShown = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onSkippableVideoShown", { "eventObservable": true, "event": "onSkippableVideoShown", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onSkippableVideoFinished = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onSkippableVideoFinished", { "eventObservable": true, "event": "onSkippableVideoFinished", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onSkippableVideoClosed = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onSkippableVideoClosed", { "eventObservable": true, "event": "onSkippableVideoClosed", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onRewardedVideoLoaded = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onRewardedVideoLoaded", { "eventObservable": true, "event": "onRewardedVideoLoaded", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onRewardedVideoFailedToLoad = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onRewardedVideoFailedToLoad", { "eventObservable": true, "event": "onRewardedVideoFailedToLoad", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onRewardedVideoShown = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onRewardedVideoShown", { "eventObservable": true, "event": "onRewardedVideoShown", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onRewardedVideoFinished = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onRewardedVideoFinished", { "eventObservable": true, "event": "onRewardedVideoFinished", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onRewardedVideoClosed = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onRewardedVideoClosed", { "eventObservable": true, "event": "onRewardedVideoClosed", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onNonSkippableVideoLoaded = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onNonSkippableVideoLoaded", { "eventObservable": true, "event": "onNonSkippableVideoLoaded", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onNonSkippableVideoFailedToLoad = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onNonSkippableVideoFailedToLoad", { "eventObservable": true, "event": "onNonSkippableVideoFailedToLoad", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onNonSkippableVideoShown = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onNonSkippableVideoShown", { "eventObservable": true, "event": "onNonSkippableVideoShown", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onNonSkippableVideoFinished = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onNonSkippableVideoFinished", { "eventObservable": true, "event": "onNonSkippableVideoFinished", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onNonSkippableVideoClosed = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onNonSkippableVideoClosed", { "eventObservable": true, "event": "onNonSkippableVideoClosed", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onBannerClicked = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onBannerClicked", { "eventObservable": true, "event": "onBannerClicked", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onBannerFailedToLoad = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onBannerFailedToLoad", { "eventObservable": true, "event": "onBannerFailedToLoad", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onBannerLoaded = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onBannerLoaded", { "eventObservable": true, "event": "onBannerLoaded", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onBannerShown = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onBannerShown", { "eventObservable": true, "event": "onBannerShown", "element": "document" }, arguments); };
    AppodealOriginal.pluginName = "Appodeal";
    AppodealOriginal.plugin = "https://github.com/appodeal/appodeal-cordova-plugin.git";
    AppodealOriginal.pluginRef = "Appodeal";
    AppodealOriginal.repo = "https://github.com/appodeal/appodeal-cordova-plugin";
    AppodealOriginal.platforms = ["iOS", "Android"];
    return AppodealOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Appodeal = new AppodealOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bindCallback_1 = __webpack_require__(197);
Observable_1.Observable.bindCallback = bindCallback_1.bindCallback;
//# sourceMappingURL=bindCallback.js.map

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BoundCallbackObservable_1 = __webpack_require__(198);
exports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;
//# sourceMappingURL=bindCallback.js.map

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var AsyncSubject_1 = __webpack_require__(32);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var BoundCallbackObservable = (function (_super) {
    __extends(BoundCallbackObservable, _super);
    function BoundCallbackObservable(callbackFunc, selector, args, context, scheduler) {
        _super.call(this);
        this.callbackFunc = callbackFunc;
        this.selector = selector;
        this.args = args;
        this.context = context;
        this.scheduler = scheduler;
    }
    /* tslint:enable:max-line-length */
    /**
     * Converts a callback API to a function that returns an Observable.
     *
     * <span class="informal">Give it a function `f` of type `f(x, callback)` and
     * it will return a function `g` that when called as `g(x)` will output an
     * Observable.</span>
     *
     * `bindCallback` is not an operator because its input and output are not
     * Observables. The input is a function `func` with some parameters, but the
     * last parameter must be a callback function that `func` calls when it is
     * done.
     *
     * The output of `bindCallback` is a function that takes the same parameters
     * as `func`, except the last one (the callback). When the output function
     * is called with arguments, it will return an Observable. If `func` function
     * calls its callback with one argument, the Observable will emit that value.
     * If on the other hand callback is called with multiple values, resulting
     * Observable will emit an array with these arguments.
     *
     * It is very important to remember, that input function `func` is not called
     * when output function is, but rather when Observable returned by output
     * function is subscribed. This means if `func` makes AJAX request, that request
     * will be made every time someone subscribes to resulting Observable, but not before.
     *
     * Optionally, selector function can be passed to `bindObservable`. That function
     * takes the same arguments as callback, and returns value
     * that will be emitted by Observable instead of callback parameters themselves.
     * Even though by default multiple arguments passed to callback appear in the stream as array,
     * selector function will be called with arguments directly, just as callback would.
     * This means you can imagine default selector (when one is not provided explicitly)
     * as function that aggregates all its arguments into array, or simply returns first argument,
     * if there is only one.
     *
     * Last optional parameter - {@link Scheduler} - can be used to control when call
     * to `func` happens after someone subscribes to Observable, as well as when results
     * passed to callback will be emitted. By default subscription to Observable calls `func`
     * synchronously, but using `Scheduler.async` as last parameter will defer call to input function,
     * just like wrapping that call in `setTimeout` with time `0` would. So if you use async Scheduler
     * and call `subscribe` on output Observable, all function calls that are currently executing,
     * will end before `func` is invoked.
     *
     * When it comes to emitting results passed to callback, by default they are emitted
     * immediately after `func` invokes callback. In particular, if callback is called synchronously,
     * then subscription to resulting Observable will call `next` function synchronously as well.
     * If you want to defer that call, using `Scheduler.async` will, again, do the job.
     * This means that by using `Scheduler.async` you can, in a sense, ensure that `func`
     * always calls its callback asynchronously, thus avoiding terrifying Zalgo.
     *
     * Note that Observable created by output function will always emit only one value
     * and then complete right after. Even if `func` calls callback multiple times, values from
     * second and following calls will never appear in the stream. If you need to
     * listen for multiple calls, you probably want to use {@link fromEvent} or
     * {@link fromEventPattern} instead.
     *
     * If `func` depends on some context (`this` property), that context will be set
     * to the same context that output function has at call time. In particular, if `func`
     * is called as method of some object, in order to preserve proper behaviour,
     * it is recommended to set context of output function to that object as well,
     * provided `func` is not already bound.
     *
     * If input function calls its callback in "node style" (i.e. first argument to callback is
     * optional error parameter signaling whether call failed or not), {@link bindNodeCallback}
     * provides convenient error handling and probably is a better choice.
     * `bindCallback` will treat such functions without any difference and error parameter
     * (whether passed or not) will always be interpreted as regular callback argument.
     *
     *
     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>
     * // Suppose we have jQuery.getJSON('/my/url', callback)
     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);
     * var result = getJSONAsObservable('/my/url');
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     *
     * @example <caption>Receive array of arguments passed to callback</caption>
     * someFunction((a, b, c) => {
     *   console.log(a); // 5
     *   console.log(b); // 'some string'
     *   console.log(c); // {someProperty: 'someValue'}
     * });
     *
     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);
     * boundSomeFunction().subscribe(values => {
     *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]
     * });
     *
     *
     * @example <caption>Use bindCallback with selector function</caption>
     * someFunction((a, b, c) => {
     *   console.log(a); // 'a'
     *   console.log(b); // 'b'
     *   console.log(c); // 'c'
     * });
     *
     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);
     * boundSomeFunction().subscribe(value => {
     *   console.log(value) // 'abc'
     * });
     *
     *
     * @example <caption>Compare behaviour with and without async Scheduler</caption>
     * function iCallMyCallbackSynchronously(cb) {
     *   cb();
     * }
     *
     * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);
     * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);
     *
     * boundSyncFn().subscribe(() => console.log('I was sync!'));
     * boundAsyncFn().subscribe(() => console.log('I was async!'));
     * console.log('This happened...');
     *
     * // Logs:
     * // I was sync!
     * // This happened...
     * // I was async!
     *
     *
     * @example <caption>Use bindCallback on object method</caption>
     * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);
     * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject
     * .subscribe(subscriber);
     *
     *
     * @see {@link bindNodeCallback}
     * @see {@link from}
     * @see {@link fromPromise}
     *
     * @param {function} func Function with a callback as the last parameter.
     * @param {function} [selector] A function which takes the arguments from the
     * callback and maps those to a value to emit on the output Observable.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * callbacks.
     * @return {function(...params: *): Observable} A function which returns the
     * Observable that delivers the same values the callback would deliver.
     * @static true
     * @name bindCallback
     * @owner Observable
     */
    BoundCallbackObservable.create = function (func, selector, scheduler) {
        if (selector === void 0) { selector = undefined; }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            return new BoundCallbackObservable(func, selector, args, this, scheduler);
        };
    };
    BoundCallbackObservable.prototype._subscribe = function (subscriber) {
        var callbackFunc = this.callbackFunc;
        var args = this.args;
        var scheduler = this.scheduler;
        var subject = this.subject;
        if (!scheduler) {
            if (!subject) {
                subject = this.subject = new AsyncSubject_1.AsyncSubject();
                var handler = function handlerFn() {
                    var innerArgs = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        innerArgs[_i - 0] = arguments[_i];
                    }
                    var source = handlerFn.source;
                    var selector = source.selector, subject = source.subject;
                    if (selector) {
                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                        if (result_1 === errorObject_1.errorObject) {
                            subject.error(errorObject_1.errorObject.e);
                        }
                        else {
                            subject.next(result_1);
                            subject.complete();
                        }
                    }
                    else {
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    }
                };
                // use named function instance to avoid closure.
                handler.source = this;
                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));
                if (result === errorObject_1.errorObject) {
                    subject.error(errorObject_1.errorObject.e);
                }
            }
            return subject.subscribe(subscriber);
        }
        else {
            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber, context: this.context });
        }
    };
    BoundCallbackObservable.dispatch = function (state) {
        var self = this;
        var source = state.source, subscriber = state.subscriber, context = state.context;
        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;
        var subject = source.subject;
        if (!subject) {
            subject = source.subject = new AsyncSubject_1.AsyncSubject();
            var handler = function handlerFn() {
                var innerArgs = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    innerArgs[_i - 0] = arguments[_i];
                }
                var source = handlerFn.source;
                var selector = source.selector, subject = source.subject;
                if (selector) {
                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                    if (result_2 === errorObject_1.errorObject) {
                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));
                    }
                    else {
                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));
                    }
                }
                else {
                    var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
                }
            };
            // use named function to pass values in without closure
            handler.source = source;
            var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));
            if (result === errorObject_1.errorObject) {
                subject.error(errorObject_1.errorObject.e);
            }
        }
        self.add(subject.subscribe(subscriber));
    };
    return BoundCallbackObservable;
}(Observable_1.Observable));
exports.BoundCallbackObservable = BoundCallbackObservable;
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=BoundCallbackObservable.js.map

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bindNodeCallback_1 = __webpack_require__(200);
Observable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;
//# sourceMappingURL=bindNodeCallback.js.map

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var BoundNodeCallbackObservable_1 = __webpack_require__(201);
exports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;
//# sourceMappingURL=bindNodeCallback.js.map

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var AsyncSubject_1 = __webpack_require__(32);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var BoundNodeCallbackObservable = (function (_super) {
    __extends(BoundNodeCallbackObservable, _super);
    function BoundNodeCallbackObservable(callbackFunc, selector, args, context, scheduler) {
        _super.call(this);
        this.callbackFunc = callbackFunc;
        this.selector = selector;
        this.args = args;
        this.context = context;
        this.scheduler = scheduler;
    }
    /* tslint:enable:max-line-length */
    /**
     * Converts a Node.js-style callback API to a function that returns an
     * Observable.
     *
     * <span class="informal">It's just like {@link bindCallback}, but the
     * callback is expected to be of type `callback(error, result)`.</span>
     *
     * `bindNodeCallback` is not an operator because its input and output are not
     * Observables. The input is a function `func` with some parameters, but the
     * last parameter must be a callback function that `func` calls when it is
     * done. The callback function is expected to follow Node.js conventions,
     * where the first argument to the callback is an error object, signaling
     * whether call was successful. If that object is passed to callback, it means
     * something went wrong.
     *
     * The output of `bindNodeCallback` is a function that takes the same
     * parameters as `func`, except the last one (the callback). When the output
     * function is called with arguments, it will return an Observable.
     * If `func` calls its callback with error parameter present, Observable will
     * error with that value as well. If error parameter is not passed, Observable will emit
     * second parameter. If there are more parameters (third and so on),
     * Observable will emit an array with all arguments, except first error argument.
     *
     * Optionally `bindNodeCallback` accepts selector function, which allows you to
     * make resulting Observable emit value computed by selector, instead of regular
     * callback arguments. It works similarly to {@link bindCallback} selector, but
     * Node.js-style error argument will never be passed to that function.
     *
     * Note that `func` will not be called at the same time output function is,
     * but rather whenever resulting Observable is subscribed. By default call to
     * `func` will happen synchronously after subscription, but that can be changed
     * with proper {@link Scheduler} provided as optional third parameter. Scheduler
     * can also control when values from callback will be emitted by Observable.
     * To find out more, check out documentation for {@link bindCallback}, where
     * Scheduler works exactly the same.
     *
     * As in {@link bindCallback}, context (`this` property) of input function will be set to context
     * of returned function, when it is called.
     *
     * After Observable emits value, it will complete immediately. This means
     * even if `func` calls callback again, values from second and consecutive
     * calls will never appear on the stream. If you need to handle functions
     * that call callbacks multiple times, check out {@link fromEvent} or
     * {@link fromEventPattern} instead.
     *
     * Note that `bindNodeCallback` can be used in non-Node.js environments as well.
     * "Node.js-style" callbacks are just a convention, so if you write for
     * browsers or any other environment and API you use implements that callback style,
     * `bindNodeCallback` can be safely used on that API functions as well.
     *
     * Remember that Error object passed to callback does not have to be an instance
     * of JavaScript built-in `Error` object. In fact, it does not even have to an object.
     * Error parameter of callback function is interpreted as "present", when value
     * of that parameter is truthy. It could be, for example, non-zero number, non-empty
     * string or boolean `true`. In all of these cases resulting Observable would error
     * with that value. This means usually regular style callbacks will fail very often when
     * `bindNodeCallback` is used. If your Observable errors much more often then you
     * would expect, check if callback really is called in Node.js-style and, if not,
     * switch to {@link bindCallback} instead.
     *
     * Note that even if error parameter is technically present in callback, but its value
     * is falsy, it still won't appear in array emitted by Observable or in selector function.
     *
     *
     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>
     * import * as fs from 'fs';
     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);
     * var result = readFileAsObservable('./roadNames.txt', 'utf8');
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     *
     * @example <caption>Use on function calling callback with multiple arguments</caption>
     * someFunction((err, a, b) => {
     *   console.log(err); // null
     *   console.log(a); // 5
     *   console.log(b); // "some string"
     * });
     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);
     * boundSomeFunction()
     * .subscribe(value => {
     *   console.log(value); // [5, "some string"]
     * });
     *
     *
     * @example <caption>Use with selector function</caption>
     * someFunction((err, a, b) => {
     *   console.log(err); // undefined
     *   console.log(a); // "abc"
     *   console.log(b); // "DEF"
     * });
     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);
     * boundSomeFunction()
     * .subscribe(value => {
     *   console.log(value); // "abcDEF"
     * });
     *
     *
     * @example <caption>Use on function calling callback in regular style</caption>
     * someFunction(a => {
     *   console.log(a); // 5
     * });
     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);
     * boundSomeFunction()
     * .subscribe(
     *   value => {}             // never gets called
     *   err => console.log(err) // 5
     *);
     *
     *
     * @see {@link bindCallback}
     * @see {@link from}
     * @see {@link fromPromise}
     *
     * @param {function} func Function with a Node.js-style callback as the last parameter.
     * @param {function} [selector] A function which takes the arguments from the
     * callback and maps those to a value to emit on the output Observable.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * callbacks.
     * @return {function(...params: *): Observable} A function which returns the
     * Observable that delivers the same values the Node.js callback would
     * deliver.
     * @static true
     * @name bindNodeCallback
     * @owner Observable
     */
    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {
        if (selector === void 0) { selector = undefined; }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            return new BoundNodeCallbackObservable(func, selector, args, this, scheduler);
        };
    };
    BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {
        var callbackFunc = this.callbackFunc;
        var args = this.args;
        var scheduler = this.scheduler;
        var subject = this.subject;
        if (!scheduler) {
            if (!subject) {
                subject = this.subject = new AsyncSubject_1.AsyncSubject();
                var handler = function handlerFn() {
                    var innerArgs = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        innerArgs[_i - 0] = arguments[_i];
                    }
                    var source = handlerFn.source;
                    var selector = source.selector, subject = source.subject;
                    var err = innerArgs.shift();
                    if (err) {
                        subject.error(err);
                    }
                    else if (selector) {
                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                        if (result_1 === errorObject_1.errorObject) {
                            subject.error(errorObject_1.errorObject.e);
                        }
                        else {
                            subject.next(result_1);
                            subject.complete();
                        }
                    }
                    else {
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    }
                };
                // use named function instance to avoid closure.
                handler.source = this;
                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));
                if (result === errorObject_1.errorObject) {
                    subject.error(errorObject_1.errorObject.e);
                }
            }
            return subject.subscribe(subscriber);
        }
        else {
            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber, context: this.context });
        }
    };
    return BoundNodeCallbackObservable;
}(Observable_1.Observable));
exports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;
function dispatch(state) {
    var self = this;
    var source = state.source, subscriber = state.subscriber, context = state.context;
    // XXX: cast to `any` to access to the private field in `source`.
    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;
    var subject = source.subject;
    if (!subject) {
        subject = source.subject = new AsyncSubject_1.AsyncSubject();
        var handler = function handlerFn() {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i - 0] = arguments[_i];
            }
            var source = handlerFn.source;
            var selector = source.selector, subject = source.subject;
            var err = innerArgs.shift();
            if (err) {
                self.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));
            }
            else if (selector) {
                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                if (result_2 === errorObject_1.errorObject) {
                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));
                }
                else {
                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));
                }
            }
            else {
                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
            }
        };
        // use named function to pass values in without closure
        handler.source = source;
        var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));
        if (result === errorObject_1.errorObject) {
            self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));
        }
    }
    self.add(subject.subscribe(subscriber));
}
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=BoundNodeCallbackObservable.js.map

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var combineLatest_1 = __webpack_require__(203);
Observable_1.Observable.combineLatest = combineLatest_1.combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isScheduler_1 = __webpack_require__(12);
var isArray_1 = __webpack_require__(13);
var ArrayObservable_1 = __webpack_require__(14);
var combineLatest_1 = __webpack_require__(33);
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from all the Observables passed as
 * arguments. This is done by subscribing to each Observable in order and,
 * whenever any Observable emits, collecting an array of the most recent
 * values from each Observable. So if you pass `n` Observables to operator,
 * returned Observable will always emit an array of `n` values, in order
 * corresponding to order of passed Observables (value from the first Observable
 * on the first place and so on).
 *
 * Static version of `combineLatest` accepts either an array of Observables
 * or each Observable can be put directly as an argument. Note that array of
 * Observables is good choice, if you don't know beforehand how many Observables
 * you will combine. Passing empty array will result in Observable that
 * completes immediately.
 *
 * To ensure output array has always the same length, `combineLatest` will
 * actually wait for all input Observables to emit at least once,
 * before it starts emitting results. This means if some Observable emits
 * values before other Observables started emitting, all that values but last
 * will be lost. On the other hand, is some Observable does not emit value but
 * completes, resulting Observable will complete at the same moment without
 * emitting anything, since it will be now impossible to include value from
 * completed Observable in resulting array. Also, if some input Observable does
 * not emit any value and never completes, `combineLatest` will also never emit
 * and never complete, since, again, it will wait for all streams to emit some
 * value.
 *
 * If at least one Observable was passed to `combineLatest` and all passed Observables
 * emitted something, resulting Observable will complete when all combined
 * streams complete. So even if some Observable completes, result of
 * `combineLatest` will still emit values when other Observables do. In case
 * of completed Observable, its value from now on will always be the last
 * emitted value. On the other hand, if any Observable errors, `combineLatest`
 * will error immediately as well, and all other Observables will be unsubscribed.
 *
 * `combineLatest` accepts as optional parameter `project` function, which takes
 * as arguments all values that would normally be emitted by resulting Observable.
 * `project` can return any kind of value, which will be then emitted by Observable
 * instead of default array. Note that `project` does not take as argument that array
 * of values, but values themselves. That means default `project` can be imagined
 * as function that takes all its arguments and puts them into an array.
 *
 *
 * @example <caption>Combine two timer Observables</caption>
 * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now
 * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now
 * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);
 * combinedTimers.subscribe(value => console.log(value));
 * // Logs
 * // [0, 0] after 0.5s
 * // [1, 0] after 1s
 * // [1, 1] after 1.5s
 * // [2, 1] after 2s
 *
 *
 * @example <caption>Combine an array of Observables</caption>
 * const observables = [1, 5, 10].map(
 *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds
 * );
 * const combined = Rx.Observable.combineLatest(observables);
 * combined.subscribe(value => console.log(value));
 * // Logs
 * // [0, 0, 0] immediately
 * // [1, 0, 0] after 1s
 * // [1, 5, 0] after 5s
 * // [1, 5, 10] after 10s
 *
 *
 * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {ObservableInput} observable1 An input Observable to combine with other Observables.
 * @param {ObservableInput} observable2 An input Observable to combine with other Observables.
 * More than one input Observables may be given as arguments
 * or an array of Observables may be given as the first argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each input Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @static true
 * @name combineLatest
 * @owner Observable
 */
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = null;
    var scheduler = null;
    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {
        scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    // if the first and only other argument besides the resultSelector is an array
    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`
    if (observables.length === 1 && isArray_1.isArray(observables[0])) {
        observables = observables[0];
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));
}
exports.combineLatest = combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(3);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var InnerSubscriber = (function (_super) {
    __extends(InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        _super.call(this);
        this.parent = parent;
        this.outerValue = outerValue;
        this.outerIndex = outerIndex;
        this.index = 0;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(Subscriber_1.Subscriber));
exports.InnerSubscriber = InnerSubscriber;
//# sourceMappingURL=InnerSubscriber.js.map

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concat_1 = __webpack_require__(44);
Observable_1.Observable.concat = concat_1.concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(11);
var Observable_1 = __webpack_require__(0);
var iterator_1 = __webpack_require__(18);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IteratorObservable = (function (_super) {
    __extends(IteratorObservable, _super);
    function IteratorObservable(iterator, scheduler) {
        _super.call(this);
        this.scheduler = scheduler;
        if (iterator == null) {
            throw new Error('iterator cannot be null.');
        }
        this.iterator = getIterator(iterator);
    }
    IteratorObservable.create = function (iterator, scheduler) {
        return new IteratorObservable(iterator, scheduler);
    };
    IteratorObservable.dispatch = function (state) {
        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;
        if (hasError) {
            subscriber.error(state.error);
            return;
        }
        var result = iterator.next();
        if (result.done) {
            subscriber.complete();
            return;
        }
        subscriber.next(result.value);
        state.index = index + 1;
        if (subscriber.closed) {
            if (typeof iterator.return === 'function') {
                iterator.return();
            }
            return;
        }
        this.schedule(state);
    };
    IteratorObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;
        if (scheduler) {
            return scheduler.schedule(IteratorObservable.dispatch, 0, {
                index: index, iterator: iterator, subscriber: subscriber
            });
        }
        else {
            do {
                var result = iterator.next();
                if (result.done) {
                    subscriber.complete();
                    break;
                }
                else {
                    subscriber.next(result.value);
                }
                if (subscriber.closed) {
                    if (typeof iterator.return === 'function') {
                        iterator.return();
                    }
                    break;
                }
            } while (true);
        }
    };
    return IteratorObservable;
}(Observable_1.Observable));
exports.IteratorObservable = IteratorObservable;
var StringIterator = (function () {
    function StringIterator(str, idx, len) {
        if (idx === void 0) { idx = 0; }
        if (len === void 0) { len = str.length; }
        this.str = str;
        this.idx = idx;
        this.len = len;
    }
    StringIterator.prototype[iterator_1.iterator] = function () { return (this); };
    StringIterator.prototype.next = function () {
        return this.idx < this.len ? {
            done: false,
            value: this.str.charAt(this.idx++)
        } : {
            done: true,
            value: undefined
        };
    };
    return StringIterator;
}());
var ArrayIterator = (function () {
    function ArrayIterator(arr, idx, len) {
        if (idx === void 0) { idx = 0; }
        if (len === void 0) { len = toLength(arr); }
        this.arr = arr;
        this.idx = idx;
        this.len = len;
    }
    ArrayIterator.prototype[iterator_1.iterator] = function () { return this; };
    ArrayIterator.prototype.next = function () {
        return this.idx < this.len ? {
            done: false,
            value: this.arr[this.idx++]
        } : {
            done: true,
            value: undefined
        };
    };
    return ArrayIterator;
}());
function getIterator(obj) {
    var i = obj[iterator_1.iterator];
    if (!i && typeof obj === 'string') {
        return new StringIterator(obj);
    }
    if (!i && obj.length !== undefined) {
        return new ArrayIterator(obj);
    }
    if (!i) {
        throw new TypeError('object is not iterable');
    }
    return obj[iterator_1.iterator]();
}
var maxSafeInteger = Math.pow(2, 53) - 1;
function toLength(o) {
    var len = +o.length;
    if (isNaN(len)) {
        return 0;
    }
    if (len === 0 || !numberIsFinite(len)) {
        return len;
    }
    len = sign(len) * Math.floor(Math.abs(len));
    if (len <= 0) {
        return 0;
    }
    if (len > maxSafeInteger) {
        return maxSafeInteger;
    }
    return len;
}
function numberIsFinite(value) {
    return typeof value === 'number' && root_1.root.isFinite(value);
}
function sign(value) {
    var valueAsNumber = +value;
    if (valueAsNumber === 0) {
        return valueAsNumber;
    }
    if (isNaN(valueAsNumber)) {
        return valueAsNumber;
    }
    return valueAsNumber < 0 ? -1 : 1;
}
//# sourceMappingURL=IteratorObservable.js.map

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var ScalarObservable_1 = __webpack_require__(43);
var EmptyObservable_1 = __webpack_require__(15);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ArrayLikeObservable = (function (_super) {
    __extends(ArrayLikeObservable, _super);
    function ArrayLikeObservable(arrayLike, scheduler) {
        _super.call(this);
        this.arrayLike = arrayLike;
        this.scheduler = scheduler;
        if (!scheduler && arrayLike.length === 1) {
            this._isScalar = true;
            this.value = arrayLike[0];
        }
    }
    ArrayLikeObservable.create = function (arrayLike, scheduler) {
        var length = arrayLike.length;
        if (length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        else if (length === 1) {
            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);
        }
        else {
            return new ArrayLikeObservable(arrayLike, scheduler);
        }
    };
    ArrayLikeObservable.dispatch = function (state) {
        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;
        if (subscriber.closed) {
            return;
        }
        if (index >= length) {
            subscriber.complete();
            return;
        }
        subscriber.next(arrayLike[index]);
        state.index = index + 1;
        this.schedule(state);
    };
    ArrayLikeObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;
        var length = arrayLike.length;
        if (scheduler) {
            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {
                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber
            });
        }
        else {
            for (var i = 0; i < length && !subscriber.closed; i++) {
                subscriber.next(arrayLike[i]);
            }
            subscriber.complete();
        }
    };
    return ArrayLikeObservable;
}(Observable_1.Observable));
exports.ArrayLikeObservable = ArrayLikeObservable;
//# sourceMappingURL=ArrayLikeObservable.js.map

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var defer_1 = __webpack_require__(209);
Observable_1.Observable.defer = defer_1.defer;
//# sourceMappingURL=defer.js.map

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DeferObservable_1 = __webpack_require__(210);
exports.defer = DeferObservable_1.DeferObservable.create;
//# sourceMappingURL=defer.js.map

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var subscribeToResult_1 = __webpack_require__(5);
var OuterSubscriber_1 = __webpack_require__(4);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var DeferObservable = (function (_super) {
    __extends(DeferObservable, _super);
    function DeferObservable(observableFactory) {
        _super.call(this);
        this.observableFactory = observableFactory;
    }
    /**
     * Creates an Observable that, on subscribe, calls an Observable factory to
     * make an Observable for each new Observer.
     *
     * <span class="informal">Creates the Observable lazily, that is, only when it
     * is subscribed.
     * </span>
     *
     * <img src="./img/defer.png" width="100%">
     *
     * `defer` allows you to create the Observable only when the Observer
     * subscribes, and create a fresh Observable for each Observer. It waits until
     * an Observer subscribes to it, and then it generates an Observable,
     * typically with an Observable factory function. It does this afresh for each
     * subscriber, so although each subscriber may think it is subscribing to the
     * same Observable, in fact each subscriber gets its own individual
     * Observable.
     *
     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>
     * var clicksOrInterval = Rx.Observable.defer(function () {
     *   if (Math.random() > 0.5) {
     *     return Rx.Observable.fromEvent(document, 'click');
     *   } else {
     *     return Rx.Observable.interval(1000);
     *   }
     * });
     * clicksOrInterval.subscribe(x => console.log(x));
     *
     * // Results in the following behavior:
     * // If the result of Math.random() is greater than 0.5 it will listen
     * // for clicks anywhere on the "document"; when document is clicked it
     * // will log a MouseEvent object to the console. If the result is less
     * // than 0.5 it will emit ascending numbers, one every second(1000ms).
     *
     * @see {@link create}
     *
     * @param {function(): SubscribableOrPromise} observableFactory The Observable
     * factory function to invoke for each Observer that subscribes to the output
     * Observable. May also return a Promise, which will be converted on the fly
     * to an Observable.
     * @return {Observable} An Observable whose Observers' subscriptions trigger
     * an invocation of the given Observable factory function.
     * @static true
     * @name defer
     * @owner Observable
     */
    DeferObservable.create = function (observableFactory) {
        return new DeferObservable(observableFactory);
    };
    DeferObservable.prototype._subscribe = function (subscriber) {
        return new DeferSubscriber(subscriber, this.observableFactory);
    };
    return DeferObservable;
}(Observable_1.Observable));
exports.DeferObservable = DeferObservable;
var DeferSubscriber = (function (_super) {
    __extends(DeferSubscriber, _super);
    function DeferSubscriber(destination, factory) {
        _super.call(this, destination);
        this.factory = factory;
        this.tryDefer();
    }
    DeferSubscriber.prototype.tryDefer = function () {
        try {
            this._callFactory();
        }
        catch (err) {
            this._error(err);
        }
    };
    DeferSubscriber.prototype._callFactory = function () {
        var result = this.factory();
        if (result) {
            this.add(subscribeToResult_1.subscribeToResult(this, result));
        }
    };
    return DeferSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=DeferObservable.js.map

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var empty_1 = __webpack_require__(212);
Observable_1.Observable.empty = empty_1.empty;
//# sourceMappingURL=empty.js.map

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var EmptyObservable_1 = __webpack_require__(15);
exports.empty = EmptyObservable_1.EmptyObservable.create;
//# sourceMappingURL=empty.js.map

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var forkJoin_1 = __webpack_require__(214);
Observable_1.Observable.forkJoin = forkJoin_1.forkJoin;
//# sourceMappingURL=forkJoin.js.map

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ForkJoinObservable_1 = __webpack_require__(215);
exports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;
//# sourceMappingURL=forkJoin.js.map

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var EmptyObservable_1 = __webpack_require__(15);
var isArray_1 = __webpack_require__(13);
var subscribeToResult_1 = __webpack_require__(5);
var OuterSubscriber_1 = __webpack_require__(4);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ForkJoinObservable = (function (_super) {
    __extends(ForkJoinObservable, _super);
    function ForkJoinObservable(sources, resultSelector) {
        _super.call(this);
        this.sources = sources;
        this.resultSelector = resultSelector;
    }
    /* tslint:enable:max-line-length */
    /**
     * Joins last values emitted by passed Observables.
     *
     * <span class="informal">Wait for Observables to complete and then combine last values they emitted.</span>
     *
     * <img src="./img/forkJoin.png" width="100%">
     *
     * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array
     * or directly as arguments. If no input Observables are provided, resulting stream will complete
     * immediately.
     *
     * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last
     * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting
     * array will have `n` values, where first value is the last thing emitted by the first Observable,
     * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will
     * not emit more than once and it will complete after that. If you need to emit combined values not only
     * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}
     * or {@link zip} instead.
     *
     * In order for resulting array to have the same length as the number of input Observables, whenever any of
     * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well
     * and it will not emit anything either, even if it already has some last values from other Observables.
     * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,
     * unless at any point some other Observable completes without emitting value, which brings us back to
     * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments
     * have to emit something at least once and complete.
     *
     * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables
     * will be immediately unsubscribed.
     *
     * Optionally `forkJoin` accepts project function, that will be called with values which normally
     * would land in emitted array. Whatever is returned by project function, will appear in output
     * Observable instead. This means that default project can be thought of as a function that takes
     * all its arguments and puts them into an array. Note that project function will be called only
     * when output Observable is supposed to emit a result.
     *
     * @example <caption>Use forkJoin with operator emitting immediately</caption>
     * const observable = Rx.Observable.forkJoin(
     *   Rx.Observable.of(1, 2, 3, 4),
     *   Rx.Observable.of(5, 6, 7, 8)
     * );
     * observable.subscribe(
     *   value => console.log(value),
     *   err => {},
     *   () => console.log('This is how it ends!')
     * );
     *
     * // Logs:
     * // [4, 8]
     * // "This is how it ends!"
     *
     *
     * @example <caption>Use forkJoin with operator emitting after some time</caption>
     * const observable = Rx.Observable.forkJoin(
     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete
     *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete
     * );
     * observable.subscribe(
     *   value => console.log(value),
     *   err => {},
     *   () => console.log('This is how it ends!')
     * );
     *
     * // Logs:
     * // [2, 3] after 3 seconds
     * // "This is how it ends!" immediately after
     *
     *
     * @example <caption>Use forkJoin with project function</caption>
     * const observable = Rx.Observable.forkJoin(
     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete
     *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete
     *   (n, m) => n + m
     * );
     * observable.subscribe(
     *   value => console.log(value),
     *   err => {},
     *   () => console.log('This is how it ends!')
     * );
     *
     * // Logs:
     * // 5 after 3 seconds
     * // "This is how it ends!" immediately after
     *
     * @see {@link combineLatest}
     * @see {@link zip}
     *
     * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments
     * passed directly to the operator.
     * @param {function} [project] Function that takes values emitted by input Observables and returns value
     * that will appear in resulting Observable instead of default array.
     * @return {Observable} Observable emitting either an array of last values emitted by passed Observables
     * or value from project function.
     * @static true
     * @name forkJoin
     * @owner Observable
     */
    ForkJoinObservable.create = function () {
        var sources = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            sources[_i - 0] = arguments[_i];
        }
        if (sources === null || arguments.length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        var resultSelector = null;
        if (typeof sources[sources.length - 1] === 'function') {
            resultSelector = sources.pop();
        }
        // if the first and only other argument besides the resultSelector is an array
        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`
        if (sources.length === 1 && isArray_1.isArray(sources[0])) {
            sources = sources[0];
        }
        if (sources.length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        return new ForkJoinObservable(sources, resultSelector);
    };
    ForkJoinObservable.prototype._subscribe = function (subscriber) {
        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);
    };
    return ForkJoinObservable;
}(Observable_1.Observable));
exports.ForkJoinObservable = ForkJoinObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ForkJoinSubscriber = (function (_super) {
    __extends(ForkJoinSubscriber, _super);
    function ForkJoinSubscriber(destination, sources, resultSelector) {
        _super.call(this, destination);
        this.sources = sources;
        this.resultSelector = resultSelector;
        this.completed = 0;
        this.haveValues = 0;
        var len = sources.length;
        this.total = len;
        this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            var source = sources[i];
            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);
            if (innerSubscription) {
                innerSubscription.outerIndex = i;
                this.add(innerSubscription);
            }
        }
    }
    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        if (!innerSub._hasValue) {
            innerSub._hasValue = true;
            this.haveValues++;
        }
    };
    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;
        var len = values.length;
        if (!innerSub._hasValue) {
            destination.complete();
            return;
        }
        this.completed++;
        if (this.completed !== len) {
            return;
        }
        if (haveValues === len) {
            var value = resultSelector ? resultSelector.apply(this, values) : values;
            destination.next(value);
        }
        destination.complete();
    };
    return ForkJoinSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=ForkJoinObservable.js.map

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var from_1 = __webpack_require__(71);
Observable_1.Observable.from = from_1.from;
//# sourceMappingURL=from.js.map

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var fromEventPattern_1 = __webpack_require__(218);
Observable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;
//# sourceMappingURL=fromEventPattern.js.map

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FromEventPatternObservable_1 = __webpack_require__(219);
exports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;
//# sourceMappingURL=fromEventPattern.js.map

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isFunction_1 = __webpack_require__(27);
var Observable_1 = __webpack_require__(0);
var Subscription_1 = __webpack_require__(7);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromEventPatternObservable = (function (_super) {
    __extends(FromEventPatternObservable, _super);
    function FromEventPatternObservable(addHandler, removeHandler, selector) {
        _super.call(this);
        this.addHandler = addHandler;
        this.removeHandler = removeHandler;
        this.selector = selector;
    }
    /**
     * Creates an Observable from an API based on addHandler/removeHandler
     * functions.
     *
     * <span class="informal">Converts any addHandler/removeHandler API to an
     * Observable.</span>
     *
     * <img src="./img/fromEventPattern.png" width="100%">
     *
     * Creates an Observable by using the `addHandler` and `removeHandler`
     * functions to add and remove the handlers, with an optional selector
     * function to project the event arguments to a result. The `addHandler` is
     * called when the output Observable is subscribed, and `removeHandler` is
     * called when the Subscription is unsubscribed.
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * function addClickHandler(handler) {
     *   document.addEventListener('click', handler);
     * }
     *
     * function removeClickHandler(handler) {
     *   document.removeEventListener('click', handler);
     * }
     *
     * var clicks = Rx.Observable.fromEventPattern(
     *   addClickHandler,
     *   removeClickHandler
     * );
     * clicks.subscribe(x => console.log(x));
     *
     * @see {@link from}
     * @see {@link fromEvent}
     *
     * @param {function(handler: Function): any} addHandler A function that takes
     * a `handler` function as argument and attaches it somehow to the actual
     * source of events.
     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that
     * takes a `handler` function as argument and removes it in case it was
     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,
     * removeHandler function will forward it.
     * @param {function(...args: any): T} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEventPattern
     * @owner Observable
     */
    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {
        return new FromEventPatternObservable(addHandler, removeHandler, selector);
    };
    FromEventPatternObservable.prototype._subscribe = function (subscriber) {
        var _this = this;
        var removeHandler = this.removeHandler;
        var handler = !!this.selector ? function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            _this._callSelector(subscriber, args);
        } : function (e) { subscriber.next(e); };
        var retValue = this._callAddHandler(handler, subscriber);
        if (!isFunction_1.isFunction(removeHandler)) {
            return;
        }
        subscriber.add(new Subscription_1.Subscription(function () {
            //TODO: determine whether or not to forward to error handler
            removeHandler(handler, retValue);
        }));
    };
    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {
        try {
            var result = this.selector.apply(this, args);
            subscriber.next(result);
        }
        catch (e) {
            subscriber.error(e);
        }
    };
    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {
        try {
            return this.addHandler(handler) || null;
        }
        catch (e) {
            errorSubscriber.error(e);
        }
    };
    return FromEventPatternObservable;
}(Observable_1.Observable));
exports.FromEventPatternObservable = FromEventPatternObservable;
//# sourceMappingURL=FromEventPatternObservable.js.map

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var fromPromise_1 = __webpack_require__(221);
Observable_1.Observable.fromPromise = fromPromise_1.fromPromise;
//# sourceMappingURL=fromPromise.js.map

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var PromiseObservable_1 = __webpack_require__(73);
exports.fromPromise = PromiseObservable_1.PromiseObservable.create;
//# sourceMappingURL=fromPromise.js.map

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var generate_1 = __webpack_require__(223);
Observable_1.Observable.generate = generate_1.generate;
//# sourceMappingURL=generate.js.map

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var GenerateObservable_1 = __webpack_require__(224);
exports.generate = GenerateObservable_1.GenerateObservable.create;
//# sourceMappingURL=generate.js.map

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var isScheduler_1 = __webpack_require__(12);
var selfSelector = function (value) { return value; };
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var GenerateObservable = (function (_super) {
    __extends(GenerateObservable, _super);
    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {
        _super.call(this);
        this.initialState = initialState;
        this.condition = condition;
        this.iterate = iterate;
        this.resultSelector = resultSelector;
        this.scheduler = scheduler;
    }
    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
        if (arguments.length == 1) {
            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);
        }
        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {
            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);
        }
        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);
    };
    GenerateObservable.prototype._subscribe = function (subscriber) {
        var state = this.initialState;
        if (this.scheduler) {
            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {
                subscriber: subscriber,
                iterate: this.iterate,
                condition: this.condition,
                resultSelector: this.resultSelector,
                state: state });
        }
        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;
        do {
            if (condition) {
                var conditionResult = void 0;
                try {
                    conditionResult = condition(state);
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (!conditionResult) {
                    subscriber.complete();
                    break;
                }
            }
            var value = void 0;
            try {
                value = resultSelector(state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
            subscriber.next(value);
            if (subscriber.closed) {
                break;
            }
            try {
                state = iterate(state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
        } while (true);
    };
    GenerateObservable.dispatch = function (state) {
        var subscriber = state.subscriber, condition = state.condition;
        if (subscriber.closed) {
            return;
        }
        if (state.needIterate) {
            try {
                state.state = state.iterate(state.state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
        }
        else {
            state.needIterate = true;
        }
        if (condition) {
            var conditionResult = void 0;
            try {
                conditionResult = condition(state.state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
            if (!conditionResult) {
                subscriber.complete();
                return;
            }
            if (subscriber.closed) {
                return;
            }
        }
        var value;
        try {
            value = state.resultSelector(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return;
        }
        if (subscriber.closed) {
            return;
        }
        subscriber.next(value);
        if (subscriber.closed) {
            return;
        }
        return this.schedule(state);
    };
    return GenerateObservable;
}(Observable_1.Observable));
exports.GenerateObservable = GenerateObservable;
//# sourceMappingURL=GenerateObservable.js.map

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var if_1 = __webpack_require__(226);
Observable_1.Observable.if = if_1._if;
//# sourceMappingURL=if.js.map

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IfObservable_1 = __webpack_require__(227);
exports._if = IfObservable_1.IfObservable.create;
//# sourceMappingURL=if.js.map

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var subscribeToResult_1 = __webpack_require__(5);
var OuterSubscriber_1 = __webpack_require__(4);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IfObservable = (function (_super) {
    __extends(IfObservable, _super);
    function IfObservable(condition, thenSource, elseSource) {
        _super.call(this);
        this.condition = condition;
        this.thenSource = thenSource;
        this.elseSource = elseSource;
    }
    IfObservable.create = function (condition, thenSource, elseSource) {
        return new IfObservable(condition, thenSource, elseSource);
    };
    IfObservable.prototype._subscribe = function (subscriber) {
        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;
        return new IfSubscriber(subscriber, condition, thenSource, elseSource);
    };
    return IfObservable;
}(Observable_1.Observable));
exports.IfObservable = IfObservable;
var IfSubscriber = (function (_super) {
    __extends(IfSubscriber, _super);
    function IfSubscriber(destination, condition, thenSource, elseSource) {
        _super.call(this, destination);
        this.condition = condition;
        this.thenSource = thenSource;
        this.elseSource = elseSource;
        this.tryIf();
    }
    IfSubscriber.prototype.tryIf = function () {
        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;
        var result;
        try {
            result = condition();
            var source = result ? thenSource : elseSource;
            if (source) {
                this.add(subscribeToResult_1.subscribeToResult(this, source));
            }
            else {
                this._complete();
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    return IfSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=IfObservable.js.map

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var interval_1 = __webpack_require__(229);
Observable_1.Observable.interval = interval_1.interval;
//# sourceMappingURL=interval.js.map

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IntervalObservable_1 = __webpack_require__(230);
exports.interval = IntervalObservable_1.IntervalObservable.create;
//# sourceMappingURL=interval.js.map

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isNumeric_1 = __webpack_require__(21);
var Observable_1 = __webpack_require__(0);
var async_1 = __webpack_require__(6);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IntervalObservable = (function (_super) {
    __extends(IntervalObservable, _super);
    function IntervalObservable(period, scheduler) {
        if (period === void 0) { period = 0; }
        if (scheduler === void 0) { scheduler = async_1.async; }
        _super.call(this);
        this.period = period;
        this.scheduler = scheduler;
        if (!isNumeric_1.isNumeric(period) || period < 0) {
            this.period = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            this.scheduler = async_1.async;
        }
    }
    /**
     * Creates an Observable that emits sequential numbers every specified
     * interval of time, on a specified IScheduler.
     *
     * <span class="informal">Emits incremental numbers periodically in time.
     * </span>
     *
     * <img src="./img/interval.png" width="100%">
     *
     * `interval` returns an Observable that emits an infinite sequence of
     * ascending integers, with a constant interval of time of your choosing
     * between those emissions. The first emission is not sent immediately, but
     * only after the first period has passed. By default, this operator uses the
     * `async` IScheduler to provide a notion of time, but you may pass any
     * IScheduler to it.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>
     * var numbers = Rx.Observable.interval(1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link delay}
     *
     * @param {number} [period=0] The interval size in milliseconds (by default)
     * or the time unit determined by the scheduler's clock.
     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a sequential number each time
     * interval.
     * @static true
     * @name interval
     * @owner Observable
     */
    IntervalObservable.create = function (period, scheduler) {
        if (period === void 0) { period = 0; }
        if (scheduler === void 0) { scheduler = async_1.async; }
        return new IntervalObservable(period, scheduler);
    };
    IntervalObservable.dispatch = function (state) {
        var index = state.index, subscriber = state.subscriber, period = state.period;
        subscriber.next(index);
        if (subscriber.closed) {
            return;
        }
        state.index += 1;
        this.schedule(state, period);
    };
    IntervalObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var period = this.period;
        var scheduler = this.scheduler;
        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {
            index: index, subscriber: subscriber, period: period
        }));
    };
    return IntervalObservable;
}(Observable_1.Observable));
exports.IntervalObservable = IntervalObservable;
//# sourceMappingURL=IntervalObservable.js.map

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(7);
/**
 * A unit of work to be executed in a {@link Scheduler}. An action is typically
 * created from within a Scheduler and an RxJS user does not need to concern
 * themselves about creating and manipulating an Action.
 *
 * ```ts
 * class Action<T> extends Subscription {
 *   new (scheduler: Scheduler, work: (state?: T) => void);
 *   schedule(state?: T, delay: number = 0): Subscription;
 * }
 * ```
 *
 * @class Action<T>
 */
var Action = (function (_super) {
    __extends(Action, _super);
    function Action(scheduler, work) {
        _super.call(this);
    }
    /**
     * Schedules this action on its parent Scheduler for execution. May be passed
     * some context object, `state`. May happen at some point in the future,
     * according to the `delay` parameter, if specified.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler.
     * @return {void}
     */
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        return this;
    };
    return Action;
}(Subscription_1.Subscription));
exports.Action = Action;
//# sourceMappingURL=Action.js.map

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * An execution context and a data structure to order tasks and schedule their
 * execution. Provides a notion of (potentially virtual) time, through the
 * `now()` getter method.
 *
 * Each unit of work in a Scheduler is called an {@link Action}.
 *
 * ```ts
 * class Scheduler {
 *   now(): number;
 *   schedule(work, delay?, state?): Subscription;
 * }
 * ```
 *
 * @class Scheduler
 */
var Scheduler = (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) { now = Scheduler.now; }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    /**
     * Schedules a function, `work`, for execution. May happen at some point in
     * the future, according to the `delay` parameter, if specified. May be passed
     * some context object, `state`, which will be passed to the `work` function.
     *
     * The given arguments will be processed an stored as an Action object in a
     * queue of actions.
     *
     * @param {function(state: ?T): ?Subscription} work A function representing a
     * task, or some unit of work to be executed by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler itself.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @return {Subscription} A subscription in order to be able to unsubscribe
     * the scheduled work.
     */
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) { delay = 0; }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };
    return Scheduler;
}());
exports.Scheduler = Scheduler;
//# sourceMappingURL=Scheduler.js.map

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var merge_1 = __webpack_require__(76);
exports.merge = merge_1.mergeStatic;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var race_1 = __webpack_require__(47);
Observable_1.Observable.race = race_1.race;
//# sourceMappingURL=race.js.map

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var never_1 = __webpack_require__(236);
Observable_1.Observable.never = never_1.never;
//# sourceMappingURL=never.js.map

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var NeverObservable_1 = __webpack_require__(237);
exports.never = NeverObservable_1.NeverObservable.create;
//# sourceMappingURL=never.js.map

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var noop_1 = __webpack_require__(42);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var NeverObservable = (function (_super) {
    __extends(NeverObservable, _super);
    function NeverObservable() {
        _super.call(this);
    }
    /**
     * Creates an Observable that emits no items to the Observer.
     *
     * <span class="informal">An Observable that never emits anything.</span>
     *
     * <img src="./img/never.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that emits
     * neither values nor errors nor the completion notification. It can be used
     * for testing purposes or for composing with other Observables. Please note
     * that by never emitting a complete notification, this Observable keeps the
     * subscription from being disposed automatically. Subscriptions need to be
     * manually disposed.
     *
     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>
     * function info() {
     *   console.log('Will not be called');
     * }
     * var result = Rx.Observable.never().startWith(7);
     * result.subscribe(x => console.log(x), info, info);
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link of}
     * @see {@link throw}
     *
     * @return {Observable} A "never" Observable: never emits anything.
     * @static true
     * @name never
     * @owner Observable
     */
    NeverObservable.create = function () {
        return new NeverObservable();
    };
    NeverObservable.prototype._subscribe = function (subscriber) {
        noop_1.noop();
    };
    return NeverObservable;
}(Observable_1.Observable));
exports.NeverObservable = NeverObservable;
//# sourceMappingURL=NeverObservable.js.map

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var of_1 = __webpack_require__(70);
Observable_1.Observable.of = of_1.of;
//# sourceMappingURL=of.js.map

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var onErrorResumeNext_1 = __webpack_require__(240);
Observable_1.Observable.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var onErrorResumeNext_1 = __webpack_require__(48);
exports.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNextStatic;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var pairs_1 = __webpack_require__(242);
Observable_1.Observable.pairs = pairs_1.pairs;
//# sourceMappingURL=pairs.js.map

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var PairsObservable_1 = __webpack_require__(243);
exports.pairs = PairsObservable_1.PairsObservable.create;
//# sourceMappingURL=pairs.js.map

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
function dispatch(state) {
    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;
    if (index === length) {
        subscriber.complete();
        return;
    }
    var key = keys[index];
    subscriber.next([key, obj[key]]);
    state.index = index + 1;
    this.schedule(state);
}
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var PairsObservable = (function (_super) {
    __extends(PairsObservable, _super);
    function PairsObservable(obj, scheduler) {
        _super.call(this);
        this.obj = obj;
        this.scheduler = scheduler;
        this.keys = Object.keys(obj);
    }
    /**
     * Convert an object into an observable sequence of [key, value] pairs
     * using an optional IScheduler to enumerate the object.
     *
     * @example <caption>Converts a javascript object to an Observable</caption>
     * var obj = {
     *   foo: 42,
     *   bar: 56,
     *   baz: 78
     * };
     *
     * var source = Rx.Observable.pairs(obj);
     *
     * var subscription = source.subscribe(
     *   function (x) {
     *     console.log('Next: %s', x);
     *   },
     *   function (err) {
     *     console.log('Error: %s', err);
     *   },
     *   function () {
     *     console.log('Completed');
     *   });
     *
     * @param {Object} obj The object to inspect and turn into an
     * Observable sequence.
     * @param {Scheduler} [scheduler] An optional IScheduler to run the
     * enumeration of the input sequence on.
     * @returns {(Observable<Array<string | T>>)} An observable sequence of
     * [key, value] pairs from the object.
     */
    PairsObservable.create = function (obj, scheduler) {
        return new PairsObservable(obj, scheduler);
    };
    PairsObservable.prototype._subscribe = function (subscriber) {
        var _a = this, keys = _a.keys, scheduler = _a.scheduler;
        var length = keys.length;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber
            });
        }
        else {
            for (var idx = 0; idx < length; idx++) {
                var key = keys[idx];
                subscriber.next([key, this.obj[key]]);
            }
            subscriber.complete();
        }
    };
    return PairsObservable;
}(Observable_1.Observable));
exports.PairsObservable = PairsObservable;
//# sourceMappingURL=PairsObservable.js.map

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var range_1 = __webpack_require__(245);
Observable_1.Observable.range = range_1.range;
//# sourceMappingURL=range.js.map

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var RangeObservable_1 = __webpack_require__(246);
exports.range = RangeObservable_1.RangeObservable.create;
//# sourceMappingURL=range.js.map

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var RangeObservable = (function (_super) {
    __extends(RangeObservable, _super);
    function RangeObservable(start, count, scheduler) {
        _super.call(this);
        this.start = start;
        this._count = count;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits a sequence of numbers within a specified
     * range.
     *
     * <span class="informal">Emits a sequence of numbers in a range.</span>
     *
     * <img src="./img/range.png" width="100%">
     *
     * `range` operator emits a range of sequential integers, in order, where you
     * select the `start` of the range and its `length`. By default, uses no
     * IScheduler and just delivers the notifications synchronously, but may use
     * an optional IScheduler to regulate those deliveries.
     *
     * @example <caption>Emits the numbers 1 to 10</caption>
     * var numbers = Rx.Observable.range(1, 10);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link interval}
     *
     * @param {number} [start=0] The value of the first integer in the sequence.
     * @param {number} [count=0] The number of sequential integers to generate.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emissions of the notifications.
     * @return {Observable} An Observable of numbers that emits a finite range of
     * sequential integers.
     * @static true
     * @name range
     * @owner Observable
     */
    RangeObservable.create = function (start, count, scheduler) {
        if (start === void 0) { start = 0; }
        if (count === void 0) { count = 0; }
        return new RangeObservable(start, count, scheduler);
    };
    RangeObservable.dispatch = function (state) {
        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(start);
        if (subscriber.closed) {
            return;
        }
        state.index = index + 1;
        state.start = start + 1;
        this.schedule(state);
    };
    RangeObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var start = this.start;
        var count = this._count;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(RangeObservable.dispatch, 0, {
                index: index, count: count, start: start, subscriber: subscriber
            });
        }
        else {
            do {
                if (index++ >= count) {
                    subscriber.complete();
                    break;
                }
                subscriber.next(start++);
                if (subscriber.closed) {
                    break;
                }
            } while (true);
        }
    };
    return RangeObservable;
}(Observable_1.Observable));
exports.RangeObservable = RangeObservable;
//# sourceMappingURL=RangeObservable.js.map

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var using_1 = __webpack_require__(248);
Observable_1.Observable.using = using_1.using;
//# sourceMappingURL=using.js.map

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var UsingObservable_1 = __webpack_require__(249);
exports.using = UsingObservable_1.UsingObservable.create;
//# sourceMappingURL=using.js.map

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var subscribeToResult_1 = __webpack_require__(5);
var OuterSubscriber_1 = __webpack_require__(4);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var UsingObservable = (function (_super) {
    __extends(UsingObservable, _super);
    function UsingObservable(resourceFactory, observableFactory) {
        _super.call(this);
        this.resourceFactory = resourceFactory;
        this.observableFactory = observableFactory;
    }
    UsingObservable.create = function (resourceFactory, observableFactory) {
        return new UsingObservable(resourceFactory, observableFactory);
    };
    UsingObservable.prototype._subscribe = function (subscriber) {
        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;
        var resource;
        try {
            resource = resourceFactory();
            return new UsingSubscriber(subscriber, resource, observableFactory);
        }
        catch (err) {
            subscriber.error(err);
        }
    };
    return UsingObservable;
}(Observable_1.Observable));
exports.UsingObservable = UsingObservable;
var UsingSubscriber = (function (_super) {
    __extends(UsingSubscriber, _super);
    function UsingSubscriber(destination, resource, observableFactory) {
        _super.call(this, destination);
        this.resource = resource;
        this.observableFactory = observableFactory;
        destination.add(resource);
        this.tryUse();
    }
    UsingSubscriber.prototype.tryUse = function () {
        try {
            var source = this.observableFactory.call(this, this.resource);
            if (source) {
                this.add(subscribeToResult_1.subscribeToResult(this, source));
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    return UsingSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=UsingObservable.js.map

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var throw_1 = __webpack_require__(251);
Observable_1.Observable.throw = throw_1._throw;
//# sourceMappingURL=throw.js.map

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ErrorObservable_1 = __webpack_require__(252);
exports._throw = ErrorObservable_1.ErrorObservable.create;
//# sourceMappingURL=throw.js.map

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ErrorObservable = (function (_super) {
    __extends(ErrorObservable, _super);
    function ErrorObservable(error, scheduler) {
        _super.call(this);
        this.error = error;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits an error notification.
     *
     * <span class="informal">Just emits 'error', and nothing else.
     * </span>
     *
     * <img src="./img/throw.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the error notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then emit an error.</caption>
     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x === 13 ?
     *     Rx.Observable.throw('Thirteens are bad') :
     *     Rx.Observable.of('a', 'b', 'c')
     * );
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link of}
     *
     * @param {any} error The particular Error to pass to the error notification.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emission of the error notification.
     * @return {Observable} An error Observable: emits only the error notification
     * using the given error argument.
     * @static true
     * @name throw
     * @owner Observable
     */
    ErrorObservable.create = function (error, scheduler) {
        return new ErrorObservable(error, scheduler);
    };
    ErrorObservable.dispatch = function (arg) {
        var error = arg.error, subscriber = arg.subscriber;
        subscriber.error(error);
    };
    ErrorObservable.prototype._subscribe = function (subscriber) {
        var error = this.error;
        var scheduler = this.scheduler;
        subscriber.syncErrorThrowable = true;
        if (scheduler) {
            return scheduler.schedule(ErrorObservable.dispatch, 0, {
                error: error, subscriber: subscriber
            });
        }
        else {
            subscriber.error(error);
        }
    };
    return ErrorObservable;
}(Observable_1.Observable));
exports.ErrorObservable = ErrorObservable;
//# sourceMappingURL=ErrorObservable.js.map

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timer_1 = __webpack_require__(77);
Observable_1.Observable.timer = timer_1.timer;
//# sourceMappingURL=timer.js.map

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isNumeric_1 = __webpack_require__(21);
var Observable_1 = __webpack_require__(0);
var async_1 = __webpack_require__(6);
var isScheduler_1 = __webpack_require__(12);
var isDate_1 = __webpack_require__(36);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var TimerObservable = (function (_super) {
    __extends(TimerObservable, _super);
    function TimerObservable(dueTime, period, scheduler) {
        if (dueTime === void 0) { dueTime = 0; }
        _super.call(this);
        this.period = -1;
        this.dueTime = 0;
        if (isNumeric_1.isNumeric(period)) {
            this.period = Number(period) < 1 && 1 || Number(period);
        }
        else if (isScheduler_1.isScheduler(period)) {
            scheduler = period;
        }
        if (!isScheduler_1.isScheduler(scheduler)) {
            scheduler = async_1.async;
        }
        this.scheduler = scheduler;
        this.dueTime = isDate_1.isDate(dueTime) ?
            (+dueTime - this.scheduler.now()) :
            dueTime;
    }
    /**
     * Creates an Observable that starts emitting after an `initialDelay` and
     * emits ever increasing numbers after each `period` of time thereafter.
     *
     * <span class="informal">Its like {@link interval}, but you can specify when
     * should the emissions start.</span>
     *
     * <img src="./img/timer.png" width="100%">
     *
     * `timer` returns an Observable that emits an infinite sequence of ascending
     * integers, with a constant interval of time, `period` of your choosing
     * between those emissions. The first emission happens after the specified
     * `initialDelay`. The initial delay may be a {@link Date}. By default, this
     * operator uses the `async` IScheduler to provide a notion of time, but you
     * may pass any IScheduler to it. If `period` is not specified, the output
     * Observable emits only one value, `0`. Otherwise, it emits an infinite
     * sequence.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>
     * var numbers = Rx.Observable.timer(3000, 1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @example <caption>Emits one number after five seconds</caption>
     * var numbers = Rx.Observable.timer(5000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link interval}
     * @see {@link delay}
     *
     * @param {number|Date} initialDelay The initial delay time to wait before
     * emitting the first value of `0`.
     * @param {number} [period] The period of time between emissions of the
     * subsequent numbers.
     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a `0` after the
     * `initialDelay` and ever increasing numbers after each `period` of time
     * thereafter.
     * @static true
     * @name timer
     * @owner Observable
     */
    TimerObservable.create = function (initialDelay, period, scheduler) {
        if (initialDelay === void 0) { initialDelay = 0; }
        return new TimerObservable(initialDelay, period, scheduler);
    };
    TimerObservable.dispatch = function (state) {
        var index = state.index, period = state.period, subscriber = state.subscriber;
        var action = this;
        subscriber.next(index);
        if (subscriber.closed) {
            return;
        }
        else if (period === -1) {
            return subscriber.complete();
        }
        state.index = index + 1;
        action.schedule(state, period);
    };
    TimerObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;
        return scheduler.schedule(TimerObservable.dispatch, dueTime, {
            index: index, period: period, subscriber: subscriber
        });
    };
    return TimerObservable;
}(Observable_1.Observable));
exports.TimerObservable = TimerObservable;
//# sourceMappingURL=TimerObservable.js.map

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var zip_1 = __webpack_require__(256);
Observable_1.Observable.zip = zip_1.zip;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var zip_1 = __webpack_require__(37);
exports.zip = zip_1.zipStatic;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var ajax_1 = __webpack_require__(258);
Observable_1.Observable.ajax = ajax_1.ajax;
//# sourceMappingURL=ajax.js.map

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AjaxObservable_1 = __webpack_require__(78);
exports.ajax = AjaxObservable_1.AjaxObservable.create;
//# sourceMappingURL=ajax.js.map

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var webSocket_1 = __webpack_require__(260);
Observable_1.Observable.webSocket = webSocket_1.webSocket;
//# sourceMappingURL=webSocket.js.map

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var WebSocketSubject_1 = __webpack_require__(261);
exports.webSocket = WebSocketSubject_1.WebSocketSubject.create;
//# sourceMappingURL=webSocket.js.map

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var Subscriber_1 = __webpack_require__(3);
var Observable_1 = __webpack_require__(0);
var Subscription_1 = __webpack_require__(7);
var root_1 = __webpack_require__(11);
var ReplaySubject_1 = __webpack_require__(38);
var tryCatch_1 = __webpack_require__(10);
var errorObject_1 = __webpack_require__(8);
var assign_1 = __webpack_require__(264);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var WebSocketSubject = (function (_super) {
    __extends(WebSocketSubject, _super);
    function WebSocketSubject(urlConfigOrSource, destination) {
        if (urlConfigOrSource instanceof Observable_1.Observable) {
            _super.call(this, destination, urlConfigOrSource);
        }
        else {
            _super.call(this);
            this.WebSocketCtor = root_1.root.WebSocket;
            this._output = new Subject_1.Subject();
            if (typeof urlConfigOrSource === 'string') {
                this.url = urlConfigOrSource;
            }
            else {
                // WARNING: config object could override important members here.
                assign_1.assign(this, urlConfigOrSource);
            }
            if (!this.WebSocketCtor) {
                throw new Error('no WebSocket constructor can be found');
            }
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
    }
    WebSocketSubject.prototype.resultSelector = function (e) {
        return JSON.parse(e.data);
    };
    /**
     * Wrapper around the w3c-compatible WebSocket object provided by the browser.
     *
     * @example <caption>Wraps browser WebSocket</caption>
     *
     * let socket$ = Observable.webSocket('ws://localhost:8081');
     *
     * socket$.subscribe(
     *    (msg) => console.log('message received: ' + msg),
     *    (err) => console.log(err),
     *    () => console.log('complete')
     *  );
     *
     * socket$.next(JSON.stringify({ op: 'hello' }));
     *
     * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>
     *
     * import { w3cwebsocket } from 'websocket';
     *
     * let socket$ = Observable.webSocket({
     *   url: 'ws://localhost:8081',
     *   WebSocketCtor: w3cwebsocket
     * });
     *
     * socket$.subscribe(
     *    (msg) => console.log('message received: ' + msg),
     *    (err) => console.log(err),
     *    () => console.log('complete')
     *  );
     *
     * socket$.next(JSON.stringify({ op: 'hello' }));
     *
     * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object
     * @return {WebSocketSubject}
     * @static true
     * @name webSocket
     * @owner Observable
     */
    WebSocketSubject.create = function (urlConfigOrSource) {
        return new WebSocketSubject(urlConfigOrSource);
    };
    WebSocketSubject.prototype.lift = function (operator) {
        var sock = new WebSocketSubject(this, this.destination);
        sock.operator = operator;
        return sock;
    };
    WebSocketSubject.prototype._resetState = function () {
        this.socket = null;
        if (!this.source) {
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
        this._output = new Subject_1.Subject();
    };
    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures
    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {
        var self = this;
        return new Observable_1.Observable(function (observer) {
            var result = tryCatch_1.tryCatch(subMsg)();
            if (result === errorObject_1.errorObject) {
                observer.error(errorObject_1.errorObject.e);
            }
            else {
                self.next(result);
            }
            var subscription = self.subscribe(function (x) {
                var result = tryCatch_1.tryCatch(messageFilter)(x);
                if (result === errorObject_1.errorObject) {
                    observer.error(errorObject_1.errorObject.e);
                }
                else if (result) {
                    observer.next(x);
                }
            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });
            return function () {
                var result = tryCatch_1.tryCatch(unsubMsg)();
                if (result === errorObject_1.errorObject) {
                    observer.error(errorObject_1.errorObject.e);
                }
                else {
                    self.next(result);
                }
                subscription.unsubscribe();
            };
        });
    };
    WebSocketSubject.prototype._connectSocket = function () {
        var _this = this;
        var WebSocketCtor = this.WebSocketCtor;
        var observer = this._output;
        var socket = null;
        try {
            socket = this.protocol ?
                new WebSocketCtor(this.url, this.protocol) :
                new WebSocketCtor(this.url);
            this.socket = socket;
            if (this.binaryType) {
                this.socket.binaryType = this.binaryType;
            }
        }
        catch (e) {
            observer.error(e);
            return;
        }
        var subscription = new Subscription_1.Subscription(function () {
            _this.socket = null;
            if (socket && socket.readyState === 1) {
                socket.close();
            }
        });
        socket.onopen = function (e) {
            var openObserver = _this.openObserver;
            if (openObserver) {
                openObserver.next(e);
            }
            var queue = _this.destination;
            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {
                var closingObserver = _this.closingObserver;
                if (closingObserver) {
                    closingObserver.next(undefined);
                }
                if (e && e.code) {
                    socket.close(e.code, e.reason);
                }
                else {
                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +
                        'and an optional reason: { code: number, reason: string }'));
                }
                _this._resetState();
            }, function () {
                var closingObserver = _this.closingObserver;
                if (closingObserver) {
                    closingObserver.next(undefined);
                }
                socket.close();
                _this._resetState();
            });
            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {
                subscription.add(queue.subscribe(_this.destination));
            }
        };
        socket.onerror = function (e) {
            _this._resetState();
            observer.error(e);
        };
        socket.onclose = function (e) {
            _this._resetState();
            var closeObserver = _this.closeObserver;
            if (closeObserver) {
                closeObserver.next(e);
            }
            if (e.wasClean) {
                observer.complete();
            }
            else {
                observer.error(e);
            }
        };
        socket.onmessage = function (e) {
            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);
            if (result === errorObject_1.errorObject) {
                observer.error(errorObject_1.errorObject.e);
            }
            else {
                observer.next(result);
            }
        };
    };
    WebSocketSubject.prototype._subscribe = function (subscriber) {
        var _this = this;
        var source = this.source;
        if (source) {
            return source.subscribe(subscriber);
        }
        if (!this.socket) {
            this._connectSocket();
        }
        var subscription = new Subscription_1.Subscription();
        subscription.add(this._output.subscribe(subscriber));
        subscription.add(function () {
            var socket = _this.socket;
            if (_this._output.observers.length === 0) {
                if (socket && socket.readyState === 1) {
                    socket.close();
                }
                _this._resetState();
            }
        });
        return subscription;
    };
    WebSocketSubject.prototype.unsubscribe = function () {
        var _a = this, source = _a.source, socket = _a.socket;
        if (socket && socket.readyState === 1) {
            socket.close();
            this._resetState();
        }
        _super.prototype.unsubscribe.call(this);
        if (!source) {
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
    };
    return WebSocketSubject;
}(Subject_1.AnonymousSubject));
exports.WebSocketSubject = WebSocketSubject;
//# sourceMappingURL=WebSocketSubject.js.map

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(22);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var QueueAction = (function (_super) {
    __extends(QueueAction, _super);
    function QueueAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, or if the delay is null (the
        // action wasn't rescheduled) but was originally scheduled as an async
        // action, then recycle as an async action.
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Otherwise flush the scheduler starting with this action.
        return scheduler.flush(this);
    };
    return QueueAction;
}(AsyncAction_1.AsyncAction));
exports.QueueAction = QueueAction;
//# sourceMappingURL=QueueAction.js.map

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(23);
var QueueScheduler = (function (_super) {
    __extends(QueueScheduler, _super);
    function QueueScheduler() {
        _super.apply(this, arguments);
    }
    return QueueScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.QueueScheduler = QueueScheduler;
//# sourceMappingURL=QueueScheduler.js.map

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(11);
function assignImpl(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    var len = sources.length;
    for (var i = 0; i < len; i++) {
        var source = sources[i];
        for (var k in source) {
            if (source.hasOwnProperty(k)) {
                target[k] = source[k];
            }
        }
    }
    return target;
}
exports.assignImpl = assignImpl;
;
function getAssign(root) {
    return root.Object.assign || assignImpl;
}
exports.getAssign = getAssign;
exports.assign = getAssign(root_1.root);
//# sourceMappingURL=assign.js.map

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var buffer_1 = __webpack_require__(266);
Observable_1.Observable.prototype.buffer = buffer_1.buffer;
//# sourceMappingURL=buffer.js.map

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var buffer_1 = __webpack_require__(80);
/**
 * Buffers the source Observable values until `closingNotifier` emits.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when another Observable emits.</span>
 *
 * <img src="./img/buffer.png" width="100%">
 *
 * Buffers the incoming Observable values until the given `closingNotifier`
 * Observable emits a value, at which point it emits the buffer on the output
 * Observable and starts a new buffer internally, awaiting the next time
 * `closingNotifier` emits.
 *
 * @example <caption>On every click, emit array of most recent interval events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var buffered = interval.buffer(clicks);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link window}
 *
 * @param {Observable<any>} closingNotifier An Observable that signals the
 * buffer to be emitted on the output Observable.
 * @return {Observable<T[]>} An Observable of buffers, which are arrays of
 * values.
 * @method buffer
 * @owner Observable
 */
function buffer(closingNotifier) {
    return buffer_1.buffer(closingNotifier)(this);
}
exports.buffer = buffer;
//# sourceMappingURL=buffer.js.map

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferCount_1 = __webpack_require__(268);
Observable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;
//# sourceMappingURL=bufferCount.js.map

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bufferCount_1 = __webpack_require__(81);
/**
 * Buffers the source Observable values until the size hits the maximum
 * `bufferSize` given.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when its size reaches `bufferSize`.</span>
 *
 * <img src="./img/bufferCount.png" width="100%">
 *
 * Buffers a number of values from the source Observable by `bufferSize` then
 * emits the buffer and clears it, and starts a new buffer each
 * `startBufferEvery` values. If `startBufferEvery` is not provided or is
 * `null`, then new buffers are started immediately at the start of the source
 * and when each buffer closes and is emitted.
 *
 * @example <caption>Emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>On every click, emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2, 1);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link pairwise}
 * @see {@link windowCount}
 *
 * @param {number} bufferSize The maximum size of the buffer emitted.
 * @param {number} [startBufferEvery] Interval at which to start a new buffer.
 * For example if `startBufferEvery` is `2`, then a new buffer will be started
 * on every other value from the source. A new buffer is started at the
 * beginning of the source by default.
 * @return {Observable<T[]>} An Observable of arrays of buffered values.
 * @method bufferCount
 * @owner Observable
 */
function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) { startBufferEvery = null; }
    return bufferCount_1.bufferCount(bufferSize, startBufferEvery)(this);
}
exports.bufferCount = bufferCount;
//# sourceMappingURL=bufferCount.js.map

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferTime_1 = __webpack_require__(270);
Observable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;
//# sourceMappingURL=bufferTime.js.map

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var isScheduler_1 = __webpack_require__(12);
var bufferTime_1 = __webpack_require__(82);
/* tslint:enable:max-line-length */
/**
 * Buffers the source Observable values for a specific time period.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * those arrays periodically in time.</span>
 *
 * <img src="./img/bufferTime.png" width="100%">
 *
 * Buffers values from the source for a specific time duration `bufferTimeSpan`.
 * Unless the optional argument `bufferCreationInterval` is given, it emits and
 * resets the buffer every `bufferTimeSpan` milliseconds. If
 * `bufferCreationInterval` is given, this operator opens the buffer every
 * `bufferCreationInterval` milliseconds and closes (emits and resets) the
 * buffer every `bufferTimeSpan` milliseconds. When the optional argument
 * `maxBufferSize` is specified, the buffer will be closed either after
 * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.
 *
 * @example <caption>Every second, emit an array of the recent click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(1000);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(2000, 5000);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link windowTime}
 *
 * @param {number} bufferTimeSpan The amount of time to fill each buffer array.
 * @param {number} [bufferCreationInterval] The interval at which to start new
 * buffers.
 * @param {number} [maxBufferSize] The maximum buffer size.
 * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the
 * intervals that determine buffer boundaries.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferTime
 * @owner Observable
 */
function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = async_1.async;
    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return bufferTime_1.bufferTime(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this);
}
exports.bufferTime = bufferTime;
//# sourceMappingURL=bufferTime.js.map

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferToggle_1 = __webpack_require__(272);
Observable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;
//# sourceMappingURL=bufferToggle.js.map

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bufferToggle_1 = __webpack_require__(83);
/**
 * Buffers the source Observable values starting from an emission from
 * `openings` and ending when the output of `closingSelector` emits.
 *
 * <span class="informal">Collects values from the past as an array. Starts
 * collecting only when `opening` emits, and calls the `closingSelector`
 * function to get an Observable that tells when to close the buffer.</span>
 *
 * <img src="./img/bufferToggle.png" width="100%">
 *
 * Buffers values from the source by opening the buffer via signals from an
 * Observable provided to `openings`, and closing and sending the buffers when
 * a Subscribable or Promise returned by the `closingSelector` function emits.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var buffered = clicks.bufferToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferWhen}
 * @see {@link windowToggle}
 *
 * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new
 * buffers.
 * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns a Subscribable or Promise,
 * which, when it emits, signals that the associated buffer should be emitted
 * and cleared.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferToggle
 * @owner Observable
 */
function bufferToggle(openings, closingSelector) {
    return bufferToggle_1.bufferToggle(openings, closingSelector)(this);
}
exports.bufferToggle = bufferToggle;
//# sourceMappingURL=bufferToggle.js.map

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var bufferWhen_1 = __webpack_require__(274);
Observable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;
//# sourceMappingURL=bufferWhen.js.map

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bufferWhen_1 = __webpack_require__(84);
/**
 * Buffers the source Observable values, using a factory function of closing
 * Observables to determine when to close, emit, and reset the buffer.
 *
 * <span class="informal">Collects values from the past as an array. When it
 * starts collecting values, it calls a function that returns an Observable that
 * tells when to close the buffer and restart collecting.</span>
 *
 * <img src="./img/bufferWhen.png" width="100%">
 *
 * Opens a buffer immediately, then closes the buffer when the observable
 * returned by calling `closingSelector` function emits a value. When it closes
 * the buffer, it immediately opens a new buffer and repeats the process.
 *
 * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferWhen(() =>
 *   Rx.Observable.interval(1000 + Math.random() * 4000)
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link windowWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals buffer closure.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferWhen
 * @owner Observable
 */
function bufferWhen(closingSelector) {
    return bufferWhen_1.bufferWhen(closingSelector)(this);
}
exports.bufferWhen = bufferWhen;
//# sourceMappingURL=bufferWhen.js.map

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var catch_1 = __webpack_require__(276);
Observable_1.Observable.prototype.catch = catch_1._catch;
Observable_1.Observable.prototype._catch = catch_1._catch;
//# sourceMappingURL=catch.js.map

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var catchError_1 = __webpack_require__(85);
/**
 * Catches errors on the observable to be handled by returning a new observable or throwing an error.
 *
 * <img src="./img/catch.png" width="100%">
 *
 * @example <caption>Continues with a different Observable when there's an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n == 4) {
 * 	     throw 'four!';
 *     }
 *	   return n;
 *   })
 *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, I, II, III, IV, V
 *
 * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n === 4) {
 * 	     throw 'four!';
 *     }
 * 	   return n;
 *   })
 *   .catch((err, caught) => caught)
 *   .take(30)
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, 1, 2, 3, ...
 *
 * @example <caption>Throws a new error when the source Observable throws an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 *     if (n == 4) {
 *       throw 'four!';
 *     }
 *     return n;
 *   })
 *   .catch(err => {
 *     throw 'error in source. Details: ' + err;
 *   })
 *   .subscribe(
 *     x => console.log(x),
 *     err => console.log(err)
 *   );
 *   // 1, 2, 3, error in source. Details: four!
 *
 * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which
 *  is the source observable, in case you'd like to "retry" that observable by returning it again. Whatever observable
 *  is returned by the `selector` will be used to continue the observable chain.
 * @return {Observable} An observable that originates from either the source or the observable returned by the
 *  catch `selector` function.
 * @method catch
 * @name catch
 * @owner Observable
 */
function _catch(selector) {
    return catchError_1.catchError(selector)(this);
}
exports._catch = _catch;
//# sourceMappingURL=catch.js.map

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var combineAll_1 = __webpack_require__(278);
Observable_1.Observable.prototype.combineAll = combineAll_1.combineAll;
//# sourceMappingURL=combineAll.js.map

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var combineAll_1 = __webpack_require__(86);
/**
 * Converts a higher-order Observable into a first-order Observable by waiting
 * for the outer Observable to complete, then applying {@link combineLatest}.
 *
 * <span class="informal">Flattens an Observable-of-Observables by applying
 * {@link combineLatest} when the Observable-of-Observables completes.</span>
 *
 * <img src="./img/combineAll.png" width="100%">
 *
 * Takes an Observable of Observables, and collects all Observables from it.
 * Once the outer Observable completes, it subscribes to all collected
 * Observables and combines their values using the {@link combineLatest}
 * strategy, such that:
 * - Every time an inner Observable emits, the output Observable emits.
 * - When the returned observable emits, it emits all of the latest values by:
 *   - If a `project` function is provided, it is called with each recent value
 *     from each inner Observable in whatever order they arrived, and the result
 *     of the `project` function is what is emitted by the output Observable.
 *   - If there is no `project` function, an array of all of the most recent
 *     values is emitted by the output Observable.
 *
 * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev =>
 *   Rx.Observable.interval(Math.random()*2000).take(3)
 * ).take(2);
 * var result = higherOrder.combineAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 * @see {@link mergeAll}
 *
 * @param {function} [project] An optional function to map the most recent
 * values from each inner Observable into a new result. Takes each of the most
 * recent values from each collected inner Observable as arguments, in order.
 * @return {Observable} An Observable of projected results or arrays of recent
 * values.
 * @method combineAll
 * @owner Observable
 */
function combineAll(project) {
    return combineAll_1.combineAll(project)(this);
}
exports.combineAll = combineAll;
//# sourceMappingURL=combineAll.js.map

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var combineLatest_1 = __webpack_require__(280);
Observable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var combineLatest_1 = __webpack_require__(33);
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from this Observable with values from
 * Observables passed as arguments. This is done by subscribing to each
 * Observable, in order, and collecting an array of each of the most recent
 * values any time any of the input Observables emits, then either taking that
 * array and passing it as arguments to an optional `project` function and
 * emitting the return value of that, or just emitting the array of recent
 * values directly if there is no `project` function.
 *
 * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method combineLatest
 * @owner Observable
 */
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return combineLatest_1.combineLatest.apply(void 0, observables)(this);
}
exports.combineLatest = combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concat_1 = __webpack_require__(282);
Observable_1.Observable.prototype.concat = concat_1.concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concat_1 = __webpack_require__(87);
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins this Observable with multiple other Observables by subscribing to them
 * one at a time, starting with the source, and merging their results into the
 * output Observable. Will wait for each Observable to complete before moving
 * on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = timer.concat(sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = timer1.concat(timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {ObservableInput} other An input Observable to concatenate after the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @method concat
 * @owner Observable
 */
function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return concat_1.concat.apply(void 0, observables)(this);
}
exports.concat = concat;
//# sourceMappingURL=concat.js.map

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concatAll_1 = __webpack_require__(284);
Observable_1.Observable.prototype.concatAll = concatAll_1.concatAll;
//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concatAll_1 = __webpack_require__(45);
/* tslint:enable:max-line-length */
/**
 * Converts a higher-order Observable into a first-order Observable by
 * concatenating the inner Observables in order.
 *
 * <span class="informal">Flattens an Observable-of-Observables by putting one
 * inner Observable after the other.</span>
 *
 * <img src="./img/concatAll.png" width="100%">
 *
 * Joins every Observable emitted by the source (a higher-order Observable), in
 * a serial fashion. It subscribes to each inner Observable only after the
 * previous inner Observable has completed, and merges all of their values into
 * the returned observable.
 *
 * __Warning:__ If the source Observable emits Observables quickly and
 * endlessly, and the inner Observables it emits generally complete slower than
 * the source emits, you can run into memory issues as the incoming Observables
 * collect in an unbounded buffer.
 *
 * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));
 * var firstOrder = higherOrder.concatAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link combineAll}
 * @see {@link concat}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable emitting values from all the inner
 * Observables concatenated.
 * @method concatAll
 * @owner Observable
 */
function concatAll() {
    return concatAll_1.concatAll()(this);
}
exports.concatAll = concatAll;
//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concatMap_1 = __webpack_require__(286);
Observable_1.Observable.prototype.concatMap = concatMap_1.concatMap;
//# sourceMappingURL=concatMap.js.map

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concatMap_1 = __webpack_require__(49);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, in a serialized fashion waiting for each one to complete before
 * merging the next.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link concatAll}.</span>
 *
 * <img src="./img/concatMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each new inner Observable is
 * concatenated with the previous inner Observable.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMapTo}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking values from each projected inner
 * Observable sequentially.
 * @method concatMap
 * @owner Observable
 */
function concatMap(project, resultSelector) {
    return concatMap_1.concatMap(project, resultSelector)(this);
}
exports.concatMap = concatMap;
//# sourceMappingURL=concatMap.js.map

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var concatMapTo_1 = __webpack_require__(288);
Observable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var concatMapTo_1 = __webpack_require__(88);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in a serialized fashion on the output Observable.
 *
 * <span class="informal">It's like {@link concatMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/concatMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. Each new `innerObservable`
 * instance emitted on the output Observable is concatenated with the previous
 * `innerObservable` instance.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter
 * set to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link mergeMapTo}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An observable of values merged together by joining the
 * passed observable with itself, one after the other, for each value emitted
 * from the source.
 * @method concatMapTo
 * @owner Observable
 */
function concatMapTo(innerObservable, resultSelector) {
    return concatMapTo_1.concatMapTo(innerObservable, resultSelector)(this);
}
exports.concatMapTo = concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var count_1 = __webpack_require__(290);
Observable_1.Observable.prototype.count = count_1.count;
//# sourceMappingURL=count.js.map

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var count_1 = __webpack_require__(89);
/**
 * Counts the number of emissions on the source and emits that number when the
 * source completes.
 *
 * <span class="informal">Tells how many values were emitted, when the source
 * completes.</span>
 *
 * <img src="./img/count.png" width="100%">
 *
 * `count` transforms an Observable that emits values into an Observable that
 * emits a single value that represents the number of values emitted by the
 * source Observable. If the source Observable terminates with an error, `count`
 * will pass this error notification along without emitting a value first. If
 * the source Observable does not terminate at all, `count` will neither emit
 * a value nor terminate. This operator takes an optional `predicate` function
 * as argument, in which case the output emission will represent the number of
 * source values that matched `true` with the `predicate`.
 *
 * @example <caption>Counts how many seconds have passed before the first click happened</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var secondsBeforeClick = seconds.takeUntil(clicks);
 * var result = secondsBeforeClick.count();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>
 * var numbers = Rx.Observable.range(1, 7);
 * var result = numbers.count(i => i % 2 === 1);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 4
 *
 * @see {@link max}
 * @see {@link min}
 * @see {@link reduce}
 *
 * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A
 * boolean function to select what values are to be counted. It is provided with
 * arguments of:
 * - `value`: the value from the source Observable.
 * - `index`: the (zero-based) "index" of the value from the source Observable.
 * - `source`: the source Observable instance itself.
 * @return {Observable} An Observable of one number that represents the count as
 * described above.
 * @method count
 * @owner Observable
 */
function count(predicate) {
    return count_1.count(predicate)(this);
}
exports.count = count;
//# sourceMappingURL=count.js.map

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var dematerialize_1 = __webpack_require__(292);
Observable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;
//# sourceMappingURL=dematerialize.js.map

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dematerialize_1 = __webpack_require__(90);
/**
 * Converts an Observable of {@link Notification} objects into the emissions
 * that they represent.
 *
 * <span class="informal">Unwraps {@link Notification} objects as actual `next`,
 * `error` and `complete` emissions. The opposite of {@link materialize}.</span>
 *
 * <img src="./img/dematerialize.png" width="100%">
 *
 * `dematerialize` is assumed to operate an Observable that only emits
 * {@link Notification} objects as `next` emissions, and does not emit any
 * `error`. Such Observable is the output of a `materialize` operation. Those
 * notifications are then unwrapped using the metadata they contain, and emitted
 * as `next`, `error`, and `complete` on the output Observable.
 *
 * Use this operator in conjunction with {@link materialize}.
 *
 * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>
 * var notifA = new Rx.Notification('N', 'A');
 * var notifB = new Rx.Notification('N', 'B');
 * var notifE = new Rx.Notification('E', void 0,
 *   new TypeError('x.toUpperCase is not a function')
 * );
 * var materialized = Rx.Observable.of(notifA, notifB, notifE);
 * var upperCase = materialized.dematerialize();
 * upperCase.subscribe(x => console.log(x), e => console.error(e));
 *
 * // Results in:
 * // A
 * // B
 * // TypeError: x.toUpperCase is not a function
 *
 * @see {@link Notification}
 * @see {@link materialize}
 *
 * @return {Observable} An Observable that emits items and notifications
 * embedded in Notification objects emitted by the source Observable.
 * @method dematerialize
 * @owner Observable
 */
function dematerialize() {
    return dematerialize_1.dematerialize()(this);
}
exports.dematerialize = dematerialize;
//# sourceMappingURL=dematerialize.js.map

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var debounce_1 = __webpack_require__(294);
Observable_1.Observable.prototype.debounce = debounce_1.debounce;
//# sourceMappingURL=debounce.js.map

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var debounce_1 = __webpack_require__(91);
/**
 * Emits a value from the source Observable only after a particular time span
 * determined by another Observable has passed without another source emission.
 *
 * <span class="informal">It's like {@link debounceTime}, but the time span of
 * emission silence is determined by a second Observable.</span>
 *
 * <img src="./img/debounce.png" width="100%">
 *
 * `debounce` delays values emitted by the source Observable, but drops previous
 * pending delayed emissions if a new value arrives on the source Observable.
 * This operator keeps track of the most recent value from the source
 * Observable, and spawns a duration Observable by calling the
 * `durationSelector` function. The value is emitted only when the duration
 * Observable emits a value or completes, and if no other value was emitted on
 * the source Observable since the duration Observable was spawned. If a new
 * value appears before the duration Observable emits, the previous value will
 * be dropped and will not be emitted on the output Observable.
 *
 * Like {@link debounceTime}, this is a rate-limiting operator, and also a
 * delay-like operator since output emissions do not necessarily occur at the
 * same time as they did on the source Observable.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounce(() => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the timeout
 * duration for each source value, returned as an Observable or a Promise.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified duration Observable returned by
 * `durationSelector`, and may drop some values if they occur too frequently.
 * @method debounce
 * @owner Observable
 */
function debounce(durationSelector) {
    return debounce_1.debounce(durationSelector)(this);
}
exports.debounce = debounce;
//# sourceMappingURL=debounce.js.map

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var debounceTime_1 = __webpack_require__(296);
Observable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;
//# sourceMappingURL=debounceTime.js.map

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var debounceTime_1 = __webpack_require__(92);
/**
 * Emits a value from the source Observable only after a particular time span
 * has passed without another source emission.
 *
 * <span class="informal">It's like {@link delay}, but passes only the most
 * recent value from each burst of emissions.</span>
 *
 * <img src="./img/debounceTime.png" width="100%">
 *
 * `debounceTime` delays values emitted by the source Observable, but drops
 * previous pending delayed emissions if a new value arrives on the source
 * Observable. This operator keeps track of the most recent value from the
 * source Observable, and emits that only when `dueTime` enough time has passed
 * without any other value appearing on the source Observable. If a new value
 * appears before `dueTime` silence occurs, the previous value will be dropped
 * and will not be emitted on the output Observable.
 *
 * This is a rate-limiting operator, because it is impossible for more than one
 * value to be emitted in any time window of duration `dueTime`, but it is also
 * a delay-like operator since output emissions do not occur at the same time as
 * they did on the source Observable. Optionally takes a {@link IScheduler} for
 * managing timers.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounceTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} dueTime The timeout duration in milliseconds (or the time
 * unit determined internally by the optional `scheduler`) for the window of
 * time required to wait for emission silence before emitting the most recent
 * source value.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the timeout for each value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified `dueTime`, and may drop some values if they occur
 * too frequently.
 * @method debounceTime
 * @owner Observable
 */
function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return debounceTime_1.debounceTime(dueTime, scheduler)(this);
}
exports.debounceTime = debounceTime;
//# sourceMappingURL=debounceTime.js.map

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var defaultIfEmpty_1 = __webpack_require__(298);
Observable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var defaultIfEmpty_1 = __webpack_require__(50);
/* tslint:enable:max-line-length */
/**
 * Emits a given value if the source Observable completes without emitting any
 * `next` value, otherwise mirrors the source Observable.
 *
 * <span class="informal">If the source Observable turns out to be empty, then
 * this operator will emit a default value.</span>
 *
 * <img src="./img/defaultIfEmpty.png" width="100%">
 *
 * `defaultIfEmpty` emits the values emitted by the source Observable or a
 * specified default value if the source Observable is empty (completes without
 * having emitted any `next` value).
 *
 * @example <caption>If no clicks happen in 5 seconds, then emit "no clicks"</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));
 * var result = clicksBeforeFive.defaultIfEmpty('no clicks');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link empty}
 * @see {@link last}
 *
 * @param {any} [defaultValue=null] The default value used if the source
 * Observable is empty.
 * @return {Observable} An Observable that emits either the specified
 * `defaultValue` if the source Observable emits no items, or the values emitted
 * by the source Observable.
 * @method defaultIfEmpty
 * @owner Observable
 */
function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) { defaultValue = null; }
    return defaultIfEmpty_1.defaultIfEmpty(defaultValue)(this);
}
exports.defaultIfEmpty = defaultIfEmpty;
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var delay_1 = __webpack_require__(300);
Observable_1.Observable.prototype.delay = delay_1.delay;
//# sourceMappingURL=delay.js.map

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var delay_1 = __webpack_require__(93);
/**
 * Delays the emission of items from the source Observable by a given timeout or
 * until a given Date.
 *
 * <span class="informal">Time shifts each item by some specified amount of
 * milliseconds.</span>
 *
 * <img src="./img/delay.png" width="100%">
 *
 * If the delay argument is a Number, this operator time shifts the source
 * Observable by that amount of time expressed in milliseconds. The relative
 * time intervals between the values are preserved.
 *
 * If the delay argument is a Date, this operator time shifts the start of the
 * Observable execution until the given date occurs.
 *
 * @example <caption>Delay each click by one second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @example <caption>Delay all clicks until a future date happens</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var date = new Date('March 15, 2050 12:00:00'); // in the future
 * var delayedClicks = clicks.delay(date); // click emitted only after that date
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 *
 * @param {number|Date} delay The delay duration in milliseconds (a `number`) or
 * a `Date` until which the emission of the source items is delayed.
 * @param {Scheduler} [scheduler=async] The IScheduler to use for
 * managing the timers that handle the time-shift for each item.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified timeout or Date.
 * @method delay
 * @owner Observable
 */
function delay(delay, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return delay_1.delay(delay, scheduler)(this);
}
exports.delay = delay;
//# sourceMappingURL=delay.js.map

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var delayWhen_1 = __webpack_require__(302);
Observable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;
//# sourceMappingURL=delayWhen.js.map

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var delayWhen_1 = __webpack_require__(94);
/**
 * Delays the emission of items from the source Observable by a given time span
 * determined by the emissions of another Observable.
 *
 * <span class="informal">It's like {@link delay}, but the time span of the
 * delay duration is determined by a second Observable.</span>
 *
 * <img src="./img/delayWhen.png" width="100%">
 *
 * `delayWhen` time shifts each emitted value from the source Observable by a
 * time span determined by another Observable. When the source emits a value,
 * the `delayDurationSelector` function is called with the source value as
 * argument, and should return an Observable, called the "duration" Observable.
 * The source value is emitted on the output Observable only when the duration
 * Observable emits a value or completes.
 *
 * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which
 * is an Observable. When `subscriptionDelay` emits its first value or
 * completes, the source Observable is subscribed to and starts behaving like
 * described in the previous paragraph. If `subscriptionDelay` is not provided,
 * `delayWhen` will subscribe to the source Observable as soon as the output
 * Observable is subscribed.
 *
 * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delayWhen(event =>
 *   Rx.Observable.interval(Math.random() * 5000)
 * );
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounce}
 * @see {@link delay}
 *
 * @param {function(value: T): Observable} delayDurationSelector A function that
 * returns an Observable for each value emitted by the source Observable, which
 * is then used to delay the emission of that item on the output Observable
 * until the Observable returned from this function emits a value.
 * @param {Observable} subscriptionDelay An Observable that triggers the
 * subscription to the source Observable once it emits any value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by an amount of time specified by the Observable returned by
 * `delayDurationSelector`.
 * @method delayWhen
 * @owner Observable
 */
function delayWhen(delayDurationSelector, subscriptionDelay) {
    return delayWhen_1.delayWhen(delayDurationSelector, subscriptionDelay)(this);
}
exports.delayWhen = delayWhen;
//# sourceMappingURL=delayWhen.js.map

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var distinct_1 = __webpack_require__(304);
Observable_1.Observable.prototype.distinct = distinct_1.distinct;
//# sourceMappingURL=distinct.js.map

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var distinct_1 = __webpack_require__(95);
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.
 *
 * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will
 * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the
 * source observable directly with an equality check against previous values.
 *
 * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.
 *
 * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the
 * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`
 * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so
 * that the internal `Set` can be "flushed", basically clearing it of values.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)
 *   .distinct()
 *   .subscribe(x => console.log(x)); // 1, 2, 3, 4
 *
 * @example <caption>An example using a keySelector function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     .distinct((p: Person) => p.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 *
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [keySelector] Optional function to select which value you want to check as distinct.
 * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinct
 * @owner Observable
 */
function distinct(keySelector, flushes) {
    return distinct_1.distinct(keySelector, flushes)(this);
}
exports.distinct = distinct;
//# sourceMappingURL=distinct.js.map

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(11);
function minimalSetImpl() {
    // THIS IS NOT a full impl of Set, this is just the minimum
    // bits of functionality we need for this library.
    return (function () {
        function MinimalSet() {
            this._values = [];
        }
        MinimalSet.prototype.add = function (value) {
            if (!this.has(value)) {
                this._values.push(value);
            }
        };
        MinimalSet.prototype.has = function (value) {
            return this._values.indexOf(value) !== -1;
        };
        Object.defineProperty(MinimalSet.prototype, "size", {
            get: function () {
                return this._values.length;
            },
            enumerable: true,
            configurable: true
        });
        MinimalSet.prototype.clear = function () {
            this._values.length = 0;
        };
        return MinimalSet;
    }());
}
exports.minimalSetImpl = minimalSetImpl;
exports.Set = root_1.root.Set || minimalSetImpl();
//# sourceMappingURL=Set.js.map

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var distinctUntilChanged_1 = __webpack_require__(307);
Observable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var distinctUntilChanged_1 = __webpack_require__(51);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)
 *   .distinctUntilChanged()
 *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4
 *
 * @example <caption>An example using a compare function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinctUntilChanged
 * @owner Observable
 */
function distinctUntilChanged(compare, keySelector) {
    return distinctUntilChanged_1.distinctUntilChanged(compare, keySelector)(this);
}
exports.distinctUntilChanged = distinctUntilChanged;
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var distinctUntilKeyChanged_1 = __webpack_require__(309);
Observable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var distinctUntilKeyChanged_1 = __webpack_require__(96);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,
 * using a property accessed by using the key provided to check if the two items are distinct.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>An example comparing the name of persons</caption>
 *
 *  interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'},
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilKeyChanged('name')
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @example <caption>An example comparing the first letters of the name</caption>
 *
 * interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo1'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo2'},
 *     { age: 6, name: 'Foo3'})
 *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo1' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo2' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 *
 * @param {string} key String key for object property lookup on each item.
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.
 * @method distinctUntilKeyChanged
 * @owner Observable
 */
function distinctUntilKeyChanged(key, compare) {
    return distinctUntilKeyChanged_1.distinctUntilKeyChanged(key, compare)(this);
}
exports.distinctUntilKeyChanged = distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var do_1 = __webpack_require__(311);
Observable_1.Observable.prototype.do = do_1._do;
Observable_1.Observable.prototype._do = do_1._do;
//# sourceMappingURL=do.js.map

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var tap_1 = __webpack_require__(97);
/* tslint:enable:max-line-length */
/**
 * Perform a side effect for every emission on the source Observable, but return
 * an Observable that is identical to the source.
 *
 * <span class="informal">Intercepts each emission on the source and runs a
 * function, but returns an output which is identical to the source as long as errors don't occur.</span>
 *
 * <img src="./img/do.png" width="100%">
 *
 * Returns a mirrored Observable of the source Observable, but modified so that
 * the provided Observer is called to perform a side effect for every value,
 * error, and completion emitted by the source. Any errors that are thrown in
 * the aforementioned Observer or handlers are safely sent down the error path
 * of the output Observable.
 *
 * This operator is useful for debugging your Observables for the correct values
 * or performing other side effects.
 *
 * Note: this is different to a `subscribe` on the Observable. If the Observable
 * returned by `do` is not subscribed, the side effects specified by the
 * Observer will never happen. `do` therefore simply spies on existing
 * execution, it does not trigger an execution to happen like `subscribe` does.
 *
 * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks
 *   .do(ev => console.log(ev))
 *   .map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link map}
 * @see {@link subscribe}
 *
 * @param {Observer|function} [nextOrObserver] A normal Observer object or a
 * callback for `next`.
 * @param {function} [error] Callback for errors in the source.
 * @param {function} [complete] Callback for the completion of the source.
 * @return {Observable} An Observable identical to the source, but runs the
 * specified Observer or callback(s) for each item.
 * @method do
 * @name do
 * @owner Observable
 */
function _do(nextOrObserver, error, complete) {
    return tap_1.tap(nextOrObserver, error, complete)(this);
}
exports._do = _do;
//# sourceMappingURL=do.js.map

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var exhaust_1 = __webpack_require__(313);
Observable_1.Observable.prototype.exhaust = exhaust_1.exhaust;
//# sourceMappingURL=exhaust.js.map

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var exhaust_1 = __webpack_require__(98);
/**
 * Converts a higher-order Observable into a first-order Observable by dropping
 * inner Observables while the previous inner Observable has not yet completed.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * next inner Observables while the current inner is still executing.</span>
 *
 * <img src="./img/exhaust.png" width="100%">
 *
 * `exhaust` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable begins emitting the items emitted by that
 * inner Observable. So far, it behaves like {@link mergeAll}. However,
 * `exhaust` ignores every new inner Observable if the previous Observable has
 * not yet completed. Once that one completes, it will accept and flatten the
 * next inner Observable and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));
 * var result = higherOrder.exhaust();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link switch}
 * @see {@link mergeAll}
 * @see {@link exhaustMap}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable that takes a source of Observables and propagates the first observable
 * exclusively until it completes before subscribing to the next.
 * @method exhaust
 * @owner Observable
 */
function exhaust() {
    return exhaust_1.exhaust()(this);
}
exports.exhaust = exhaust;
//# sourceMappingURL=exhaust.js.map

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var exhaustMap_1 = __webpack_require__(315);
Observable_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;
//# sourceMappingURL=exhaustMap.js.map

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var exhaustMap_1 = __webpack_require__(99);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable only if the previous projected Observable has completed.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link exhaust}.</span>
 *
 * <img src="./img/exhaustMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. When it projects a source value to
 * an Observable, the output Observable begins emitting the items emitted by
 * that projected Observable. However, `exhaustMap` ignores every new projected
 * Observable if the previous projected Observable has not yet completed. Once
 * that one completes, it will accept and flatten the next projected Observable
 * and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaust}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable containing projected Observables
 * of each item of the source, ignoring projected Observables that start before
 * their preceding Observable has completed.
 * @method exhaustMap
 * @owner Observable
 */
function exhaustMap(project, resultSelector) {
    return exhaustMap_1.exhaustMap(project, resultSelector)(this);
}
exports.exhaustMap = exhaustMap;
//# sourceMappingURL=exhaustMap.js.map

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var expand_1 = __webpack_require__(317);
Observable_1.Observable.prototype.expand = expand_1.expand;
//# sourceMappingURL=expand.js.map

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var expand_1 = __webpack_require__(100);
/* tslint:enable:max-line-length */
/**
 * Recursively projects each source value to an Observable which is merged in
 * the output Observable.
 *
 * <span class="informal">It's similar to {@link mergeMap}, but applies the
 * projection function to every source value as well as every output value.
 * It's recursive.</span>
 *
 * <img src="./img/expand.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger. *Expand* will re-emit on the output
 * Observable every source value. Then, each output value is given to the
 * `project` function which returns an inner Observable to be merged on the
 * output Observable. Those output values resulting from the projection are also
 * given to the `project` function to produce new output values. This is how
 * *expand* behaves recursively.
 *
 * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var powersOfTwo = clicks
 *   .mapTo(1)
 *   .expand(x => Rx.Observable.of(2 * x).delay(1000))
 *   .take(10);
 * powersOfTwo.subscribe(x => console.log(x));
 *
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 *
 * @param {function(value: T, index: number) => Observable} project A function
 * that, when applied to an item emitted by the source or the output Observable,
 * returns an Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each projected inner Observable.
 * @return {Observable} An Observable that emits the source values and also
 * result of applying the projection function to each value emitted on the
 * output Observable and and merging the results of the Observables obtained
 * from this transformation.
 * @method expand
 * @owner Observable
 */
function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (scheduler === void 0) { scheduler = undefined; }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return expand_1.expand(project, concurrent, scheduler)(this);
}
exports.expand = expand;
//# sourceMappingURL=expand.js.map

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var elementAt_1 = __webpack_require__(319);
Observable_1.Observable.prototype.elementAt = elementAt_1.elementAt;
//# sourceMappingURL=elementAt.js.map

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var elementAt_1 = __webpack_require__(101);
/**
 * Emits the single value at the specified `index` in a sequence of emissions
 * from the source Observable.
 *
 * <span class="informal">Emits only the i-th value, then completes.</span>
 *
 * <img src="./img/elementAt.png" width="100%">
 *
 * `elementAt` returns an Observable that emits the item at the specified
 * `index` in the source Observable, or a default value if that `index` is out
 * of range and the `default` argument is provided. If the `default` argument is
 * not given and the `index` is out of range, the output Observable will emit an
 * `ArgumentOutOfRangeError` error.
 *
 * @example <caption>Emit only the third click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.elementAt(2);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // click 1 = nothing
 * // click 2 = nothing
 * // click 3 = MouseEvent object logged to console
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link skip}
 * @see {@link single}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the
 * Observable has completed before emitting the i-th `next` notification.
 *
 * @param {number} index Is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {T} [defaultValue] The default value returned for missing indices.
 * @return {Observable} An Observable that emits a single item, if it is found.
 * Otherwise, will emit the default value if given. If not, then emits an error.
 * @method elementAt
 * @owner Observable
 */
function elementAt(index, defaultValue) {
    return elementAt_1.elementAt(index, defaultValue)(this);
}
exports.elementAt = elementAt;
//# sourceMappingURL=elementAt.js.map

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var filter_1 = __webpack_require__(321);
Observable_1.Observable.prototype.filter = filter_1.filter;
//# sourceMappingURL=filter.js.map

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var filter_1 = __webpack_require__(52);
/* tslint:enable:max-line-length */
/**
 * Filter items emitted by the source Observable by only emitting those that
 * satisfy a specified predicate.
 *
 * <span class="informal">Like
 * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),
 * it only emits a value from the source if it passes a criterion function.</span>
 *
 * <img src="./img/filter.png" width="100%">
 *
 * Similar to the well-known `Array.prototype.filter` method, this operator
 * takes values from the source Observable, passes them through a `predicate`
 * function and only emits those values that yielded `true`.
 *
 * @example <caption>Emit only click events whose target was a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');
 * clicksOnDivs.subscribe(x => console.log(x));
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 * @see {@link ignoreElements}
 * @see {@link partition}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted, if `false` the value is not passed to the output
 * Observable. The `index` parameter is the number `i` for the i-th source
 * emission that has happened since the subscription, starting from the number
 * `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of values from the source that were
 * allowed by the `predicate` function.
 * @method filter
 * @owner Observable
 */
function filter(predicate, thisArg) {
    return filter_1.filter(predicate, thisArg)(this);
}
exports.filter = filter;
//# sourceMappingURL=filter.js.map

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var finally_1 = __webpack_require__(323);
Observable_1.Observable.prototype.finally = finally_1._finally;
Observable_1.Observable.prototype._finally = finally_1._finally;
//# sourceMappingURL=finally.js.map

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var finalize_1 = __webpack_require__(102);
/**
 * Returns an Observable that mirrors the source Observable, but will call a specified function when
 * the source terminates on complete or error.
 * @param {function} callback Function to be called when source terminates.
 * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.
 * @method finally
 * @owner Observable
 */
function _finally(callback) {
    return finalize_1.finalize(callback)(this);
}
exports._finally = _finally;
//# sourceMappingURL=finally.js.map

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var find_1 = __webpack_require__(325);
Observable_1.Observable.prototype.find = find_1.find;
//# sourceMappingURL=find.js.map

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var find_1 = __webpack_require__(53);
/* tslint:enable:max-line-length */
/**
 * Emits only the first value emitted by the source Observable that meets some
 * condition.
 *
 * <span class="informal">Finds the first value that passes some test and emits
 * that.</span>
 *
 * <img src="./img/find.png" width="100%">
 *
 * `find` searches for the first item in the source Observable that matches the
 * specified condition embodied by the `predicate`, and returns the first
 * occurrence in the source. Unlike {@link first}, the `predicate` is required
 * in `find`, and does not emit an error if a valid value is not found.
 *
 * @example <caption>Find and emit the first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.find(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link first}
 * @see {@link findIndex}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable<T>} An Observable of the first item that matches the
 * condition.
 * @method find
 * @owner Observable
 */
function find(predicate, thisArg) {
    return find_1.find(predicate, thisArg)(this);
}
exports.find = find;
//# sourceMappingURL=find.js.map

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var findIndex_1 = __webpack_require__(327);
Observable_1.Observable.prototype.findIndex = findIndex_1.findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var findIndex_1 = __webpack_require__(103);
/**
 * Emits only the index of the first value emitted by the source Observable that
 * meets some condition.
 *
 * <span class="informal">It's like {@link find}, but emits the index of the
 * found value, not the value itself.</span>
 *
 * <img src="./img/findIndex.png" width="100%">
 *
 * `findIndex` searches for the first item in the source Observable that matches
 * the specified condition embodied by the `predicate`, and returns the
 * (zero-based) index of the first occurrence in the source. Unlike
 * {@link first}, the `predicate` is required in `findIndex`, and does not emit
 * an error if a valid value is not found.
 *
 * @example <caption>Emit the index of first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link first}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of the index of the first item that
 * matches the condition.
 * @method find
 * @owner Observable
 */
function findIndex(predicate, thisArg) {
    return findIndex_1.findIndex(predicate, thisArg)(this);
}
exports.findIndex = findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var first_1 = __webpack_require__(329);
Observable_1.Observable.prototype.first = first_1.first;
//# sourceMappingURL=first.js.map

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var first_1 = __webpack_require__(104);
/**
 * Emits only the first value (or the first value that meets some condition)
 * emitted by the source Observable.
 *
 * <span class="informal">Emits only the first value. Or emits only the first
 * value that passes some test.</span>
 *
 * <img src="./img/first.png" width="100%">
 *
 * If called with no arguments, `first` emits the first value of the source
 * Observable, then completes. If called with a `predicate` function, `first`
 * emits the first value of the source that matches the specified condition. It
 * may also take a `resultSelector` function to produce the output value from
 * the input value, and a `defaultValue` to emit in case the source completes
 * before it is able to emit a valid value. Throws an error if `defaultValue`
 * was not provided and a matching element is not found.
 *
 * @example <caption>Emit only the first click that happens on the DOM</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Emits the first click that happens on a DIV</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link take}
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]
 * An optional function called with each item to test for condition matching.
 * @param {function(value: T, index: number): R} [resultSelector] A function to
 * produce the value on the output Observable based on the values
 * and the indices of the source Observable. The arguments passed to this
 * function are:
 * - `value`: the value that was emitted on the source.
 * - `index`: the "index" of the value from the source.
 * @param {R} [defaultValue] The default value emitted in case no valid value
 * was found on the source.
 * @return {Observable<T|R>} An Observable of the first item that matches the
 * condition.
 * @method first
 * @owner Observable
 */
function first(predicate, resultSelector, defaultValue) {
    return first_1.first(predicate, resultSelector, defaultValue)(this);
}
exports.first = first;
//# sourceMappingURL=first.js.map

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var groupBy_1 = __webpack_require__(331);
Observable_1.Observable.prototype.groupBy = groupBy_1.groupBy;
//# sourceMappingURL=groupBy.js.map

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var groupBy_1 = __webpack_require__(105);
exports.GroupedObservable = groupBy_1.GroupedObservable;
/* tslint:enable:max-line-length */
/**
 * Groups the items emitted by an Observable according to a specified criterion,
 * and emits these grouped items as `GroupedObservables`, one
 * {@link GroupedObservable} per group.
 *
 * <img src="./img/groupBy.png" width="100%">
 *
 * @example <caption>Group objects by id and return as array</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs3'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *     )
 *     .groupBy(p => p.id)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // [ { id: 1, name: 'aze1' },
 * //   { id: 1, name: 'erg1' },
 * //   { id: 1, name: 'df1' } ]
 * //
 * // [ { id: 2, name: 'sf2' },
 * //   { id: 2, name: 'dg2' },
 * //   { id: 2, name: 'sfqfb2' },
 * //   { id: 2, name: 'qsgqsfg2' } ]
 * //
 * // [ { id: 3, name: 'qfs3' } ]
 *
 * @example <caption>Pivot data on the id field</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs1'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *                   )
 *     .groupBy(p => p.id, p => p.name)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], ["" + group$.key]))
 *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }
 * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }
 * // { id: 3, values: [ 'qfs1' ] }
 *
 * @param {function(value: T): K} keySelector A function that extracts the key
 * for each item.
 * @param {function(value: T): R} [elementSelector] A function that extracts the
 * return element for each item.
 * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]
 * A function that returns an Observable to determine how long each group should
 * exist.
 * @return {Observable<GroupedObservable<K,R>>} An Observable that emits
 * GroupedObservables, each of which corresponds to a unique key value and each
 * of which emits those items from the source Observable that share that key
 * value.
 * @method groupBy
 * @owner Observable
 */
function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return groupBy_1.groupBy(keySelector, elementSelector, durationSelector, subjectSelector)(this);
}
exports.groupBy = groupBy;
//# sourceMappingURL=groupBy.js.map

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(11);
var MapPolyfill_1 = __webpack_require__(333);
exports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();
//# sourceMappingURL=Map.js.map

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var MapPolyfill = (function () {
    function MapPolyfill() {
        this.size = 0;
        this._values = [];
        this._keys = [];
    }
    MapPolyfill.prototype.get = function (key) {
        var i = this._keys.indexOf(key);
        return i === -1 ? undefined : this._values[i];
    };
    MapPolyfill.prototype.set = function (key, value) {
        var i = this._keys.indexOf(key);
        if (i === -1) {
            this._keys.push(key);
            this._values.push(value);
            this.size++;
        }
        else {
            this._values[i] = value;
        }
        return this;
    };
    MapPolyfill.prototype.delete = function (key) {
        var i = this._keys.indexOf(key);
        if (i === -1) {
            return false;
        }
        this._values.splice(i, 1);
        this._keys.splice(i, 1);
        this.size--;
        return true;
    };
    MapPolyfill.prototype.clear = function () {
        this._keys.length = 0;
        this._values.length = 0;
        this.size = 0;
    };
    MapPolyfill.prototype.forEach = function (cb, thisArg) {
        for (var i = 0; i < this.size; i++) {
            cb.call(thisArg, this._values[i], this._keys[i]);
        }
    };
    return MapPolyfill;
}());
exports.MapPolyfill = MapPolyfill;
//# sourceMappingURL=MapPolyfill.js.map

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var FastMap = (function () {
    function FastMap() {
        this.values = {};
    }
    FastMap.prototype.delete = function (key) {
        this.values[key] = null;
        return true;
    };
    FastMap.prototype.set = function (key, value) {
        this.values[key] = value;
        return this;
    };
    FastMap.prototype.get = function (key) {
        return this.values[key];
    };
    FastMap.prototype.forEach = function (cb, thisArg) {
        var values = this.values;
        for (var key in values) {
            if (values.hasOwnProperty(key) && values[key] !== null) {
                cb.call(thisArg, values[key], key);
            }
        }
    };
    FastMap.prototype.clear = function () {
        this.values = {};
    };
    return FastMap;
}());
exports.FastMap = FastMap;
//# sourceMappingURL=FastMap.js.map

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var ignoreElements_1 = __webpack_require__(336);
Observable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;
//# sourceMappingURL=ignoreElements.js.map

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ignoreElements_1 = __webpack_require__(106);
/**
 * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.
 *
 * <img src="./img/ignoreElements.png" width="100%">
 *
 * @return {Observable} An empty Observable that only calls `complete`
 * or `error`, based on which one is called by the source Observable.
 * @method ignoreElements
 * @owner Observable
 */
function ignoreElements() {
    return ignoreElements_1.ignoreElements()(this);
}
exports.ignoreElements = ignoreElements;
;
//# sourceMappingURL=ignoreElements.js.map

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var isEmpty_1 = __webpack_require__(338);
Observable_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;
//# sourceMappingURL=isEmpty.js.map

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isEmpty_1 = __webpack_require__(107);
/**
 * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.
 *
 * <img src="./img/isEmpty.png" width="100%">
 *
 * @return {Observable} An Observable that emits a Boolean.
 * @method isEmpty
 * @owner Observable
 */
function isEmpty() {
    return isEmpty_1.isEmpty()(this);
}
exports.isEmpty = isEmpty;
//# sourceMappingURL=isEmpty.js.map

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var audit_1 = __webpack_require__(340);
Observable_1.Observable.prototype.audit = audit_1.audit;
//# sourceMappingURL=audit.js.map

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var audit_1 = __webpack_require__(54);
/**
 * Ignores source values for a duration determined by another Observable, then
 * emits the most recent value from the source Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link auditTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/audit.png" width="100%">
 *
 * `audit` is similar to `throttle`, but emits the last value from the silenced
 * time window, instead of the first value. `audit` emits the most recent value
 * from the source Observable on the output Observable as soon as its internal
 * timer becomes disabled, and ignores source values while the timer is enabled.
 * Initially, the timer is disabled. As soon as the first source value arrives,
 * the timer is enabled by calling the `durationSelector` function with the
 * source value, which returns the "duration" Observable. When the duration
 * Observable emits a value or completes, the timer is disabled, then the most
 * recent source value is emitted on the output Observable, and this process
 * repeats for the next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.audit(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration, returned as an Observable or a Promise.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method audit
 * @owner Observable
 */
function audit(durationSelector) {
    return audit_1.audit(durationSelector)(this);
}
exports.audit = audit;
//# sourceMappingURL=audit.js.map

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var auditTime_1 = __webpack_require__(342);
Observable_1.Observable.prototype.auditTime = auditTime_1.auditTime;
//# sourceMappingURL=auditTime.js.map

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var auditTime_1 = __webpack_require__(108);
/**
 * Ignores source values for `duration` milliseconds, then emits the most recent
 * value from the source Observable, then repeats this process.
 *
 * <span class="informal">When it sees a source values, it ignores that plus
 * the next ones for `duration` milliseconds, and then it emits the most recent
 * value from the source.</span>
 *
 * <img src="./img/auditTime.png" width="100%">
 *
 * `auditTime` is similar to `throttleTime`, but emits the last value from the
 * silenced time window, instead of the first value. `auditTime` emits the most
 * recent value from the source Observable on the output Observable as soon as
 * its internal timer becomes disabled, and ignores source values while the
 * timer is enabled. Initially, the timer is disabled. As soon as the first
 * source value arrives, the timer is enabled. After `duration` milliseconds (or
 * the time unit determined internally by the optional `scheduler`) has passed,
 * the timer is disabled, then the most recent source value is emitted on the
 * output Observable, and this process repeats for the next source value.
 * Optionally takes a {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.auditTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} duration Time to wait before emitting the most recent source
 * value, measured in milliseconds or the time unit determined internally
 * by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the rate-limiting behavior.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method auditTime
 * @owner Observable
 */
function auditTime(duration, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return auditTime_1.auditTime(duration, scheduler)(this);
}
exports.auditTime = auditTime;
//# sourceMappingURL=auditTime.js.map

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var last_1 = __webpack_require__(344);
Observable_1.Observable.prototype.last = last_1.last;
//# sourceMappingURL=last.js.map

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var last_1 = __webpack_require__(109);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits only the last item emitted by the source Observable.
 * It optionally takes a predicate function as a parameter, in which case, rather than emitting
 * the last item from the source Observable, the resulting Observable will emit the last item
 * from the source Observable that satisfies the predicate.
 *
 * <img src="./img/last.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {function} predicate - The condition any source emitted item has to satisfy.
 * @return {Observable} An Observable that emits only the last item satisfying the given condition
 * from the source, or an NoSuchElementException if no such items are emitted.
 * @throws - Throws if no items that match the predicate are emitted by the source Observable.
 * @method last
 * @owner Observable
 */
function last(predicate, resultSelector, defaultValue) {
    return last_1.last(predicate, resultSelector, defaultValue)(this);
}
exports.last = last;
//# sourceMappingURL=last.js.map

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var let_1 = __webpack_require__(346);
Observable_1.Observable.prototype.let = let_1.letProto;
Observable_1.Observable.prototype.letBind = let_1.letProto;
//# sourceMappingURL=let.js.map

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * @param func
 * @return {Observable<R>}
 * @method let
 * @owner Observable
 */
function letProto(func) {
    return func(this);
}
exports.letProto = letProto;
//# sourceMappingURL=let.js.map

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var every_1 = __webpack_require__(348);
Observable_1.Observable.prototype.every = every_1.every;
//# sourceMappingURL=every.js.map

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var every_1 = __webpack_require__(110);
/**
 * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.
 *
 * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>
 *  Observable.of(1, 2, 3, 4, 5, 6)
 *     .every(x => x < 5)
 *     .subscribe(x => console.log(x)); // -> false
 *
 * @param {function} predicate A function for determining if an item meets a specified condition.
 * @param {any} [thisArg] Optional object to use for `this` in the callback.
 * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.
 * @method every
 * @owner Observable
 */
function every(predicate, thisArg) {
    return every_1.every(predicate, thisArg)(this);
}
exports.every = every;
//# sourceMappingURL=every.js.map

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var map_1 = __webpack_require__(350);
Observable_1.Observable.prototype.map = map_1.map;
//# sourceMappingURL=map.js.map

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var map_1 = __webpack_require__(24);
/**
 * Applies a given `project` function to each value emitted by the source
 * Observable, and emits the resulting values as an Observable.
 *
 * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),
 * it passes each source value through a transformation function to get
 * corresponding output values.</span>
 *
 * <img src="./img/map.png" width="100%">
 *
 * Similar to the well known `Array.prototype.map` function, this operator
 * applies a projection to each value and emits that projection in the output
 * Observable.
 *
 * @example <caption>Map every click to the clientX position of that click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks.map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link mapTo}
 * @see {@link pluck}
 *
 * @param {function(value: T, index: number): R} project The function to apply
 * to each `value` emitted by the source Observable. The `index` parameter is
 * the number `i` for the i-th emission that has happened since the
 * subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to define what `this` is in the
 * `project` function.
 * @return {Observable<R>} An Observable that emits the values from the source
 * Observable transformed by the given `project` function.
 * @method map
 * @owner Observable
 */
function map(project, thisArg) {
    return map_1.map(project, thisArg)(this);
}
exports.map = map;
//# sourceMappingURL=map.js.map

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mapTo_1 = __webpack_require__(352);
Observable_1.Observable.prototype.mapTo = mapTo_1.mapTo;
//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mapTo_1 = __webpack_require__(111);
/**
 * Emits the given constant value on the output Observable every time the source
 * Observable emits a value.
 *
 * <span class="informal">Like {@link map}, but it maps every source value to
 * the same output value every time.</span>
 *
 * <img src="./img/mapTo.png" width="100%">
 *
 * Takes a constant `value` as argument, and emits that whenever the source
 * Observable emits a value. In other words, ignores the actual source value,
 * and simply uses the emission moment to know when to emit the given `value`.
 *
 * @example <caption>Map every click to the string 'Hi'</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var greetings = clicks.mapTo('Hi');
 * greetings.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {any} value The value to map each source value to.
 * @return {Observable} An Observable that emits the given `value` every time
 * the source Observable emits something.
 * @method mapTo
 * @owner Observable
 */
function mapTo(value) {
    return mapTo_1.mapTo(value)(this);
}
exports.mapTo = mapTo;
//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var materialize_1 = __webpack_require__(354);
Observable_1.Observable.prototype.materialize = materialize_1.materialize;
//# sourceMappingURL=materialize.js.map

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var materialize_1 = __webpack_require__(112);
/**
 * Represents all of the notifications from the source Observable as `next`
 * emissions marked with their original types within {@link Notification}
 * objects.
 *
 * <span class="informal">Wraps `next`, `error` and `complete` emissions in
 * {@link Notification} objects, emitted as `next` on the output Observable.
 * </span>
 *
 * <img src="./img/materialize.png" width="100%">
 *
 * `materialize` returns an Observable that emits a `next` notification for each
 * `next`, `error`, or `complete` emission of the source Observable. When the
 * source Observable emits `complete`, the output Observable will emit `next` as
 * a Notification of type "complete", and then it will emit `complete` as well.
 * When the source Observable emits `error`, the output will emit `next` as a
 * Notification of type "error", and then `complete`.
 *
 * This operator is useful for producing metadata of the source Observable, to
 * be consumed as `next` emissions. Use it in conjunction with
 * {@link dematerialize}.
 *
 * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>
 * var letters = Rx.Observable.of('a', 'b', 13, 'd');
 * var upperCase = letters.map(x => x.toUpperCase());
 * var materialized = upperCase.materialize();
 * materialized.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - Notification {kind: "N", value: "A", error: undefined, hasValue: true}
 * // - Notification {kind: "N", value: "B", error: undefined, hasValue: true}
 * // - Notification {kind: "E", value: undefined, error: TypeError:
 * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x
 * //   [as project] (http://1…, hasValue: false}
 *
 * @see {@link Notification}
 * @see {@link dematerialize}
 *
 * @return {Observable<Notification<T>>} An Observable that emits
 * {@link Notification} objects that wrap the original emissions from the source
 * Observable with metadata.
 * @method materialize
 * @owner Observable
 */
function materialize() {
    return materialize_1.materialize()(this);
}
exports.materialize = materialize;
//# sourceMappingURL=materialize.js.map

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var max_1 = __webpack_require__(356);
Observable_1.Observable.prototype.max = max_1.max;
//# sourceMappingURL=max.js.map

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var max_1 = __webpack_require__(113);
/**
 * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the largest value.
 *
 * <img src="./img/max.png" width="100%">
 *
 * @example <caption>Get the maximal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .max()
 *   .subscribe(x => console.log(x)); // -> 8
 *
 * @example <caption>Use a comparer function to get the maximal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'
 * }
 *
 * @see {@link min}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable} An Observable that emits item with the largest value.
 * @method max
 * @owner Observable
 */
function max(comparer) {
    return max_1.max(comparer)(this);
}
exports.max = max;
//# sourceMappingURL=max.js.map

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var merge_1 = __webpack_require__(76);
Observable_1.Observable.prototype.merge = merge_1.merge;
//# sourceMappingURL=merge.js.map

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeAll_1 = __webpack_require__(359);
Observable_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;
//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeAll_1 = __webpack_require__(35);
/**
 * Converts a higher-order Observable into a first-order Observable which
 * concurrently delivers all values that are emitted on the inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables.</span>
 *
 * <img src="./img/mergeAll.png" width="100%">
 *
 * `mergeAll` subscribes to an Observable that emits Observables, also known as
 * a higher-order Observable. Each time it observes one of these emitted inner
 * Observables, it subscribes to that and delivers all the values from the
 * inner Observable on the output Observable. The output Observable only
 * completes once all inner Observables have completed. Any error delivered by
 * a inner Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var firstOrder = higherOrder.mergeAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));
 * var firstOrder = higherOrder.mergeAll(2);
 * firstOrder.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link merge}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits values coming from all the
 * inner Observables emitted by the source Observable.
 * @method mergeAll
 * @owner Observable
 */
function mergeAll(concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return mergeAll_1.mergeAll(concurrent)(this);
}
exports.mergeAll = mergeAll;
//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeMap_1 = __webpack_require__(361);
Observable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;
Observable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;
//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeMap_1 = __webpack_require__(20);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link mergeAll}.</span>
 *
 * <img src="./img/mergeMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger.
 *
 * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>
 * var letters = Rx.Observable.of('a', 'b', 'c');
 * var result = letters.mergeMap(x =>
 *   Rx.Observable.interval(1000).map(i => x+i)
 * );
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // a0
 * // b0
 * // c0
 * // a1
 * // b1
 * // c1
 * // continues to list a,b,c with respective ascending integers
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and merging the results of the Observables obtained
 * from this transformation.
 * @method mergeMap
 * @owner Observable
 */
function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return mergeMap_1.mergeMap(project, resultSelector, concurrent)(this);
}
exports.mergeMap = mergeMap;
//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeMapTo_1 = __webpack_require__(363);
Observable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;
Observable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;
//# sourceMappingURL=mergeMapTo.js.map

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeMapTo_1 = __webpack_require__(114);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in the output Observable.
 *
 * <span class="informal">It's like {@link mergeMap}, but maps each value always
 * to the same inner Observable.</span>
 *
 * <img src="./img/mergeMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then merges those resulting Observables into one
 * single Observable, which is the output Observable.
 *
 * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable.
 * @method mergeMapTo
 * @owner Observable
 */
function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return mergeMapTo_1.mergeMapTo(innerObservable, resultSelector, concurrent)(this);
}
exports.mergeMapTo = mergeMapTo;
//# sourceMappingURL=mergeMapTo.js.map

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var mergeScan_1 = __webpack_require__(365);
Observable_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;
//# sourceMappingURL=mergeScan.js.map

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var mergeScan_1 = __webpack_require__(115);
/**
 * Applies an accumulator function over the source Observable where the
 * accumulator function itself returns an Observable, then each intermediate
 * Observable returned is merged into the output Observable.
 *
 * <span class="informal">It's like {@link scan}, but the Observables returned
 * by the accumulator are merged into the outer Observable.</span>
 *
 * @example <caption>Count the number of click events</caption>
 * const click$ = Rx.Observable.fromEvent(document, 'click');
 * const one$ = click$.mapTo(1);
 * const seed = 0;
 * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);
 * count$.subscribe(x => console.log(x));
 *
 * // Results:
 * 1
 * 2
 * 3
 * 4
 * // ...and so on for each click
 *
 * @param {function(acc: R, value: T): Observable<R>} accumulator
 * The accumulator function called on each source value.
 * @param seed The initial accumulation value.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of
 * input Observables being subscribed to concurrently.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method mergeScan
 * @owner Observable
 */
function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return mergeScan_1.mergeScan(accumulator, seed, concurrent)(this);
}
exports.mergeScan = mergeScan;
//# sourceMappingURL=mergeScan.js.map

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var min_1 = __webpack_require__(367);
Observable_1.Observable.prototype.min = min_1.min;
//# sourceMappingURL=min.js.map

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var min_1 = __webpack_require__(116);
/**
 * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the smallest value.
 *
 * <img src="./img/min.png" width="100%">
 *
 * @example <caption>Get the minimal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .min()
 *   .subscribe(x => console.log(x)); // -> 2
 *
 * @example <caption>Use a comparer function to get the minimal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'
 * }
 *
 * @see {@link max}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable<R>} An Observable that emits item with the smallest value.
 * @method min
 * @owner Observable
 */
function min(comparer) {
    return min_1.min(comparer)(this);
}
exports.min = min;
//# sourceMappingURL=min.js.map

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var multicast_1 = __webpack_require__(369);
Observable_1.Observable.prototype.multicast = multicast_1.multicast;
//# sourceMappingURL=multicast.js.map

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var multicast_1 = __webpack_require__(16);
/* tslint:enable:max-line-length */
/**
 * Allows source Observable to be subscribed only once with a Subject of choice,
 * while still sharing its values between multiple subscribers.
 *
 * <span class="informal">Subscribe to Observable once, but send its values to multiple subscribers.</span>
 *
 * <img src="./img/multicast.png" width="100%">
 *
 * `multicast` is an operator that works in two modes.
 *
 * In the first mode you provide a single argument to it, which can be either an initialized Subject or a Subject
 * factory. As a result you will get a special kind of an Observable - a {@link ConnectableObservable}. It can be
 * subscribed multiple times, just as regular Observable, but it won't subscribe to the source Observable at that
 * moment. It will do it only if you call its `connect` method. This means you can essentially control by hand, when
 * source Observable will be actually subscribed. What is more, ConnectableObservable will share this one subscription
 * between all of its subscribers. This means that, for example, `ajax` Observable will only send a request once,
 * even though usually it would send a request per every subscriber. Since it sends a request at the moment of
 * subscription, here request would be sent when the `connect` method of a ConnectableObservable is called.
 *
 * The most common pattern of using ConnectableObservable is calling `connect` when the first consumer subscribes,
 * keeping the subscription alive while several consumers come and go and finally unsubscribing from the source
 * Observable, when the last consumer unsubscribes. To not implement that logic over and over again,
 * ConnectableObservable has a special operator, `refCount`. When called, it returns an Observable, which will count
 * the number of consumers subscribed to it and keep ConnectableObservable connected as long as there is at least
 * one consumer. So if you don't actually need to decide yourself when to connect and disconnect a
 * ConnectableObservable, use `refCount`.
 *
 * The second mode is invoked by calling `multicast` with an additional, second argument - selector function.
 * This function accepts an Observable - which basically mirrors the source Observable - and returns Observable
 * as well, which should be the input stream modified by any operators you want. Note that in this
 * mode you cannot provide initialized Subject as a first argument - it has to be a Subject factory. If
 * you provide selector function, `multicast` returns just a regular Observable, instead of ConnectableObservable.
 * Thus, as usual, each subscription to this stream triggers subscription to the source Observable. However,
 * if inside the selector function you subscribe to the input Observable multiple times, actual source stream
 * will be subscribed only once. So if you have a chain of operators that use some Observable many times,
 * but you want to subscribe to that Observable only once, this is the mode you would use.
 *
 * Subject provided as a first parameter of `multicast` is used as a proxy for the single subscription to the
 * source Observable. It means that all values from the source stream go through that Subject. Thus, if a Subject
 * has some special properties, Observable returned by `multicast` will have them as well. If you want to use
 * `multicast` with a Subject that is one of the ones included in RxJS by default - {@link Subject},
 * {@link AsyncSubject}, {@link BehaviorSubject}, or {@link ReplaySubject} - simply use {@link publish},
 * {@link publishLast}, {@link publishBehavior} or {@link publishReplay} respectively. These are actually
 * just wrappers around `multicast`, with a specific Subject hardcoded inside.
 *
 * Also, if you use {@link publish} or {@link publishReplay} with a ConnectableObservables `refCount` operator,
 * you can simply use {@link share} and {@link shareReplay} respectively, which chain these two.
 *
 * @example <caption>Use ConnectableObservable</caption>
 * const seconds = Rx.Observable.interval(1000);
 * const connectableSeconds = seconds.multicast(new Subject());
 *
 * connectableSeconds.subscribe(value => console.log('first: ' + value));
 * connectableSeconds.subscribe(value => console.log('second: ' + value));
 *
 * // At this point still nothing happens, even though we subscribed twice.
 *
 * connectableSeconds.connect();
 *
 * // From now on `seconds` are being logged to the console,
 * // twice per every second. `seconds` Observable was however only subscribed once,
 * // so under the hood Observable.interval had only one clock started.
 *
 * @example <caption>Use selector</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds
 *     .multicast(
 *         () => new Subject(),
 *         seconds => seconds.zip(seconds) // Usually zip would subscribe to `seconds` twice.
 *                                         // Because we are inside selector, `seconds` is subscribed once,
 *     )                                   // thus starting only one clock used internally by Observable.interval.
 *     .subscribe();
 *
 * @see {@link publish}
 * @see {@link publishLast}
 * @see {@link publishBehavior}
 * @see {@link publishReplay}
 * @see {@link share}
 * @see {@link shareReplay}
 *
 * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate Subject through
 * which the source sequence's elements will be multicast to the selector function input Observable or
 * ConnectableObservable returned by the operator.
 * @param {Function} [selector] - Optional selector function that can use the input stream
 * as many times as needed, without causing multiple subscriptions to the source stream.
 * Subscribers to the input source will receive all notifications of the source from the
 * time of the subscription forward.
 * @return {Observable<T>|ConnectableObservable<T>} An Observable that emits the results of invoking the selector
 * on the source stream or a special {@link ConnectableObservable}, if selector was not provided.
 *
 * @method multicast
 * @owner Observable
 */
function multicast(subjectOrSubjectFactory, selector) {
    return multicast_1.multicast(subjectOrSubjectFactory, selector)(this);
}
exports.multicast = multicast;
//# sourceMappingURL=multicast.js.map

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var observeOn_1 = __webpack_require__(371);
Observable_1.Observable.prototype.observeOn = observeOn_1.observeOn;
//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var observeOn_1 = __webpack_require__(34);
/**
 *
 * Re-emits all notifications from source Observable with specified scheduler.
 *
 * <span class="informal">Ensure a specific scheduler is used, from outside of an Observable.</span>
 *
 * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule
 * notifications emitted by the source Observable. It might be useful, if you do not have control over
 * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.
 *
 * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,
 * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal
 * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits
 * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.
 * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split
 * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source
 * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a
 * little bit more, to ensure that they are emitted at expected moments.
 *
 * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications
 * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`
 * will delay all notifications - including error notifications - while `delay` will pass through error
 * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator
 * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used
 * for notification emissions in general.
 *
 * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>
 * const intervals = Rx.Observable.interval(10); // Intervals are scheduled
 *                                               // with async scheduler by default...
 *
 * intervals
 * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame
 * .subscribe(val => {                           // scheduler to ensure smooth animation.
 *   someDiv.style.height = val + 'px';
 * });
 *
 * @see {@link delay}
 *
 * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.
 * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.
 * @return {Observable<T>} Observable that emits the same notifications as the source Observable,
 * but with provided scheduler.
 *
 * @method observeOn
 * @owner Observable
 */
function observeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return observeOn_1.observeOn(scheduler, delay)(this);
}
exports.observeOn = observeOn;
//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var onErrorResumeNext_1 = __webpack_require__(373);
Observable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var onErrorResumeNext_1 = __webpack_require__(48);
/* tslint:enable:max-line-length */
/**
 * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one
 * that was passed.
 *
 * <span class="informal">Execute series of Observables no matter what, even if it means swallowing errors.</span>
 *
 * <img src="./img/onErrorResumeNext.png" width="100%">
 *
 * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as
 * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same
 * as the source.
 *
 * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.
 * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`
 * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting
 * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another
 * Observable in provided series, no matter if previous Observable completed or ended with an error. This will
 * be happening until there is no more Observables left in the series, at which point returned Observable will
 * complete - even if the last subscribed stream ended with an error.
 *
 * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive
 * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable
 * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with
 * an error.
 *
 * Note that you do not get any access to errors emitted by the Observables. In particular do not
 * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take
 * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.
 *
 *
 * @example <caption>Subscribe to the next Observable after map fails</caption>
 * Rx.Observable.of(1, 2, 3, 0)
 *   .map(x => {
 *       if (x === 0) { throw Error(); }
         return 10 / x;
 *   })
 *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))
 *   .subscribe(
 *     val => console.log(val),
 *     err => console.log(err),          // Will never be called.
 *     () => console.log('that\'s it!')
 *   );
 *
 * // Logs:
 * // 10
 * // 5
 * // 3.3333333333333335
 * // 1
 * // 2
 * // 3
 * // "that's it!"
 *
 * @see {@link concat}
 * @see {@link catch}
 *
 * @param {...ObservableInput} observables Observables passed either directly or as an array.
 * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes
 * to the next passed Observable and so on, until it completes or runs out of Observables.
 * @method onErrorResumeNext
 * @owner Observable
 */
function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i - 0] = arguments[_i];
    }
    return onErrorResumeNext_1.onErrorResumeNext.apply(void 0, nextSources)(this);
}
exports.onErrorResumeNext = onErrorResumeNext;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var pairwise_1 = __webpack_require__(375);
Observable_1.Observable.prototype.pairwise = pairwise_1.pairwise;
//# sourceMappingURL=pairwise.js.map

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var pairwise_1 = __webpack_require__(118);
/**
 * Groups pairs of consecutive emissions together and emits them as an array of
 * two values.
 *
 * <span class="informal">Puts the current value and previous value together as
 * an array, and emits that.</span>
 *
 * <img src="./img/pairwise.png" width="100%">
 *
 * The Nth emission from the source Observable will cause the output Observable
 * to emit an array [(N-1)th, Nth] of the previous and the current value, as a
 * pair. For this reason, `pairwise` emits on the second and subsequent
 * emissions from the source Observable, but not on the first emission, because
 * there is no previous value in that case.
 *
 * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var pairs = clicks.pairwise();
 * var distance = pairs.map(pair => {
 *   var x0 = pair[0].clientX;
 *   var y0 = pair[0].clientY;
 *   var x1 = pair[1].clientX;
 *   var y1 = pair[1].clientY;
 *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));
 * });
 * distance.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 *
 * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of
 * consecutive values from the source Observable.
 * @method pairwise
 * @owner Observable
 */
function pairwise() {
    return pairwise_1.pairwise()(this);
}
exports.pairwise = pairwise;
//# sourceMappingURL=pairwise.js.map

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var partition_1 = __webpack_require__(377);
Observable_1.Observable.prototype.partition = partition_1.partition;
//# sourceMappingURL=partition.js.map

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var partition_1 = __webpack_require__(119);
/**
 * Splits the source Observable into two, one with values that satisfy a
 * predicate, and another with values that don't satisfy the predicate.
 *
 * <span class="informal">It's like {@link filter}, but returns two Observables:
 * one like the output of {@link filter}, and the other with values that did not
 * pass the condition.</span>
 *
 * <img src="./img/partition.png" width="100%">
 *
 * `partition` outputs an array with two Observables that partition the values
 * from the source Observable through the given `predicate` function. The first
 * Observable in that array emits source values for which the predicate argument
 * returns true. The second Observable emits source values for which the
 * predicate returns false. The first behaves like {@link filter} and the second
 * behaves like {@link filter} with the predicate negated.
 *
 * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');
 * var clicksOnDivs = parts[0];
 * var clicksElsewhere = parts[1];
 * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));
 * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));
 *
 * @see {@link filter}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted on the first Observable in the returned array, if
 * `false` the value is emitted on the second Observable in the array. The
 * `index` parameter is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {[Observable<T>, Observable<T>]} An array with two Observables: one
 * with values that passed the predicate, and another with values that did not
 * pass the predicate.
 * @method partition
 * @owner Observable
 */
function partition(predicate, thisArg) {
    return partition_1.partition(predicate, thisArg)(this);
}
exports.partition = partition;
//# sourceMappingURL=partition.js.map

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function not(pred, thisArg) {
    function notPred() {
        return !(notPred.pred.apply(notPred.thisArg, arguments));
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
}
exports.not = not;
//# sourceMappingURL=not.js.map

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var pluck_1 = __webpack_require__(380);
Observable_1.Observable.prototype.pluck = pluck_1.pluck;
//# sourceMappingURL=pluck.js.map

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var pluck_1 = __webpack_require__(120);
/**
 * Maps each source value (an object) to its specified nested property.
 *
 * <span class="informal">Like {@link map}, but meant only for picking one of
 * the nested properties of every emitted object.</span>
 *
 * <img src="./img/pluck.png" width="100%">
 *
 * Given a list of strings describing a path to an object property, retrieves
 * the value of a specified nested property from all values in the source
 * Observable. If a property can't be resolved, it will return `undefined` for
 * that value.
 *
 * @example <caption>Map every click to the tagName of the clicked target element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var tagNames = clicks.pluck('target', 'tagName');
 * tagNames.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {...string} properties The nested properties to pluck from each source
 * value (an object).
 * @return {Observable} A new Observable of property values from the source values.
 * @method pluck
 * @owner Observable
 */
function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i - 0] = arguments[_i];
    }
    return pluck_1.pluck.apply(void 0, properties)(this);
}
exports.pluck = pluck;
//# sourceMappingURL=pluck.js.map

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publish_1 = __webpack_require__(382);
Observable_1.Observable.prototype.publish = publish_1.publish;
//# sourceMappingURL=publish.js.map

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var publish_1 = __webpack_require__(121);
/* tslint:enable:max-line-length */
/**
 * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called
 * before it begins emitting items to those Observers that have subscribed to it.
 *
 * <img src="./img/publish.png" width="100%">
 *
 * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times
 * as needed, without causing multiple subscriptions to the source sequence.
 * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.
 * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.
 * @method publish
 * @owner Observable
 */
function publish(selector) {
    return publish_1.publish(selector)(this);
}
exports.publish = publish;
//# sourceMappingURL=publish.js.map

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publishBehavior_1 = __webpack_require__(384);
Observable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var publishBehavior_1 = __webpack_require__(122);
/**
 * @param value
 * @return {ConnectableObservable<T>}
 * @method publishBehavior
 * @owner Observable
 */
function publishBehavior(value) {
    return publishBehavior_1.publishBehavior(value)(this);
}
exports.publishBehavior = publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publishReplay_1 = __webpack_require__(386);
Observable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var publishReplay_1 = __webpack_require__(124);
/* tslint:enable:max-line-length */
/**
 * @param bufferSize
 * @param windowTime
 * @param selectorOrScheduler
 * @param scheduler
 * @return {Observable<T> | ConnectableObservable<T>}
 * @method publishReplay
 * @owner Observable
 */
function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
    return publishReplay_1.publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);
}
exports.publishReplay = publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var publishLast_1 = __webpack_require__(388);
Observable_1.Observable.prototype.publishLast = publishLast_1.publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var publishLast_1 = __webpack_require__(125);
/**
 * @return {ConnectableObservable<T>}
 * @method publishLast
 * @owner Observable
 */
function publishLast() {
    //TODO(benlesh): correct type-flow through here.
    return publishLast_1.publishLast()(this);
}
exports.publishLast = publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var race_1 = __webpack_require__(390);
Observable_1.Observable.prototype.race = race_1.race;
//# sourceMappingURL=race.js.map

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var race_1 = __webpack_require__(126);
// NOTE: to support backwards compatability with 5.4.* and lower
var race_2 = __webpack_require__(47);
exports.raceStatic = race_2.race;
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that mirrors the first source Observable to emit an item
 * from the combination of this Observable and supplied Observables.
 * @param {...Observables} ...observables Sources used to race for which Observable emits first.
 * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.
 * @method race
 * @owner Observable
 */
function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return race_1.race.apply(void 0, observables)(this);
}
exports.race = race;
//# sourceMappingURL=race.js.map

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var reduce_1 = __webpack_require__(392);
Observable_1.Observable.prototype.reduce = reduce_1.reduce;
//# sourceMappingURL=reduce.js.map

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var reduce_1 = __webpack_require__(26);
/* tslint:enable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns the
 * accumulated result when the source completes, given an optional seed value.
 *
 * <span class="informal">Combines together all values emitted on the source,
 * using an accumulator function that knows how to join a new source value into
 * the accumulation from the past.</span>
 *
 * <img src="./img/reduce.png" width="100%">
 *
 * Like
 * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),
 * `reduce` applies an `accumulator` function against an accumulation and each
 * value of the source Observable (from the past) to reduce it to a single
 * value, emitted on the output Observable. Note that `reduce` will only emit
 * one value, only when the source Observable completes. It is equivalent to
 * applying operator {@link scan} followed by operator {@link last}.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events that happened in 5 seconds</caption>
 * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')
 *   .takeUntil(Rx.Observable.interval(5000));
 * var ones = clicksInFiveSeconds.mapTo(1);
 * var seed = 0;
 * var count = ones.reduce((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link count}
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link scan}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function
 * called on each source value.
 * @param {R} [seed] The initial accumulation value.
 * @return {Observable<R>} An Observable that emits a single value that is the
 * result of accumulating the values emitted by the source Observable.
 * @method reduce
 * @owner Observable
 */
function reduce(accumulator, seed) {
    // providing a seed of `undefined` *should* be valid and trigger
    // hasSeed! so don't use `seed !== undefined` checks!
    // For this reason, we have to check it here at the original call site
    // otherwise inside Operator/Subscriber we won't know if `undefined`
    // means they didn't provide anything or if they literally provided `undefined`
    if (arguments.length >= 2) {
        return reduce_1.reduce(accumulator, seed)(this);
    }
    return reduce_1.reduce(accumulator)(this);
}
exports.reduce = reduce;
//# sourceMappingURL=reduce.js.map

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var repeat_1 = __webpack_require__(394);
Observable_1.Observable.prototype.repeat = repeat_1.repeat;
//# sourceMappingURL=repeat.js.map

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var repeat_1 = __webpack_require__(127);
/**
 * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.
 *
 * <img src="./img/repeat.png" width="100%">
 *
 * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield
 * an empty Observable.
 * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most
 * count times.
 * @method repeat
 * @owner Observable
 */
function repeat(count) {
    if (count === void 0) { count = -1; }
    return repeat_1.repeat(count)(this);
}
exports.repeat = repeat;
//# sourceMappingURL=repeat.js.map

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var repeatWhen_1 = __webpack_require__(396);
Observable_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;
//# sourceMappingURL=repeatWhen.js.map

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var repeatWhen_1 = __webpack_require__(128);
/**
 * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source
 * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable
 * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise
 * this method will resubscribe to the source Observable.
 *
 * <img src="./img/repeatWhen.png" width="100%">
 *
 * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with
 * which a user can `complete` or `error`, aborting the repetition.
 * @return {Observable} The source Observable modified with repeat logic.
 * @method repeatWhen
 * @owner Observable
 */
function repeatWhen(notifier) {
    return repeatWhen_1.repeatWhen(notifier)(this);
}
exports.repeatWhen = repeatWhen;
//# sourceMappingURL=repeatWhen.js.map

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var retry_1 = __webpack_require__(398);
Observable_1.Observable.prototype.retry = retry_1.retry;
//# sourceMappingURL=retry.js.map

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var retry_1 = __webpack_require__(129);
/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given
 * as a number parameter) rather than propagating the `error` call.
 *
 * <img src="./img/retry.png" width="100%">
 *
 * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted
 * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second
 * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications
 * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].
 * @param {number} count - Number of retry attempts before failing.
 * @return {Observable} The source Observable modified with the retry logic.
 * @method retry
 * @owner Observable
 */
function retry(count) {
    if (count === void 0) { count = -1; }
    return retry_1.retry(count)(this);
}
exports.retry = retry;
//# sourceMappingURL=retry.js.map

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var retryWhen_1 = __webpack_require__(400);
Observable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;
//# sourceMappingURL=retryWhen.js.map

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var retryWhen_1 = __webpack_require__(130);
/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.
 * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child
 * subscription. Otherwise this method will resubscribe to the source Observable.
 *
 * <img src="./img/retryWhen.png" width="100%">
 *
 * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a
 * user can `complete` or `error`, aborting the retry.
 * @return {Observable} The source Observable modified with retry logic.
 * @method retryWhen
 * @owner Observable
 */
function retryWhen(notifier) {
    return retryWhen_1.retryWhen(notifier)(this);
}
exports.retryWhen = retryWhen;
//# sourceMappingURL=retryWhen.js.map

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var sample_1 = __webpack_require__(402);
Observable_1.Observable.prototype.sample = sample_1.sample;
//# sourceMappingURL=sample.js.map

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var sample_1 = __webpack_require__(131);
/**
 * Emits the most recently emitted value from the source Observable whenever
 * another Observable, the `notifier`, emits.
 *
 * <span class="informal">It's like {@link sampleTime}, but samples whenever
 * the `notifier` Observable emits something.</span>
 *
 * <img src="./img/sample.png" width="100%">
 *
 * Whenever the `notifier` Observable emits a value or completes, `sample`
 * looks at the source Observable and emits whichever value it has most recently
 * emitted since the previous sampling, unless the source has not emitted
 * anything since the previous sampling. The `notifier` is subscribed to as soon
 * as the output Observable is subscribed.
 *
 * @example <caption>On every click, sample the most recent "seconds" timer</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = seconds.sample(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {Observable<any>} notifier The Observable to use for sampling the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable whenever the notifier Observable
 * emits value or completes.
 * @method sample
 * @owner Observable
 */
function sample(notifier) {
    return sample_1.sample(notifier)(this);
}
exports.sample = sample;
//# sourceMappingURL=sample.js.map

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var sampleTime_1 = __webpack_require__(404);
Observable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;
//# sourceMappingURL=sampleTime.js.map

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var sampleTime_1 = __webpack_require__(132);
/**
 * Emits the most recently emitted value from the source Observable within
 * periodic time intervals.
 *
 * <span class="informal">Samples the source Observable at periodic time
 * intervals, emitting what it samples.</span>
 *
 * <img src="./img/sampleTime.png" width="100%">
 *
 * `sampleTime` periodically looks at the source Observable and emits whichever
 * value it has most recently emitted since the previous sampling, unless the
 * source has not emitted anything since the previous sampling. The sampling
 * happens periodically in time every `period` milliseconds (or the time unit
 * defined by the optional `scheduler` argument). The sampling starts as soon as
 * the output Observable is subscribed.
 *
 * @example <caption>Every second, emit the most recent click at most once</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.sampleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {number} period The sampling period expressed in milliseconds or the
 * time unit determined internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the sampling.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable at the specified time interval.
 * @method sampleTime
 * @owner Observable
 */
function sampleTime(period, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return sampleTime_1.sampleTime(period, scheduler)(this);
}
exports.sampleTime = sampleTime;
//# sourceMappingURL=sampleTime.js.map

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var scan_1 = __webpack_require__(406);
Observable_1.Observable.prototype.scan = scan_1.scan;
//# sourceMappingURL=scan.js.map

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var scan_1 = __webpack_require__(55);
/* tslint:enable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns each
 * intermediate result, with an optional seed value.
 *
 * <span class="informal">It's like {@link reduce}, but emits the current
 * accumulation whenever the source emits a value.</span>
 *
 * <img src="./img/scan.png" width="100%">
 *
 * Combines together all values emitted on the source, using an accumulator
 * function that knows how to join a new source value into the accumulation from
 * the past. Is similar to {@link reduce}, but emits the intermediate
 * accumulations.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var ones = clicks.mapTo(1);
 * var seed = 0;
 * var count = ones.scan((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link reduce}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator
 * The accumulator function called on each source value.
 * @param {T|R} [seed] The initial accumulation value.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method scan
 * @owner Observable
 */
function scan(accumulator, seed) {
    if (arguments.length >= 2) {
        return scan_1.scan(accumulator, seed)(this);
    }
    return scan_1.scan(accumulator)(this);
}
exports.scan = scan;
//# sourceMappingURL=scan.js.map

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var sequenceEqual_1 = __webpack_require__(408);
Observable_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;
//# sourceMappingURL=sequenceEqual.js.map

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var sequenceEqual_1 = __webpack_require__(133);
/**
 * Compares all values of two observables in sequence using an optional comparor function
 * and returns an observable of a single boolean value representing whether or not the two sequences
 * are equal.
 *
 * <span class="informal">Checks to see of all values emitted by both observables are equal, in order.</span>
 *
 * <img src="./img/sequenceEqual.png" width="100%">
 *
 * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either
 * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom
 * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the
 * observables completes, the operator will wait for the other observable to complete; If the other
 * observable emits before completing, the returned observable will emit `false` and complete. If one observable never
 * completes or emits after the other complets, the returned observable will never complete.
 *
 * @example <caption>figure out if the Konami code matches</caption>
 * var code = Rx.Observable.from([
 *  "ArrowUp",
 *  "ArrowUp",
 *  "ArrowDown",
 *  "ArrowDown",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "KeyB",
 *  "KeyA",
 *  "Enter" // no start key, clearly.
 * ]);
 *
 * var keys = Rx.Observable.fromEvent(document, 'keyup')
 *  .map(e => e.code);
 * var matches = keys.bufferCount(11, 1)
 *  .mergeMap(
 *    last11 =>
 *      Rx.Observable.from(last11)
 *        .sequenceEqual(code)
 *   );
 * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));
 *
 * @see {@link combineLatest}
 * @see {@link zip}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} compareTo The observable sequence to compare the source sequence to.
 * @param {function} [comparor] An optional function to compare each value pair
 * @return {Observable} An Observable of a single boolean value representing whether or not
 * the values emitted by both observables were equal in sequence.
 * @method sequenceEqual
 * @owner Observable
 */
function sequenceEqual(compareTo, comparor) {
    return sequenceEqual_1.sequenceEqual(compareTo, comparor)(this);
}
exports.sequenceEqual = sequenceEqual;
//# sourceMappingURL=sequenceEqual.js.map

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var share_1 = __webpack_require__(410);
Observable_1.Observable.prototype.share = share_1.share;
//# sourceMappingURL=share.js.map

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var share_1 = __webpack_require__(134);
/**
 * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one
 * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will
 * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.
 *
 * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.
 * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.
 * Observable.of("test").publish().refCount() will not re-emit "test" on new subscriptions, Observable.of("test").share() will
 * re-emit "test" to new subscriptions.
 *
 * <img src="./img/share.png" width="100%">
 *
 * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.
 * @method share
 * @owner Observable
 */
function share() {
    return share_1.share()(this);
}
exports.share = share;
;
//# sourceMappingURL=share.js.map

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var shareReplay_1 = __webpack_require__(412);
Observable_1.Observable.prototype.shareReplay = shareReplay_1.shareReplay;
//# sourceMappingURL=shareReplay.js.map

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var shareReplay_1 = __webpack_require__(135);
/**
 * @method shareReplay
 * @owner Observable
 */
function shareReplay(bufferSize, windowTime, scheduler) {
    return shareReplay_1.shareReplay(bufferSize, windowTime, scheduler)(this);
}
exports.shareReplay = shareReplay;
;
//# sourceMappingURL=shareReplay.js.map

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var single_1 = __webpack_require__(414);
Observable_1.Observable.prototype.single = single_1.single;
//# sourceMappingURL=single.js.map

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var single_1 = __webpack_require__(136);
/**
 * Returns an Observable that emits the single item emitted by the source Observable that matches a specified
 * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no
 * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.
 *
 * <img src="./img/single.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches
 * the predicate.
 .
 * @method single
 * @owner Observable
 */
function single(predicate) {
    return single_1.single(predicate)(this);
}
exports.single = single;
//# sourceMappingURL=single.js.map

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skip_1 = __webpack_require__(416);
Observable_1.Observable.prototype.skip = skip_1.skip;
//# sourceMappingURL=skip.js.map

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var skip_1 = __webpack_require__(137);
/**
 * Returns an Observable that skips the first `count` items emitted by the source Observable.
 *
 * <img src="./img/skip.png" width="100%">
 *
 * @param {Number} count - The number of times, items emitted by source Observable should be skipped.
 * @return {Observable} An Observable that skips values emitted by the source Observable.
 *
 * @method skip
 * @owner Observable
 */
function skip(count) {
    return skip_1.skip(count)(this);
}
exports.skip = skip;
//# sourceMappingURL=skip.js.map

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skipLast_1 = __webpack_require__(418);
Observable_1.Observable.prototype.skipLast = skipLast_1.skipLast;
//# sourceMappingURL=skipLast.js.map

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var skipLast_1 = __webpack_require__(138);
/**
 * Skip the last `count` values emitted by the source Observable.
 *
 * <img src="./img/skipLast.png" width="100%">
 *
 * `skipLast` returns an Observable that accumulates a queue with a length
 * enough to store the first `count` values. As more values are received,
 * values are taken from the front of the queue and produced on the result
 * sequence. This causes values to be delayed.
 *
 * @example <caption>Skip the last 2 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 5);
 * var skipLastTwo = many.skipLast(2);
 * skipLastTwo.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 1 2 3
 *
 * @see {@link skip}
 * @see {@link skipUntil}
 * @see {@link skipWhile}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws
 * ArgumentOutOrRangeError if `i < 0`.
 *
 * @param {number} count Number of elements to skip from the end of the source Observable.
 * @returns {Observable<T>} An Observable that skips the last count values
 * emitted by the source Observable.
 * @method skipLast
 * @owner Observable
 */
function skipLast(count) {
    return skipLast_1.skipLast(count)(this);
}
exports.skipLast = skipLast;
//# sourceMappingURL=skipLast.js.map

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skipUntil_1 = __webpack_require__(420);
Observable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;
//# sourceMappingURL=skipUntil.js.map

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var skipUntil_1 = __webpack_require__(139);
/**
 * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.
 *
 * <img src="./img/skipUntil.png" width="100%">
 *
 * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to
 * be mirrored by the resulting Observable.
 * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits
 * an item, then emits the remaining items.
 * @method skipUntil
 * @owner Observable
 */
function skipUntil(notifier) {
    return skipUntil_1.skipUntil(notifier)(this);
}
exports.skipUntil = skipUntil;
//# sourceMappingURL=skipUntil.js.map

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var skipWhile_1 = __webpack_require__(422);
Observable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;
//# sourceMappingURL=skipWhile.js.map

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var skipWhile_1 = __webpack_require__(140);
/**
 * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds
 * true, but emits all further source items as soon as the condition becomes false.
 *
 * <img src="./img/skipWhile.png" width="100%">
 *
 * @param {Function} predicate - A function to test each item emitted from the source Observable.
 * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the
 * specified predicate becomes false.
 * @method skipWhile
 * @owner Observable
 */
function skipWhile(predicate) {
    return skipWhile_1.skipWhile(predicate)(this);
}
exports.skipWhile = skipWhile;
//# sourceMappingURL=skipWhile.js.map

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var startWith_1 = __webpack_require__(424);
Observable_1.Observable.prototype.startWith = startWith_1.startWith;
//# sourceMappingURL=startWith.js.map

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var startWith_1 = __webpack_require__(141);
/* tslint:enable:max-line-length */
/**
 * Returns an Observable that emits the items you specify as arguments before it begins to emit
 * items emitted by the source Observable.
 *
 * <img src="./img/startWith.png" width="100%">
 *
 * @param {...T} values - Items you want the modified Observable to emit first.
 * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling
 * the emissions of the `next` notifications.
 * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items
 * emitted by the source Observable.
 * @method startWith
 * @owner Observable
 */
function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i - 0] = arguments[_i];
    }
    return startWith_1.startWith.apply(void 0, array)(this);
}
exports.startWith = startWith;
//# sourceMappingURL=startWith.js.map

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var subscribeOn_1 = __webpack_require__(426);
Observable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;
//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var subscribeOn_1 = __webpack_require__(427);
/**
 * Asynchronously subscribes Observers to this Observable on the specified IScheduler.
 *
 * <img src="./img/subscribeOn.png" width="100%">
 *
 * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.
 * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.
 .
 * @method subscribeOn
 * @owner Observable
 */
function subscribeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return subscribeOn_1.subscribeOn(scheduler, delay)(this);
}
exports.subscribeOn = subscribeOn;
//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var SubscribeOnObservable_1 = __webpack_require__(428);
/**
 * Asynchronously subscribes Observers to this Observable on the specified IScheduler.
 *
 * <img src="./img/subscribeOn.png" width="100%">
 *
 * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.
 * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.
 .
 * @method subscribeOn
 * @owner Observable
 */
function subscribeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return function subscribeOnOperatorFunction(source) {
        return source.lift(new SubscribeOnOperator(scheduler, delay));
    };
}
exports.subscribeOn = subscribeOn;
var SubscribeOnOperator = (function () {
    function SubscribeOnOperator(scheduler, delay) {
        this.scheduler = scheduler;
        this.delay = delay;
    }
    SubscribeOnOperator.prototype.call = function (subscriber, source) {
        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);
    };
    return SubscribeOnOperator;
}());
//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var asap_1 = __webpack_require__(142);
var isNumeric_1 = __webpack_require__(21);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var SubscribeOnObservable = (function (_super) {
    __extends(SubscribeOnObservable, _super);
    function SubscribeOnObservable(source, delayTime, scheduler) {
        if (delayTime === void 0) { delayTime = 0; }
        if (scheduler === void 0) { scheduler = asap_1.asap; }
        _super.call(this);
        this.source = source;
        this.delayTime = delayTime;
        this.scheduler = scheduler;
        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {
            this.delayTime = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            this.scheduler = asap_1.asap;
        }
    }
    SubscribeOnObservable.create = function (source, delay, scheduler) {
        if (delay === void 0) { delay = 0; }
        if (scheduler === void 0) { scheduler = asap_1.asap; }
        return new SubscribeOnObservable(source, delay, scheduler);
    };
    SubscribeOnObservable.dispatch = function (arg) {
        var source = arg.source, subscriber = arg.subscriber;
        return this.add(source.subscribe(subscriber));
    };
    SubscribeOnObservable.prototype._subscribe = function (subscriber) {
        var delay = this.delayTime;
        var source = this.source;
        var scheduler = this.scheduler;
        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
            source: source, subscriber: subscriber
        });
    };
    return SubscribeOnObservable;
}(Observable_1.Observable));
exports.SubscribeOnObservable = SubscribeOnObservable;
//# sourceMappingURL=SubscribeOnObservable.js.map

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Immediate_1 = __webpack_require__(430);
var AsyncAction_1 = __webpack_require__(22);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AsapAction = (function (_super) {
    __extends(AsapAction, _super);
    function AsapAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay is greater than 0, request as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Push the action to the end of the scheduler queue.
        scheduler.actions.push(this);
        // If a microtask has already been scheduled, don't schedule another
        // one. If a microtask hasn't been scheduled yet, schedule one now. Return
        // the current scheduled microtask id.
        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, or if the delay is null (the
        // action wasn't rescheduled) but was originally scheduled as an async
        // action, then recycle as an async action.
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        // If the scheduler queue is empty, cancel the requested microtask and
        // set the scheduled flag to undefined so the next AsapAction will schedule
        // its own.
        if (scheduler.actions.length === 0) {
            Immediate_1.Immediate.clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        // Return undefined so the action knows to request a new async id if it's rescheduled.
        return undefined;
    };
    return AsapAction;
}(AsyncAction_1.AsyncAction));
exports.AsapAction = AsapAction;
//# sourceMappingURL=AsapAction.js.map

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(clearImmediate, setImmediate) {/**
Some credit for this helper goes to http://github.com/YuzuJS/setImmediate
*/

var root_1 = __webpack_require__(11);
var ImmediateDefinition = (function () {
    function ImmediateDefinition(root) {
        this.root = root;
        if (root.setImmediate && typeof root.setImmediate === 'function') {
            this.setImmediate = root.setImmediate.bind(root);
            this.clearImmediate = root.clearImmediate.bind(root);
        }
        else {
            this.nextHandle = 1;
            this.tasksByHandle = {};
            this.currentlyRunningATask = false;
            // Don't get fooled by e.g. browserify environments.
            if (this.canUseProcessNextTick()) {
                // For Node.js before 0.9
                this.setImmediate = this.createProcessNextTickSetImmediate();
            }
            else if (this.canUsePostMessage()) {
                // For non-IE10 modern browsers
                this.setImmediate = this.createPostMessageSetImmediate();
            }
            else if (this.canUseMessageChannel()) {
                // For web workers, where supported
                this.setImmediate = this.createMessageChannelSetImmediate();
            }
            else if (this.canUseReadyStateChange()) {
                // For IE 6–8
                this.setImmediate = this.createReadyStateChangeSetImmediate();
            }
            else {
                // For older browsers
                this.setImmediate = this.createSetTimeoutSetImmediate();
            }
            var ci = function clearImmediate(handle) {
                delete clearImmediate.instance.tasksByHandle[handle];
            };
            ci.instance = this;
            this.clearImmediate = ci;
        }
    }
    ImmediateDefinition.prototype.identify = function (o) {
        return this.root.Object.prototype.toString.call(o);
    };
    ImmediateDefinition.prototype.canUseProcessNextTick = function () {
        return this.identify(this.root.process) === '[object process]';
    };
    ImmediateDefinition.prototype.canUseMessageChannel = function () {
        return Boolean(this.root.MessageChannel);
    };
    ImmediateDefinition.prototype.canUseReadyStateChange = function () {
        var document = this.root.document;
        return Boolean(document && 'onreadystatechange' in document.createElement('script'));
    };
    ImmediateDefinition.prototype.canUsePostMessage = function () {
        var root = this.root;
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `root.postMessage` means something completely different and can't be used for this purpose.
        if (root.postMessage && !root.importScripts) {
            var postMessageIsAsynchronous_1 = true;
            var oldOnMessage = root.onmessage;
            root.onmessage = function () {
                postMessageIsAsynchronous_1 = false;
            };
            root.postMessage('', '*');
            root.onmessage = oldOnMessage;
            return postMessageIsAsynchronous_1;
        }
        return false;
    };
    // This function accepts the same arguments as setImmediate, but
    // returns a function that requires no arguments.
    ImmediateDefinition.prototype.partiallyApplied = function (handler) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var fn = function result() {
            var _a = result, handler = _a.handler, args = _a.args;
            if (typeof handler === 'function') {
                handler.apply(undefined, args);
            }
            else {
                (new Function('' + handler))();
            }
        };
        fn.handler = handler;
        fn.args = args;
        return fn;
    };
    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {
        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);
        return this.nextHandle++;
    };
    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
        var root = this.root;
        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';
        var onGlobalMessage = function globalMessageHandler(event) {
            var instance = globalMessageHandler.instance;
            if (event.source === root &&
                typeof event.data === 'string' &&
                event.data.indexOf(messagePrefix) === 0) {
                instance.runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };
        onGlobalMessage.instance = this;
        root.addEventListener('message', onGlobalMessage, false);
        var fn = function setImmediate() {
            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.postMessage(messagePrefix + handle, '*');
            return handle;
        };
        fn.instance = this;
        fn.messagePrefix = messagePrefix;
        return fn;
    };
    ImmediateDefinition.prototype.runIfPresent = function (handle) {
        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'
        // So if we're currently running a task, we'll need to delay this invocation.
        if (this.currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // 'too much recursion' error.
            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);
        }
        else {
            var task = this.tasksByHandle[handle];
            if (task) {
                this.currentlyRunningATask = true;
                try {
                    task();
                }
                finally {
                    this.clearImmediate(handle);
                    this.currentlyRunningATask = false;
                }
            }
        }
    };
    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {
        var _this = this;
        var channel = new this.root.MessageChannel();
        channel.port1.onmessage = function (event) {
            var handle = event.data;
            _this.runIfPresent(handle);
        };
        var fn = function setImmediate() {
            var _a = setImmediate, channel = _a.channel, instance = _a.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            channel.port2.postMessage(handle);
            return handle;
        };
        fn.channel = channel;
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var root = instance.root;
            var doc = root.document;
            var html = doc.documentElement;
            var handle = instance.addFromSetImmediateArguments(arguments);
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement('script');
            script.onreadystatechange = function () {
                instance.runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    return ImmediateDefinition;
}());
exports.ImmediateDefinition = ImmediateDefinition;
exports.Immediate = new ImmediateDefinition(root_1.root);
//# sourceMappingURL=Immediate.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(143).clearImmediate, __webpack_require__(143).setImmediate))

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(62), __webpack_require__(432)))

/***/ }),
/* 432 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(23);
var AsapScheduler = (function (_super) {
    __extends(AsapScheduler, _super);
    function AsapScheduler() {
        _super.apply(this, arguments);
    }
    AsapScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.AsapScheduler = AsapScheduler;
//# sourceMappingURL=AsapScheduler.js.map

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var switch_1 = __webpack_require__(435);
Observable_1.Observable.prototype.switch = switch_1._switch;
Observable_1.Observable.prototype._switch = switch_1._switch;
//# sourceMappingURL=switch.js.map

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var switchAll_1 = __webpack_require__(144);
/**
 * Converts a higher-order Observable into a first-order Observable by
 * subscribing to only the most recently emitted of those inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * previous inner Observable once a new one appears.</span>
 *
 * <img src="./img/switch.png" width="100%">
 *
 * `switch` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable subscribes to the inner Observable and
 * begins emitting the items emitted by that. So far, it behaves
 * like {@link mergeAll}. However, when a new inner Observable is emitted,
 * `switch` unsubscribes from the earlier-emitted inner Observable and
 * subscribes to the new inner Observable and begins emitting items from it. It
 * continues to behave like this for subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * // Each click event is mapped to an Observable that ticks every second
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var switched = higherOrder.switch();
 * // The outcome is that `switched` is essentially a timer that restarts
 * // on every click. The interval Observables from older clicks do not merge
 * // with the current interval Observable.
 * switched.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switchMap}
 * @see {@link switchMapTo}
 * @see {@link zipAll}
 *
 * @return {Observable<T>} An Observable that emits the items emitted by the
 * Observable most recently emitted by the source Observable.
 * @method switch
 * @name switch
 * @owner Observable
 */
function _switch() {
    return switchAll_1.switchAll()(this);
}
exports._switch = _switch;
//# sourceMappingURL=switch.js.map

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var switchMap_1 = __webpack_require__(437);
Observable_1.Observable.prototype.switchMap = switchMap_1.switchMap;
//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var switchMap_1 = __webpack_require__(58);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, emitting values only from the most recently projected Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link switch}.</span>
 *
 * <img src="./img/switchMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each time it observes one of these
 * inner Observables, the output Observable begins emitting the items emitted by
 * that inner Observable. When a new inner Observable is emitted, `switchMap`
 * stops emitting items from the earlier-emitted inner Observable and begins
 * emitting items from the new one. It continues to behave like this for
 * subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switch}
 * @see {@link switchMapTo}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking only the values from the most recently
 * projected inner Observable.
 * @method switchMap
 * @owner Observable
 */
function switchMap(project, resultSelector) {
    return switchMap_1.switchMap(project, resultSelector)(this);
}
exports.switchMap = switchMap;
//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var switchMapTo_1 = __webpack_require__(439);
Observable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;
//# sourceMappingURL=switchMapTo.js.map

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var switchMapTo_1 = __webpack_require__(145);
/* tslint:enable:max-line-length */
/**
 * Projects each source value to the same Observable which is flattened multiple
 * times with {@link switch} in the output Observable.
 *
 * <span class="informal">It's like {@link switchMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/switchMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. The output Observables
 * emits values only from the most recently emitted instance of
 * `innerObservable`.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link switch}
 * @see {@link switchMap}
 * @see {@link mergeMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable, and taking only the values
 * from the most recently projected inner Observable.
 * @method switchMapTo
 * @owner Observable
 */
function switchMapTo(innerObservable, resultSelector) {
    return switchMapTo_1.switchMapTo(innerObservable, resultSelector)(this);
}
exports.switchMapTo = switchMapTo;
//# sourceMappingURL=switchMapTo.js.map

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var take_1 = __webpack_require__(441);
Observable_1.Observable.prototype.take = take_1.take;
//# sourceMappingURL=take.js.map

/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var take_1 = __webpack_require__(146);
/**
 * Emits only the first `count` values emitted by the source Observable.
 *
 * <span class="informal">Takes the first `count` values from the source, then
 * completes.</span>
 *
 * <img src="./img/take.png" width="100%">
 *
 * `take` returns an Observable that emits only the first `count` values emitted
 * by the source Observable. If the source emits fewer than `count` values then
 * all of its values are emitted. After that, it completes, regardless if the
 * source completes.
 *
 * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>
 * var interval = Rx.Observable.interval(1000);
 * var five = interval.take(5);
 * five.subscribe(x => console.log(x));
 *
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of `next` values to emit.
 * @return {Observable<T>} An Observable that emits only the first `count`
 * values emitted by the source Observable, or all of the values from the source
 * if the source emits fewer than `count` values.
 * @method take
 * @owner Observable
 */
function take(count) {
    return take_1.take(count)(this);
}
exports.take = take;
//# sourceMappingURL=take.js.map

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var takeLast_1 = __webpack_require__(443);
Observable_1.Observable.prototype.takeLast = takeLast_1.takeLast;
//# sourceMappingURL=takeLast.js.map

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var takeLast_1 = __webpack_require__(56);
/**
 * Emits only the last `count` values emitted by the source Observable.
 *
 * <span class="informal">Remembers the latest `count` values, then emits those
 * only when the source completes.</span>
 *
 * <img src="./img/takeLast.png" width="100%">
 *
 * `takeLast` returns an Observable that emits at most the last `count` values
 * emitted by the source Observable. If the source emits fewer than `count`
 * values then all of its values are emitted. This operator must wait until the
 * `complete` notification emission from the source in order to emit the `next`
 * values on the output Observable, because otherwise it is impossible to know
 * whether or not more values will be emitted on the source. For this reason,
 * all values are emitted synchronously, followed by the complete notification.
 *
 * @example <caption>Take the last 3 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 100);
 * var lastThree = many.takeLast(3);
 * lastThree.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of values to emit from the end of
 * the sequence of values emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits at most the last count
 * values emitted by the source Observable.
 * @method takeLast
 * @owner Observable
 */
function takeLast(count) {
    return takeLast_1.takeLast(count)(this);
}
exports.takeLast = takeLast;
//# sourceMappingURL=takeLast.js.map

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var takeUntil_1 = __webpack_require__(445);
Observable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;
//# sourceMappingURL=takeUntil.js.map

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var takeUntil_1 = __webpack_require__(147);
/**
 * Emits the values emitted by the source Observable until a `notifier`
 * Observable emits a value.
 *
 * <span class="informal">Lets values pass until a second Observable,
 * `notifier`, emits something. Then, it completes.</span>
 *
 * <img src="./img/takeUntil.png" width="100%">
 *
 * `takeUntil` subscribes and begins mirroring the source Observable. It also
 * monitors a second Observable, `notifier` that you provide. If the `notifier`
 * emits a value, the output Observable stops mirroring the source Observable
 * and completes.
 *
 * @example <caption>Tick every second until the first click happens</caption>
 * var interval = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = interval.takeUntil(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @param {Observable} notifier The Observable whose first emitted value will
 * cause the output Observable of `takeUntil` to stop emitting values from the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable until such time as `notifier` emits its first value.
 * @method takeUntil
 * @owner Observable
 */
function takeUntil(notifier) {
    return takeUntil_1.takeUntil(notifier)(this);
}
exports.takeUntil = takeUntil;
//# sourceMappingURL=takeUntil.js.map

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var takeWhile_1 = __webpack_require__(447);
Observable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;
//# sourceMappingURL=takeWhile.js.map

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var takeWhile_1 = __webpack_require__(148);
/**
 * Emits values emitted by the source Observable so long as each value satisfies
 * the given `predicate`, and then completes as soon as this `predicate` is not
 * satisfied.
 *
 * <span class="informal">Takes values from the source only while they pass the
 * condition given. When the first value does not satisfy, it completes.</span>
 *
 * <img src="./img/takeWhile.png" width="100%">
 *
 * `takeWhile` subscribes and begins mirroring the source Observable. Each value
 * emitted on the source is given to the `predicate` function which returns a
 * boolean, representing a condition to be satisfied by the source values. The
 * output Observable emits the source values until such time as the `predicate`
 * returns false, at which point `takeWhile` stops mirroring the source
 * Observable and completes the output Observable.
 *
 * @example <caption>Emit click events only while the clientX property is greater than 200</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.takeWhile(ev => ev.clientX > 200);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates a value emitted by the source Observable and returns a boolean.
 * Also takes the (zero-based) index as the second argument.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable so long as each value satisfies the condition defined by the
 * `predicate`, then completes.
 * @method takeWhile
 * @owner Observable
 */
function takeWhile(predicate) {
    return takeWhile_1.takeWhile(predicate)(this);
}
exports.takeWhile = takeWhile;
//# sourceMappingURL=takeWhile.js.map

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var throttle_1 = __webpack_require__(449);
Observable_1.Observable.prototype.throttle = throttle_1.throttle;
//# sourceMappingURL=throttle.js.map

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var throttle_1 = __webpack_require__(40);
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for a duration determined by another Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link throttleTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/throttle.png" width="100%">
 *
 * `throttle` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled by calling the `durationSelector` function with the source value,
 * which returns the "duration" Observable. When the duration Observable emits a
 * value or completes, the timer is disabled, and this process repeats for the
 * next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttle(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration for each source value, returned as an Observable or a Promise.
 * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults
 * to `{ leading: true, trailing: false }`.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttle
 * @owner Observable
 */
function throttle(durationSelector, config) {
    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }
    return throttle_1.throttle(durationSelector, config)(this);
}
exports.throttle = throttle;
//# sourceMappingURL=throttle.js.map

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var throttleTime_1 = __webpack_require__(451);
Observable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;
//# sourceMappingURL=throttleTime.js.map

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var throttle_1 = __webpack_require__(40);
var throttleTime_1 = __webpack_require__(149);
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for `duration` milliseconds, then repeats this process.
 *
 * <span class="informal">Lets a value pass, then ignores source values for the
 * next `duration` milliseconds.</span>
 *
 * <img src="./img/throttleTime.png" width="100%">
 *
 * `throttleTime` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled. After `duration` milliseconds (or the time unit determined
 * internally by the optional `scheduler`) has passed, the timer is disabled,
 * and this process repeats for the next source value. Optionally takes a
 * {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {number} duration Time to wait before emitting another value after
 * emitting the last value, measured in milliseconds or the time unit determined
 * internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the throttling.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttleTime
 * @owner Observable
 */
function throttleTime(duration, scheduler, config) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }
    return throttleTime_1.throttleTime(duration, scheduler, config)(this);
}
exports.throttleTime = throttleTime;
//# sourceMappingURL=throttleTime.js.map

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timeInterval_1 = __webpack_require__(150);
Observable_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;
//# sourceMappingURL=timeInterval.js.map

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timeout_1 = __webpack_require__(454);
Observable_1.Observable.prototype.timeout = timeout_1.timeout;
//# sourceMappingURL=timeout.js.map

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var timeout_1 = __webpack_require__(152);
/**
 *
 * Errors if Observable does not emit a value in given time span.
 *
 * <span class="informal">Timeouts on Observable that doesn't emit values fast enough.</span>
 *
 * <img src="./img/timeout.png" width="100%">
 *
 * `timeout` operator accepts as an argument either a number or a Date.
 *
 * If number was provided, it returns an Observable that behaves like a source
 * Observable, unless there is a period of time where there is no value emitted.
 * So if you provide `100` as argument and first value comes after 50ms from
 * the moment of subscription, this value will be simply re-emitted by the resulting
 * Observable. If however after that 100ms passes without a second value being emitted,
 * stream will end with an error and source Observable will be unsubscribed.
 * These checks are performed throughout whole lifecycle of Observable - from the moment
 * it was subscribed to, until it completes or errors itself. Thus every value must be
 * emitted within specified period since previous value.
 *
 * If provided argument was Date, returned Observable behaves differently. It throws
 * if Observable did not complete before provided Date. This means that periods between
 * emission of particular values do not matter in this case. If Observable did not complete
 * before provided Date, source Observable will be unsubscribed. Other than that, resulting
 * stream behaves just as source Observable.
 *
 * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)
 * when returned Observable will check if source stream emitted value or completed.
 *
 * @example <caption>Check if ticks are emitted within certain timespan</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(1100) // Let's use bigger timespan to be safe,
 *                       // since `interval` might fire a bit later then scheduled.
 * .subscribe(
 *     value => console.log(value), // Will emit numbers just as regular `interval` would.
 *     err => console.log(err) // Will never be called.
 * );
 *
 * seconds.timeout(900).subscribe(
 *     value => console.log(value), // Will never be called.
 *     err => console.log(err) // Will emit error before even first value is emitted,
 *                             // since it did not arrive within 900ms period.
 * );
 *
 * @example <caption>Use Date to check if Observable completed</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(new Date("December 17, 2020 03:24:00"))
 * .subscribe(
 *     value => console.log(value), // Will emit values as regular `interval` would
 *                                  // until December 17, 2020 at 03:24:00.
 *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,
 *                             // since Observable did not complete by then.
 * );
 *
 * @see {@link timeoutWith}
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.
 * @method timeout
 * @owner Observable
 */
function timeout(due, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return timeout_1.timeout(due, scheduler)(this);
}
exports.timeout = timeout;
//# sourceMappingURL=timeout.js.map

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timeoutWith_1 = __webpack_require__(456);
Observable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;
//# sourceMappingURL=timeoutWith.js.map

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var timeoutWith_1 = __webpack_require__(154);
/* tslint:enable:max-line-length */
/**
 *
 * Errors if Observable does not emit a value in given time span, in case of which
 * subscribes to the second Observable.
 *
 * <span class="informal">It's a version of `timeout` operator that let's you specify fallback Observable.</span>
 *
 * <img src="./img/timeoutWith.png" width="100%">
 *
 * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,
 * still accepting as a first argument either a number or a Date, which control - respectively -
 * when values of source Observable should be emitted or when it should complete.
 *
 * The only difference is that it accepts a second, required parameter. This parameter
 * should be an Observable which will be subscribed when source Observable fails any timeout check.
 * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting
 * values from second Observable. Note that this fallback Observable is not checked for timeouts
 * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second
 * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that
 * stream completes, it completes as well.
 *
 * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided
 * here - as a third, optional parameter. It still is used to schedule timeout checks and -
 * as a consequence - when second Observable will be subscribed, since subscription happens
 * immediately after failing check.
 *
 * @example <caption>Add fallback observable</caption>
 * const seconds = Rx.Observable.interval(1000);
 * const minutes = Rx.Observable.interval(60 * 1000);
 *
 * seconds.timeoutWith(900, minutes)
 *     .subscribe(
 *         value => console.log(value), // After 900ms, will start emitting `minutes`,
 *                                      // since first value of `seconds` will not arrive fast enough.
 *         err => console.log(err) // Would be called after 900ms in case of `timeout`,
 *                                 // but here will never be called.
 *     );
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable
 *                          passed as a second parameter.
 * @method timeoutWith
 * @owner Observable
 */
function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return timeoutWith_1.timeoutWith(due, withObservable, scheduler)(this);
}
exports.timeoutWith = timeoutWith;
//# sourceMappingURL=timeoutWith.js.map

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var timestamp_1 = __webpack_require__(458);
Observable_1.Observable.prototype.timestamp = timestamp_1.timestamp;
//# sourceMappingURL=timestamp.js.map

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var timestamp_1 = __webpack_require__(59);
/**
 * @param scheduler
 * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timestamp
 * @owner Observable
 */
function timestamp(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return timestamp_1.timestamp(scheduler)(this);
}
exports.timestamp = timestamp;
//# sourceMappingURL=timestamp.js.map

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var toArray_1 = __webpack_require__(460);
Observable_1.Observable.prototype.toArray = toArray_1.toArray;
//# sourceMappingURL=toArray.js.map

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toArray_1 = __webpack_require__(155);
/**
 * Collects all source emissions and emits them as an array when the source completes.
 *
 * <span class="informal">Get all values inside an array when the source completes</span>
 *
 * <img src="./img/toArray.png" width="100%">
 *
 * `toArray` will wait until the source Observable completes
 * before emitting the array containing all emissions.
 * When the source Observable errors no array will be emitted.
 *
 * @example <caption>Create array from input</caption>
 * const input = Rx.Observable.interval(100).take(4);
 *
 * input.toArray()
 *   .subscribe(arr => console.log(arr)); // [0,1,2,3]
 *
 * @see {@link buffer}
 *
 * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}
 * @method toArray
 * @owner Observable
 */
function toArray() {
    return toArray_1.toArray()(this);
}
exports.toArray = toArray;
//# sourceMappingURL=toArray.js.map

/***/ }),
/* 461 */
/***/ (function(module, exports) {

// HACK: does nothing, because `toPromise` now lives on the `Observable` itself.
// leaving this module here to prevent breakage.
//# sourceMappingURL=toPromise.js.map

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var window_1 = __webpack_require__(463);
Observable_1.Observable.prototype.window = window_1.window;
//# sourceMappingURL=window.js.map

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var window_1 = __webpack_require__(156);
/**
 * Branch out the source Observable values as a nested Observable whenever
 * `windowBoundaries` emits.
 *
 * <span class="informal">It's like {@link buffer}, but emits a nested Observable
 * instead of an array.</span>
 *
 * <img src="./img/window.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping
 * windows. It emits the current window and opens a new one whenever the
 * Observable `windowBoundaries` emits an item. Because each window is an
 * Observable, the output is a higher-order Observable.
 *
 * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var result = clicks.window(interval)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link buffer}
 *
 * @param {Observable<any>} windowBoundaries An Observable that completes the
 * previous window and starts a new window.
 * @return {Observable<Observable<T>>} An Observable of windows, which are
 * Observables emitting values of the source Observable.
 * @method window
 * @owner Observable
 */
function window(windowBoundaries) {
    return window_1.window(windowBoundaries)(this);
}
exports.window = window;
//# sourceMappingURL=window.js.map

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowCount_1 = __webpack_require__(465);
Observable_1.Observable.prototype.windowCount = windowCount_1.windowCount;
//# sourceMappingURL=windowCount.js.map

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var windowCount_1 = __webpack_require__(157);
/**
 * Branch out the source Observable values as a nested Observable with each
 * nested Observable emitting at most `windowSize` values.
 *
 * <span class="informal">It's like {@link bufferCount}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowCount.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows every `startWindowEvery`
 * items, each containing no more than `windowSize` items. When the source
 * Observable completes or encounters an error, the output Observable emits
 * the current window and propagates the notification from the source
 * Observable. If `startWindowEvery` is not provided, then new windows are
 * started immediately at the start of the source and when each window completes
 * with size `windowSize`.
 *
 * @example <caption>Ignore every 3rd click event, starting from the first one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(3)
 *   .map(win => win.skip(1)) // skip first of every 3 clicks
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Ignore every 3rd click event, starting from the third one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(2, 3)
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link bufferCount}
 *
 * @param {number} windowSize The maximum number of values emitted by each
 * window.
 * @param {number} [startWindowEvery] Interval at which to start a new window.
 * For example if `startWindowEvery` is `2`, then a new window will be started
 * on every other value from the source. A new window is started at the
 * beginning of the source by default.
 * @return {Observable<Observable<T>>} An Observable of windows, which in turn
 * are Observable of values.
 * @method windowCount
 * @owner Observable
 */
function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) { startWindowEvery = 0; }
    return windowCount_1.windowCount(windowSize, startWindowEvery)(this);
}
exports.windowCount = windowCount;
//# sourceMappingURL=windowCount.js.map

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowTime_1 = __webpack_require__(467);
Observable_1.Observable.prototype.windowTime = windowTime_1.windowTime;
//# sourceMappingURL=windowTime.js.map

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var async_1 = __webpack_require__(6);
var isNumeric_1 = __webpack_require__(21);
var isScheduler_1 = __webpack_require__(12);
var windowTime_1 = __webpack_require__(158);
function windowTime(windowTimeSpan) {
    var scheduler = async_1.async;
    var windowCreationInterval = null;
    var maxWindowSize = Number.POSITIVE_INFINITY;
    if (isScheduler_1.isScheduler(arguments[3])) {
        scheduler = arguments[3];
    }
    if (isScheduler_1.isScheduler(arguments[2])) {
        scheduler = arguments[2];
    }
    else if (isNumeric_1.isNumeric(arguments[2])) {
        maxWindowSize = arguments[2];
    }
    if (isScheduler_1.isScheduler(arguments[1])) {
        scheduler = arguments[1];
    }
    else if (isNumeric_1.isNumeric(arguments[1])) {
        windowCreationInterval = arguments[1];
    }
    return windowTime_1.windowTime(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this);
}
exports.windowTime = windowTime;
//# sourceMappingURL=windowTime.js.map

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowToggle_1 = __webpack_require__(469);
Observable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;
//# sourceMappingURL=windowToggle.js.map

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var windowToggle_1 = __webpack_require__(159);
/**
 * Branch out the source Observable values as a nested Observable starting from
 * an emission from `openings` and ending when the output of `closingSelector`
 * emits.
 *
 * <span class="informal">It's like {@link bufferToggle}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowToggle.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows that contain those items
 * emitted by the source Observable between the time when the `openings`
 * Observable emits an item and when the Observable returned by
 * `closingSelector` emits an item.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var result = clicks.windowToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * ).mergeAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowWhen}
 * @see {@link bufferToggle}
 *
 * @param {Observable<O>} openings An observable of notifications to start new
 * windows.
 * @param {function(value: O): Observable} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns an Observable,
 * which, when it emits (either `next` or `complete`), signals that the
 * associated window should complete.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowToggle
 * @owner Observable
 */
function windowToggle(openings, closingSelector) {
    return windowToggle_1.windowToggle(openings, closingSelector)(this);
}
exports.windowToggle = windowToggle;
//# sourceMappingURL=windowToggle.js.map

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var windowWhen_1 = __webpack_require__(471);
Observable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;
//# sourceMappingURL=windowWhen.js.map

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var windowWhen_1 = __webpack_require__(160);
/**
 * Branch out the source Observable values as a nested Observable using a
 * factory function of closing Observables to determine when to start a new
 * window.
 *
 * <span class="informal">It's like {@link bufferWhen}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowWhen.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping windows.
 * It emits the current window and opens a new one whenever the Observable
 * produced by the specified `closingSelector` function emits an item. The first
 * window is opened immediately when subscribing to the output Observable.
 *
 * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks
 *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link bufferWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals (on either `next` or
 * `complete`) when to close the previous window and start a new one.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowWhen
 * @owner Observable
 */
function windowWhen(closingSelector) {
    return windowWhen_1.windowWhen(closingSelector)(this);
}
exports.windowWhen = windowWhen;
//# sourceMappingURL=windowWhen.js.map

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var withLatestFrom_1 = __webpack_require__(473);
Observable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;
//# sourceMappingURL=withLatestFrom.js.map

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var withLatestFrom_1 = __webpack_require__(161);
/* tslint:enable:max-line-length */
/**
 * Combines the source Observable with other Observables to create an Observable
 * whose values are calculated from the latest values of each, only when the
 * source emits.
 *
 * <span class="informal">Whenever the source Observable emits a value, it
 * computes a formula using that value plus the latest values from other input
 * Observables, then emits the output of that formula.</span>
 *
 * <img src="./img/withLatestFrom.png" width="100%">
 *
 * `withLatestFrom` combines each value from the source Observable (the
 * instance) with the latest values from the other input Observables only when
 * the source emits a value, optionally using a `project` function to determine
 * the value to be emitted on the output Observable. All input Observables must
 * emit at least one value before the output Observable will emit a value.
 *
 * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var result = clicks.withLatestFrom(timer);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Function} [project] Projection function for combining values
 * together. Receives all values in order of the Observables passed, where the
 * first parameter is a value from the source Observable. (e.g.
 * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not
 * passed, arrays will be emitted on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method withLatestFrom
 * @owner Observable
 */
function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i - 0] = arguments[_i];
    }
    return withLatestFrom_1.withLatestFrom.apply(void 0, args)(this);
}
exports.withLatestFrom = withLatestFrom;
//# sourceMappingURL=withLatestFrom.js.map

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var zip_1 = __webpack_require__(475);
Observable_1.Observable.prototype.zip = zip_1.zipProto;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var zip_1 = __webpack_require__(37);
/* tslint:enable:max-line-length */
/**
 * @param observables
 * @return {Observable<R>}
 * @method zip
 * @owner Observable
 */
function zipProto() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return zip_1.zip.apply(void 0, observables)(this);
}
exports.zipProto = zipProto;
//# sourceMappingURL=zip.js.map

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Observable_1 = __webpack_require__(0);
var zipAll_1 = __webpack_require__(477);
Observable_1.Observable.prototype.zipAll = zipAll_1.zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var zipAll_1 = __webpack_require__(162);
/**
 * @param project
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method zipAll
 * @owner Observable
 */
function zipAll(project) {
    return zipAll_1.zipAll(project)(this);
}
exports.zipAll = zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var Notification_1 = __webpack_require__(19);
var ColdObservable_1 = __webpack_require__(479);
var HotObservable_1 = __webpack_require__(480);
var SubscriptionLog_1 = __webpack_require__(164);
var VirtualTimeScheduler_1 = __webpack_require__(166);
var defaultMaxFrame = 750;
var TestScheduler = (function (_super) {
    __extends(TestScheduler, _super);
    function TestScheduler(assertDeepEqual) {
        _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);
        this.assertDeepEqual = assertDeepEqual;
        this.hotObservables = [];
        this.coldObservables = [];
        this.flushTests = [];
    }
    TestScheduler.prototype.createTime = function (marbles) {
        var indexOf = marbles.indexOf('|');
        if (indexOf === -1) {
            throw new Error('marble diagram for time should have a completion marker "|"');
        }
        return indexOf * TestScheduler.frameTimeFactor;
    };
    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {
        if (marbles.indexOf('^') !== -1) {
            throw new Error('cold observable cannot have subscription offset "^"');
        }
        if (marbles.indexOf('!') !== -1) {
            throw new Error('cold observable cannot have unsubscription marker "!"');
        }
        var messages = TestScheduler.parseMarbles(marbles, values, error);
        var cold = new ColdObservable_1.ColdObservable(messages, this);
        this.coldObservables.push(cold);
        return cold;
    };
    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {
        if (marbles.indexOf('!') !== -1) {
            throw new Error('hot observable cannot have unsubscription marker "!"');
        }
        var messages = TestScheduler.parseMarbles(marbles, values, error);
        var subject = new HotObservable_1.HotObservable(messages, this);
        this.hotObservables.push(subject);
        return subject;
    };
    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {
        var _this = this;
        var messages = [];
        observable.subscribe(function (value) {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });
        }, function (err) {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });
        }, function () {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });
        });
        return messages;
    };
    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {
        var _this = this;
        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }
        var actual = [];
        var flushTest = { actual: actual, ready: false };
        var unsubscriptionFrame = TestScheduler
            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;
        var subscription;
        this.schedule(function () {
            subscription = observable.subscribe(function (x) {
                var value = x;
                // Support Observable-of-Observables
                if (x instanceof Observable_1.Observable) {
                    value = _this.materializeInnerObservable(value, _this.frame);
                }
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });
            }, function (err) {
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });
            }, function () {
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });
            });
        }, 0);
        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {
            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);
        }
        this.flushTests.push(flushTest);
        return {
            toBe: function (marbles, values, errorValue) {
                flushTest.ready = true;
                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);
            }
        };
    };
    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {
        var flushTest = { actual: actualSubscriptionLogs, ready: false };
        this.flushTests.push(flushTest);
        return {
            toBe: function (marbles) {
                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;
                flushTest.ready = true;
                flushTest.expected = marblesArray.map(function (marbles) {
                    return TestScheduler.parseMarblesAsSubscriptions(marbles);
                });
            }
        };
    };
    TestScheduler.prototype.flush = function () {
        var hotObservables = this.hotObservables;
        while (hotObservables.length > 0) {
            hotObservables.shift().setup();
        }
        _super.prototype.flush.call(this);
        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });
        while (readyFlushTests.length > 0) {
            var test = readyFlushTests.shift();
            this.assertDeepEqual(test.actual, test.expected);
        }
    };
    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {
        if (typeof marbles !== 'string') {
            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);
        }
        var len = marbles.length;
        var groupStart = -1;
        var subscriptionFrame = Number.POSITIVE_INFINITY;
        var unsubscriptionFrame = Number.POSITIVE_INFINITY;
        for (var i = 0; i < len; i++) {
            var frame = i * this.frameTimeFactor;
            var c = marbles[i];
            switch (c) {
                case '-':
                case ' ':
                    break;
                case '(':
                    groupStart = frame;
                    break;
                case ')':
                    groupStart = -1;
                    break;
                case '^':
                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {
                        throw new Error('found a second subscription point \'^\' in a ' +
                            'subscription marble diagram. There can only be one.');
                    }
                    subscriptionFrame = groupStart > -1 ? groupStart : frame;
                    break;
                case '!':
                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {
                        throw new Error('found a second subscription point \'^\' in a ' +
                            'subscription marble diagram. There can only be one.');
                    }
                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;
                    break;
                default:
                    throw new Error('there can only be \'^\' and \'!\' markers in a ' +
                        'subscription marble diagram. Found instead \'' + c + '\'.');
            }
        }
        if (unsubscriptionFrame < 0) {
            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);
        }
        else {
            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);
        }
    };
    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {
        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }
        if (marbles.indexOf('!') !== -1) {
            throw new Error('conventional marble diagrams cannot have the ' +
                'unsubscription marker "!"');
        }
        var len = marbles.length;
        var testMessages = [];
        var subIndex = marbles.indexOf('^');
        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);
        var getValue = typeof values !== 'object' ?
            function (x) { return x; } :
            function (x) {
                // Support Observable-of-Observables
                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {
                    return values[x].messages;
                }
                return values[x];
            };
        var groupStart = -1;
        for (var i = 0; i < len; i++) {
            var frame = i * this.frameTimeFactor + frameOffset;
            var notification = void 0;
            var c = marbles[i];
            switch (c) {
                case '-':
                case ' ':
                    break;
                case '(':
                    groupStart = frame;
                    break;
                case ')':
                    groupStart = -1;
                    break;
                case '|':
                    notification = Notification_1.Notification.createComplete();
                    break;
                case '^':
                    break;
                case '#':
                    notification = Notification_1.Notification.createError(errorValue || 'error');
                    break;
                default:
                    notification = Notification_1.Notification.createNext(getValue(c));
                    break;
            }
            if (notification) {
                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });
            }
        }
        return testMessages;
    };
    return TestScheduler;
}(VirtualTimeScheduler_1.VirtualTimeScheduler));
exports.TestScheduler = TestScheduler;
//# sourceMappingURL=TestScheduler.js.map

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(0);
var Subscription_1 = __webpack_require__(7);
var SubscriptionLoggable_1 = __webpack_require__(163);
var applyMixins_1 = __webpack_require__(165);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ColdObservable = (function (_super) {
    __extends(ColdObservable, _super);
    function ColdObservable(messages, scheduler) {
        _super.call(this, function (subscriber) {
            var observable = this;
            var index = observable.logSubscribedFrame();
            subscriber.add(new Subscription_1.Subscription(function () {
                observable.logUnsubscribedFrame(index);
            }));
            observable.scheduleMessages(subscriber);
            return subscriber;
        });
        this.messages = messages;
        this.subscriptions = [];
        this.scheduler = scheduler;
    }
    ColdObservable.prototype.scheduleMessages = function (subscriber) {
        var messagesLength = this.messages.length;
        for (var i = 0; i < messagesLength; i++) {
            var message = this.messages[i];
            subscriber.add(this.scheduler.schedule(function (_a) {
                var message = _a.message, subscriber = _a.subscriber;
                message.notification.observe(subscriber);
            }, message.frame, { message: message, subscriber: subscriber }));
        }
    };
    return ColdObservable;
}(Observable_1.Observable));
exports.ColdObservable = ColdObservable;
applyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);
//# sourceMappingURL=ColdObservable.js.map

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(9);
var Subscription_1 = __webpack_require__(7);
var SubscriptionLoggable_1 = __webpack_require__(163);
var applyMixins_1 = __webpack_require__(165);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var HotObservable = (function (_super) {
    __extends(HotObservable, _super);
    function HotObservable(messages, scheduler) {
        _super.call(this);
        this.messages = messages;
        this.subscriptions = [];
        this.scheduler = scheduler;
    }
    HotObservable.prototype._subscribe = function (subscriber) {
        var subject = this;
        var index = subject.logSubscribedFrame();
        subscriber.add(new Subscription_1.Subscription(function () {
            subject.logUnsubscribedFrame(index);
        }));
        return _super.prototype._subscribe.call(this, subscriber);
    };
    HotObservable.prototype.setup = function () {
        var subject = this;
        var messagesLength = subject.messages.length;
        /* tslint:disable:no-var-keyword */
        for (var i = 0; i < messagesLength; i++) {
            (function () {
                var message = subject.messages[i];
                /* tslint:enable */
                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);
            })();
        }
    };
    return HotObservable;
}(Subject_1.Subject));
exports.HotObservable = HotObservable;
applyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);
//# sourceMappingURL=HotObservable.js.map

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var AnimationFrameAction_1 = __webpack_require__(482);
var AnimationFrameScheduler_1 = __webpack_require__(484);
/**
 *
 * Animation Frame Scheduler
 *
 * <span class="informal">Perform task when `window.requestAnimationFrame` would fire</span>
 *
 * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler
 * behaviour.
 *
 * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.
 * It makes sure scheduled task will happen just before next browser content repaint,
 * thus performing animations as efficiently as possible.
 *
 * @example <caption>Schedule div height animation</caption>
 * const div = document.querySelector('.some-div');
 *
 * Rx.Scheduler.schedule(function(height) {
 *   div.style.height = height + "px";
 *
 *   this.schedule(height + 1);  // `this` references currently executing Action,
 *                               // which we reschedule with new state
 * }, 0, 0);
 *
 * // You will see .some-div element growing in height
 *
 *
 * @static true
 * @name animationFrame
 * @owner Scheduler
 */
exports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);
//# sourceMappingURL=animationFrame.js.map

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(22);
var AnimationFrame_1 = __webpack_require__(483);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AnimationFrameAction = (function (_super) {
    __extends(AnimationFrameAction, _super);
    function AnimationFrameAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay is greater than 0, request as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Push the action to the end of the scheduler queue.
        scheduler.actions.push(this);
        // If an animation frame has already been requested, don't request another
        // one. If an animation frame hasn't been requested yet, request one. Return
        // the current animation frame request id.
        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));
    };
    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, or if the delay is null (the
        // action wasn't rescheduled) but was originally scheduled as an async
        // action, then recycle as an async action.
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        // If the scheduler queue is empty, cancel the requested animation frame and
        // set the scheduled flag to undefined so the next AnimationFrameAction will
        // request its own.
        if (scheduler.actions.length === 0) {
            AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);
            scheduler.scheduled = undefined;
        }
        // Return undefined so the action knows to request a new async id if it's rescheduled.
        return undefined;
    };
    return AnimationFrameAction;
}(AsyncAction_1.AsyncAction));
exports.AnimationFrameAction = AnimationFrameAction;
//# sourceMappingURL=AnimationFrameAction.js.map

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var root_1 = __webpack_require__(11);
var RequestAnimationFrameDefinition = (function () {
    function RequestAnimationFrameDefinition(root) {
        if (root.requestAnimationFrame) {
            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);
        }
        else if (root.mozRequestAnimationFrame) {
            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);
        }
        else if (root.webkitRequestAnimationFrame) {
            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);
        }
        else if (root.msRequestAnimationFrame) {
            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);
        }
        else if (root.oRequestAnimationFrame) {
            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);
        }
        else {
            this.cancelAnimationFrame = root.clearTimeout.bind(root);
            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };
        }
    }
    return RequestAnimationFrameDefinition;
}());
exports.RequestAnimationFrameDefinition = RequestAnimationFrameDefinition;
exports.AnimationFrame = new RequestAnimationFrameDefinition(root_1.root);
//# sourceMappingURL=AnimationFrame.js.map

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(23);
var AnimationFrameScheduler = (function (_super) {
    __extends(AnimationFrameScheduler, _super);
    function AnimationFrameScheduler() {
        _super.apply(this, arguments);
    }
    AnimationFrameScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AnimationFrameScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.AnimationFrameScheduler = AnimationFrameScheduler;
//# sourceMappingURL=AnimationFrameScheduler.js.map

/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var audit_1 = __webpack_require__(54);
exports.audit = audit_1.audit;
var auditTime_1 = __webpack_require__(108);
exports.auditTime = auditTime_1.auditTime;
var buffer_1 = __webpack_require__(80);
exports.buffer = buffer_1.buffer;
var bufferCount_1 = __webpack_require__(81);
exports.bufferCount = bufferCount_1.bufferCount;
var bufferTime_1 = __webpack_require__(82);
exports.bufferTime = bufferTime_1.bufferTime;
var bufferToggle_1 = __webpack_require__(83);
exports.bufferToggle = bufferToggle_1.bufferToggle;
var bufferWhen_1 = __webpack_require__(84);
exports.bufferWhen = bufferWhen_1.bufferWhen;
var catchError_1 = __webpack_require__(85);
exports.catchError = catchError_1.catchError;
var combineAll_1 = __webpack_require__(86);
exports.combineAll = combineAll_1.combineAll;
var combineLatest_1 = __webpack_require__(33);
exports.combineLatest = combineLatest_1.combineLatest;
var concat_1 = __webpack_require__(87);
exports.concat = concat_1.concat;
var concatAll_1 = __webpack_require__(45);
exports.concatAll = concatAll_1.concatAll;
var concatMap_1 = __webpack_require__(49);
exports.concatMap = concatMap_1.concatMap;
var concatMapTo_1 = __webpack_require__(88);
exports.concatMapTo = concatMapTo_1.concatMapTo;
var count_1 = __webpack_require__(89);
exports.count = count_1.count;
var debounce_1 = __webpack_require__(91);
exports.debounce = debounce_1.debounce;
var debounceTime_1 = __webpack_require__(92);
exports.debounceTime = debounceTime_1.debounceTime;
var defaultIfEmpty_1 = __webpack_require__(50);
exports.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;
var delay_1 = __webpack_require__(93);
exports.delay = delay_1.delay;
var delayWhen_1 = __webpack_require__(94);
exports.delayWhen = delayWhen_1.delayWhen;
var dematerialize_1 = __webpack_require__(90);
exports.dematerialize = dematerialize_1.dematerialize;
var distinct_1 = __webpack_require__(95);
exports.distinct = distinct_1.distinct;
var distinctUntilChanged_1 = __webpack_require__(51);
exports.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;
var distinctUntilKeyChanged_1 = __webpack_require__(96);
exports.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;
var elementAt_1 = __webpack_require__(101);
exports.elementAt = elementAt_1.elementAt;
var every_1 = __webpack_require__(110);
exports.every = every_1.every;
var exhaust_1 = __webpack_require__(98);
exports.exhaust = exhaust_1.exhaust;
var exhaustMap_1 = __webpack_require__(99);
exports.exhaustMap = exhaustMap_1.exhaustMap;
var expand_1 = __webpack_require__(100);
exports.expand = expand_1.expand;
var filter_1 = __webpack_require__(52);
exports.filter = filter_1.filter;
var finalize_1 = __webpack_require__(102);
exports.finalize = finalize_1.finalize;
var find_1 = __webpack_require__(53);
exports.find = find_1.find;
var findIndex_1 = __webpack_require__(103);
exports.findIndex = findIndex_1.findIndex;
var first_1 = __webpack_require__(104);
exports.first = first_1.first;
var groupBy_1 = __webpack_require__(105);
exports.groupBy = groupBy_1.groupBy;
var ignoreElements_1 = __webpack_require__(106);
exports.ignoreElements = ignoreElements_1.ignoreElements;
var isEmpty_1 = __webpack_require__(107);
exports.isEmpty = isEmpty_1.isEmpty;
var last_1 = __webpack_require__(109);
exports.last = last_1.last;
var map_1 = __webpack_require__(24);
exports.map = map_1.map;
var mapTo_1 = __webpack_require__(111);
exports.mapTo = mapTo_1.mapTo;
var materialize_1 = __webpack_require__(112);
exports.materialize = materialize_1.materialize;
var max_1 = __webpack_require__(113);
exports.max = max_1.max;
var merge_1 = __webpack_require__(46);
exports.merge = merge_1.merge;
var mergeAll_1 = __webpack_require__(35);
exports.mergeAll = mergeAll_1.mergeAll;
var mergeMap_1 = __webpack_require__(20);
exports.mergeMap = mergeMap_1.mergeMap;
var mergeMap_2 = __webpack_require__(20);
exports.flatMap = mergeMap_2.mergeMap;
var mergeMapTo_1 = __webpack_require__(114);
exports.mergeMapTo = mergeMapTo_1.mergeMapTo;
var mergeScan_1 = __webpack_require__(115);
exports.mergeScan = mergeScan_1.mergeScan;
var min_1 = __webpack_require__(116);
exports.min = min_1.min;
var multicast_1 = __webpack_require__(16);
exports.multicast = multicast_1.multicast;
var observeOn_1 = __webpack_require__(34);
exports.observeOn = observeOn_1.observeOn;
var onErrorResumeNext_1 = __webpack_require__(48);
exports.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;
var pairwise_1 = __webpack_require__(118);
exports.pairwise = pairwise_1.pairwise;
var partition_1 = __webpack_require__(119);
exports.partition = partition_1.partition;
var pluck_1 = __webpack_require__(120);
exports.pluck = pluck_1.pluck;
var publish_1 = __webpack_require__(121);
exports.publish = publish_1.publish;
var publishBehavior_1 = __webpack_require__(122);
exports.publishBehavior = publishBehavior_1.publishBehavior;
var publishLast_1 = __webpack_require__(125);
exports.publishLast = publishLast_1.publishLast;
var publishReplay_1 = __webpack_require__(124);
exports.publishReplay = publishReplay_1.publishReplay;
var race_1 = __webpack_require__(126);
exports.race = race_1.race;
var reduce_1 = __webpack_require__(26);
exports.reduce = reduce_1.reduce;
var repeat_1 = __webpack_require__(127);
exports.repeat = repeat_1.repeat;
var repeatWhen_1 = __webpack_require__(128);
exports.repeatWhen = repeatWhen_1.repeatWhen;
var retry_1 = __webpack_require__(129);
exports.retry = retry_1.retry;
var retryWhen_1 = __webpack_require__(130);
exports.retryWhen = retryWhen_1.retryWhen;
var refCount_1 = __webpack_require__(57);
exports.refCount = refCount_1.refCount;
var sample_1 = __webpack_require__(131);
exports.sample = sample_1.sample;
var sampleTime_1 = __webpack_require__(132);
exports.sampleTime = sampleTime_1.sampleTime;
var scan_1 = __webpack_require__(55);
exports.scan = scan_1.scan;
var sequenceEqual_1 = __webpack_require__(133);
exports.sequenceEqual = sequenceEqual_1.sequenceEqual;
var share_1 = __webpack_require__(134);
exports.share = share_1.share;
var shareReplay_1 = __webpack_require__(135);
exports.shareReplay = shareReplay_1.shareReplay;
var single_1 = __webpack_require__(136);
exports.single = single_1.single;
var skip_1 = __webpack_require__(137);
exports.skip = skip_1.skip;
var skipLast_1 = __webpack_require__(138);
exports.skipLast = skipLast_1.skipLast;
var skipUntil_1 = __webpack_require__(139);
exports.skipUntil = skipUntil_1.skipUntil;
var skipWhile_1 = __webpack_require__(140);
exports.skipWhile = skipWhile_1.skipWhile;
var startWith_1 = __webpack_require__(141);
exports.startWith = startWith_1.startWith;
/**
 * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be
 * treeshaken. Currently if this export is added back, it
 * forces apps to bring in asap scheduler along with
 * Immediate, root, and other supporting code.
 */
// export { subscribeOn } from './subscribeOn';
var switchAll_1 = __webpack_require__(144);
exports.switchAll = switchAll_1.switchAll;
var switchMap_1 = __webpack_require__(58);
exports.switchMap = switchMap_1.switchMap;
var switchMapTo_1 = __webpack_require__(145);
exports.switchMapTo = switchMapTo_1.switchMapTo;
var take_1 = __webpack_require__(146);
exports.take = take_1.take;
var takeLast_1 = __webpack_require__(56);
exports.takeLast = takeLast_1.takeLast;
var takeUntil_1 = __webpack_require__(147);
exports.takeUntil = takeUntil_1.takeUntil;
var takeWhile_1 = __webpack_require__(148);
exports.takeWhile = takeWhile_1.takeWhile;
var tap_1 = __webpack_require__(97);
exports.tap = tap_1.tap;
var throttle_1 = __webpack_require__(40);
exports.throttle = throttle_1.throttle;
var throttleTime_1 = __webpack_require__(149);
exports.throttleTime = throttleTime_1.throttleTime;
var timeInterval_1 = __webpack_require__(151);
exports.timeInterval = timeInterval_1.timeInterval;
var timeout_1 = __webpack_require__(152);
exports.timeout = timeout_1.timeout;
var timeoutWith_1 = __webpack_require__(154);
exports.timeoutWith = timeoutWith_1.timeoutWith;
var timestamp_1 = __webpack_require__(59);
exports.timestamp = timestamp_1.timestamp;
var toArray_1 = __webpack_require__(155);
exports.toArray = toArray_1.toArray;
var window_1 = __webpack_require__(156);
exports.window = window_1.window;
var windowCount_1 = __webpack_require__(157);
exports.windowCount = windowCount_1.windowCount;
var windowTime_1 = __webpack_require__(158);
exports.windowTime = windowTime_1.windowTime;
var windowToggle_1 = __webpack_require__(159);
exports.windowToggle = windowToggle_1.windowToggle;
var windowWhen_1 = __webpack_require__(160);
exports.windowWhen = windowWhen_1.windowWhen;
var withLatestFrom_1 = __webpack_require__(161);
exports.withLatestFrom = withLatestFrom_1.withLatestFrom;
var zip_1 = __webpack_require__(37);
exports.zip = zip_1.zip;
var zipAll_1 = __webpack_require__(162);
exports.zipAll = zipAll_1.zipAll;
//# sourceMappingURL=index.js.map

/***/ }),
/* 486 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Autostart; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var AutostartOriginal = /** @class */ (function (_super) {
    __extends(AutostartOriginal, _super);
    function AutostartOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AutostartOriginal.prototype.enable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enable", { "sync": true }, arguments); };
    AutostartOriginal.prototype.disable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disable", { "sync": true }, arguments); };
    AutostartOriginal.pluginName = "Autostart";
    AutostartOriginal.plugin = "cordova-plugin-autostart";
    AutostartOriginal.pluginRef = "cordova.plugins.autoStart";
    AutostartOriginal.repo = "https://github.com/ToniKorin/cordova-plugin-autostart";
    AutostartOriginal.platforms = ["Android"];
    return AutostartOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Autostart = new AutostartOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9hdXRvc3RhcnQvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBZ0N6Qyw2QkFBaUI7Ozs7SUFNOUMsMEJBQU07SUFPTiwyQkFBTzs7Ozs7O29CQTdDVDtFQWdDK0IsaUJBQWlCO1NBQW5DLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBBdXRvc3RhcnRcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gd2lsbCBzdGFydCBhdXRvbWF0aWNhbGx5IHlvdXIgQW5kcm9pZCBhcHAgYWZ0ZXIgdGhlIGV2ZXJ5IGJvb3Qgb3IgdGhlIGF1dG8tdXBkYXRlIG9mIHlvdXIgYXBwbGljYXRpb24uXG4gKiBZb3UgY2FuIGVuYWJsZSBvciBkaXNhYmxlIHRoZSBhdXRvc3RhcnQgZnVuY3Rpb24gaW4geW91ciBhcHAuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBBdXRvc3RhcnQgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2F1dG9zdGFydCc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgYXV0b3N0YXJ0OiBBdXRvc3RhcnQpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuYXV0b3N0YXJ0LmVuYWJsZSgpO1xuICpcbiAqIHRoaXMuYXV0b3N0YXJ0LmRpc2FibGUoKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdBdXRvc3RhcnQnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1hdXRvc3RhcnQnLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuYXV0b1N0YXJ0JyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9Ub25pS29yaW4vY29yZG92YS1wbHVnaW4tYXV0b3N0YXJ0JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBdXRvc3RhcnQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIEVuYWJsZSB0aGUgYXV0b21hdGljIHN0YXJ0dXAgYWZ0ZXIgdGhlIGJvb3RcbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBlbmFibGUoKTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogRGlzYWJsZSB0aGUgYXV0b21hdGljIHN0YXJ0dXAgYWZ0ZXIgdGhlIGJvb3RcbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBkaXNhYmxlKCk6IHZvaWQge1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 487 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BackgroundFetch; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var BackgroundFetchOriginal = /** @class */ (function (_super) {
    __extends(BackgroundFetchOriginal, _super);
    function BackgroundFetchOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BackgroundFetchOriginal.prototype.configure = function (config) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "configure", { "callbackOrder": "reverse" }, arguments); };
    BackgroundFetchOriginal.prototype.start = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "start", {}, arguments); };
    BackgroundFetchOriginal.prototype.stop = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stop", {}, arguments); };
    BackgroundFetchOriginal.prototype.finish = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "finish", { "sync": true }, arguments); };
    BackgroundFetchOriginal.prototype.status = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "status", {}, arguments); };
    BackgroundFetchOriginal.pluginName = "BackgroundFetch";
    BackgroundFetchOriginal.plugin = "cordova-plugin-background-fetch";
    BackgroundFetchOriginal.pluginRef = "BackgroundFetch";
    BackgroundFetchOriginal.repo = "https://github.com/transistorsoft/cordova-plugin-background-fetch";
    BackgroundFetchOriginal.platforms = ["iOS"];
    return BackgroundFetchOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var BackgroundFetch = new BackgroundFetchOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9iYWNrZ3JvdW5kLWZldGNoL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQThEbkMsbUNBQWlCOzs7O0lBWXBELG1DQUFTLGFBQUMsTUFBNkI7SUFVdkMsK0JBQUs7SUFTTCw4QkFBSTtJQVVKLGdDQUFNO0lBUU4sZ0NBQU07Ozs7OzswQkEvR1I7RUE4RHFDLGlCQUFpQjtTQUF6QyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmFja2dyb3VuZEZldGNoQ29uZmlnIHtcblxuICAvKipcbiAgICogU2V0IHRydWUgdG8gY2Vhc2UgYmFja2dyb3VuZC1mZXRjaCBmcm9tIG9wZXJhdGluZyBhZnRlciB1c2VyIFwiY2xvc2VzXCIgdGhlIGFwcC4gRGVmYXVsdHMgdG8gdHJ1ZS5cbiAgICovXG4gIHN0b3BPblRlcm1pbmF0ZT86IGJvb2xlYW47XG59XG5cblxuLyoqXG4gKiBAbmFtZSBCYWNrZ3JvdW5kIEZldGNoXG4gKiBAZGVzY3JpcHRpb25cbiAqIGlPUyBCYWNrZ3JvdW5kIEZldGNoIEltcGxlbWVudGF0aW9uLiBTZWU6IGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9yZWZlcmVuY2UvdWlraXQvdWlhcHBsaWNhdGlvbiMxNjU3Mzk5XG4gKiBpT1MgQmFja2dyb3VuZCBGZXRjaCBpcyBiYXNpY2FsbHkgYW4gQVBJIHdoaWNoIHdha2VzIHVwIHlvdXIgYXBwIGFib3V0IGV2ZXJ5IDE1IG1pbnV0ZXMgKGR1cmluZyB0aGUgdXNlcidzIHByaW1lLXRpbWUgaG91cnMpIGFuZCBwcm92aWRlcyB5b3VyIGFwcCBleGFjdGx5IDMwcyBvZiBiYWNrZ3JvdW5kIHJ1bm5pbmctdGltZS4gVGhpcyBwbHVnaW4gd2lsbCBleGVjdXRlIHlvdXIgcHJvdmlkZWQgY2FsbGJhY2tGbiB3aGVuZXZlciBhIGJhY2tncm91bmQtZmV0Y2ggZXZlbnQgb2NjdXJzLiBUaGVyZSBpcyBubyB3YXkgdG8gaW5jcmVhc2UgdGhlIHJhdGUgd2hpY2ggYSBmZXRjaC1ldmVudCBvY2N1cnMgYW5kIHRoaXMgcGx1Z2luIHNldHMgdGhlIHJhdGUgdG8gdGhlIG1vc3QgZnJlcXVlbnQgcG9zc2libGUgdmFsdWUgb2YgVUlBcHBsaWNhdGlvbkJhY2tncm91bmRGZXRjaEludGVydmFsTWluaW11bSAtLSBpT1MgZGV0ZXJtaW5lcyB0aGUgcmF0ZSBhdXRvbWF0aWNhbGx5IGJhc2VkIHVwb24gZGV2aWNlIHVzYWdlIGFuZCB0aW1lLW9mLWRheSAoaWU6IGZldGNoLXJhdGUgaXMgYWJvdXQgfjE1bWluIGR1cmluZyBwcmltZS10aW1lIGhvdXJzOyBsZXNzIGZyZXF1ZW50bHkgd2hlbiB0aGUgdXNlciBpcyBwcmVzdW1lZCB0byBiZSBzbGVlcGluZywgYXQgM2FtIGZvciBleGFtcGxlKS5cbiAqIEZvciBtb3JlIGRldGFpbCwgcGxlYXNlIHNlZSBodHRwczovL2dpdGh1Yi5jb20vdHJhbnNpc3RvcnNvZnQvY29yZG92YS1wbHVnaW4tYmFja2dyb3VuZC1mZXRjaFxuICpcbiAqIEB1c2FnZVxuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEJhY2tncm91bmRGZXRjaCwgQmFja2dyb3VuZEZldGNoQ29uZmlnIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9iYWNrZ3JvdW5kLWZldGNoJztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBiYWNrZ3JvdW5kRmV0Y2g6IEJhY2tncm91bmRGZXRjaCkge1xuICpcbiAqICAgY29uc3QgY29uZmlnOiBCYWNrZ3JvdW5kRmV0Y2hDb25maWcgPSB7XG4gKiAgICAgc3RvcE9uVGVybWluYXRlOiBmYWxzZSwgLy8gU2V0IHRydWUgdG8gY2Vhc2UgYmFja2dyb3VuZC1mZXRjaCBmcm9tIG9wZXJhdGluZyBhZnRlciB1c2VyIFwiY2xvc2VzXCIgdGhlIGFwcC4gRGVmYXVsdHMgdG8gdHJ1ZS5cbiAqICAgfVxuICpcbiAqICAgYmFja2dyb3VuZEZldGNoLmNvbmZpZ3VyZShjb25maWcpXG4gKiAgICAgIC50aGVuKCgpID0+IHtcbiAqICAgICAgICAgIGNvbnNvbGUubG9nKCdCYWNrZ3JvdW5kIEZldGNoIGluaXRpYWxpemVkJyk7XG4gKlxuICogICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kRmV0Y2guZmluaXNoKCk7XG4gKlxuICogICAgICB9KVxuICogICAgICAuY2F0Y2goZSA9PiBjb25zb2xlLmxvZygnRXJyb3IgaW5pdGlhbGl6aW5nIGJhY2tncm91bmQgZmV0Y2gnLCBlKSk7XG4gKlxuICogICAvLyBTdGFydCB0aGUgYmFja2dyb3VuZC1mZXRjaCBBUEkuIFlvdXIgY2FsbGJhY2tGbiBwcm92aWRlZCB0byAjY29uZmlndXJlIHdpbGwgYmUgZXhlY3V0ZWQgZWFjaCB0aW1lIGEgYmFja2dyb3VuZC1mZXRjaCBldmVudCBvY2N1cnMuIE5PVEUgdGhlICNjb25maWd1cmUgbWV0aG9kIGF1dG9tYXRpY2FsbHkgY2FsbHMgI3N0YXJ0LiBZb3UgZG8gbm90IGhhdmUgdG8gY2FsbCB0aGlzIG1ldGhvZCBhZnRlciB5b3UgI2NvbmZpZ3VyZSB0aGUgcGx1Z2luXG4gKiAgIGJhY2tncm91bmRGZXRjaC5zdGFydCgpO1xuICpcbiAqICAgLy8gU3RvcCB0aGUgYmFja2dyb3VuZC1mZXRjaCBBUEkgZnJvbSBmaXJpbmcgZmV0Y2ggZXZlbnRzLiBZb3VyIGNhbGxiYWNrRm4gcHJvdmlkZWQgdG8gI2NvbmZpZ3VyZSB3aWxsIG5vIGxvbmdlciBiZSBleGVjdXRlZC5cbiAqICAgYmFja2dyb3VuZEZldGNoLnN0b3AoKTtcbiAqXG4gKlxuICogfVxuICpcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIEJhY2tncm91bmRGZXRjaENvbmZpZ1xuICpcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdCYWNrZ3JvdW5kRmV0Y2gnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1iYWNrZ3JvdW5kLWZldGNoJyxcbiAgcGx1Z2luUmVmOiAnQmFja2dyb3VuZEZldGNoJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS90cmFuc2lzdG9yc29mdC9jb3Jkb3ZhLXBsdWdpbi1iYWNrZ3JvdW5kLWZldGNoJyxcbiAgcGxhdGZvcm1zOiBbJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEJhY2tncm91bmRGZXRjaCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuXG4gIC8qKlxuICAgKiBDb25maWd1cmVzIHRoZSBwbHVnaW4ncyBmZXRjaCBjYWxsYmFja0ZuXG4gICAqXG4gICAqIEBwYXJhbSB7QmFja2dyb3VuZEZldGNoQ29uZmlnfSBjb25maWcgQ29uZmlndXJhdGlvbiBmb3IgcGx1Z2luXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAgY29uZmlndXJlKGNvbmZpZzogQmFja2dyb3VuZEZldGNoQ29uZmlnKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU3RhcnQgdGhlIGJhY2tncm91bmQtZmV0Y2ggQVBJLlxuICAgKiBZb3VyIGNhbGxiYWNrRm4gcHJvdmlkZWQgdG8gI2NvbmZpZ3VyZSB3aWxsIGJlIGV4ZWN1dGVkIGVhY2ggdGltZSBhIGJhY2tncm91bmQtZmV0Y2ggZXZlbnQgb2NjdXJzLiBOT1RFIHRoZSAjY29uZmlndXJlIG1ldGhvZCBhdXRvbWF0aWNhbGx5IGNhbGxzICNzdGFydC4gWW91IGRvIG5vdCBoYXZlIHRvIGNhbGwgdGhpcyBtZXRob2QgYWZ0ZXIgeW91ICNjb25maWd1cmUgdGhlIHBsdWdpblxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzdGFydCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdG9wIHRoZSBiYWNrZ3JvdW5kLWZldGNoIEFQSSBmcm9tIGZpcmluZyBmZXRjaCBldmVudHMuIFlvdXIgY2FsbGJhY2tGbiBwcm92aWRlZCB0byAjY29uZmlndXJlIHdpbGwgbm8gbG9uZ2VyIGJlIGV4ZWN1dGVkLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzdG9wKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFlvdSBNVVNUIGNhbGwgdGhpcyBtZXRob2QgaW4geW91ciBmZXRjaCBjYWxsYmFja0ZuIHByb3ZpZGVkIHRvICNjb25maWd1cmUgaW4gb3JkZXIgdG8gc2lnbmFsIHRvIGlPUyB0aGF0IHlvdXIgZmV0Y2ggYWN0aW9uIGlzIGNvbXBsZXRlLiBpT1MgcHJvdmlkZXMgb25seSAzMHMgb2YgYmFja2dyb3VuZC10aW1lIGZvciBhIGZldGNoLWV2ZW50IC0tIGlmIHlvdSBleGNlZWQgdGhpcyAzMHMsIGlPUyB3aWxsIGtpbGwgeW91ciBhcHAuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBmaW5pc2goKTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHRoZSBzdGF0dXMgb2YgdGhlIGJhY2tncm91bmQtZmV0Y2hcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc3RhdHVzKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 488 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BackgroundGeolocation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var BackgroundGeolocationOriginal = /** @class */ (function (_super) {
    __extends(BackgroundGeolocationOriginal, _super);
    function BackgroundGeolocationOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
      
         * Set location service provider @see https://github.com/mauron85/cordova-plugin-background-geolocation/wiki/Android-providers
      
         *
         * Possible values:
         *  ANDROID_DISTANCE_FILTER_PROVIDER: 0,
      
         *  ANDROID_ACTIVITY_PROVIDER: 1
      
         *
         * @enum {number}
      
         */
        _this.LocationProvider = {
            ANDROID_DISTANCE_FILTER_PROVIDER: 0,
            ANDROID_ACTIVITY_PROVIDER: 1
        };
        /**
         * Desired accuracy in meters. Possible values [0, 10, 100, 1000].
      
         * The lower the number, the more power devoted to GeoLocation resulting in higher accuracy readings.
      
         * 1000 results in lowest power drain and least accurate readings.
      
         *
         * Possible values:
         *  HIGH: 0
      
         *  MEDIUM: 10
      
         *  LOW: 100
      
         *  PASSIVE: 1000
         *
         * enum {number}
      
         */
        _this.Accuracy = {
            HIGH: 0,
            MEDIUM: 10,
            LOW: 100,
            PASSIVE: 1000
        };
        /**
      
         * Used in the switchMode function
      
         *
         * Possible values:
         *  BACKGROUND: 0
         *  FOREGROUND: 1
      
         *
         * @enum {number}
      
         */
        _this.Mode = {
            BACKGROUND: 0,
            FOREGROUND: 1
        };
        return _this;
    }
    BackgroundGeolocationOriginal.prototype.configure = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "configure", { "callbackOrder": "reverse", "observable": true }, arguments); };
    BackgroundGeolocationOriginal.prototype.start = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "start", {}, arguments); };
    BackgroundGeolocationOriginal.prototype.stop = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stop", {}, arguments); };
    BackgroundGeolocationOriginal.prototype.finish = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "finish", { "platforms": ["iOS"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.changePace = function (isMoving) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "changePace", { "platforms": ["iOS"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.setConfig = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setConfig", { "callbackOrder": "reverse" }, arguments); };
    BackgroundGeolocationOriginal.prototype.getStationaryLocation = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getStationaryLocation", { "platforms": ["iOS"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.onStationary = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onStationary", { "platforms": ["iOS"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.isLocationEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isLocationEnabled", { "platforms": ["Android"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.showAppSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showAppSettings", { "sync": true }, arguments); };
    BackgroundGeolocationOriginal.prototype.showLocationSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showLocationSettings", { "sync": true }, arguments); };
    BackgroundGeolocationOriginal.prototype.watchLocationMode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "watchLocationMode", { "platforms": ["Android"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.stopWatchingLocationMode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopWatchingLocationMode", { "platforms": ["Android"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.getLocations = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getLocations", { "platforms": ["Android"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.getValidLocations = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getValidLocations", {}, arguments); };
    BackgroundGeolocationOriginal.prototype.deleteLocation = function (locationId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteLocation", { "platforms": ["Android"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.deleteAllLocations = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteAllLocations", { "platforms": ["Android"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.switchMode = function (modeId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchMode", { "platforms": ["iOS"] }, arguments); };
    BackgroundGeolocationOriginal.prototype.getLogEntries = function (limit) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getLogEntries", {}, arguments); };
    BackgroundGeolocationOriginal.pluginName = "BackgroundGeolocation";
    BackgroundGeolocationOriginal.plugin = "cordova-plugin-mauron85-background-geolocation";
    BackgroundGeolocationOriginal.pluginRef = "backgroundGeolocation";
    BackgroundGeolocationOriginal.repo = "https://github.com/mauron85/cordova-plugin-background-geolocation";
    BackgroundGeolocationOriginal.platforms = ["Android", "iOS"];
    return BackgroundGeolocationOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var BackgroundGeolocation = new BackgroundGeolocationOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 489 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BackgroundMode; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var BackgroundModeOriginal = /** @class */ (function (_super) {
    __extends(BackgroundModeOriginal, _super);
    function BackgroundModeOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BackgroundModeOriginal.prototype.enable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enable", { "sync": true }, arguments); };
    BackgroundModeOriginal.prototype.disable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disable", {}, arguments); };
    BackgroundModeOriginal.prototype.isEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isEnabled", { "sync": true }, arguments); };
    BackgroundModeOriginal.prototype.isActive = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isActive", { "sync": true }, arguments); };
    BackgroundModeOriginal.prototype.setDefaults = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setDefaults", { "platforms": ["Android"] }, arguments); };
    BackgroundModeOriginal.prototype.configure = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "configure", { "platforms": ["Android"], "sync": true }, arguments); };
    BackgroundModeOriginal.prototype.on = function (event) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "on", { "observable": true, "clearFunction": "un", "clearWithArgs": true }, arguments); };
    BackgroundModeOriginal.prototype.moveToBackground = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "moveToBackground", { "platforms": ["Android"], "sync": true }, arguments); };
    BackgroundModeOriginal.prototype.disableWebViewOptimizations = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableWebViewOptimizations", { "platforms": ["Android"], "sync": true }, arguments); };
    BackgroundModeOriginal.prototype.moveToForeground = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "moveToForeground", { "platforms": ["Android"], "sync": true }, arguments); };
    BackgroundModeOriginal.prototype.overrideBackButton = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "overrideBackButton", { "platforms": ["Android"], "sync": true }, arguments); };
    BackgroundModeOriginal.prototype.excludeFromTaskList = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "excludeFromTaskList", { "platforms": ["Android"], "sync": true }, arguments); };
    BackgroundModeOriginal.prototype.isScreenOff = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isScreenOff", { "platforms": ["Android"] }, arguments); };
    BackgroundModeOriginal.prototype.wakeUp = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "wakeUp", { "platforms": ["Android"], "sync": true }, arguments); };
    BackgroundModeOriginal.prototype.unlock = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unlock", { "platforms": ["Android"], "sync": true }, arguments); };
    BackgroundModeOriginal.pluginName = "BackgroundMode";
    BackgroundModeOriginal.plugin = "cordova-plugin-background-mode";
    BackgroundModeOriginal.pluginRef = "cordova.plugins.backgroundMode";
    BackgroundModeOriginal.repo = "https://github.com/katzer/cordova-plugin-background-mode";
    BackgroundModeOriginal.platforms = ["AmazonFire OS", "Android", "Browser", "iOS", "Windows"];
    return BackgroundModeOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var BackgroundMode = new BackgroundModeOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9iYWNrZ3JvdW5kLW1vZGUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQXlFVCxrQ0FBaUI7Ozs7SUFTbkQsK0JBQU07SUFRTixnQ0FBTztJQVdQLGtDQUFTO0lBV1QsaUNBQVE7SUFZUixvQ0FBVyxhQUFDLE9BQXFDO0lBYWpELGtDQUFTLGFBQUMsT0FBcUM7SUFhL0MsMkJBQUUsYUFBQyxLQUFhO0lBV2hCLHlDQUFnQjtJQVVoQixvREFBMkI7SUFVM0IseUNBQWdCO0lBVWhCLDJDQUFrQjtJQVVsQiw0Q0FBbUI7SUFTbkIsb0NBQVc7SUFXWCwrQkFBTTtJQVVOLCtCQUFNOzs7Ozs7eUJBek9SO0VBMkVvQyxpQkFBaUI7U0FBeEMsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5cblxuLyoqXG4gKiBDb25maWd1cmF0aW9ucyBpdGVtcyB0aGF0IGNhbiBiZSB1cGRhdGVkLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEJhY2tncm91bmRNb2RlQ29uZmlndXJhdGlvbiB7XG5cbiAgLyoqXG4gICAqIFRpdGxlIG9mIHRoZSBiYWNrZ3JvdW5kIHRhc2tcbiAgICovXG4gIHRpdGxlPzogU3RyaW5nO1xuXG4gIC8qKlxuICAgKiBEZXNjcmlwdGlvbiBvZiBiYWNrZ3JvdW5kIHRhc2tcbiAgICovXG4gIHRleHQ/OiBTdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoaXMgd2lsbCBsb29rIGZvciBgPGljb24gbmFtZT4ucG5nYCBpbiBwbGF0Zm9ybXMvYW5kcm9pZC9yZXMvZHJhd2FibGV8bWlwbWFwXG4gICAqL1xuICBpY29uPzogc3RyaW5nO1xuXG4gIGNvbG9yPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBCeSBkZWZhdWx0IHRoZSBhcHAgd2lsbCBjb21lIHRvIGZvcmVncm91bmQgd2hlbiB0YXBpbmcgb24gdGhlIG5vdGlmaWNhdGlvbi4gSWYgZmFsc2UsIHBsdWdpbiB3b24ndCBjb21lIHRvIGZvcmVncm91bmQgd2hlbiB0YXBwZWQuXG4gICAqL1xuICByZXN1bWU/OiBib29sZWFuO1xuXG4gIGhpZGRlbj86IGJvb2xlYW47XG5cbiAgYmlnVGV4dD86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFRoZSB0ZXh0IHRoYXQgc2Nyb2xscyBpdHNlbGYgb24gc3RhdHVzYmFyXG4gICAqL1xuICB0aWNrZXI/OiBTdHJpbmc7XG5cbiAgLyoqXG4gICAqIGlmIHRydWUgcGx1Z2luIHdpbGwgbm90IGRpc3BsYXkgYSBub3RpZmljYXRpb24uIERlZmF1bHQgaXMgZmFsc2UuXG4gICAqL1xuICBzaWxlbnQ/OiBib29sZWFuO1xuXG59XG5cbi8qKlxuICogQG5hbWUgQmFja2dyb3VuZCBNb2RlXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvcmRvdmEgcGx1Z2luIHRvIHByZXZlbnQgdGhlIGFwcCBmcm9tIGdvaW5nIHRvIHNsZWVwIHdoaWxlIGluIGJhY2tncm91bmQuXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogY29yZG92YS1wbHVnaW4tYmFja2dyb3VuZC1tb2RlLiBGb3IgbW9yZSBpbmZvIGFib3V0IHBsdWdpbiwgdmlzaXQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9rYXR6ZXIvY29yZG92YS1wbHVnaW4tYmFja2dyb3VuZC1tb2RlXG4gKkB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQmFja2dyb3VuZE1vZGUgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2JhY2tncm91bmQtbW9kZSc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBiYWNrZ3JvdW5kTW9kZTogQmFja2dyb3VuZE1vZGUpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuYmFja2dyb3VuZE1vZGUuZW5hYmxlKCk7XG4gKiBgYGBcbiAqXG4gKiBAaW50ZXJmYWNlc1xuICogQmFja2dyb3VuZE1vZGVDb25maWd1cmF0aW9uXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnQmFja2dyb3VuZE1vZGUnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1iYWNrZ3JvdW5kLW1vZGUnLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuYmFja2dyb3VuZE1vZGUnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2thdHplci9jb3Jkb3ZhLXBsdWdpbi1iYWNrZ3JvdW5kLW1vZGUnLFxuICBwbGF0Zm9ybXM6IFsnQW1hem9uRmlyZSBPUycsICdBbmRyb2lkJywgJ0Jyb3dzZXInLCAnaU9TJywgJ1dpbmRvd3MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBCYWNrZ3JvdW5kTW9kZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogRW5hYmxlIHRoZSBiYWNrZ3JvdW5kIG1vZGUuXG4gICAqIE9uY2UgY2FsbGVkLCBwcmV2ZW50cyB0aGUgYXBwIGZyb20gYmVpbmcgcGF1c2VkIHdoaWxlIGluIGJhY2tncm91bmQuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBlbmFibGUoKTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogRGlzYWJsZSB0aGUgYmFja2dyb3VuZCBtb2RlLlxuICAgKiBPbmNlIHRoZSBiYWNrZ3JvdW5kIG1vZGUgaGFzIGJlZW4gZGlzYWJsZWQsIHRoZSBhcHAgd2lsbCBiZSBwYXVzZWQgd2hlbiBpbiBiYWNrZ3JvdW5kLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBkaXNhYmxlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiBiYWNrZ3JvdW5kIG1vZGUgaXMgZW5hYmxlZCBvciBub3QuXG4gICAqIEByZXR1cm5zIHtib29sZWFufSByZXR1cm5zIGEgYm9vbGVhbiB0aGF0IGluZGljYXRlcyBpZiB0aGUgYmFja2dyb3VuZCBtb2RlIGlzIGVuYWJsZWQuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBpc0VuYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENhbiBiZSB1c2VkIHRvIGdldCB0aGUgaW5mb3JtYXRpb24gaWYgdGhlIGJhY2tncm91bmQgbW9kZSBpcyBhY3RpdmUuXG4gICAqIEByZXR1cm5zIHtib29sZWFufSByZXR1cm5zIGEgYm9vbGVhbiB0aGF0IGluZGljYXRlcyBpZiB0aGUgYmFja2dyb3VuZCBtb2RlIGlzIGFjdGl2ZS5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIGlzQWN0aXZlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSB0aGUgZGVmYXVsdCB0aXRsZSwgdGlja2VyIGFuZCB0ZXh0LlxuICAgKiBBdmFpbGFibGUgb25seSBmb3IgQW5kcm9pZCBwbGF0Zm9ybS5cbiAgICogQHBhcmFtIHtCYWNrZ3JvdW5kTW9kZUNvbmZpZ3VyYXRpb259IG9wdGlvbnMgTGlzdCBvZiBvcHRpb24gdG8gY29uZmlndXJlLiBTZWUgdGFibGUgYmVsb3dcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG4gIH0pXG4gIHNldERlZmF1bHRzKG9wdGlvbnM/OiBCYWNrZ3JvdW5kTW9kZUNvbmZpZ3VyYXRpb24pOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBNb2RpZnkgdGhlIGRpc3BsYXllZCBpbmZvcm1hdGlvbi5cbiAgICogQXZhaWxhYmxlIG9ubHkgZm9yIEFuZHJvaWQgcGxhdGZvcm0uXG4gICAqIEBwYXJhbSB7QmFja2dyb3VuZE1vZGVDb25maWd1cmF0aW9ufSBvcHRpb25zIEFueSBvcHRpb25zIHlvdSB3YW50IHRvIHVwZGF0ZS4gU2VlIHRhYmxlIGJlbG93LlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHBsYXRmb3JtczogWydBbmRyb2lkJ10sXG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBjb25maWd1cmUob3B0aW9ucz86IEJhY2tncm91bmRNb2RlQ29uZmlndXJhdGlvbik6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIExpc3RlbiBmb3IgZXZlbnRzIHRoYXQgdGhlIHBsdWdpbiBmaXJlcy4gQXZhaWxhYmxlIGV2ZW50cyBhcmUgYGVuYWJsZWAsIGBkaXNhYmxlYCwgYGFjdGl2YXRlYCwgYGRlYWN0aXZhdGVgIGFuZCBgZmFpbHVyZWAuXG4gICAqIEBwYXJhbSBldmVudCB7c3RyaW5nfSBFdmVudCBuYW1lXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAndW4nLFxuICAgIGNsZWFyV2l0aEFyZ3M6IHRydWVcbiAgfSlcbiAgb24oZXZlbnQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEFuZHJvaWQgYWxsb3dzIHRvIHByb2dyYW1tYXRpY2FsbHkgbW92ZSBmcm9tIGZvcmVncm91bmQgdG8gYmFja2dyb3VuZC5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddLFxuICAgIHN5bmM6IHRydWVcbiAgfSlcbiAgbW92ZVRvQmFja2dyb3VuZCgpOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBFbmFibGUgR1BTLXRyYWNraW5nIGluIGJhY2tncm91bmQgKEFuZHJvaWQpLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHBsYXRmb3JtczogWydBbmRyb2lkJ10sXG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBkaXNhYmxlV2ViVmlld09wdGltaXphdGlvbnMoKTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogQW5kcm9pZCBhbGxvd3MgdG8gcHJvZ3JhbW1hdGljYWxseSBtb3ZlIGZyb20gYmFja2dyb3VuZCB0byBmb3JlZ3JvdW5kLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHBsYXRmb3JtczogWydBbmRyb2lkJ10sXG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBtb3ZlVG9Gb3JlZ3JvdW5kKCk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIHRoZSBiYWNrIGJ1dHRvbiBvbiBBbmRyb2lkIHRvIGdvIHRvIGJhY2tncm91bmQgaW5zdGVhZCBvZiBjbG9zaW5nIHRoZSBhcHAuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXSxcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIG92ZXJyaWRlQmFja0J1dHRvbigpOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeGNsdWRlIHRoZSBhcHAgZnJvbSB0aGUgcmVjZW50IHRhc2sgbGlzdC4gV29ya3Mgb24gQW5kcm9pZCA1LjArLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHBsYXRmb3JtczogWydBbmRyb2lkJ10sXG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBleGNsdWRlRnJvbVRhc2tMaXN0KCk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBtZXRob2Qgd29ya3MgYXN5bmMgaW5zdGVhZCBvZiBpc0FjdGl2ZSgpIG9yIGlzRW5hYmxlZCgpLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHBsYXRmb3JtczogWydBbmRyb2lkJ11cbiAgfSlcbiAgaXNTY3JlZW5PZmYoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFR1cm4gc2NyZWVuIG9uXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXSxcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIHdha2VVcCgpOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBUdXJuIHNjcmVlbiBvbiBhbmQgc2hvdyBhcHAgZXZlbiBsb2NrZWRcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddLFxuICAgIHN5bmM6IHRydWVcbiAgfSlcbiAgdW5sb2NrKCk6IHZvaWQge1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 490 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Backlight; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var BacklightOriginal = /** @class */ (function (_super) {
    __extends(BacklightOriginal, _super);
    function BacklightOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BacklightOriginal.prototype.on = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "on", {}, arguments); };
    BacklightOriginal.prototype.off = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "off", {}, arguments); };
    BacklightOriginal.pluginName = "Backlight";
    BacklightOriginal.plugin = "cordova-plugin-backlight";
    BacklightOriginal.pluginRef = "cordova.plugins.Backlight";
    BacklightOriginal.repo = "https://github.com/mebibou/cordova-plugin-backlight";
    BacklightOriginal.platforms = ["Android"];
    return BacklightOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Backlight = new BacklightOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9iYWNrbGlnaHQvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBaUN6Qyw2QkFBaUI7Ozs7SUFPOUMsc0JBQUU7SUFTRix1QkFBRzs7Ozs7O29CQWxETDtFQWtDK0IsaUJBQWlCO1NBQW5DLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuXG4vKipcbiAqIEBiZXRhXG4gKiBAbmFtZSBCYWNrbGlnaHRcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gYWRkcyB0dXJuaW5nIG9uL29mZiB0aGUgZGV2aWNlIGJhY2tsaWdodC5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEJhY2tsaWdodCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvYmFja2xpZ2h0JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGJhY2tsaWdodDogQmFja2xpZ2h0KSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiAvLyBUdXJuIGJhY2tsaWdodCBvblxuICogdGhpcy5iYWNrbGlnaHQub24oKS50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdiYWNrbGlnaHQgb24nKSk7XG4gKlxuICogLy8gVHVybiBiYWNrbGlnaHQgb2ZmXG4gKiB0aGlzLmJhY2tsaWdodC5vZmYoKS50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdiYWNrbGlnaHQgb2ZmJykpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0JhY2tsaWdodCcsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWJhY2tsaWdodCcsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5CYWNrbGlnaHQnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL21lYmlib3UvY29yZG92YS1wbHVnaW4tYmFja2xpZ2h0JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBCYWNrbGlnaHQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gdHVybnMgYmFja2xpZ2h0IG9uXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBiYWNrbGlnaHQgaXMgb25cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgb24oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBmdW5jdGlvbiB0dXJucyBiYWNrbGlnaHQgb2ZmXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBiYWNrbGlnaHQgaXMgb2ZmXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIG9mZigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 491 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Badge; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var BadgeOriginal = /** @class */ (function (_super) {
    __extends(BadgeOriginal, _super);
    function BadgeOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BadgeOriginal.prototype.clear = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "clear", {}, arguments); };
    BadgeOriginal.prototype.set = function (badgeNumber) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "set", {}, arguments); };
    BadgeOriginal.prototype.get = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "get", {}, arguments); };
    BadgeOriginal.prototype.increase = function (increaseBy) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "increase", {}, arguments); };
    BadgeOriginal.prototype.decrease = function (decreaseBy) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "decrease", {}, arguments); };
    BadgeOriginal.prototype.hasPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasPermission", {}, arguments); };
    BadgeOriginal.prototype.registerPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerPermission", {}, arguments); };
    BadgeOriginal.pluginName = "Badge";
    BadgeOriginal.plugin = "cordova-plugin-badge";
    BadgeOriginal.pluginRef = "cordova.plugins.notification.badge";
    BadgeOriginal.repo = "https://github.com/katzer/cordova-plugin-badge";
    BadgeOriginal.platforms = ["Android", "Browser", "iOS", "Windows"];
    return BadgeOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Badge = new BadgeOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9iYWRnZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUErQjdDLHlCQUFpQjs7OztJQU8xQyxxQkFBSztJQVVMLG1CQUFHLGFBQUMsV0FBbUI7SUFTdkIsbUJBQUc7SUFVSCx3QkFBUSxhQUFDLFVBQWtCO0lBVTNCLHdCQUFRLGFBQUMsVUFBa0I7SUFTM0IsNkJBQWE7SUFTYixrQ0FBa0I7Ozs7OztnQkFoR3BCO0VBZ0MyQixpQkFBaUI7U0FBL0IsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5cbi8qKlxuICogQG5hbWUgQmFkZ2VcbiAqIEBkZXNjcmlwdGlvblxuICogVGhlIGVzc2VudGlhbCBwdXJwb3NlIG9mIGJhZGdlIG51bWJlcnMgaXMgdG8gZW5hYmxlIGFuIGFwcGxpY2F0aW9uIHRvIGluZm9ybSBpdHMgdXNlcnMgdGhhdCBpdCBoYXMgc29tZXRoaW5nIGZvciB0aGVtIOKAlCBmb3IgZXhhbXBsZSwgdW5yZWFkIG1lc3NhZ2VzIOKAlCB3aGVuIHRoZSBhcHBsaWNhdGlvbiBpc27igJl0IHJ1bm5pbmcgaW4gdGhlIGZvcmVncm91bmQuXG4gKlxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGNvcmRvdmEtcGx1Z2luLWJhZGdlLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbQmFkZ2UgcGx1Z2luIGRvY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rYXR6ZXIvY29yZG92YS1wbHVnaW4tYmFkZ2UpLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQmFkZ2UgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2JhZGdlJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGJhZGdlOiBCYWRnZSkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5iYWRnZS5zZXQoMTApO1xuICogdGhpcy5iYWRnZS5pbmNyZWFzZSgxKTtcbiAqIHRoaXMuYmFkZ2UuY2xlYXIoKTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0JhZGdlJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tYmFkZ2UnLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMubm90aWZpY2F0aW9uLmJhZGdlJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9rYXR6ZXIvY29yZG92YS1wbHVnaW4tYmFkZ2UnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdCcm93c2VyJywgJ2lPUycsICdXaW5kb3dzJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQmFkZ2UgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIENsZWFyIHRoZSBiYWRnZSBvZiB0aGUgYXBwIGljb24uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBjbGVhcigpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRoZSBiYWRnZSBvZiB0aGUgYXBwIGljb24uXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBiYWRnZU51bWJlciAgVGhlIG5ldyBiYWRnZSBudW1iZXIuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldChiYWRnZU51bWJlcjogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBiYWRnZSBvZiB0aGUgYXBwIGljb24uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBJbmNyZWFzZSB0aGUgYmFkZ2UgbnVtYmVyLlxuICAgKiBAcGFyYW0ge251bWJlcn0gaW5jcmVhc2VCeSAgQ291bnQgdG8gYWRkIHRvIHRoZSBjdXJyZW50IGJhZGdlIG51bWJlclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpbmNyZWFzZShpbmNyZWFzZUJ5OiBudW1iZXIpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWNyZWFzZSB0aGUgYmFkZ2UgbnVtYmVyLlxuICAgKiBAcGFyYW0ge251bWJlcn0gZGVjcmVhc2VCeSAgQ291bnQgdG8gc3VidHJhY3QgZnJvbSB0aGUgY3VycmVudCBiYWRnZSBudW1iZXJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZGVjcmVhc2UoZGVjcmVhc2VCeTogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGV0ZXJtaW5lIGlmIHRoZSBhcHAgaGFzIHBlcm1pc3Npb24gdG8gc2hvdyBiYWRnZXMuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGhhc1Blcm1pc3Npb24oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXIgcGVybWlzc2lvbiB0byBzZXQgYmFkZ2Ugbm90aWZpY2F0aW9uc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICByZWdpc3RlclBlcm1pc3Npb24oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 492 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BarcodeScanner; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var BarcodeScannerOriginal = /** @class */ (function (_super) {
    __extends(BarcodeScannerOriginal, _super);
    function BarcodeScannerOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Encode = {
            TEXT_TYPE: 'TEXT_TYPE',
            EMAIL_TYPE: 'EMAIL_TYPE',
            PHONE_TYPE: 'PHONE_TYPE',
            SMS_TYPE: 'SMS_TYPE'
        };
        return _this;
    }
    BarcodeScannerOriginal.prototype.scan = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "scan", { "callbackOrder": "reverse" }, arguments); };
    BarcodeScannerOriginal.prototype.encode = function (type, data) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "encode", {}, arguments); };
    BarcodeScannerOriginal.pluginName = "BarcodeScanner";
    BarcodeScannerOriginal.plugin = "phonegap-plugin-barcodescanner";
    BarcodeScannerOriginal.pluginRef = "cordova.plugins.barcodeScanner";
    BarcodeScannerOriginal.repo = "https://github.com/phonegap/phonegap-plugin-barcodescanner";
    BarcodeScannerOriginal.platforms = ["Android", "BlackBerry 10", "Browser", "iOS", "Windows"];
    return BarcodeScannerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var BarcodeScanner = new BarcodeScannerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9iYXJjb2RlLXNjYW5uZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBZ0dwQyxrQ0FBaUI7OztRQUVuRCxZQUFNLEdBS0Y7WUFDRixTQUFTLEVBQUUsV0FBVztZQUN0QixVQUFVLEVBQUUsWUFBWTtZQUN4QixVQUFVLEVBQUUsWUFBWTtZQUN4QixRQUFRLEVBQUUsVUFBVTtTQUNyQixDQUFDOzs7SUFVRiw2QkFBSSxhQUFDLE9BQStCO0lBWXBDLCtCQUFNLGFBQUMsSUFBWSxFQUFFLElBQVM7Ozs7Ozt5QkFuSWhDO0VBaUdvQyxpQkFBaUI7U0FBeEMsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJhcmNvZGVTY2FubmVyT3B0aW9ucyB7XG5cbiAgLyoqXG4gICAqIFByZWZlciBmcm9udCBjYW1lcmEuIFN1cHBvcnRlZCBvbiBpT1MgYW5kIEFuZHJvaWQuXG4gICAqL1xuICBwcmVmZXJGcm9udENhbWVyYT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFNob3cgZmxpcCBjYW1lcmEgYnV0dG9uLiBTdXBwb3J0ZWQgb24gaU9TIGFuZCBBbmRyb2lkLlxuICAgKi9cbiAgc2hvd0ZsaXBDYW1lcmFCdXR0b24/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBTaG93IHRvcmNoIGJ1dHRvbi4gU3VwcG9ydGVkIG9uIGlPUyBhbmQgQW5kcm9pZC5cbiAgICovXG4gIHNob3dUb3JjaEJ1dHRvbj86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIERpc2FibGUgYW5pbWF0aW9ucy4gU3VwcG9ydGVkIG9uIGlPUyBvbmx5LlxuICAgKi9cbiAgZGlzYWJsZUFuaW1hdGlvbnM/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBEaXNhYmxlIHN1Y2Nlc3MgYmVlcC4gU3VwcG9ydGVkIG9uIGlPUyBvbmx5LlxuICAgKi9cbiAgZGlzYWJsZVN1Y2Nlc3NCZWVwPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogUHJvbXB0IHRleHQuIFN1cHBvcnRlZCBvbiBBbmRyb2lkIG9ubHkuXG4gICAqL1xuICBwcm9tcHQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEZvcm1hdHMgc2VwYXJhdGVkIGJ5IGNvbW1hcy4gRGVmYXVsdHMgdG8gYWxsIGZvcm1hdHMgZXhjZXB0IGBQREZfNDE3YCBhbmQgYFJTU19FWFBBTkRFRGAuXG4gICAqL1xuICBmb3JtYXRzPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBPcmllbnRhdGlvbi4gU3VwcG9ydGVkIG9uIEFuZHJvaWQgb25seS4gQ2FuIGJlIHNldCB0byBgcG9ydHJhaXRgIG9yIGBsYW5kc2NhcGVgLiBEZWZhdWx0cyB0byBub25lIHNvIHRoZSB1c2VyIGNhbiByb3RhdGUgdGhlIHBob25lIGFuZCBwaWNrIGFuIG9yaWVudGF0aW9uLlxuICAgKi9cbiAgb3JpZW50YXRpb24/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIExhdW5jaCB3aXRoIHRoZSB0b3JjaCBzd2l0Y2hlZCBvbiAoaWYgYXZhaWxhYmxlKS4gU3VwcG9ydGVkIG9uIEFuZHJvaWQgb25seS5cbiAgICovXG4gIHRvcmNoT24/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBEaXNwbGF5IHNjYW5uZWQgdGV4dCBmb3IgWCBtcy4gMCBzdXBwcmVzc2VzIGl0IGVudGlyZWx5LCBkZWZhdWx0IDE1MDAuIFN1cHBvcnRlZCBvbiBBbmRyb2lkIG9ubHkuXG4gICAqL1xuICByZXN1bHREaXNwbGF5RHVyYXRpb24/OiBudW1iZXI7XG5cbn1cblxuZXhwb3J0IGludGVyZmFjZSBCYXJjb2RlU2NhblJlc3VsdCB7XG4gIGZvcm1hdDogJ1FSX0NPREUnIHwgJ0RBVEFfTUFUUklYJyB8ICdVUENfRScgfCAnVVBDX0EnIHwgJ0VBTl84JyB8ICdFQU5fMTMnIHwgJ0NPREVfMTI4JyB8ICdDT0RFXzM5JyB8ICdDT0RFXzkzJyB8ICdDT0RBQkFSJyB8ICdJVEYnIHwgJ1JTUzE0JyB8ICdSU1NfRVhQQU5ERUQnIHwgJ1BERjQxNycgfCAnQVpURUMnIHwgJ01TSSc7XG4gIGNhbmNlbGxlZDogYm9vbGVhbjtcbiAgdGV4dDogc3RyaW5nO1xufVxuXG4vKipcbiAqIEBuYW1lIEJhcmNvZGUgU2Nhbm5lclxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgQmFyY29kZSBTY2FubmVyIFBsdWdpbiBvcGVucyBhIGNhbWVyYSB2aWV3IGFuZCBhdXRvbWF0aWNhbGx5IHNjYW5zIGEgYmFyY29kZSwgcmV0dXJuaW5nIHRoZSBkYXRhIGJhY2sgdG8geW91LlxuICpcbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBgcGhvbmVnYXAtcGx1Z2luLWJhcmNvZGVzY2FubmVyYC4gRm9yIG1vcmUgaW5mbywgcGxlYXNlIHNlZSB0aGUgW0JhcmNvZGVTY2FubmVyIHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vcGhvbmVnYXAvcGhvbmVnYXAtcGx1Z2luLWJhcmNvZGVzY2FubmVyKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEJhcmNvZGVTY2FubmVyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9iYXJjb2RlLXNjYW5uZXInO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgYmFyY29kZVNjYW5uZXI6IEJhcmNvZGVTY2FubmVyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogdGhpcy5iYXJjb2RlU2Nhbm5lci5zY2FuKCkudGhlbigoYmFyY29kZURhdGEpID0+IHtcbiAqICAvLyBTdWNjZXNzISBCYXJjb2RlIGRhdGEgaXMgaGVyZVxuICogfSwgKGVycikgPT4ge1xuICogXHQvLyBBbiBlcnJvciBvY2N1cnJlZFxuICogfSk7XG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBCYXJjb2RlU2Nhbm5lck9wdGlvbnNcbiAqIEJhcmNvZGVTY2FuUmVzdWx0XG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnQmFyY29kZVNjYW5uZXInLFxuICBwbHVnaW46ICdwaG9uZWdhcC1wbHVnaW4tYmFyY29kZXNjYW5uZXInLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuYmFyY29kZVNjYW5uZXInLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3Bob25lZ2FwL3Bob25lZ2FwLXBsdWdpbi1iYXJjb2Rlc2Nhbm5lcicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0JsYWNrQmVycnkgMTAnLCAnQnJvd3NlcicsICdpT1MnLCAnV2luZG93cyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEJhcmNvZGVTY2FubmVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIEVuY29kZToge1xuICAgIFRFWFRfVFlQRTogc3RyaW5nO1xuICAgIEVNQUlMX1RZUEU6IHN0cmluZztcbiAgICBQSE9ORV9UWVBFOiBzdHJpbmc7XG4gICAgU01TX1RZUEU6IHN0cmluZztcbiAgfSA9IHtcbiAgICBURVhUX1RZUEU6ICdURVhUX1RZUEUnLFxuICAgIEVNQUlMX1RZUEU6ICdFTUFJTF9UWVBFJyxcbiAgICBQSE9ORV9UWVBFOiAnUEhPTkVfVFlQRScsXG4gICAgU01TX1RZUEU6ICdTTVNfVFlQRSdcbiAgfTtcblxuICAvKipcbiAgICogT3BlbiB0aGUgYmFyY29kZSBzY2FubmVyLlxuICAgKiBAcGFyYW0gb3B0aW9ucyB7QmFyY29kZVNjYW5uZXJPcHRpb25zfSBPcHRpb25hbCBvcHRpb25zIHRvIHBhc3MgdG8gdGhlIHNjYW5uZXJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHNjYW5uZXIgZGF0YSwgb3IgcmVqZWN0cyB3aXRoIGFuIGVycm9yLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBzY2FuKG9wdGlvbnM/OiBCYXJjb2RlU2Nhbm5lck9wdGlvbnMpOiBQcm9taXNlPEJhcmNvZGVTY2FuUmVzdWx0PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEVuY29kZXMgZGF0YSBpbnRvIGEgYmFyY29kZS5cbiAgICogTk9URTogbm90IHdlbGwgc3VwcG9ydGVkIG9uIEFuZHJvaWRcbiAgICogQHBhcmFtIHR5cGUge3N0cmluZ30gVHlwZSBvZiBlbmNvZGluZ1xuICAgKiBAcGFyYW0gZGF0YSB7YW55fSBEYXRhIHRvIGVuY29kZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBlbmNvZGUodHlwZTogc3RyaW5nLCBkYXRhOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 493 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Base64; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var Base64Original = /** @class */ (function (_super) {
    __extends(Base64Original, _super);
    function Base64Original() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Base64Original.prototype.encodeFile = function (filePath) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "encodeFile", {}, arguments); };
    Base64Original.pluginName = "Base64";
    Base64Original.plugin = "com-badrit-base64";
    Base64Original.pluginRef = "plugins.Base64";
    Base64Original.repo = "https://github.com/hazemhagrass/phonegap-base64";
    Base64Original.platforms = ["Android", "iOS"];
    return Base64Original;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Base64 = new Base64Original();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9iYXNlNjQvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBaUM1QywwQkFBaUI7Ozs7SUFRM0MsMkJBQVUsYUFBQyxRQUFnQjs7Ozs7O2lCQTFDN0I7RUFrQzRCLGlCQUFpQjtTQUFoQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQGJldGFcbiAqIEBuYW1lIEJhc2U2NFxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIFBsdWdpbiBpcyB1c2VkIHRvIGVuY29kZSBiYXNlNjQgb2YgYW55IGZpbGUsIGl0IHVzZXMganMgY29kZSBmb3IgaU9TLCBidXQgaW4gY2FzZSBvZiBhbmRyb2lkIGl0IHVzZXMgbmF0aXZlIGNvZGUgdG8gaGFuZGxlIGFuZHJvaWQgdmVyc2lvbnMgbG93ZXIgdGhhbiB2LjNcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEJhc2U2NCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvYmFzZTY0JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGJhc2U2NDogQmFzZTY0KSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiBsZXQgZmlsZVBhdGg6IHN0cmluZyA9ICdmaWxlOi8vLy4uLic7XG4gKiB0aGlzLmJhc2U2NC5lbmNvZGVGaWxlKGZpbGVQYXRoKS50aGVuKChiYXNlNjRGaWxlOiBzdHJpbmcpID0+IHtcbiAqICAgY29uc29sZS5sb2coYmFzZTY0RmlsZSk7XG4gKiB9LCAoZXJyKSA9PiB7XG4gKiAgIGNvbnNvbGUubG9nKGVycik7XG4gKiB9KTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdCYXNlNjQnLFxuICBwbHVnaW46ICdjb20tYmFkcml0LWJhc2U2NCcsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMuQmFzZTY0JyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9oYXplbWhhZ3Jhc3MvcGhvbmVnYXAtYmFzZTY0JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQmFzZTY0IGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIGVuY29kZXMgYmFzZTY0IG9mIGFueSBmaWxlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBmaWxlUGF0aCBBYnNvbHV0ZSBmaWxlIHBhdGhcbiAgICogQHJldHVybiB7UHJvbWlzZTxzdHJpbmc+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIGZpbGUgaXMgc3VjY2Vzc2Z1bGx5IGVuY29kZWRcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZW5jb2RlRmlsZShmaWxlUGF0aDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 494 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Base64ToGallery; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var Base64ToGalleryOriginal = /** @class */ (function (_super) {
    __extends(Base64ToGalleryOriginal, _super);
    function Base64ToGalleryOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Base64ToGalleryOriginal.prototype.base64ToGallery = function (data, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "base64ToGallery", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    Base64ToGalleryOriginal.pluginName = "Base64ToGallery";
    Base64ToGalleryOriginal.plugin = "cordova-base64-to-gallery";
    Base64ToGalleryOriginal.pluginRef = "cordova";
    Base64ToGalleryOriginal.repo = "https://github.com/Nexxa/cordova-base64-to-gallery";
    Base64ToGalleryOriginal.platforms = ["Android", "iOS", "Windows Phone 8"];
    return Base64ToGalleryOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Base64ToGallery = new Base64ToGalleryOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9iYXNlNjQtdG8tZ2FsbGVyeS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUE2Qm5DLG1DQUFpQjs7OztJQVlwRCx5Q0FBZSxhQUFDLElBQVksRUFBRSxPQUFxRDs7Ozs7OzBCQTFDckY7RUE4QnFDLGlCQUFpQjtTQUF6QyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgQmFzZTY0IFRvIEdhbGxlcnlcbiAqIEBkZXNjcmlwdGlvbiBUaGlzIHBsdWdpbiBhbGxvd3MgeW91IHRvIHNhdmUgYmFzZTY0IGRhdGEgYXMgYSBwbmcgaW1hZ2UgaW50byB0aGUgZGV2aWNlXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEJhc2U2NFRvR2FsbGVyeSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvYmFzZTY0LXRvLWdhbGxlcnknO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgYmFzZTY0VG9HYWxsZXJ5OiBCYXNlNjRUb0dhbGxlcnkpIHsgfVxuICpcbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogdGhpcy5iYXNlNjRUb0dhbGxlcnkuYmFzZTY0VG9HYWxsZXJ5KGJhc2U2NERhdGEsIHsgcHJlZml4OiAnX2ltZycgfSkudGhlbihcbiAqICAgcmVzID0+IGNvbnNvbGUubG9nKCdTYXZlZCBpbWFnZSB0byBnYWxsZXJ5ICcsIHJlcyksXG4gKiAgIGVyciA9PiBjb25zb2xlLmxvZygnRXJyb3Igc2F2aW5nIGltYWdlIHRvIGdhbGxlcnkgJywgZXJyKVxuICogKTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0Jhc2U2NFRvR2FsbGVyeScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtYmFzZTY0LXRvLWdhbGxlcnknLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9OZXh4YS9jb3Jkb3ZhLWJhc2U2NC10by1nYWxsZXJ5JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MgUGhvbmUgOCddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEJhc2U2NFRvR2FsbGVyeSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogQ29udmVydHMgYSBiYXNlNjQgc3RyaW5nIHRvIGFuIGltYWdlIGZpbGUgaW4gdGhlIGRldmljZSBnYWxsZXJ5XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhIFRoZSBhY3R1YWwgYmFzZTY0IHN0cmluZyB0aGF0IHlvdSB3YW50IHRvIHNhdmVcbiAgICogQHBhcmFtIHthbnl9IFtvcHRpb25zXSBBbiBvYmplY3Qgd2l0aCBwcm9wZXJ0aWVzOiBwcmVmaXg6IHN0cmluZywgbWVkaWFTY2FubmVyOiBib29sZWFuLiBQcmVmaXggd2lsbCBiZSBwcmVwZW5kZWQgdG8gdGhlIGZpbGVuYW1lLiBJZiB0cnVlLCBtZWRpYVNjYW5uZXIgcnVucyBNZWRpYSBTY2FubmVyIG9uIEFuZHJvaWQgYW5kIHNhdmVzIHRvIENhbWVyYSBSb2xsIG9uIGlPUzsgaWYgZmFsc2UsIHNhdmVzIHRvIExpYnJhcnkgZm9sZGVyIG9uIGlPUy5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gcmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBpbWFnZSBpcyBzYXZlZC5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzdWNjZXNzSW5kZXg6IDIsXG4gICAgZXJyb3JJbmRleDogM1xuICB9KVxuICBiYXNlNjRUb0dhbGxlcnkoZGF0YTogc3RyaW5nLCBvcHRpb25zPzogeyBwcmVmaXg/OiBzdHJpbmc7IG1lZGlhU2Nhbm5lcj86IGJvb2xlYW4gfSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 495 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BatteryStatus; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var BatteryStatusOriginal = /** @class */ (function (_super) {
    __extends(BatteryStatusOriginal, _super);
    function BatteryStatusOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BatteryStatusOriginal.prototype.onChange = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onChange", { "eventObservable": true, "event": "batterystatus" }, arguments); };
    BatteryStatusOriginal.prototype.onLow = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onLow", { "eventObservable": true, "event": "batterylow" }, arguments); };
    BatteryStatusOriginal.prototype.onCritical = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onCritical", { "eventObservable": true, "event": "batterycritical" }, arguments); };
    BatteryStatusOriginal.pluginName = "BatteryStatus";
    BatteryStatusOriginal.plugin = "cordova-plugin-battery-status";
    BatteryStatusOriginal.pluginRef = "navigator.battery";
    BatteryStatusOriginal.repo = "https://github.com/apache/cordova-plugin-battery-status";
    BatteryStatusOriginal.platforms = ["Amazon Fire OS", "Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "Tizen", "Ubuntu", "Windows"];
    return BatteryStatusOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var BatteryStatus = new BatteryStatusOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9iYXR0ZXJ5LXN0YXR1cy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0lBb0RWLGlDQUFpQjs7OztJQVVsRCxnQ0FBUTtJQVlSLDZCQUFLO0lBWUwsa0NBQVU7Ozs7Ozt3QkF4Rlo7RUFzRG1DLGlCQUFpQjtTQUF2QyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuZXhwb3J0IGludGVyZmFjZSBCYXR0ZXJ5U3RhdHVzUmVzcG9uc2Uge1xuXG4gIC8qKlxuICAgKiBUaGUgYmF0dGVyeSBjaGFyZ2UgcGVyY2VudGFnZVxuICAgKi9cbiAgbGV2ZWw6IG51bWJlcjtcblxuICAvKipcbiAgICogQSBib29sZWFuIHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGRldmljZSBpcyBwbHVnZ2VkIGluXG4gICAqL1xuICBpc1BsdWdnZWQ6IGJvb2xlYW47XG5cbn1cblxuLyoqXG4gKiBAbmFtZSBCYXR0ZXJ5IFN0YXR1c1xuICogQGRlc2NyaXB0aW9uXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogY29yZG92YS1wbHVnaW4tYmF0dGVyeXN0YXR1cy4gRm9yIG1vcmUgaW5mbywgcGxlYXNlIHNlZSB0aGUgW0JhdHRlcnlTdGF0dXMgcGx1Z2luIGRvY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tYmF0dGVyeS1zdGF0dXMpLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQmF0dGVyeVN0YXR1cyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvYmF0dGVyeS1zdGF0dXMnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgYmF0dGVyeVN0YXR1czogQmF0dGVyeVN0YXR1cykgeyB9XG4gKlxuICogLi4uXG4gKlxuICpcbiAqIC8vIHdhdGNoIGNoYW5nZSBpbiBiYXR0ZXJ5IHN0YXR1c1xuICogbGV0IHN1YnNjcmlwdGlvbiA9IHRoaXMuYmF0dGVyeVN0YXR1cy5vbkNoYW5nZSgpLnN1YnNjcmliZShcbiAqICAoc3RhdHVzOiBCYXR0ZXJ5U3RhdHVzUmVzcG9uc2UpID0+IHtcbiAqICAgIGNvbnNvbGUubG9nKHN0YXR1cy5sZXZlbCwgc3RhdHVzLmlzUGx1Z2dlZCk7XG4gKiAgfVxuICogKTtcbiAqXG4gKiAvLyBzdG9wIHdhdGNoXG4gKiBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAqXG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBCYXR0ZXJ5U3RhdHVzUmVzcG9uc2VcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdCYXR0ZXJ5U3RhdHVzJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tYmF0dGVyeS1zdGF0dXMnLFxuICBwbHVnaW5SZWY6ICduYXZpZ2F0b3IuYmF0dGVyeScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vYXBhY2hlL2NvcmRvdmEtcGx1Z2luLWJhdHRlcnktc3RhdHVzJyxcbiAgcGxhdGZvcm1zOiBbJ0FtYXpvbiBGaXJlIE9TJywgJ0FuZHJvaWQnLCAnQmxhY2tCZXJyeSAxMCcsICdCcm93c2VyJywgJ0ZpcmVmb3ggT1MnLCAnaU9TJywgJ1RpemVuJywgJ1VidW50dScsICdXaW5kb3dzJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQmF0dGVyeVN0YXR1cyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogV2F0Y2ggdGhlIGNoYW5nZSBpbiBiYXR0ZXJ5IGxldmVsXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPEJhdHRlcnlTdGF0dXNSZXNwb25zZT59IFJldHVybnMgYW4gb2JzZXJ2YWJsZSB0aGF0IHB1c2hlcyBhIHN0YXR1cyBvYmplY3RcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXG4gICAgZXZlbnQ6ICdiYXR0ZXJ5c3RhdHVzJ1xuICB9KVxuICBvbkNoYW5nZSgpOiBPYnNlcnZhYmxlPEJhdHRlcnlTdGF0dXNSZXNwb25zZT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBXYXRjaCB3aGVuIHRoZSBiYXR0ZXJ5IGxldmVsIGdvZXMgbG93XG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPEJhdHRlcnlTdGF0dXNSZXNwb25zZT59IFJldHVybnMgYW4gb2JzZXJ2YWJsZSB0aGF0IHB1c2hlcyBhIHN0YXR1cyBvYmplY3RcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXG4gICAgZXZlbnQ6ICdiYXR0ZXJ5bG93J1xuICB9KVxuICBvbkxvdygpOiBPYnNlcnZhYmxlPEJhdHRlcnlTdGF0dXNSZXNwb25zZT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBXYXRjaCB3aGVuIHRoZSBiYXR0ZXJ5IGxldmVsIGdvZXMgdG8gY3JpdGlhbFxuICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxCYXR0ZXJ5U3RhdHVzUmVzcG9uc2U+fSBSZXR1cm5zIGFuIG9ic2VydmFibGUgdGhhdCBwdXNoZXMgYSBzdGF0dXMgb2JqZWN0XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxuICAgIGV2ZW50OiAnYmF0dGVyeWNyaXRpY2FsJ1xuICB9KVxuICBvbkNyaXRpY2FsKCk6IE9ic2VydmFibGU8QmF0dGVyeVN0YXR1c1Jlc3BvbnNlPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 496 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BLE; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var BLEOriginal = /** @class */ (function (_super) {
    __extends(BLEOriginal, _super);
    function BLEOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BLEOriginal.prototype.scan = function (services, seconds) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "scan", { "observable": true }, arguments); };
    BLEOriginal.prototype.startScan = function (services) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startScan", { "observable": true, "clearFunction": "stopScan", "clearWithArgs": false }, arguments); };
    BLEOriginal.prototype.startScanWithOptions = function (services, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startScanWithOptions", { "observable": true, "clearFunction": "stopScan", "clearWithArgs": false }, arguments); };
    BLEOriginal.prototype.stopScan = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopScan", {}, arguments); };
    BLEOriginal.prototype.connect = function (deviceId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "connect", { "observable": true, "clearFunction": "disconnect", "clearWithArgs": true }, arguments); };
    BLEOriginal.prototype.disconnect = function (deviceId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disconnect", {}, arguments); };
    BLEOriginal.prototype.read = function (deviceId, serviceUUID, characteristicUUID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "read", {}, arguments); };
    BLEOriginal.prototype.write = function (deviceId, serviceUUID, characteristicUUID, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "write", {}, arguments); };
    BLEOriginal.prototype.writeWithoutResponse = function (deviceId, serviceUUID, characteristicUUID, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "writeWithoutResponse", {}, arguments); };
    BLEOriginal.prototype.startNotification = function (deviceId, serviceUUID, characteristicUUID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startNotification", { "observable": true, "clearFunction": "stopNotification", "clearWithArgs": true }, arguments); };
    BLEOriginal.prototype.stopNotification = function (deviceId, serviceUUID, characteristicUUID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopNotification", {}, arguments); };
    BLEOriginal.prototype.isConnected = function (deviceId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isConnected", {}, arguments); };
    BLEOriginal.prototype.isEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isEnabled", {}, arguments); };
    BLEOriginal.prototype.startStateNotifications = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startStateNotifications", { "observable": true, "clearFunction": "stopStateNotifications", "clearWithArgs": false }, arguments); };
    BLEOriginal.prototype.stopStateNotifications = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopStateNotifications", {}, arguments); };
    BLEOriginal.prototype.showBluetoothSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showBluetoothSettings", {}, arguments); };
    BLEOriginal.prototype.enable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enable", {}, arguments); };
    BLEOriginal.prototype.readRSSI = function (deviceId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "readRSSI", {}, arguments); };
    BLEOriginal.pluginName = "BLE";
    BLEOriginal.plugin = "cordova-plugin-ble-central";
    BLEOriginal.pluginRef = "ble";
    BLEOriginal.repo = "https://github.com/don/cordova-plugin-ble-central";
    BLEOriginal.platforms = ["Android", "iOS"];
    return BLEOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var BLE = new BLEOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 497 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BluetoothSerial; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var BluetoothSerialOriginal = /** @class */ (function (_super) {
    __extends(BluetoothSerialOriginal, _super);
    function BluetoothSerialOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BluetoothSerialOriginal.prototype.connect = function (macAddress_or_uuid) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "connect", { "platforms": ["Android", "iOS", "Windows Phone"], "observable": true, "clearFunction": "disconnect" }, arguments); };
    BluetoothSerialOriginal.prototype.connectInsecure = function (macAddress) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "connectInsecure", { "platforms": ["Android"], "observable": true, "clearFunction": "disconnect" }, arguments); };
    BluetoothSerialOriginal.prototype.disconnect = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disconnect", {}, arguments); };
    BluetoothSerialOriginal.prototype.write = function (data) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "write", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.available = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "available", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.read = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "read", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.readUntil = function (delimiter) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "readUntil", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.subscribe = function (delimiter) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "subscribe", { "platforms": ["Android", "iOS", "Windows Phone"], "observable": true, "clearFunction": "unsubscribe" }, arguments); };
    BluetoothSerialOriginal.prototype.subscribeRawData = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "subscribeRawData", { "platforms": ["Android", "iOS", "Windows Phone"], "observable": true, "clearFunction": "unsubscribeRawData" }, arguments); };
    BluetoothSerialOriginal.prototype.clear = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "clear", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.list = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "list", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.isEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isEnabled", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.isConnected = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isConnected", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.readRSSI = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "readRSSI", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.showBluetoothSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showBluetoothSettings", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.enable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enable", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.discoverUnpaired = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "discoverUnpaired", { "platforms": ["Android", "iOS", "Windows Phone"] }, arguments); };
    BluetoothSerialOriginal.prototype.setDeviceDiscoveredListener = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setDeviceDiscoveredListener", { "platforms": ["Android", "iOS", "Windows Phone"], "observable": true, "clearFunction": "clearDeviceDiscoveredListener" }, arguments); };
    BluetoothSerialOriginal.prototype.setName = function (newName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setName", { "platforms": ["Android"], "sync": true }, arguments); };
    BluetoothSerialOriginal.prototype.setDiscoverable = function (discoverableDuration) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setDiscoverable", { "platforms": ["Android"], "sync": true }, arguments); };
    BluetoothSerialOriginal.pluginName = "BluetoothSerial";
    BluetoothSerialOriginal.repo = "https://github.com/don/BluetoothSerial";
    BluetoothSerialOriginal.plugin = "cordova-plugin-bluetooth-serial";
    BluetoothSerialOriginal.pluginRef = "bluetoothSerial";
    BluetoothSerialOriginal.platforms = ["Android", "iOS", "Windows Phone 8"];
    return BluetoothSerialOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var BluetoothSerial = new BluetoothSerialOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 498 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Braintree; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var BraintreeOriginal = /** @class */ (function (_super) {
    __extends(BraintreeOriginal, _super);
    function BraintreeOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BraintreeOriginal.prototype.initialize = function (token) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "initialize", { "platforms": ["Android", "iOS"] }, arguments); };
    BraintreeOriginal.prototype.setupApplePay = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setupApplePay", { "platforms": ["iOS"] }, arguments); };
    BraintreeOriginal.prototype.presentDropInPaymentUI = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "presentDropInPaymentUI", { "platforms": ["Android", "iOS"] }, arguments); };
    BraintreeOriginal.pluginName = "Braintree";
    BraintreeOriginal.plugin = "cordova-plugin-braintree";
    BraintreeOriginal.pluginRef = "BraintreePlugin";
    BraintreeOriginal.repo = "https://github.com/taracque/cordova-plugin-braintree";
    BraintreeOriginal.platforms = ["Android", "iOS"];
    BraintreeOriginal.install = "ionic cordova plugin add https://github.com/taracque/cordova-plugin-braintree";
    BraintreeOriginal.installVariables = [];
    return BraintreeOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Braintree = new BraintreeOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 499 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Brightness; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var BrightnessOriginal = /** @class */ (function (_super) {
    __extends(BrightnessOriginal, _super);
    function BrightnessOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BrightnessOriginal.prototype.setBrightness = function (value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setBrightness", {}, arguments); };
    BrightnessOriginal.prototype.getBrightness = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getBrightness", {}, arguments); };
    BrightnessOriginal.prototype.setKeepScreenOn = function (value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setKeepScreenOn", {}, arguments); };
    BrightnessOriginal.pluginName = "Brightness";
    BrightnessOriginal.plugin = "cordova-plugin-brightness";
    BrightnessOriginal.pluginRef = "cordova.plugins.brightness";
    BrightnessOriginal.repo = "https://github.com/mgcrea/cordova-plugin-brightness";
    BrightnessOriginal.platforms = ["Android", "iOS"];
    return BrightnessOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Brightness = new BrightnessOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9icmlnaHRuZXNzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQStCeEMsOEJBQWlCOzs7O0lBUy9DLGtDQUFhLGFBQUMsS0FBYTtJQVczQixrQ0FBYTtJQVFiLG9DQUFlLGFBQUMsS0FBYzs7Ozs7O3FCQTVEaEM7RUFnQ2dDLGlCQUFpQjtTQUFwQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cblxuLyoqXG4gKiBAbmFtZSBCcmlnaHRuZXNzXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBCcmlnaHRuZXNzIHBsdWdpbiBsZXQgeW91IGNvbnRyb2wgdGhlIGRpc3BsYXkgYnJpZ2h0bmVzcyBvZiB5b3VyIGRldmljZS5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtcGx1Z2luLWJyaWdodG5lc3NgLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbQnJpZ2h0bmVzcyBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL21nY3JlYS9jb3Jkb3ZhLXBsdWdpbi1icmlnaHRuZXNzKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEJyaWdodG5lc3MgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2JyaWdodG5lc3MnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgYnJpZ2h0bmVzczogQnJpZ2h0bmVzcykgeyB9XG4gKlxuICogLi4uXG4gKlxuICogbGV0IGJyaWdodG5lc3NWYWx1ZTogbnVtYmVyID0gMC44O1xuICogdGhpcy5icmlnaHRuZXNzLnNldEJyaWdodG5lc3MoYnJpZ2h0bmVzc1ZhbHVlKTtcbiAqIGBgYFxuICpcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdCcmlnaHRuZXNzJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tYnJpZ2h0bmVzcycsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5icmlnaHRuZXNzJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9tZ2NyZWEvY29yZG92YS1wbHVnaW4tYnJpZ2h0bmVzcycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEJyaWdodG5lc3MgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGJyaWdodG5lc3Mgb2YgdGhlIGRpc3BsYXkuXG4gICAqXG4gICAqIEBwYXJhbSB7dmFsdWV9IEZsb2F0aW5nIG51bWJlciBiZXR3ZWVuIDAgYW5kIDEgaW4gd2hpY2ggY2FzZSAxIG1lYW5zIDEwMCUgYnJpZ2h0bmVzcyBhbmQgMCBtZWFucyAwJSBicmlnaHRuZXNzLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIGlmIHNldHRpbmcgYnJpZ2h0bmVzcyB3YXMgc3VjY2Vzc2Z1bC5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc2V0QnJpZ2h0bmVzcyh2YWx1ZTogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVhZHMgdGhlIGN1cnJlbnQgYnJpZ2h0bmVzcyBvZiB0aGUgZGV2aWNlIGRpc3BsYXkuXG4gICAqXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGVcbiAgICogYnJpZ2h0bmVzcyB2YWx1ZSBvZiB0aGUgZGV2aWNlIGRpc3BsYXkgKGZsb2F0aW5nIG51bWJlciBiZXR3ZWVuIDAgYW5kIDEpLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRCcmlnaHRuZXNzKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEtlZXBzIHRoZSBzY3JlZW4gb24uIFByZXZlbnRzIHRoZSBkZXZpY2UgZnJvbSBzZXR0aW5nIHRoZSBzY3JlZW4gdG8gc2xlZXAuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldEtlZXBTY3JlZW5Pbih2YWx1ZTogYm9vbGVhbik6IHZvaWQge1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 500 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Broadcaster; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var BroadcasterOriginal = /** @class */ (function (_super) {
    __extends(BroadcasterOriginal, _super);
    function BroadcasterOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BroadcasterOriginal.prototype.addEventListener = function (eventName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addEventListener", { "observable": true, "clearFunction": "removeEventListener", "clearWithArgs": true }, arguments); };
    BroadcasterOriginal.prototype.fireNativeEvent = function (eventName, eventData) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "fireNativeEvent", {}, arguments); };
    BroadcasterOriginal.pluginName = "Broadcaster";
    BroadcasterOriginal.plugin = "cordova-plugin-broadcaster";
    BroadcasterOriginal.pluginRef = "broadcaster";
    BroadcasterOriginal.repo = "https://github.com/bsorrentino/cordova-broadcaster";
    BroadcasterOriginal.platforms = ["Android", "iOS"];
    return BroadcasterOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Broadcaster = new BroadcasterOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9icm9hZGNhc3Rlci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0lBK0JaLCtCQUFpQjs7OztJQVloRCxzQ0FBZ0IsYUFBQyxTQUFpQjtJQVdsQyxxQ0FBZSxhQUFDLFNBQWlCLEVBQUUsU0FBYzs7Ozs7O3NCQXhEbkQ7RUFpQ2lDLGlCQUFpQjtTQUFyQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuLyoqXG4gKiBAbmFtZSBCcm9hZGNhc3RlclxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiBhZGRzIGV4Y2hhbmdpbmcgZXZlbnRzIGJldHdlZW4gbmF0aXZlIGNvZGUgYW5kIHlvdXIgYXBwLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQnJvYWRjYXN0ZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2Jyb2FkY2FzdGVyJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGJyb2FkY2FzdGVyOiBCcm9hZGNhc3RlcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogLy8gTGlzdGVuIHRvIGV2ZW50cyBmcm9tIE5hdGl2ZVxuICogdGhpcy5icm9hZGNhc3Rlci5hZGRFdmVudExpc3RlbmVyKCdldmVudE5hbWUnKS5zdWJzY3JpYmUoKGV2ZW50KSA9PiBjb25zb2xlLmxvZyhldmVudCkpO1xuICpcbiAqIC8vIFNlbmQgZXZlbnQgdG8gTmF0aXZlXG4gKiB0aGlzLmJyb2FkY2FzdGVyLmZpcmVOYXRpdmVFdmVudCgnZXZlbnROYW1lJywge30pLnRoZW4oKCkgPT4gY29uc29sZS5sb2coJ3N1Y2Nlc3MnKSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnQnJvYWRjYXN0ZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1icm9hZGNhc3RlcicsXG4gIHBsdWdpblJlZjogJ2Jyb2FkY2FzdGVyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ic29ycmVudGluby9jb3Jkb3ZhLWJyb2FkY2FzdGVyJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQnJvYWRjYXN0ZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gbGlzdGVuIHRvIGFuIGV2ZW50IHNlbnQgZnJvbSB0aGUgbmF0aXZlIGNvZGVcbiAgICogQHBhcmFtIGV2ZW50TmFtZSB7c3RyaW5nfVxuICAgKiBAcmV0dXJuIHtPYnNlcnZhYmxlPGFueT59IFJldHVybnMgYW4gb2JzZXJ2YWJsZSB0byB3YXRjaCB3aGVuIGFuIGV2ZW50IGlzIHJlY2VpdmVkXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAncmVtb3ZlRXZlbnRMaXN0ZW5lcicsXG4gICAgY2xlYXJXaXRoQXJnczogdHJ1ZVxuICB9KVxuICBhZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBmdW5jdGlvbiBzZW5kcyBkYXRhIHRvIHRoZSBuYXRpdmUgY29kZVxuICAgKiBAcGFyYW0gZXZlbnROYW1lIHtzdHJpbmd9XG4gICAqIEBwYXJhbSBldmVudERhdGEge2FueX1cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gYW4gZXZlbnQgaXMgc3VjY2Vzc2Z1bGx5IGZpcmVkXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGZpcmVOYXRpdmVFdmVudChldmVudE5hbWU6IHN0cmluZywgZXZlbnREYXRhOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 501 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BrowserTab; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var BrowserTabOriginal = /** @class */ (function (_super) {
    __extends(BrowserTabOriginal, _super);
    function BrowserTabOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BrowserTabOriginal.prototype.isAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAvailable", {}, arguments); };
    BrowserTabOriginal.prototype.openUrl = function (url) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "openUrl", {}, arguments); };
    BrowserTabOriginal.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "close", {}, arguments); };
    BrowserTabOriginal.pluginName = "BrowserTab";
    BrowserTabOriginal.plugin = "cordova-plugin-browsertab";
    BrowserTabOriginal.pluginRef = "cordova.plugins.browsertab";
    BrowserTabOriginal.repo = "https://github.com/google/cordova-plugin-browsertab";
    BrowserTabOriginal.platforms = ["Android", "iOS"];
    return BrowserTabOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var BrowserTab = new BrowserTabOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9icm93c2VyLXRhYi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUEwQ3hDLDhCQUFpQjs7OztJQU8vQyxnQ0FBVztJQVVYLDRCQUFPLGFBQUMsR0FBVztJQVNuQiwwQkFBSzs7Ozs7O3FCQXBFUDtFQTBDZ0MsaUJBQWlCO1NBQXBDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBCcm93c2VyIFRhYlxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiBwcm92aWRlcyBhbiBpbnRlcmZhY2UgdG8gaW4tYXBwIGJyb3dzZXIgdGFicyB0aGF0IGV4aXN0IG9uIHNvbWUgbW9iaWxlIHBsYXRmb3Jtcywgc3BlY2lmaWNhbGx5IFtDdXN0b20gVGFic10oaHR0cDovL2RldmVsb3Blci5hbmRyb2lkLmNvbS90b29scy9zdXBwb3J0LWxpYnJhcnkvZmVhdHVyZXMuaHRtbCNjdXN0b20tdGFicykgb24gQW5kcm9pZCAoaW5jbHVkaW5nIHRoZSBbQ2hyb21lIEN1c3RvbSBUYWJzXShodHRwczovL2RldmVsb3Blci5jaHJvbWUuY29tL211bHRpZGV2aWNlL2FuZHJvaWQvY3VzdG9tdGFicykgaW1wbGVtZW50YXRpb24pLCBhbmQgW1NGU2FmYXJpVmlld0NvbnRyb2xsZXJdKGh0dHBzOi8vZGV2ZWxvcGVyLmFwcGxlLmNvbS9saWJyYXJ5L2lvcy9kb2N1bWVudGF0aW9uL1NhZmFyaVNlcnZpY2VzL1JlZmVyZW5jZS9TRlNhZmFyaVZpZXdDb250cm9sbGVyX1JlZi8pIG9uIGlPUy5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEJyb3dzZXJUYWIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2Jyb3dzZXItdGFiJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGJyb3dzZXJUYWI6IEJyb3dzZXJUYWIpIHtcbiAqXG4gKiAgIGJyb3dzZXJUYWIuaXNBdmFpbGFibGUoKVxuICogICAgIC50aGVuKChpc0F2YWlsYWJsZTogYm9vbGVhbikgPT4ge1xuICpcbiAqICAgICAgIGlmIChpc0F2YWlsYWJsZSkge1xuICpcbiAqICAgICAgICAgYnJvd3NlclRhYi5vcGVuVXJsKCdodHRwczovL2lvbmljLmlvJyk7XG4gKlxuICogICAgICAgfSBlbHNlIHtcbiAqXG4gKiAgICAgICAgIC8vIG9wZW4gVVJMIHdpdGggSW5BcHBCcm93c2VyIGluc3RlYWQgb3IgU2FmYXJpVmlld0NvbnRyb2xsZXJcbiAqXG4gKiAgICAgICB9XG4gKlxuICogICAgIH0pO1xuICpcbiAqXG4gKiB9XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnQnJvd3NlclRhYicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWJyb3dzZXJ0YWInLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuYnJvd3NlcnRhYicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL2NvcmRvdmEtcGx1Z2luLWJyb3dzZXJ0YWInLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBCcm93c2VyVGFiIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBCcm93c2VyVGFiIG9wdGlvbiBpcyBhdmFpbGFibGVcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gY2hlY2sgaXMgc3VjY2Vzc2Z1bCBhbmQgcmV0dXJucyB0cnVlIG9yIGZhbHNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGlzQXZhaWxhYmxlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIE9wZW5zIHRoZSBwcm92aWRlZCBVUkwgdXNpbmcgYSBicm93c2VyIHRhYlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsICBUaGUgVVJMIHlvdSB3YW50IHRvIG9wZW5cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gY2hlY2sgb3BlbiB3YXMgc3VjY2Vzc2Z1bFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBvcGVuVXJsKHVybDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2xvc2VzIGJyb3dzZXIgdGFiXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIGNsb3NlIHdhcyBmaW5pc2hlZFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBjbG9zZSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 502 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Calendar; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var CalendarOriginal = /** @class */ (function (_super) {
    __extends(CalendarOriginal, _super);
    function CalendarOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CalendarOriginal.prototype.hasReadWritePermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasReadWritePermission", {}, arguments); };
    CalendarOriginal.prototype.hasReadPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasReadPermission", {}, arguments); };
    CalendarOriginal.prototype.hasWritePermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasWritePermission", {}, arguments); };
    CalendarOriginal.prototype.requestWritePermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestWritePermission", {}, arguments); };
    CalendarOriginal.prototype.requestReadPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestReadPermission", {}, arguments); };
    CalendarOriginal.prototype.requestReadWritePermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestReadWritePermission", {}, arguments); };
    CalendarOriginal.prototype.createCalendar = function (nameOrOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createCalendar", {}, arguments); };
    CalendarOriginal.prototype.deleteCalendar = function (name) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteCalendar", {}, arguments); };
    CalendarOriginal.prototype.getCalendarOptions = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCalendarOptions", { "sync": true }, arguments); };
    CalendarOriginal.prototype.createEvent = function (title, location, notes, startDate, endDate) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createEvent", {}, arguments); };
    CalendarOriginal.prototype.createEventWithOptions = function (title, location, notes, startDate, endDate, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createEventWithOptions", {}, arguments); };
    CalendarOriginal.prototype.createEventInteractively = function (title, location, notes, startDate, endDate) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createEventInteractively", {}, arguments); };
    CalendarOriginal.prototype.createEventInteractivelyWithOptions = function (title, location, notes, startDate, endDate, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createEventInteractivelyWithOptions", {}, arguments); };
    CalendarOriginal.prototype.findEvent = function (title, location, notes, startDate, endDate) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "findEvent", {}, arguments); };
    CalendarOriginal.prototype.findEventWithOptions = function (title, location, notes, startDate, endDate, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "findEventWithOptions", {}, arguments); };
    CalendarOriginal.prototype.listEventsInRange = function (startDate, endDate) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "listEventsInRange", { "platforms": ["Android"] }, arguments); };
    CalendarOriginal.prototype.listCalendars = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "listCalendars", {}, arguments); };
    CalendarOriginal.prototype.findAllEventsInNamedCalendar = function (calendarName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "findAllEventsInNamedCalendar", { "platforms": ["iOS"] }, arguments); };
    CalendarOriginal.prototype.modifyEvent = function (title, location, notes, startDate, endDate, newTitle, newLocation, newNotes, newStartDate, newEndDate) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "modifyEvent", { "platforms": ["iOS"] }, arguments); };
    CalendarOriginal.prototype.modifyEventWithOptions = function (title, location, notes, startDate, endDate, newTitle, newLocation, newNotes, newStartDate, newEndDate, filterOptions, newOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "modifyEventWithOptions", { "platforms": ["iOS"] }, arguments); };
    CalendarOriginal.prototype.deleteEvent = function (title, location, notes, startDate, endDate) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteEvent", {}, arguments); };
    CalendarOriginal.prototype.deleteEventFromNamedCalendar = function (title, location, notes, startDate, endDate, calendarName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteEventFromNamedCalendar", { "platforms": ["iOS"] }, arguments); };
    CalendarOriginal.prototype.openCalendar = function (date) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "openCalendar", {}, arguments); };
    CalendarOriginal.pluginName = "Calendar";
    CalendarOriginal.plugin = "cordova-plugin-calendar";
    CalendarOriginal.pluginRef = "plugins.calendar";
    CalendarOriginal.repo = "https://github.com/EddyVerbruggen/Calendar-PhoneGap-Plugin";
    CalendarOriginal.platforms = ["Android", "iOS"];
    return CalendarOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Calendar = new CalendarOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 503 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CallNumber; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var CallNumberOriginal = /** @class */ (function (_super) {
    __extends(CallNumberOriginal, _super);
    function CallNumberOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CallNumberOriginal.prototype.callNumber = function (numberToCall, bypassAppChooser) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "callNumber", { "callbackOrder": "reverse" }, arguments); };
    CallNumberOriginal.prototype.isCallSupported = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isCallSupported", { "callbackOrder": "reverse" }, arguments); };
    CallNumberOriginal.pluginName = "CallNumber";
    CallNumberOriginal.plugin = "call-number";
    CallNumberOriginal.pluginRef = "plugins.CallNumber";
    CallNumberOriginal.repo = "https://github.com/Rohfosho/CordovaCallNumberPlugin";
    CallNumberOriginal.platforms = ["Android", "iOS"];
    return CallNumberOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var CallNumber = new CallNumberOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9jYWxsLW51bWJlci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUErQnhDLDhCQUFpQjs7OztJQVcvQywrQkFBVSxhQUFDLFlBQW9CLEVBQUUsZ0JBQXlCO0lBVzFELG9DQUFlOzs7Ozs7cUJBdERqQjtFQWdDZ0MsaUJBQWlCO1NBQXBDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBDYWxsIE51bWJlclxuICogQGRlc2NyaXB0aW9uXG4gKiBDYWxsIGEgbnVtYmVyIGRpcmVjdGx5IGZyb20geW91ciBDb3Jkb3ZhL0lvbmljIGFwcGxpY2F0aW9uLlxuICogKipOT1RFKio6IFRoZSBpT1MgU2ltdWxhdG9yIChhbmQgbWF5YmUgQW5kcm9pZCBTaW11bGF0b3JzKSBkbyBub3QgcHJvdmlkZSBhY2Nlc3MgdG8gdGhlIHBob25lIHN1YnN5c3RlbS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IENhbGxOdW1iZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NhbGwtbnVtYmVyJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGNhbGxOdW1iZXI6IENhbGxOdW1iZXIpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiB0aGlzLmNhbGxOdW1iZXIuY2FsbE51bWJlcihcIjE4MDAxMDEwMTAxXCIsIHRydWUpXG4gKiAgIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdMYXVuY2hlZCBkaWFsZXIhJykpXG4gKiAgIC5jYXRjaCgoKSA9PiBjb25zb2xlLmxvZygnRXJyb3IgbGF1bmNoaW5nIGRpYWxlcicpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdDYWxsTnVtYmVyJyxcbiAgcGx1Z2luOiAnY2FsbC1udW1iZXInLFxuICBwbHVnaW5SZWY6ICdwbHVnaW5zLkNhbGxOdW1iZXInLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL1JvaGZvc2hvL0NvcmRvdmFDYWxsTnVtYmVyUGx1Z2luJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQ2FsbE51bWJlciBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogQ2FsbHMgYSBwaG9uZSBudW1iZXJcbiAgICogQHBhcmFtIG51bWJlclRvQ2FsbCB7c3RyaW5nfSBUaGUgcGhvbmUgbnVtYmVyIHRvIGNhbGwgYXMgYSBzdHJpbmdcbiAgICogQHBhcmFtIGJ5cGFzc0FwcENob29zZXIge2Jvb2xlYW59IFNldCB0byB0cnVlIHRvIGJ5cGFzcyB0aGUgYXBwIGNob29zZXIgYW5kIGdvIGRpcmVjdGx5IHRvIGRpYWxlclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIGNhbGxOdW1iZXIobnVtYmVyVG9DYWxsOiBzdHJpbmcsIGJ5cGFzc0FwcENob29zZXI6IGJvb2xlYW4pOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBjYWxsIGZlYXR1cmUgaXMgYXZhaWxhYmxlXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAgaXNDYWxsU3VwcG9ydGVkKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 504 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export DestinationType */
/* unused harmony export EncodingType */
/* unused harmony export MediaType */
/* unused harmony export PictureSourceType */
/* unused harmony export PopoverArrowDirection */
/* unused harmony export Direction */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Camera; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var DestinationType;
(function (DestinationType) {
    DestinationType[DestinationType["DATA_URL"] = 0] = "DATA_URL";
    DestinationType[DestinationType["FILE_URL"] = 1] = "FILE_URL";
    DestinationType[DestinationType["NATIVE_URI"] = 2] = "NATIVE_URI";
})(DestinationType || (DestinationType = {}));
var EncodingType;
(function (EncodingType) {
    EncodingType[EncodingType["JPEG"] = 0] = "JPEG";
    EncodingType[EncodingType["PNG"] = 1] = "PNG";
})(EncodingType || (EncodingType = {}));
var MediaType;
(function (MediaType) {
    MediaType[MediaType["PICTURE"] = 0] = "PICTURE";
    MediaType[MediaType["VIDEO"] = 1] = "VIDEO";
    MediaType[MediaType["ALLMEDIA"] = 2] = "ALLMEDIA";
})(MediaType || (MediaType = {}));
var PictureSourceType;
(function (PictureSourceType) {
    PictureSourceType[PictureSourceType["PHOTOLIBRARY"] = 0] = "PHOTOLIBRARY";
    PictureSourceType[PictureSourceType["CAMERA"] = 1] = "CAMERA";
    PictureSourceType[PictureSourceType["SAVEDPHOTOALBUM"] = 2] = "SAVEDPHOTOALBUM";
})(PictureSourceType || (PictureSourceType = {}));
var PopoverArrowDirection;
(function (PopoverArrowDirection) {
    PopoverArrowDirection[PopoverArrowDirection["ARROW_UP"] = 1] = "ARROW_UP";
    PopoverArrowDirection[PopoverArrowDirection["ARROW_DOWN"] = 2] = "ARROW_DOWN";
    PopoverArrowDirection[PopoverArrowDirection["ARROW_LEFT"] = 3] = "ARROW_LEFT";
    PopoverArrowDirection[PopoverArrowDirection["ARROW_RIGHT"] = 4] = "ARROW_RIGHT";
    PopoverArrowDirection[PopoverArrowDirection["ARROW_ANY"] = 5] = "ARROW_ANY";
})(PopoverArrowDirection || (PopoverArrowDirection = {}));
var Direction;
(function (Direction) {
    Direction[Direction["BACK"] = 0] = "BACK";
    Direction[Direction["FRONT"] = 1] = "FRONT";
})(Direction || (Direction = {}));
var CameraOriginal = /** @class */ (function (_super) {
    __extends(CameraOriginal, _super);
    function CameraOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Constant for possible destination types
         */
        _this.DestinationType = {
            /** Return base64 encoded string. DATA_URL can be very memory intensive and cause app crashes or out of memory errors. Use FILE_URI or NATIVE_URI if possible */
            DATA_URL: 0,
            /** Return file uri (content://media/external/images/media/2 for Android) */
            FILE_URI: 1,
            /** Return native uri (eg. asset-library://... for iOS) */
            NATIVE_URI: 2
        };
        /**
         * Convenience constant
         */
        _this.EncodingType = {
            /** Return JPEG encoded image */
            JPEG: 0,
            /** Return PNG encoded image */
            PNG: 1
        };
        /**
         * Convenience constant
         */
        _this.MediaType = {
            /** Allow selection of still pictures only. DEFAULT. Will return format specified via DestinationType */
            PICTURE: 0,
            /** Allow selection of video only, ONLY RETURNS URL */
            VIDEO: 1,
            /** Allow selection from all media types */
            ALLMEDIA: 2
        };
        /**
         * Convenience constant
         */
        _this.PictureSourceType = {
            /** Choose image from picture library (same as SAVEDPHOTOALBUM for Android) */
            PHOTOLIBRARY: 0,
            /** Take picture from camera */
            CAMERA: 1,
            /** Choose image from picture library (same as PHOTOLIBRARY for Android) */
            SAVEDPHOTOALBUM: 2
        };
        /**
         * Convenience constant
         */
        _this.PopoverArrowDirection = {
            ARROW_UP: 1,
            ARROW_DOWN: 2,
            ARROW_LEFT: 4,
            ARROW_RIGHT: 8,
            ARROW_ANY: 15
        };
        /**
         * Convenience constant
         */
        _this.Direction = {
            /** Use the back-facing camera */
            BACK: 0,
            /** Use the front-facing camera */
            FRONT: 1
        };
        return _this;
    }
    CameraOriginal.prototype.getPicture = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPicture", { "callbackOrder": "reverse" }, arguments); };
    CameraOriginal.prototype.cleanup = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "cleanup", { "platforms": ["iOS"] }, arguments); };
    CameraOriginal.pluginName = "Camera";
    CameraOriginal.plugin = "cordova-plugin-camera";
    CameraOriginal.pluginRef = "navigator.camera";
    CameraOriginal.repo = "https://github.com/apache/cordova-plugin-camera";
    CameraOriginal.platforms = ["Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "Ubuntu", "Windows", "Windows Phone 8"];
    return CameraOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Camera = new CameraOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 505 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CameraPreview; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var CameraPreviewOriginal = /** @class */ (function (_super) {
    __extends(CameraPreviewOriginal, _super);
    function CameraPreviewOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.FOCUS_MODE = {
            FIXED: 'fixed',
            AUTO: 'auto',
            CONTINUOUS: 'continuous',
            CONTINUOUS_PICTURE: 'continuous-picture',
            CONTINUOUS_VIDEO: 'continuous-video',
            EDOF: 'edof',
            INFINITY: 'infinity',
            MACRO: 'macro' // Android Only
        };
        _this.EXPOSURE_MODE = {
            LOCK: 'lock',
            AUTO: 'auto',
            CONTINUOUS: 'continuous',
            CUSTOM: 'custom'
        };
        _this.FLASH_MODE = {
            OFF: 'off',
            ON: 'on',
            AUTO: 'auto',
            RED_EYE: 'red-eye',
            TORCH: 'torch' // Android Only
        };
        _this.COLOR_EFFECT = {
            AQUA: 'aqua',
            BLACKBOARD: 'blackboard',
            MONO: 'mono',
            NEGATIVE: 'negative',
            NONE: 'none',
            POSTERIZE: 'posterize',
            SEPIA: 'sepia',
            SOLARIZE: 'solarize',
            WHITEBOARD: 'whiteboard' // Android Only
        };
        _this.CAMERA_DIRECTION = {
            BACK: 'back',
            FRONT: 'front'
        };
        return _this;
    }
    CameraPreviewOriginal.prototype.startCamera = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startCamera", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    CameraPreviewOriginal.prototype.stopCamera = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopCamera", {}, arguments); };
    CameraPreviewOriginal.prototype.switchCamera = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchCamera", {}, arguments); };
    CameraPreviewOriginal.prototype.hide = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hide", {}, arguments); };
    CameraPreviewOriginal.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", {}, arguments); };
    CameraPreviewOriginal.prototype.takePicture = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "takePicture", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    CameraPreviewOriginal.prototype.setColorEffect = function (effect) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setColorEffect", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    CameraPreviewOriginal.prototype.setZoom = function (zoom) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setZoom", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    CameraPreviewOriginal.prototype.getMaxZoom = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMaxZoom", {}, arguments); };
    CameraPreviewOriginal.prototype.getZoom = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getZoom", {}, arguments); };
    CameraPreviewOriginal.prototype.setPreviewSize = function (dimensions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setPreviewSize", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    CameraPreviewOriginal.prototype.getFocusMode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getFocusMode", {}, arguments); };
    CameraPreviewOriginal.prototype.setFocusMode = function (focusMode) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setFocusMode", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    CameraPreviewOriginal.prototype.getSupportedFocusModes = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getSupportedFocusModes", {}, arguments); };
    CameraPreviewOriginal.prototype.getFlashMode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getFlashMode", {}, arguments); };
    CameraPreviewOriginal.prototype.setFlashMode = function (flashMode) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setFlashMode", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    CameraPreviewOriginal.prototype.getSupportedFlashModes = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getSupportedFlashModes", {}, arguments); };
    CameraPreviewOriginal.prototype.getSupportedPictureSizes = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getSupportedPictureSizes", {}, arguments); };
    CameraPreviewOriginal.prototype.getExposureMode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getExposureMode", {}, arguments); };
    CameraPreviewOriginal.prototype.getExposureModes = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getExposureModes", {}, arguments); };
    CameraPreviewOriginal.prototype.setExposureMode = function (lock) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setExposureMode", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    CameraPreviewOriginal.prototype.getExposureCompensation = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getExposureCompensation", {}, arguments); };
    CameraPreviewOriginal.prototype.setExposureCompensation = function (exposureCompensation) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setExposureCompensation", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    CameraPreviewOriginal.prototype.getExposureCompensationRange = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getExposureCompensationRange", {}, arguments); };
    CameraPreviewOriginal.prototype.tapToFocus = function (xPoint, yPoint) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "tapToFocus", {}, arguments); };
    CameraPreviewOriginal.pluginName = "CameraPreview";
    CameraPreviewOriginal.plugin = "cordova-plugin-camera-preview";
    CameraPreviewOriginal.pluginRef = "CameraPreview";
    CameraPreviewOriginal.repo = "https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview";
    CameraPreviewOriginal.platforms = ["Android", "iOS"];
    return CameraPreviewOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var CameraPreview = new CameraPreviewOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 506 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CardIO; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var CardIOOriginal = /** @class */ (function (_super) {
    __extends(CardIOOriginal, _super);
    function CardIOOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CardIOOriginal.prototype.canScan = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "canScan", {}, arguments); };
    CardIOOriginal.prototype.scan = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "scan", {}, arguments); };
    CardIOOriginal.prototype.version = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "version", {}, arguments); };
    CardIOOriginal.pluginName = "CardIO";
    CardIOOriginal.plugin = "card.io.cordova.mobilesdk";
    CardIOOriginal.pluginRef = "CardIO";
    CardIOOriginal.repo = "https://github.com/card-io/card.io-Cordova-Plugin";
    CardIOOriginal.platforms = ["Android", "iOS"];
    return CardIOOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var CardIO = new CardIOOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9jYXJkLWlvL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQTZLNUMsMEJBQWlCOzs7O0lBUzNDLHdCQUFPO0lBVVAscUJBQUksYUFBQyxPQUF1QjtJQVM1Qix3QkFBTzs7Ozs7O2lCQTFNVDtFQThLNEIsaUJBQWlCO1NBQWhDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBDYXJkSU9PcHRpb25zIHtcblxuICAvKipcbiAgICogU2V0IHRvIHRydWUgdG8gcmVxdWlyZSBleHBpcnkgZGF0ZVxuICAgKi9cbiAgcmVxdWlyZUV4cGlyeT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqICBUaGUgdXNlciB3aWxsIGJlIHByb21wdGVkIGZvciB0aGUgY2FyZCBDVlZcbiAgICovXG4gIHJlcXVpcmVDVlY/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBUaGUgdXNlciB3aWxsIGJlIHByb21wdGVkIGZvciB0aGUgY2FyZCBiaWxsaW5nIHBvc3RhbCBjb2RlLlxuICAgKi9cbiAgcmVxdWlyZVBvc3RhbENvZGU/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiAgUmVtb3ZlcyB0aGUga2V5Ym9hcmQgYnV0dG9uIGZyb20gdGhlIHNjYW4gc2NyZWVuLlxuICAgKi9cbiAgc3VwcmVzc01hbnVhbD86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFRoZSBwb3N0YWwgY29kZSB3aWxsIG9ubHkgY29sbGVjdCBudW1lcmljIGlucHV0LiBTZXQgdGhpcyBpZiB5b3Uga25vdyB0aGUgZXhwZWN0ZWQgY291bnRyeSdzIHBvc3RhbCBjb2RlIGhhcyBvbmx5IG51bWVyaWMgcG9zdGFsIGNvZGVzLlxuICAgKi9cbiAgcmVzdHJpY3RQb3N0YWxDb2RlVG9OdW1lcmljT25seT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFRoZSB0aGVtZSBmb3IgdGhlIGNhcmQuaW8gQWN0aXZpdHkncyB3aWxsIGJlIHNldCB0byB0aGUgdGhlbWUgb2YgdGhlIGFwcGxpY2F0aW9uLlxuICAgKi9cbiAga2VlcEFwcGxpY2F0aW9uVGhlbWU/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBUaGUgdXNlciB3aWxsIGJlIHByb21wdGVkIGZvciB0aGUgY2FyZGhvbGRlciBuYW1lXG4gICAqL1xuICByZXF1aXJlQ2FyZGhvbGRlck5hbWU/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBVc2VkIHRvIGRpc3BsYXkgaW5zdHJ1Y3Rpb25zIHRvIHRoZSB1c2VyIHdoaWxlIHRoZXkgYXJlIHNjYW5uaW5nIHRoZWlyIGNhcmQuXG4gICAqL1xuICBzY2FuSW5zdHJ1Y3Rpb25zPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiAgSWYgc2V0LCB0aGUgY2FyZCB3aWxsIG5vdCBiZSBzY2FubmVkIHdpdGggdGhlIGNhbWVyYS5cbiAgICovXG4gIG5vQ2FtZXJhPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogSWYgc2NhbkV4cGlyeSBpcyB0cnVlLCBhbiBhdHRlbXB0IHRvIGV4dHJhY3QgdGhlIGV4cGlyeSBmcm9tIHRoZSBjYXJkIGltYWdlIHdpbGwgYmUgbWFkZS5cbiAgICovXG4gIHNjYW5FeHBpcnk/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBUaGUgcHJlZmVycmVkIGxhbmd1YWdlIGZvciBhbGwgc3RyaW5ncyBhcHBlYXJpbmcgaW4gdGhlIHVzZXIgaW50ZXJmYWNlLiBJZiBub3Qgc2V0LCBvciBpZiBzZXQgdG8gbnVsbCwgZGVmYXVsdHMgdG8gdGhlIGRldmljZSdzIGN1cnJlbnQgbGFuZ3VhZ2Ugc2V0dGluZy5cbiAgICovXG4gIGxhbmd1YWdlT3JMb2NhbGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIENoYW5nZXMgdGhlIGNvbG9yIG9mIHRoZSBndWlkZSBvdmVybGF5IG9uIHRoZSBjYW1lcmEuIFRoZSBjb2xvciBpcyBwcm92aWRlZCBpbiBoZXhhZGVjaW1hbCBmb3JtYXQgKGUuZy4gYCNGRkZGRkZgKVxuICAgKi9cbiAgZ3VpZGVDb2xvcj86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHVzZXIgd2lsbCBub3QgYmUgcHJvbXB0ZWQgdG8gY29uZmlybSB0aGVpciBjYXJkIG51bWJlciBhZnRlciBwcm9jZXNzaW5nLlxuICAgKi9cbiAgc3VwcmVzc0NvbmZpcm1hdGlvbj86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFRoZSBjYXJkLmlvIGxvZ28gd2lsbCBub3QgYmUgc2hvd24gb3ZlcmxhaWQgb24gdGhlIGNhbWVyYS5cbiAgICovXG4gIGhpZGVDYXJkSU9Mb2dvPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogVGhlIGNhcmQuaW8gbG9nbyB3aWxsIGJlIHNob3duIGluc3RlYWQgb2YgdGhlIFBheVBhbCBsb2dvLlxuICAgKi9cbiAgdXNlQ2FyZElPTG9nbz86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIE9uY2UgYSBjYXJkIGltYWdlIGhhcyBiZWVuIGNhcHR1cmVkIGJ1dCBiZWZvcmUgaXQgaGFzIGJlZW4gcHJvY2Vzc2VkLCB0aGlzIHZhbHVlIHdpbGwgZGV0ZXJtaW5lIHdoZXRoZXIgdG8gY29udGludWUgcHJvY2Vzc2luZyBhcyB1c3VhbC5cbiAgICovXG4gIHN1cHJlc3NTY2FuPzogYm9vbGVhbjtcblxufVxuXG5leHBvcnQgaW50ZXJmYWNlIENhcmRJT1Jlc3BvbnNlIHtcblxuICAvKipcbiAgICogQ2FyZCB0eXBlXG4gICAqL1xuICBjYXJkVHlwZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBNYXNrZWQgY2FyZCBudW1iZXIsIHNob3dpbmcgb25seSBsYXN0IDQgZGlnaXRzXG4gICAqL1xuICByZWRhY3RlZENhcmROdW1iZXI6IHN0cmluZztcblxuICAvKipcbiAgICogRnVsbCBjYXJkIG51bWJlclxuICAgKi9cbiAgY2FyZE51bWJlcjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBFeHBpcnkgbW9udGhcbiAgICovXG4gIGV4cGlyeU1vbnRoOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEV4cGlyeSB5ZWFyXG4gICAqL1xuICBleHBpcnlZZWFyOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIENWVlxuICAgKi9cbiAgY3Z2OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFBvc3RhbCBjb2RlXG4gICAqL1xuICBwb3N0YWxDb2RlOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIENhcmRob2xkZXIgbmFtZVxuICAgKi9cbiAgY2FyZGhvbGRlck5hbWU6IHN0cmluZztcblxufVxuXG4vKipcbiAqIEBuYW1lIENhcmQgSU9cbiAqIEBkZXNjcmlwdGlvblxuICogQHVzYWdlXG4gKiBOb3RlOiBGb3IgdXNlIHdpdGggaU9TIDEwICsgV2hlbiBidWlsZGluZyB5b3VyIGFwcCB3aXRoIHRoZSBpT1MgMTAgU0RLICssIHlvdSBoYXZlIHRvIGFkZCBzb21lIGluZm8gdG8gdGhlIGluZm8ucGxpc3QgZmlsZS4gVGhpcyBpcyBkdWUgdG8gaW5jcmVhc2VkIHNlY3VyaXR5IGluIGlPUyAxMC4gR28gdG8geW91ciBhcHAgZGlyZWN0b3J5IGFuZCBzZWFyY2ggZm9yIHRoZSA8eW91ciBhcHAgbmFtZT5JbmZvLnBsaXN0IGZpbGUuIEFkZCB0aGUgZm9sbG93aW5nIGxpbmVzIGluIHRoZSBtYWluIDxkaWN0PiBlbGVtZW50LlxuICogYGBgeG1sXG4gKjxrZXk+TlNDYW1lcmFVc2FnZURlc2NyaXB0aW9uPC9rZXk+XG4gKjxzdHJpbmc+VG8gc2NhbiBjcmVkaXQgY2FyZHMuPC9zdHJpbmc+XG4gKmBgYFxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQ2FyZElPIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jYXJkLWlvJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGNhcmRJTzogQ2FyZElPKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogdGhpcy5jYXJkSU8uY2FuU2NhbigpXG4gKiAgIC50aGVuKFxuICogICAgIChyZXM6IGJvb2xlYW4pID0+IHtcbiAqICAgICAgIGlmKHJlcyl7XG4gKiAgICAgICAgIGxldCBvcHRpb25zID0ge1xuICogICAgICAgICAgIHJlcXVpcmVFeHBpcnk6IHRydWUsXG4gKiAgICAgICAgICAgcmVxdWlyZUNWVjogZmFsc2UsXG4gKiAgICAgICAgICAgcmVxdWlyZVBvc3RhbENvZGU6IGZhbHNlXG4gKiAgICAgICAgIH1cbiAqICAgICAgICAgQ2FyZElPLnNjYW4ob3B0aW9ucyk7XG4gKiAgICAgICB9XG4gKiAgICAgfVxuICogICApO1xuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogQ2FyZElPT3B0aW9uc1xuICogQ2FyZElPUmVzcG9uc2VcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdDYXJkSU8nLFxuICBwbHVnaW46ICdjYXJkLmlvLmNvcmRvdmEubW9iaWxlc2RrJyxcbiAgcGx1Z2luUmVmOiAnQ2FyZElPJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9jYXJkLWlvL2NhcmQuaW8tQ29yZG92YS1QbHVnaW4nLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDYXJkSU8gZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIENoZWNrIHdoZXRoZXIgY2FyZCBzY2FubmluZyBpcyBjdXJyZW50bHkgYXZhaWxhYmxlLiAoTWF5IHZhcnkgYnlcbiAgICogZGV2aWNlLCBPUyB2ZXJzaW9uLCBuZXR3b3JrIGNvbm5lY3Rpdml0eSwgZXRjLilcbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGNhblNjYW4oKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNjYW4gYSBjcmVkaXQgY2FyZCB3aXRoIGNhcmQuaW8uXG4gICAqIEBwYXJhbSB7Q2FyZElPT3B0aW9uc30gb3B0aW9ucyBPcHRpb25zIGZvciBjb25maWd1cmluZyB0aGUgcGx1Z2luXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNjYW4ob3B0aW9ucz86IENhcmRJT09wdGlvbnMpOiBQcm9taXNlPENhcmRJT1Jlc3BvbnNlPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHJpZXZlIHRoZSB2ZXJzaW9uIG9mIHRoZSBjYXJkLmlvIGxpYnJhcnkuIFVzZWZ1bCB3aGVuIGNvbnRhY3Rpbmcgc3VwcG9ydC5cbiAgICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgdmVyc2lvbigpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 507 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Clipboard; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var ClipboardOriginal = /** @class */ (function (_super) {
    __extends(ClipboardOriginal, _super);
    function ClipboardOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ClipboardOriginal.prototype.copy = function (text) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "copy", {}, arguments); };
    ClipboardOriginal.prototype.paste = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "paste", {}, arguments); };
    ClipboardOriginal.pluginName = "Clipboard";
    ClipboardOriginal.plugin = "cordova-clipboard";
    ClipboardOriginal.pluginRef = "cordova.plugins.clipboard";
    ClipboardOriginal.repo = "https://github.com/ihadeed/cordova-clipboard";
    ClipboardOriginal.platforms = ["Android", "iOS", "Windows Phone 8"];
    return ClipboardOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Clipboard = new ClipboardOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9jbGlwYm9hcmQvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBcUN6Qyw2QkFBaUI7Ozs7SUFROUMsd0JBQUksYUFBQyxJQUFZO0lBU2pCLHlCQUFLOzs7Ozs7b0JBdkRQO0VBc0MrQixpQkFBaUI7U0FBbkMsU0FBUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIENsaXBib2FyZFxuICogQGRlc2NyaXB0aW9uXG4gKiBDbGlwYm9hcmQgbWFuYWdlbWVudCBwbHVnaW4gZm9yIENvcmRvdmEgdGhhdCBzdXBwb3J0cyBpT1MsIEFuZHJvaWQsIGFuZCBXaW5kb3dzIFBob25lIDguXG4gKlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQ2xpcGJvYXJkIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jbGlwYm9hcmQnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgY2xpcGJvYXJkOiBDbGlwYm9hcmQpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiB0aGlzLmNsaXBib2FyZC5jb3B5KCdIZWxsbyB3b3JsZCcpO1xuICpcbiAqIHRoaXMuY2xpcGJvYXJkLnBhc3RlKCkudGhlbihcbiAqICAgIChyZXNvbHZlOiBzdHJpbmcpID0+IHtcbiAqICAgICAgIGFsZXJ0KHJlc29sdmUpO1xuICogICAgIH0sXG4gKiAgICAgKHJlamVjdDogc3RyaW5nKSA9PiB7XG4gKiAgICAgICBhbGVydCgnRXJyb3I6ICcgKyByZWplY3QpO1xuICogICAgIH1cbiAqICAgKTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0NsaXBib2FyZCcsXG4gIHBsdWdpbjogJ2NvcmRvdmEtY2xpcGJvYXJkJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLmNsaXBib2FyZCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vaWhhZGVlZC9jb3Jkb3ZhLWNsaXBib2FyZCcsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzIFBob25lIDgnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDbGlwYm9hcmQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIENvcGllcyB0aGUgZ2l2ZW4gdGV4dFxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dCBUZXh0IHRoYXQgZ2V0cyBjb3BpZWQgb24gdGhlIHN5c3RlbSBjbGlwYm9hcmRcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgYWZ0ZXIgdGhlIHRleHQgaGFzIGJlZW4gY29waWVkXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGNvcHkodGV4dDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUGFzdGVzIHRoZSB0ZXh0IHN0b3JlZCBpbiBjbGlwYm9hcmRcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgYWZ0ZXIgdGhlIHRleHQgaGFzIGJlZW4gcGFzdGVkXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHBhc3RlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 508 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export AcquisitionStatus */
/* unused harmony export AcquisitionManager */
/* unused harmony export SyncStatus */
/* unused harmony export InstallMode */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CodePush; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var AcquisitionStatus = /** @class */ (function () {
    function AcquisitionStatus() {
    }
    return AcquisitionStatus;
}());

var AcquisitionManager = /** @class */ (function () {
    function AcquisitionManager() {
    }
    return AcquisitionManager;
}());

/**
 * Defines the possible result statuses of the window.codePush.sync operation.
 */
var SyncStatus;
(function (SyncStatus) {
    /**
     * The application is up to date.
     */
    SyncStatus[SyncStatus["UP_TO_DATE"] = 0] = "UP_TO_DATE";
    /**
     * An update is available, it has been downloaded, unzipped and copied to the deployment folder.
     * After the completion of the callback invoked with SyncStatus.UPDATE_INSTALLED, the application will be reloaded with the updated code and resources.
     */
    SyncStatus[SyncStatus["UPDATE_INSTALLED"] = 1] = "UPDATE_INSTALLED";
    /**
     * An optional update is available, but the user declined to install it. The update was not downloaded.
     */
    SyncStatus[SyncStatus["UPDATE_IGNORED"] = 2] = "UPDATE_IGNORED";
    /**
     * An error happened during the sync operation. This might be an error while communicating with the server, downloading or unziping the update.
     * The console logs should contain more information about what happened. No update has been applied in this case.
     */
    SyncStatus[SyncStatus["ERROR"] = 3] = "ERROR";
    /**
     * There is an ongoing sync in progress, so this attempt to sync has been aborted.
     */
    SyncStatus[SyncStatus["IN_PROGRESS"] = 4] = "IN_PROGRESS";
    /**
     * Intermediate status - the plugin is about to check for updates.
     */
    SyncStatus[SyncStatus["CHECKING_FOR_UPDATE"] = 5] = "CHECKING_FOR_UPDATE";
    /**
     * Intermediate status - a user dialog is about to be displayed. This status will be reported only if user interaction is enabled.
     */
    SyncStatus[SyncStatus["AWAITING_USER_ACTION"] = 6] = "AWAITING_USER_ACTION";
    /**
     * Intermediate status - the update package is about to be downloaded.
     */
    SyncStatus[SyncStatus["DOWNLOADING_PACKAGE"] = 7] = "DOWNLOADING_PACKAGE";
    /**
     * Intermediate status - the update package is about to be installed.
     */
    SyncStatus[SyncStatus["INSTALLING_UPDATE"] = 8] = "INSTALLING_UPDATE";
})(SyncStatus || (SyncStatus = {}));
/**
 * Defines the available install modes for updates.
 */
var InstallMode;
(function (InstallMode) {
    /**
     * The update will be applied to the running application immediately. The application will be reloaded with the new content immediately.
     */
    InstallMode[InstallMode["IMMEDIATE"] = 0] = "IMMEDIATE";
    /**
     * The update is downloaded but not installed immediately. The new content will be available the next time the application is started.
     */
    InstallMode[InstallMode["ON_NEXT_RESTART"] = 1] = "ON_NEXT_RESTART";
    /**
     * The udpate is downloaded but not installed immediately. The new content will be available the next time the application is resumed or restarted, whichever event happends first.
     */
    InstallMode[InstallMode["ON_NEXT_RESUME"] = 2] = "ON_NEXT_RESUME";
})(InstallMode || (InstallMode = {}));
var CodePushOriginal = /** @class */ (function (_super) {
    __extends(CodePushOriginal, _super);
    function CodePushOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CodePushOriginal.prototype.getCurrentPackage = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCurrentPackage", {}, arguments); };
    CodePushOriginal.prototype.getPendingPackage = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPendingPackage", {}, arguments); };
    CodePushOriginal.prototype.checkForUpdate = function (deploymentKey) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "checkForUpdate", { "callbackOrder": "reverse" }, arguments); };
    CodePushOriginal.prototype.notifyApplicationReady = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "notifyApplicationReady", {}, arguments); };
    CodePushOriginal.prototype.restartApplication = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "restartApplication", {}, arguments); };
    CodePushOriginal.prototype.sync = function (syncOptions, downloadProgress) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "sync", { "observable": true, "successIndex": 0, "errorIndex": 3 }, arguments); };
    CodePushOriginal.pluginName = "CodePush";
    CodePushOriginal.plugin = "cordova-plugin-code-push";
    CodePushOriginal.pluginRef = "codePush";
    CodePushOriginal.repo = "https://github.com/Microsoft/cordova-plugin-code-push";
    CodePushOriginal.platforms = ["Android", "iOS"];
    return CodePushOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var CodePush = new CodePushOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 509 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export Contact */
/* unused harmony export ContactName */
/* unused harmony export ContactField */
/* unused harmony export ContactAddress */
/* unused harmony export ContactOrganization */
/* unused harmony export ContactFindOptions */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Contacts; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var Contact = /** @class */ (function () {
    function Contact() {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])('navigator.contacts', 'create', 'Contacts') === true) {
            this._objectInstance = navigator.contacts.create();
        }
    }
    Contact.prototype.clone = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            var newContact = new Contact();
            for (var prop in this) {
                if (prop === 'id')
                    return;
                newContact[prop] = this[prop];
            }
            return newContact;
        }
    }(); };
    Contact.prototype.remove = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "remove", {}, arguments); };
    Contact.prototype.save = function () { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return getPromise(function (resolve, reject) {
                _this._objectInstance.save(function (contact) {
                    _this._objectInstance = contact;
                    resolve(_this);
                }, reject);
            });
        }
    }(); };
    Object.defineProperty(Contact.prototype, "id", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "id"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "id", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "displayName", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "displayName"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "displayName", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "name", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "name"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "name", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "nickname", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "nickname"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "nickname", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "phoneNumbers", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "phoneNumbers"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "phoneNumbers", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "emails", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "emails"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "emails", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "addresses", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "addresses"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "addresses", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "ims", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "ims"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "ims", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "organizations", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "organizations"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "organizations", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "birthday", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "birthday"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "birthday", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "note", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "note"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "note", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "photos", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "photos"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "photos", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "categories", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "categories"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "categories", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Contact.prototype, "urls", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "urls"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "urls", value); },
        enumerable: true,
        configurable: true
    });
    return Contact;
}());

var ContactName = /** @class */ (function () {
    function ContactName(formatted, familyName, givenName, middleName, honorificPrefix, honorificSuffix) {
        this.formatted = formatted;
        this.familyName = familyName;
        this.givenName = givenName;
        this.middleName = middleName;
        this.honorificPrefix = honorificPrefix;
        this.honorificSuffix = honorificSuffix;
    }
    return ContactName;
}());

var ContactField = /** @class */ (function () {
    function ContactField(type, value, pref) {
        this.type = type;
        this.value = value;
        this.pref = pref;
    }
    return ContactField;
}());

var ContactAddress = /** @class */ (function () {
    function ContactAddress(pref, type, formatted, streetAddress, locality, region, postalCode, country) {
        this.pref = pref;
        this.type = type;
        this.formatted = formatted;
        this.streetAddress = streetAddress;
        this.locality = locality;
        this.region = region;
        this.postalCode = postalCode;
        this.country = country;
    }
    return ContactAddress;
}());

var ContactOrganization = /** @class */ (function () {
    function ContactOrganization(type, name, department, title, pref) {
        this.type = type;
        this.name = name;
        this.department = department;
        this.title = title;
        this.pref = pref;
    }
    return ContactOrganization;
}());

var ContactFindOptions = /** @class */ (function () {
    function ContactFindOptions(filter, multiple, desiredFields, hasPhoneNumber) {
        this.filter = filter;
        this.multiple = multiple;
        this.desiredFields = desiredFields;
        this.hasPhoneNumber = hasPhoneNumber;
    }
    return ContactFindOptions;
}());

var ContactsOriginal = /** @class */ (function (_super) {
    __extends(ContactsOriginal, _super);
    function ContactsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Create a single contact.
     * @returns {Contact} Returns a Contact object
     */
    ContactsOriginal.prototype.create = function () {
        return new Contact();
    };
    ContactsOriginal.prototype.find = function (fields, options) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return getPromise(function (resolve, reject) {
                navigator.contacts.find(fields, function (contacts) {
                    resolve(contacts.map(processContact));
                }, reject, options);
            });
        }
    }(); };
    ContactsOriginal.prototype.pickContact = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return getPromise(function (resolve, reject) {
                navigator.contacts.pickContact(function (contact) { return resolve(processContact(contact)); }, reject);
            });
        }
    }(); };
    ContactsOriginal.pluginName = "Contacts";
    ContactsOriginal.plugin = "cordova-plugin-contacts";
    ContactsOriginal.pluginRef = "navigator.contacts";
    ContactsOriginal.repo = "https://github.com/apache/cordova-plugin-contacts";
    ContactsOriginal.platforms = ["Android", "BlackBerry 10", "Firefox OS", "iOS", "Ubuntu", "Windows", "Windows Phone 8"];
    return ContactsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Contacts = new ContactsOriginal();

/**
 * @hidden
 */
function processContact(contact) {
    var newContact = new Contact();
    for (var prop in contact) {
        if (typeof contact[prop] === 'function')
            continue;
        newContact[prop] = contact[prop];
    }
    return newContact;
}
//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 510 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CouchbaseLite; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var CouchbaseLiteOriginal = /** @class */ (function (_super) {
    __extends(CouchbaseLiteOriginal, _super);
    function CouchbaseLiteOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CouchbaseLiteOriginal.prototype.getURL = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getURL", { "callbackStyle": "node" }, arguments); };
    CouchbaseLiteOriginal.pluginName = "CouchbaseLite";
    CouchbaseLiteOriginal.plugin = "couchbase-lite-phonegap-plugin";
    CouchbaseLiteOriginal.pluginRef = "cblite";
    CouchbaseLiteOriginal.repo = "https://github.com/couchbaselabs/Couchbase-Lite-PhoneGap-Plugin";
    CouchbaseLiteOriginal.platforms = ["Android", "iOS"];
    return CouchbaseLiteOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var CouchbaseLite = new CouchbaseLiteOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9jb3VjaGJhc2UtbGl0ZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUEwSHJDLGlDQUFpQjs7OztJQVNsRCw4QkFBTTs7Ozs7O3dCQW5JUjtFQTBIbUMsaUJBQWlCO1NBQXZDLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuXG4vKipcbiAqIEBuYW1lIENvdWNoYmFzZSBMaXRlXG4gKiBAZGVzY3JpcHRpb25cbiAqIFBsdWdpbiB0byBpbnN0YWxsIENvdWNoYmFzZSBMaXRlIGluIHlvdXIgUGhvbmVHYXAgYXBwIG9uIGlPUyBvciBBbmRyb2lkXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBDb3VjaGJhc2VMaXRlIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3VjaGJhc2UtbGl0ZSc7XG4gKiBpbXBvcnQgeyBIdHRwIH0gZnJvbSAnQGFuZ3VsYXIvaHR0cCc7XG4gKiBpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJ1xuICogY29uc3RydWN0b3IocHJpdmF0ZSBjb3VjaGJhc2U6IENvdWNoYmFzZUxpdGUsIHByaXZhdGUgcGxhdGZvcm06UGxhdGZvcm0scHJpdmF0ZSBfaHR0cDpIdHRwKSB7XG4gKiAgICB0aGlzLmluaXRNZXRob2QoKTtcbiAqIH1cbiAqIHVybDpzdHJpbmc7XG4gKiBpbml0TWV0aG9kKCkge1xuICogICAgdGhpcy5jb3VjaGJhc2UuZ2V0VVJMKCkudGhlbigodXJsKT0+IHtcbiAqICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAqICAgIH0pXG4gKiB9XG4gKiBnZXRVcmwoKSB7XG4gKiAgICAgIHJldHVybiB0aGlzLnVybDtcbiAqIH1cbiAqIC8vIERBVEFCQVNFUyAvL1xuICogY3JlYXRlRGF0YWJhc2UoZGF0YWJhc2VfbmFtZTpzdHJpbmcpIHtcbiAqICAgICAgbGV0IHVybCA9IHRoaXMuZ2V0VXJsKCk7XG4gKiAgICAgIHVybCA9IHVybCtkYXRhYmFzZV9uYW1lO1xuICogICAgICByZXR1cm4gdGhpcy5faHR0cFxuICogICAgICAgIC5wdXQodXJsKVxuICogICAgICAgIC5tYXAoZGF0YSA9PiB7IHRoaXMucmVzdWx0cyA9IGRhdGFbJ3Jlc3VsdHMnXSB9KVxuICogICAgICAgIC5jYXRjaCgoZXJyb3I6YW55KSA9PiB7XG4gKiAgICAgICAgICAgcmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyb3IuanNvbigpIHx8ICdDb3VjaGJhc2UgTGl0ZSBlcnJvcicpO1xuICogICAgICAgICB9KVxuICogIH1cbiAqIGRlbGV0ZURhdGFiYXNlKGRhdGFiYXNlX25hbWU6c3RyaW5nKSB7XG4gKiAgICAgIGxldCB1cmwgPSB0aGlzLmdldFVybCgpO1xuICogICAgICB1cmwgPSB1cmwrZGF0YWJhc2VfbmFtZTtcbiAqICAgICAgcmV0dXJuIHRoaXMuX2h0dHBcbiAqICAgICAgICAuZGVsZXRlKHVybClcbiAqICAgICAgICAubWFwKGRhdGEgPT4geyB0aGlzLnJlc3VsdHMgPSBkYXRhWydyZXN1bHRzJ10gfSlcbiAqICAgICAgICAuY2F0Y2goKGVycm9yOmFueSkgPT4ge1xuICogICAgICAgICAgIHJldHVybiBPYnNlcnZhYmxlLnRocm93KGVycm9yLmpzb24oKSB8fCAnQ291Y2hiYXNlIExpdGUgZXJyb3InKTtcbiAqICAgICAgICB9KVxuICogfVxuICogZ2V0QWxsRGJzKCkge1xuICogICAgICBsZXQgdXJsID0gdGhpcy5nZXRVcmwoKTtcbiAqICAgICAgdXJsID0gdXJsKydfYWxsX2Ricyc7XG4gKiAgICAgIHJldHVybiB0aGlzLl9odHRwXG4gKiAgICAgICAgLmdldCh1cmwpXG4gKiAgICAgICAgLm1hcChkYXRhID0+IHsgdGhpcy5yZXN1bHRzID0gZGF0YVsncmVzdWx0cyddIH0pXG4gKiAgICAgICAgLmNhdGNoKChlcnJvcjphbnkpID0+IHtcbiAqICAgICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS50aHJvdyhlcnJvci5qc29uKCkgfHwgJ0NvdWNoYmFzZSBMaXRlIGVycm9yJyk7XG4gKiAgICAgICAgfSlcbiAqIH1cbiAqIC8vIERPQ1VNRU5UUyAvL1xuICogZ2V0QWxsRG9jdW1lbnRzKGRhdGFiYXNlX25hbWU6c3RyaW5nKXtcbiAqICAgICAgbGV0IHVybCA9IHRoaXMuZ2V0VXJsKCk7XG4gKiAgICAgIC8vIGluY2x1ZGVfZG9jcz10cnVlIHdpbGwgaW5jbHVkZSBhIGRvYyBpbnNpZGUgcmVzcG9uc2UsIGl0IGlzIGZhbHNlIGJ5IGRlZmF1bHRcbiAqICAgICAgdXJsID0gdXJsICsgZGF0YWJhc2VfbmFtZSArICcvX2FsbF9kb2NzP2luY2x1ZGVfZG9jcz10cnVlJztcbiAqICAgICAgcmV0dXJuIHRoaXMuX2h0dHBcbiAqICAgICAgICAuZ2V0KHVybClcbiAqICAgICAgICAubWFwKGRhdGEgPT4geyB0aGlzLnJlc3VsdHMgPSBkYXRhWydyZXN1bHRzJ10gfSlcbiAqICAgICAgICAuY2F0Y2goKGVycm9yOmFueSkgPT4ge1xuICogICAgICAgICAgIHJldHVybiBPYnNlcnZhYmxlLnRocm93KGVycm9yLmpzb24oKSB8fCAnQ291Y2hiYXNlIExpdGUgZXJyb3InKTtcbiAqICAgICAgICB9KSAgICAgICAgLlxuICogfVxuICogY3JlYXRlRG9jdW1lbnQoZGF0YWJhc2VfbmFtZTpzdHJpbmcsZG9jdW1lbnQpe1xuICogICAgICBsZXQgdXJsID0gdGhpcy5nZXRVcmwoKTtcbiAqICAgICAgdXJsID0gdXJsICsgZGF0YWJhc2VfbmFtZTtcbiAqICAgICAgcmV0dXJuIHRoaXMuX2h0dHBcbiAqICAgICAgICAucG9zdCh1cmwsZG9jdW1lbnQpXG4gKiAgICAgICAgLm1hcChkYXRhID0+IHsgdGhpcy5yZXN1bHRzID0gZGF0YVsncmVzdWx0cyddIH0pXG4gKiAgICAgICAgLmNhdGNoKChlcnJvcjphbnkpID0+IHtcbiAqICAgICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS50aHJvdyhlcnJvci5qc29uKCkgfHwgJ0NvdWNoYmFzZSBMaXRlIGVycm9yJyk7XG4gKiAgICAgICAgfSkgICAgICAgIC5cbiAqIH1cbiAqIGxldCBkb2N1bWVudCA9IHtcbiAqICAgIF9pZDonWW91IGNhbiBlaXRoZXIgc3BlY2lmeSB0aGUgZG9jdW1lbnQgSUQgKG11c3QgYmUgc3RyaW5nKSBlbHNlIGNvdWNoYmFzZSBnZW5lcmF0ZXMgb25lIGZvciB5b3VyIGRvYycsXG4gKiAgICBkYXRhOntuYW1lOidzYW5kbWFuJyxhZ2U6MjUsY2l0eTpwdW5lfVxuICogIH1cbiAqIGNyZWF0ZURvY3VtZW50KCdqdXN0YmUnLCBkb2N1bWVudCk7XG4gKiAvLyBzdWNjZXNzZnVsIHJlc3BvbnNlXG4gKiB7IFwiaWRcIjogXCJzdHJpbmdcIixcInJldlwiOiBcInN0cmluZ1wiLFwib2tcIjogdHJ1ZSB9XG4gKiB1cGRhdGVEb2N1bWVudChkYXRhYmFzZV9uYW1lOnN0cmluZyxkb2N1bWVudCl7XG4gKiAgICAgIGxldCB1cmwgPSB0aGlzLmdldFVybCgpO1xuICogICAgICB1cmwgPSB1cmwgKyBkYXRhYmFzZV9uYW1lICsgJy8nICsgZG9jdW1lbnQuX2lkO1xuICogICAgICByZXR1cm4gdGhpcy5faHR0cFxuICogICAgICAgIC5wdXQodXJsLGRvY3VtZW50KVxuICogICAgICAgIC5tYXAoZGF0YSA9PiB7IHRoaXMucmVzdWx0cyA9IGRhdGFbJ3Jlc3VsdHMnXSB9KVxuICogICAgICAgIC5jYXRjaCgoZXJyb3I6YW55KSA9PiB7XG4gKiAgICAgICAgICAgcmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyb3IuanNvbigpIHx8ICdDb3VjaGJhc2UgTGl0ZSBlcnJvcicpO1xuICogICAgICAgIH0pICAgICAgICAuXG4gKiB9XG4gKiAvLyBmb3IgdXBkYXRpb24gb2YgZG9jdW1lbnQgeW91ciBkb2N1bWVudCBtdXN0IGNvbnRhaW4gbW9zdCByZWNlbnQgcmV2KHJldmlzaW9uKSBpZC5cbiAqIC8vIGZvciBlYWNoIHVwZGF0aW9uIG9mIGRvY3VtZW50IG5ldyByZXYgaWQgaXMgZ2V0IGdlbmVyYXRlZFxuICogLy8gc3VjY2Vzc2Z1bCByZXNwb25zZVxuICogeyBcImlkXCI6IFwic3RyaW5nXCIsXCJyZXZcIjogXCJzdHJpbmcobmV3IHJldmlzaW9uIGlkKVwiLFwib2tcIjogdHJ1ZSB9XG4gKiBkZWxldGVEb2N1bWVudChkYXRhYmFzZV9uYW1lOnN0cmluZyxkb2N1bWVudCl7XG4gKiAgICAgIGxldCB1cmwgPSB0aGlzLmdldFVybCgpO1xuICogICAgICB1cmwgPSB1cmwgKyBkYXRhYmFzZV9uYW1lICsgJy8nICsgZG9jdW1lbnQuX2lkICsnP3Jldj0nK2RvYy5fcmV2O1xuICogICAgICByZXR1cm4gdGhpcy5faHR0cFxuICogICAgICAgIC5kZWxldGUodXJsKVxuICogICAgICAgIC5tYXAoZGF0YSA9PiB7IHRoaXMucmVzdWx0cyA9IGRhdGFbJ3Jlc3VsdHMnXSB9KVxuICogICAgICAgIC5jYXRjaCgoZXJyb3I6YW55KSA9PiB7XG4gKiAgICAgICAgICAgcmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyb3IuanNvbigpIHx8ICdDb3VjaGJhc2UgTGl0ZSBlcnJvcicpO1xuICogICAgICAgIH0pICAgICAgICAuXG4gKiB9XG4gKlxuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0NvdWNoYmFzZUxpdGUnLFxuICBwbHVnaW46ICdjb3VjaGJhc2UtbGl0ZS1waG9uZWdhcC1wbHVnaW4nLFxuICBwbHVnaW5SZWY6ICdjYmxpdGUnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2NvdWNoYmFzZWxhYnMvQ291Y2hiYXNlLUxpdGUtUGhvbmVHYXAtUGx1Z2luJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQ291Y2hiYXNlTGl0ZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogR2V0IHRoZSBkYXRhYmFzZSB1cmxcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIGxvY2FsIGRhdGFiYXNlIHVybFxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrU3R5bGU6ICdub2RlJ1xuICB9KVxuICBnZXRVUkwoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 511 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Crop; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var CropOriginal = /** @class */ (function (_super) {
    __extends(CropOriginal, _super);
    function CropOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CropOriginal.prototype.crop = function (pathToImage, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "crop", { "callbackOrder": "reverse" }, arguments); };
    CropOriginal.pluginName = "Crop";
    CropOriginal.plugin = "cordova-plugin-crop";
    CropOriginal.pluginRef = "plugins";
    CropOriginal.repo = "https://github.com/jeduan/cordova-plugin-crop";
    CropOriginal.platforms = ["Android", "iOS"];
    return CropOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Crop = new CropOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9jcm9wL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQTRCOUMsd0JBQWlCOzs7O0lBV3pDLG1CQUFJLGFBQUMsV0FBbUIsRUFBRSxPQUE2Qjs7Ozs7O2VBeEN6RDtFQTZCMEIsaUJBQWlCO1NBQTlCLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBDcm9wXG4gKiBAZGVzY3JpcHRpb24gQ3JvcHMgaW1hZ2VzXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IENyb3AgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2Nyb3AnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgY3JvcDogQ3JvcCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5jcm9wLmNyb3AoJ3BhdGgvdG8vaW1hZ2UuanBnJywge3F1YWxpdHk6IDc1fSlcbiAqICAgLnRoZW4oXG4gKiAgICAgbmV3SW1hZ2UgPT4gY29uc29sZS5sb2coJ25ldyBpbWFnZSBwYXRoIGlzOiAnICsgbmV3SW1hZ2UpLFxuICogICAgIGVycm9yID0+IGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyb3BwaW5nIGltYWdlJywgZXJyb3IpXG4gKiAgICk7XG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdDcm9wJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tY3JvcCcsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2plZHVhbi9jb3Jkb3ZhLXBsdWdpbi1jcm9wJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQ3JvcCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogQ3JvcHMgYW4gaW1hZ2VcbiAgICogQHBhcmFtIHBhdGhUb0ltYWdlXG4gICAqIEBwYXJhbSBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZz59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgbmV3IGltYWdlIHBhdGgsIG9yIHJlamVjdHMgaWYgZmFpbGVkIHRvIGNyb3AuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIGNyb3AocGF0aFRvSW1hZ2U6IHN0cmluZywgb3B0aW9ucz86IHsgcXVhbGl0eTogbnVtYmVyIH0pOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 512 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DatePicker; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var DatePickerOriginal = /** @class */ (function (_super) {
    __extends(DatePickerOriginal, _super);
    function DatePickerOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * @hidden
         */
        _this.ANDROID_THEMES = {
            THEME_TRADITIONAL: 1,
            THEME_HOLO_DARK: 2,
            THEME_HOLO_LIGHT: 3,
            THEME_DEVICE_DEFAULT_DARK: 4,
            THEME_DEVICE_DEFAULT_LIGHT: 5
        };
        return _this;
    }
    DatePickerOriginal.prototype.show = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", {}, arguments); };
    DatePickerOriginal.pluginName = "DatePicker";
    DatePickerOriginal.plugin = "cordova-plugin-datepicker";
    DatePickerOriginal.pluginRef = "datePicker";
    DatePickerOriginal.repo = "https://github.com/VitaliiBlagodir/cordova-plugin-datepicker";
    DatePickerOriginal.platforms = ["Android", "iOS", "Windows"];
    return DatePickerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var DatePicker = new DatePickerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kYXRlLXBpY2tlci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUEySnhDLDhCQUFpQjs7O1FBRS9DOztXQUVHO1FBQ0gsb0JBQWMsR0FBRztZQUNmLGlCQUFpQixFQUFFLENBQUM7WUFDcEIsZUFBZSxFQUFFLENBQUM7WUFDbEIsZ0JBQWdCLEVBQUUsQ0FBQztZQUNuQix5QkFBeUIsRUFBRSxDQUFDO1lBQzVCLDBCQUEwQixFQUFFLENBQUM7U0FDOUIsQ0FBQzs7O0lBUUYseUJBQUksYUFBQyxPQUEwQjs7Ozs7O3FCQS9LakM7RUE0SmdDLGlCQUFpQjtTQUFwQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0ZVBpY2tlck9wdGlvbnMge1xuICAvKipcbiAgICogVGhlIG1vZGUgb2YgdGhlIGRhdGUgcGlja2VyXG4gICAqIFZhbHVlczogZGF0ZSB8IHRpbWUgfCBkYXRldGltZVxuICAgKi9cbiAgbW9kZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBTZWxlY3RlZCBkYXRlXG4gICAqL1xuICBkYXRlOiBEYXRlIHwgc3RyaW5nIHwgbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBNaW5pbXVtIGRhdGVcbiAgICogRGVmYXVsdDogZW1wdHkgU3RyaW5nXG4gICAqL1xuICBtaW5EYXRlPzogRGF0ZSB8IHN0cmluZyB8IG51bWJlcjtcblxuICAvKipcbiAgICogTWF4aW11bSBkYXRlXG4gICAqIERlZmF1bHQ/OiBlbXB0eSBTdHJpbmdcbiAgICovXG4gIG1heERhdGU/OiBEYXRlIHwgc3RyaW5nIHwgbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBMYWJlbCBmb3IgdGhlIGRpYWxvZyB0aXRsZS4gSWYgZW1wdHksIHVzZXMgYW5kcm9pZCBkZWZhdWx0IChTZXQgZGF0ZS9TZXQgdGltZSkuXG4gICAqIERlZmF1bHQ/OiBlbXB0eSBTdHJpbmdcbiAgICovXG4gIHRpdGxlVGV4dD86IHN0cmluZztcblxuICAvKipcbiAgICogTGFiZWwgb2YgQlVUVE9OX1BPU0lUSVZFIChkb25lIGJ1dHRvbikgb24gQW5kcm9pZFxuICAgKi9cbiAgb2tUZXh0Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBMYWJlbCBvZiBCVVRUT05fTkVHQVRJVkUgKGNhbmNlbCBidXR0b24pLiBJZiBlbXB0eSwgdXNlcyBhbmRyb2lkLlIuc3RyaW5nLmNhbmNlbC5cbiAgICovXG4gIGNhbmNlbFRleHQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIExhYmVsIG9mIHRvZGF5IGJ1dHRvbi4gSWYgZW1wdHksIGRvZXNuJ3Qgc2hvdyB0aGUgb3B0aW9uIHRvIHNlbGVjdCBjdXJyZW50IGRhdGUuXG4gICAqL1xuICB0b2RheVRleHQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIExhYmVsIG9mIG5vdyBidXR0b24uIElmIGVtcHR5LCBkb2Vzbid0IHNob3cgdGhlIG9wdGlvbiB0byBzZWxlY3QgY3VycmVudCB0aW1lLlxuICAgKi9cbiAgbm93VGV4dD86IHN0cmluZztcblxuICAvKipcbiAgICogU2hvd3MgdGltZSBkaWFsb2cgaW4gMjQgaG91cnMgZm9ybWF0LlxuICAgKi9cbiAgaXMyNEhvdXI/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBDaG9vc2UgdGhlIEFuZHJvaWQgdGhlbWUgZm9yIHRoZSBwaWNrZXIuIFlvdSBjYW4gdXNlIHRoZSBEYXRlUGlja2VyLkFORFJPSURfVEhFTUVTIHByb3BlcnR5LlxuICAgKiBWYWx1ZXM6IDE6IFRIRU1FX1RSQURJVElPTkFMIHwgMjogVEhFTUVfSE9MT19EQVJLIHwgMzogVEhFTUVfSE9MT19MSUdIVCB8IDQ6IFRIRU1FX0RFVklDRV9ERUZBVUxUX0RBUksgfCA1OiBUSEVNRV9ERVZJQ0VfREVGQVVMVF9MSUdIVFxuICAgKi9cbiAgYW5kcm9pZFRoZW1lPzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBTaG93cyBvciBoaWRlIGRhdGVzIGVhcmxpZXIgdGhlbiBzZWxlY3RlZCBkYXRlLlxuICAgKi9cbiAgYWxsb3dPbGREYXRlcz86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFNob3dzIG9yIGhpZGUgZGF0ZXMgYWZ0ZXIgc2VsZWN0ZWQgZGF0ZS5cbiAgICovXG4gIGFsbG93RnV0dXJlRGF0ZXM/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBMYWJlbCBvZiBkb25lIGJ1dHRvbi5cbiAgICovXG4gIGRvbmVCdXR0b25MYWJlbD86IHN0cmluZztcblxuICAvKipcbiAgICogSGV4IGNvbG9yIG9mIGRvbmUgYnV0dG9uLlxuICAgKi9cbiAgZG9uZUJ1dHRvbkNvbG9yPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBMYWJlbCBvZiBjYW5jZWwgYnV0dG9uLlxuICAgKi9cbiAgY2FuY2VsQnV0dG9uTGFiZWw/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEhleCBjb2xvciBvZiBjYW5jZWwgYnV0dG9uLlxuICAgKi9cbiAgY2FuY2VsQnV0dG9uQ29sb3I/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFggcG9zaXRpb24gb2YgZGF0ZSBwaWNrZXIuIFRoZSBwb3NpdGlvbiBpcyBhYnNvbHV0ZSB0byB0aGUgcm9vdCB2aWV3IG9mIHRoZSBhcHBsaWNhdGlvbi5cbiAgICovXG4gIHg/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFkgcG9zaXRpb24gb2YgZGF0ZSBwaWNrZXIuIFRoZSBwb3NpdGlvbiBpcyBhYnNvbHV0ZSB0byB0aGUgcm9vdCB2aWV3IG9mIHRoZSBhcHBsaWNhdGlvbi5cbiAgICovXG4gIHk/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEludGVydmFsIGJldHdlZW4gb3B0aW9ucyBpbiB0aGUgbWludXRlIHNlY3Rpb24gb2YgdGhlIGRhdGUgcGlja2VyLlxuICAgKi9cbiAgbWludXRlSW50ZXJ2YWw/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEZvcmNlIHRoZSBVSVBvcG92ZXJBcnJvd0RpcmVjdGlvbiBlbnVtLiBUaGUgdmFsdWUgYW55IHdpbGwgcmV2ZXJ0IHRvIGRlZmF1bHQgVUlQb3BvdmVyQXJyb3dEaXJlY3Rpb25BbnkgYW5kIGxldCB0aGUgYXBwIGNob29zZSB0aGUgcHJvcGVyIGRpcmVjdGlvbiBpdHNlbGYuXG4gICAqL1xuICBwb3BvdmVyQXJyb3dEaXJlY3Rpb24/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEZvcmNlIGxvY2FsZSBmb3IgZGF0ZVBpY2tlci5cbiAgICovXG4gIGxvY2FsZT86IHN0cmluZztcblxufVxuXG4vKipcbiAqIEBuYW1lIERhdGUgUGlja2VyXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBEYXRlUGlja2VyIHBsdWdpbiBhbGxvd3MgdGhlIHVzZXIgdG8gZmV0Y2ggZGF0ZSBvciB0aW1lIHVzaW5nIG5hdGl2ZSBkaWFsb2dzLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgRGF0ZVBpY2tlciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvZGF0ZS1waWNrZXInO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZGF0ZVBpY2tlcjogRGF0ZVBpY2tlcikgeyB9XG4gKlxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiB0aGlzLmRhdGVQaWNrZXIuc2hvdyh7XG4gKiAgIGRhdGU6IG5ldyBEYXRlKCksXG4gKiAgIG1vZGU6ICdkYXRlJyxcbiAqICAgYW5kcm9pZFRoZW1lOiB0aGlzLmRhdGVQaWNrZXIuQU5EUk9JRF9USEVNRVMuVEhFTUVfSE9MT19EQVJLXG4gKiB9KS50aGVuKFxuICogICBkYXRlID0+IGNvbnNvbGUubG9nKCdHb3QgZGF0ZTogJywgZGF0ZSksXG4gKiAgIGVyciA9PiBjb25zb2xlLmxvZygnRXJyb3Igb2NjdXJyZWQgd2hpbGUgZ2V0dGluZyBkYXRlOiAnLCBlcnIpXG4gKiApO1xuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogRGF0ZVBpY2tlck9wdGlvbnNcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdEYXRlUGlja2VyJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZGF0ZXBpY2tlcicsXG4gIHBsdWdpblJlZjogJ2RhdGVQaWNrZXInLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL1ZpdGFsaWlCbGFnb2Rpci9jb3Jkb3ZhLXBsdWdpbi1kYXRlcGlja2VyJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEYXRlUGlja2VyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBAaGlkZGVuXG4gICAqL1xuICBBTkRST0lEX1RIRU1FUyA9IHtcbiAgICBUSEVNRV9UUkFESVRJT05BTDogMSxcbiAgICBUSEVNRV9IT0xPX0RBUks6IDIsXG4gICAgVEhFTUVfSE9MT19MSUdIVDogMyxcbiAgICBUSEVNRV9ERVZJQ0VfREVGQVVMVF9EQVJLOiA0LFxuICAgIFRIRU1FX0RFVklDRV9ERUZBVUxUX0xJR0hUOiA1XG4gIH07XG5cbiAgLyoqXG4gICAqIFNob3dzIHRoZSBkYXRlIGFuZC9vciB0aW1lIHBpY2tlciBkaWFsb2cocylcbiAgICogQHBhcmFtIHtEYXRlUGlja2VyT3B0aW9uc30gb3B0aW9ucyBPcHRpb25zIGZvciB0aGUgZGF0ZSBwaWNrZXIuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPERhdGU+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHBpY2tlZCBkYXRlIGFuZC9vciB0aW1lLCBvciByZWplY3RzIHdpdGggYW4gZXJyb3IuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNob3cob3B0aW9uczogRGF0ZVBpY2tlck9wdGlvbnMpOiBQcm9taXNlPERhdGU+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 513 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DBMeter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var DBMeterOriginal = /** @class */ (function (_super) {
    __extends(DBMeterOriginal, _super);
    function DBMeterOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DBMeterOriginal.prototype.start = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "start", { "observable": true, "clearFunction": "stop" }, arguments); };
    DBMeterOriginal.prototype.stop = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stop", {}, arguments); };
    DBMeterOriginal.prototype.isListening = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isListening", {}, arguments); };
    DBMeterOriginal.prototype.delete = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "delete", {}, arguments); };
    DBMeterOriginal.pluginName = "DBMeter";
    DBMeterOriginal.plugin = "cordova-plugin-dbmeter";
    DBMeterOriginal.pluginRef = "DBMeter";
    DBMeterOriginal.repo = "https://github.com/akofman/cordova-plugin-dbmeter";
    DBMeterOriginal.platforms = ["Android", "iOS"];
    return DBMeterOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var DBMeter = new DBMeterOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kYi1tZXRlci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0lBMENoQiwyQkFBaUI7Ozs7SUFVNUMsdUJBQUs7SUFTTCxzQkFBSTtJQVNKLDZCQUFXO0lBU1gsd0JBQU07Ozs7OztrQkFqRlI7RUE0QzZCLGlCQUFpQjtTQUFqQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuLyoqXG4gKiBAbmFtZSBEQiBNZXRlclxuICogQGRlc2NyaXB0aW9uIFRoaXMgcGx1Z2luIGRlZmluZXMgYSBnbG9iYWwgREJNZXRlciBvYmplY3QsIHdoaWNoIHBlcm1pdHMgdG8gZ2V0IHRoZSBkZWNpYmVsIHZhbHVlcyBmcm9tIHRoZSBtaWNyb3Bob25lLlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBEQk1ldGVyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9kYi1tZXRlcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBkYk1ldGVyOiBEQk1ldGVyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogLy8gU3RhcnQgbGlzdGVuaW5nXG4gKiBsZXQgc3Vic2NyaXB0aW9uID0gdGhpcy5kYk1ldGVyLnN0YXJ0KCkuc3Vic2NyaWJlKFxuICogICBkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpXG4gKiApO1xuICpcbiAqIC8vIENoZWNrIGlmIHdlIGFyZSBsaXN0ZW5pbmdcbiAqIHRoaXMuZGJNZXRlci5pc0xpc3RlbmluZygpLnRoZW4oXG4gKiAgIChpc0xpc3RlbmluZzogYm9vbGVhbikgPT4gY29uc29sZS5sb2coaXNMaXN0ZW5pbmcpXG4gKiApO1xuICpcbiAqIC8vIFN0b3AgbGlzdGVuaW5nXG4gKiBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAqXG4gKiAvLyBEZWxldGUgREJNZXRlciBpbnN0YW5jZSBmcm9tIG1lbW9yeVxuICogdGhpcy5kYk1ldGVyLmRlbGV0ZSgpLnRoZW4oXG4gKiAgICgpID0+IGNvbnNvbGUubG9nKCdEZWxldGVkIERCIE1ldGVyIGluc3RhbmNlJyksXG4gKiAgIGVycm9yID0+IGNvbnNvbGUubG9nKCdFcnJvciBvY2N1cnJlZCB3aGlsZSBkZWxldGluZyBEQiBNZXRlciBpbnN0YW5jZScpXG4gKiApO1xuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnREJNZXRlcicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWRibWV0ZXInLFxuICBwbHVnaW5SZWY6ICdEQk1ldGVyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ha29mbWFuL2NvcmRvdmEtcGx1Z2luLWRibWV0ZXInLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEQk1ldGVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBTdGFydHMgbGlzdGVuaW5nXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPGFueT59IFJldHVybnMgYW4gb2JzZXJ2YWJsZS4gU3Vic2NyaWJlIHRvIHN0YXJ0IGxpc3RlbmluZy4gVW5zdWJzY3JpYmUgdG8gc3RvcCBsaXN0ZW5pbmcuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAnc3RvcCdcbiAgfSlcbiAgc3RhcnQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU3RvcHMgbGlzdGVuaW5nXG4gICAqIEBoaWRkZW5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc3RvcCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiB0aGUgREIgTWV0ZXIgaXMgbGlzdGVuaW5nXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYSBib29sZWFuIHRoYXQgdGVsbHMgdXMgd2hldGhlciB0aGUgREIgbWV0ZXIgaXMgbGlzdGVuaW5nXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGlzTGlzdGVuaW5nKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWxldGUgdGhlIERCIE1ldGVyIGluc3RhbmNlXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgd2lsbCByZXNvbHZlIGlmIHRoZSBpbnN0YW5jZSBoYXMgYmVlbiBkZWxldGVkLCBhbmQgcmVqZWN0cyBpZiBlcnJvcnMgb2NjdXIuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGRlbGV0ZSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 514 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Deeplinks; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var DeeplinksOriginal = /** @class */ (function (_super) {
    __extends(DeeplinksOriginal, _super);
    function DeeplinksOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeeplinksOriginal.prototype.route = function (paths) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "route", { "observable": true }, arguments); };
    DeeplinksOriginal.prototype.routeWithNavController = function (navController, paths, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "routeWithNavController", { "observable": true }, arguments); };
    DeeplinksOriginal.pluginName = "Deeplinks";
    DeeplinksOriginal.plugin = "ionic-plugin-deeplinks";
    DeeplinksOriginal.pluginRef = "IonicDeeplink";
    DeeplinksOriginal.repo = "https://github.com/ionic-team/ionic-plugin-deeplinks";
    DeeplinksOriginal.install = "ionic cordova plugin add ionic-plugin-deeplinks --variable URL_SCHEME=myapp --variable DEEPLINK_SCHEME=https --variable DEEPLINK_HOST=example.com --variable ANDROID_PATH_PREFIX=/";
    DeeplinksOriginal.installVariables = ["URL_SCHEME", "DEEPLINK_SCHEME", "DEEPLINK_HOST", "ANDROID_PATH_PREFIX"];
    DeeplinksOriginal.platforms = ["Android", "Browser", "iOS"];
    return DeeplinksOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Deeplinks = new DeeplinksOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kZWVwbGlua3MvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQTBGZCw2QkFBaUI7Ozs7SUFlOUMseUJBQUssYUFBQyxLQUFVO0lBNkJoQiwwQ0FBc0IsYUFBQyxhQUFrQixFQUFFLEtBQVUsRUFBRSxPQUF5Qjs7Ozs7Ozs7b0JBeElsRjtFQTRGK0IsaUJBQWlCO1NBQW5DLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL09ic2VydmFibGUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIERlZXBsaW5rTWF0Y2gge1xuXG4gIC8qKlxuICAgKiBUaGUgcm91dGUgaW5mbyBmb3IgdGhlIG1hdGNoZWQgcm91dGVcbiAgICovXG4gICRyb3V0ZTogYW55O1xuXG4gIC8qKlxuICAgKiBBbnkgYXJndW1lbnRzIHBhc3NlZCBlaXRoZXIgdGhyb3VnaCByb3V0ZSBwYXJhbWV0ZXJzIG9yIEdFVCBwYXJhbWV0ZXJzXG4gICAqL1xuICAkYXJnczogYW55O1xuXG4gIC8qKlxuICAgKiBUaGUgZGVlcGxpbmsgb2JqZWN0IHByb2Nlc3NlZCBmcm9tIHRoZSBwbHVnaW4sIGFsb25nIHdpdGggYW55XG4gICAqIGFueSBpbnRlcm5hbCBuYXRpdmUgZGF0YSBhdmFpbGFibGUgYXMgXCJleHRyYXNcIiBhdCB0aGUgdGltZVxuICAgKiB0aGUgcm91dGUgd2FzIG1hdGNoZWQgKGZvciBleGFtcGxlLCBGYWNlYm9vayBzb21ldGltZXMgYWRkcyBleHRyYSBkYXRhKVxuICAgKi9cbiAgJGxpbms6IGFueTtcblxufVxuXG5leHBvcnQgaW50ZXJmYWNlIERlZXBsaW5rT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBTZXQgdGhlIG1hdGNoZWQgcm91dGUgYXMgcm9vdCBwYWdlIHVzaW5nIGBuYXZDdHJsLnNldFJvb3QoKWAgbWV0aG9kLlxuICAgKi9cbiAgcm9vdDogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBAbmFtZSBEZWVwbGlua3NcbiAqIEBkZXNjcmlwdGlvbiBUaGlzIHBsdWdpbiBoYW5kbGVzIGRlZXBsaW5rcyBvbiBpT1MgYW5kIEFuZHJvaWQgZm9yIGJvdGggY3VzdG9tIFVSTCBzY2hlbWUgbGlua3NcbiAqIGFuZCBVbml2ZXJzYWwgQXBwIExpbmtzLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgRGVlcGxpbmtzIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9kZWVwbGlua3MnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZGVlcGxpbmtzOiBEZWVwbGlua3MpIHsgfVxuICpcbiAqIHRoaXMuZGVlcGxpbmtzLnJvdXRlKHtcbiAqICAgICAgJy9hYm91dC11cyc6IEFib3V0UGFnZSxcbiAqICAgICAgJy91bml2ZXJzYWwtbGlua3MtdGVzdCc6IEFib3V0UGFnZSxcbiAqICAgICAgJy9wcm9kdWN0cy86cHJvZHVjdElkJzogUHJvZHVjdFBhZ2VcbiAqICAgIH0pLnN1YnNjcmliZSgobWF0Y2gpID0+IHtcbiAqICAgICAgLy8gbWF0Y2guJHJvdXRlIC0gdGhlIHJvdXRlIHdlIG1hdGNoZWQsIHdoaWNoIGlzIHRoZSBtYXRjaGVkIGVudHJ5IGZyb20gdGhlIGFyZ3VtZW50cyB0byByb3V0ZSgpXG4gKiAgICAgIC8vIG1hdGNoLiRhcmdzIC0gdGhlIGFyZ3MgcGFzc2VkIGluIHRoZSBsaW5rXG4gKiAgICAgIC8vIG1hdGNoLiRsaW5rIC0gdGhlIGZ1bGwgbGluayBkYXRhXG4gKiAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgbWF0Y2hlZCByb3V0ZScsIG1hdGNoKTtcbiAqICAgIH0sIChub21hdGNoKSA9PiB7XG4gKiAgICAgIC8vIG5vbWF0Y2guJGxpbmsgLSB0aGUgZnVsbCBsaW5rIGRhdGFcbiAqICAgICAgY29uc29sZS5lcnJvcignR290IGEgZGVlcGxpbmsgdGhhdCBkaWRuXFwndCBtYXRjaCcsIG5vbWF0Y2gpO1xuICogICAgfSk7XG4gKiBgYGBcbiAqXG4gKiBBbHRlcm5hdGl2ZWx5LCBpZiB5b3UncmUgdXNpbmcgSW9uaWMsIHRoZXJlJ3MgYSBjb252ZW5pZW5jZSBtZXRob2QgdGhhdCB0YWtlcyBhIHJlZmVyZW5jZSB0byBhIGBOYXZDb250cm9sbGVyYCBhbmQgaGFuZGxlc1xuICogdGhlIGFjdHVhbCBuYXZpZ2F0aW9uIGZvciB5b3U6XG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogdGhpcy5kZWVwbGlua3Mucm91dGVXaXRoTmF2Q29udHJvbGxlcih0aGlzLm5hdkNvbnRyb2xsZXIsIHtcbiAqICAgJy9hYm91dC11cyc6IEFib3V0UGFnZSxcbiAqICAgJy9wcm9kdWN0cy86cHJvZHVjdElkJzogUHJvZHVjdFBhZ2VcbiAqIH0pLnN1YnNjcmliZSgobWF0Y2gpID0+IHtcbiAqICAgICAvLyBtYXRjaC4kcm91dGUgLSB0aGUgcm91dGUgd2UgbWF0Y2hlZCwgd2hpY2ggaXMgdGhlIG1hdGNoZWQgZW50cnkgZnJvbSB0aGUgYXJndW1lbnRzIHRvIHJvdXRlKClcbiAqICAgICAvLyBtYXRjaC4kYXJncyAtIHRoZSBhcmdzIHBhc3NlZCBpbiB0aGUgbGlua1xuICogICAgIC8vIG1hdGNoLiRsaW5rIC0gdGhlIGZ1bGwgbGluayBkYXRhXG4gKiAgICAgY29uc29sZS5sb2coJ1N1Y2Nlc3NmdWxseSBtYXRjaGVkIHJvdXRlJywgbWF0Y2gpO1xuICogICB9LCAobm9tYXRjaCkgPT4ge1xuICogICAgIC8vIG5vbWF0Y2guJGxpbmsgLSB0aGUgZnVsbCBsaW5rIGRhdGFcbiAqICAgICBjb25zb2xlLmVycm9yKCdHb3QgYSBkZWVwbGluayB0aGF0IGRpZG5cXCd0IG1hdGNoJywgbm9tYXRjaCk7XG4gKiAgIH0pO1xuICogYGBgXG4gKlxuICogU2VlIHRoZSBbSW9uaWMgRGVlcGxpbmtzIERlbW9dKGh0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL2lvbmljMi1kZWVwbGlua3MtZGVtby9ibG9iL21hc3Rlci9hcHAvYXBwLnRzKSBmb3IgYW4gZXhhbXBsZSBvZiBob3cgdG9cbiAqIHJldHJpZXZlIHRoZSBgTmF2Q29udHJvbGxlcmAgcmVmZXJlbmNlIGF0IHJ1bnRpbWUuXG4gKlxuICogQGludGVyZmFjZXNcbiAqIERlZXBsaW5rTWF0Y2hcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdEZWVwbGlua3MnLFxuICBwbHVnaW46ICdpb25pYy1wbHVnaW4tZGVlcGxpbmtzJyxcbiAgcGx1Z2luUmVmOiAnSW9uaWNEZWVwbGluaycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vaW9uaWMtdGVhbS9pb25pYy1wbHVnaW4tZGVlcGxpbmtzJyxcbiAgaW5zdGFsbDogJ2lvbmljIGNvcmRvdmEgcGx1Z2luIGFkZCBpb25pYy1wbHVnaW4tZGVlcGxpbmtzIC0tdmFyaWFibGUgVVJMX1NDSEVNRT1teWFwcCAtLXZhcmlhYmxlIERFRVBMSU5LX1NDSEVNRT1odHRwcyAtLXZhcmlhYmxlIERFRVBMSU5LX0hPU1Q9ZXhhbXBsZS5jb20gLS12YXJpYWJsZSBBTkRST0lEX1BBVEhfUFJFRklYPS8nLFxuICBpbnN0YWxsVmFyaWFibGVzOiBbJ1VSTF9TQ0hFTUUnLCAnREVFUExJTktfU0NIRU1FJywgJ0RFRVBMSU5LX0hPU1QnLCAnQU5EUk9JRF9QQVRIX1BSRUZJWCddLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdCcm93c2VyJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERlZXBsaW5rcyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogRGVmaW5lIGEgc2V0IG9mIHBhdGhzIHRvIG1hdGNoIGFnYWluc3QgaW5jb21pbmcgZGVlcGxpbmtzLlxuICAgKlxuICAgKiBAcGFyYW0ge3BhdGhzfSBwYXRocyBEZWZpbmUgYSBzZXQgb2YgcGF0aHMgdG8gbWF0Y2ggYWdhaW5zdCBpbmNvbWluZyBkZWVwbGlua3MuXG4gICAqIHBhdGhzIHRha2VzIGFuIG9iamVjdCBvZiB0aGUgZm9ybSB7ICdwYXRoJzogZGF0YSB9LiBJZiBhIGRlZXBsaW5rXG4gICAqIG1hdGNoZXMgdGhlIHBhdGgsIHRoZSByZXN1bHRpbmcgcGF0aC1kYXRhIHBhaXIgd2lsbCBiZSByZXR1cm5lZCBpbiB0aGVcbiAgICogcHJvbWlzZSByZXN1bHQgd2hpY2ggeW91IGNhbiB0aGVuIHVzZSB0byBuYXZpZ2F0ZSBpbiB0aGUgYXBwIGFzIHlvdSBzZWUgZml0LlxuICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxEZWVwbGlua01hdGNoPn0gUmV0dXJucyBhbiBPYnNlcnZhYmxlIHRoYXQgaXMgY2FsbGVkIGVhY2ggdGltZSBhIGRlZXBsaW5rIGNvbWVzIHRocm91Z2gsIGFuZFxuICAgKiBlcnJvcnMgaWYgYSBkZWVwbGluayBjb21lcyB0aHJvdWdoIHRoYXQgZG9lcyBub3QgbWF0Y2ggYSBnaXZlbiBwYXRoLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWVcbiAgfSlcbiAgcm91dGUocGF0aHM6IGFueSk6IE9ic2VydmFibGU8RGVlcGxpbmtNYXRjaD4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBUaGlzIGlzIGEgY29udmVuaWVuY2UgdmVyc2lvbiBvZiBgcm91dGVgIHRoYXQgdGFrZXMgYSByZWZlcmVuY2UgdG8gYSBOYXZDb250cm9sbGVyXG4gICAqIGZyb20gSW9uaWMsIG9yIGEgY3VzdG9tIGNsYXNzIHRoYXQgY29uZm9ybXMgdG8gdGhpcyBwcm90b2NvbDpcbiAgICpcbiAgICogTmF2Q29udHJvbGxlci5wdXNoID0gZnVuY3Rpb24oVmlldywgUGFyYW1zKXt9XG4gICAqXG4gICAqIFRoaXMgaGFuZGxlciB3aWxsIGF1dG9tYXRpY2FsbHkgbmF2aWdhdGUgd2hlbiBhIHJvdXRlIG1hdGNoZXMuIElmIHlvdSBuZWVkIGZpbmVyLWdyYWluZWRcbiAgICogY29udHJvbCBvdmVyIHRoZSBiZWhhdmlvciBvZiBhIG1hdGNoaW5nIGRlZXBsaW5rLCB1c2UgdGhlIHBsYWluIGByb3V0ZWAgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0ge05hdn0gbmF2Q29udHJvbGxlciBEZWZpbmUgYSBzZXQgb2YgcGF0aHMgdG8gbWF0Y2ggYWdhaW5zdCBpbmNvbWluZyBkZWVwbGlua3MuXG4gICAqIHBhdGhzIHRha2VzIGFuIG9iamVjdCBvZiB0aGUgZm9ybSB7ICdwYXRoJzogZGF0YSB9LiBJZiBhIGRlZXBsaW5rXG4gICAqIG1hdGNoZXMgdGhlIHBhdGgsIHRoZSByZXN1bHRpbmcgcGF0aC1kYXRhIHBhaXIgd2lsbCBiZSByZXR1cm5lZCBpbiB0aGVcbiAgICogcHJvbWlzZSByZXN1bHQgd2hpY2ggeW91IGNhbiB0aGVuIHVzZSB0byBuYXZpZ2F0ZSBpbiB0aGUgYXBwIGFzIHlvdSBzZWUgZml0LlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gcGF0aHNcbiAgICpcbiAgICogQHBhcmFtIHtEZWVwbGlua09wdGlvbnN9IG9wdGlvbnNcbiAgICpcbiAgICogQHJldHVybnMge09ic2VydmFibGU8RGVlcGxpbmtNYXRjaD59IFJldHVybnMgYW4gT2JzZXJ2YWJsZSB0aGF0IHJlc29sdmVzIGVhY2ggdGltZSBhIGRlZXBsaW5rIGNvbWVzIHRocm91Z2gsIGFuZFxuICAgKiBlcnJvcnMgaWYgYSBkZWVwbGluayBjb21lcyB0aHJvdWdoIHRoYXQgZG9lcyBub3QgbWF0Y2ggYSBnaXZlbiBwYXRoLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWVcbiAgfSlcbiAgcm91dGVXaXRoTmF2Q29udHJvbGxlcihuYXZDb250cm9sbGVyOiBhbnksIHBhdGhzOiBhbnksIG9wdGlvbnM/OiBEZWVwbGlua09wdGlvbnMpOiBPYnNlcnZhYmxlPERlZXBsaW5rTWF0Y2g+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 515 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Device; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var DeviceOriginal = /** @class */ (function (_super) {
    __extends(DeviceOriginal, _super);
    function DeviceOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DeviceOriginal.prototype, "cordova", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "cordova"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "cordova", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceOriginal.prototype, "model", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "model"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "model", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceOriginal.prototype, "platform", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "platform"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "platform", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceOriginal.prototype, "uuid", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "uuid"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "uuid", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceOriginal.prototype, "version", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "version"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "version", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceOriginal.prototype, "manufacturer", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "manufacturer"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "manufacturer", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceOriginal.prototype, "isVirtual", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "isVirtual"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "isVirtual", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceOriginal.prototype, "serial", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "serial"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "serial", value); },
        enumerable: true,
        configurable: true
    });
    DeviceOriginal.pluginName = "Device";
    DeviceOriginal.plugin = "cordova-plugin-device";
    DeviceOriginal.pluginRef = "device";
    DeviceOriginal.repo = "https://github.com/apache/cordova-plugin-device";
    DeviceOriginal.platforms = ["Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "macOS", "Tizen", "Ubuntu", "Windows", "Windows Phone"];
    return DeviceOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Device = new DeviceOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kZXZpY2UvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8seUVBQThDLE1BQU0sb0JBQW9CLENBQUM7O0lBNEJwRCwwQkFBaUI7Ozs7MEJBSTNDLDJCQUFPOzs7Ozs7MEJBT1AseUJBQUs7Ozs7OzswQkFJTCw0QkFBUTs7Ozs7OzBCQUlSLHdCQUFJOzs7Ozs7MEJBSUosMkJBQU87Ozs7OzswQkFJUCxnQ0FBWTs7Ozs7OzBCQUlaLDZCQUFTOzs7Ozs7MEJBSVQsMEJBQU07Ozs7Ozs7Ozs7O2lCQWhFUjtFQTZCNEIsaUJBQWlCO1NBQWhDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhUHJvcGVydHksIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5kZWNsYXJlIGNvbnN0IHdpbmRvdzogYW55O1xuXG4vKipcbiAqIEBuYW1lIERldmljZVxuICogQGRlc2NyaXB0aW9uXG4gKiBBY2Nlc3MgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHVuZGVybHlpbmcgZGV2aWNlIGFuZCBwbGF0Zm9ybS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IERldmljZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvZGV2aWNlJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGRldmljZTogRGV2aWNlKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiBjb25zb2xlLmxvZygnRGV2aWNlIFVVSUQgaXM6ICcgKyB0aGlzLmRldmljZS51dWlkKTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0RldmljZScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWRldmljZScsXG4gIHBsdWdpblJlZjogJ2RldmljZScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vYXBhY2hlL2NvcmRvdmEtcGx1Z2luLWRldmljZScsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0JsYWNrQmVycnkgMTAnLCAnQnJvd3NlcicsICdGaXJlZm94IE9TJywgJ2lPUycsICdtYWNPUycsICdUaXplbicsICdVYnVudHUnLCAnV2luZG93cycsICdXaW5kb3dzIFBob25lJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRGV2aWNlIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKiBHZXQgdGhlIHZlcnNpb24gb2YgQ29yZG92YSBydW5uaW5nIG9uIHRoZSBkZXZpY2UuICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBjb3Jkb3ZhOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBkZXZpY2UubW9kZWwgcmV0dXJucyB0aGUgbmFtZSBvZiB0aGUgZGV2aWNlJ3MgbW9kZWwgb3IgcHJvZHVjdC4gVGhlIHZhbHVlIGlzIHNldFxuICAgKiBieSB0aGUgZGV2aWNlIG1hbnVmYWN0dXJlciBhbmQgbWF5IGJlIGRpZmZlcmVudCBhY3Jvc3MgdmVyc2lvbnMgb2YgdGhlIHNhbWUgcHJvZHVjdC5cbiAgICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBtb2RlbDogc3RyaW5nO1xuXG4gIC8qKiBHZXQgdGhlIGRldmljZSdzIG9wZXJhdGluZyBzeXN0ZW0gbmFtZS4gKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIHBsYXRmb3JtOiBzdHJpbmc7XG5cbiAgLyoqIEdldCB0aGUgZGV2aWNlJ3MgVW5pdmVyc2FsbHkgVW5pcXVlIElkZW50aWZpZXIgKFVVSUQpLiAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgdXVpZDogc3RyaW5nO1xuXG4gIC8qKiBHZXQgdGhlIG9wZXJhdGluZyBzeXN0ZW0gdmVyc2lvbi4gKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIHZlcnNpb246IHN0cmluZztcblxuICAvKiogR2V0IHRoZSBkZXZpY2UncyBtYW51ZmFjdHVyZXIuICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBtYW51ZmFjdHVyZXI6IHN0cmluZztcblxuICAvKiogV2hldGhlciB0aGUgZGV2aWNlIGlzIHJ1bm5pbmcgb24gYSBzaW11bGF0b3IuICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBpc1ZpcnR1YWw6IGJvb2xlYW47XG5cbiAgLyoqIEdldCB0aGUgZGV2aWNlIGhhcmR3YXJlIHNlcmlhbCBudW1iZXIuICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBzZXJpYWw6IHN0cmluZztcblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 516 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DeviceAccounts; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var DeviceAccountsOriginal = /** @class */ (function (_super) {
    __extends(DeviceAccountsOriginal, _super);
    function DeviceAccountsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeviceAccountsOriginal.prototype.get = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "get", {}, arguments); };
    DeviceAccountsOriginal.prototype.getByType = function (type) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getByType", {}, arguments); };
    DeviceAccountsOriginal.prototype.getEmails = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getEmails", {}, arguments); };
    DeviceAccountsOriginal.prototype.getEmail = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getEmail", {}, arguments); };
    DeviceAccountsOriginal.pluginName = "DeviceAccounts";
    DeviceAccountsOriginal.plugin = "cordova-device-accounts";
    DeviceAccountsOriginal.pluginRef = "plugins.DeviceAccounts";
    DeviceAccountsOriginal.repo = "https://github.com/danielsogl/cordova-device-accounts";
    DeviceAccountsOriginal.platforms = ["Android"];
    return DeviceAccountsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var DeviceAccounts = new DeviceAccountsOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kZXZpY2UtYWNjb3VudHMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBNkJwQyxrQ0FBaUI7Ozs7SUFPbkQsNEJBQUc7SUFTSCxrQ0FBUyxhQUFDLElBQVk7SUFTdEIsa0NBQVM7SUFTVCxpQ0FBUTs7Ozs7O3lCQWhFVjtFQThCb0MsaUJBQWlCO1NBQXhDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBEZXZpY2UgQWNjb3VudHNcbiAqIEBkZXNjcmlwdGlvblxuICogR2V0cyB0aGUgR29vZ2xlIGFjY291bnRzIGFzc29jaWF0ZWQgd2l0aCB0aGUgQW5kcm9pZCBkZXZpY2VcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IERldmljZUFjY291bnRzIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9kZXZpY2UtYWNjb3VudHMnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZGV2aWNlQWNjb3VudHM6IERldmljZUFjY291bnRzKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmRldmljZUFjY291bnRzLmdldCgpXG4gKiAgIC50aGVuKGFjY291bnRzID0+IGNvbnNvbGUubG9nKGFjY291bnRzKSlcbiAqICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdEZXZpY2VBY2NvdW50cycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtZGV2aWNlLWFjY291bnRzJyxcbiAgcGx1Z2luUmVmOiAncGx1Z2lucy5EZXZpY2VBY2NvdW50cycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZGFuaWVsc29nbC9jb3Jkb3ZhLWRldmljZS1hY2NvdW50cycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRGV2aWNlQWNjb3VudHMgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqICBHZXRzIGFsbCBhY2NvdW50cyByZWdpc3RlcmVkIG9uIHRoZSBBbmRyb2lkIERldmljZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXQoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogIEdldCBhbGwgYWNjb3VudHMgcmVnaXN0ZXJlZCBvbiBBbmRyb2lkIGRldmljZSBmb3IgcmVxdWVzdGVkIHR5cGVcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0QnlUeXBlKHR5cGU6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqICBHZXQgYWxsIGVtYWlscyByZWdpc3RlcmVkIG9uIEFuZHJvaWQgZGV2aWNlIChhY2NvdW50cyB3aXRoICdjb20uZ29vZ2xlJyB0eXBlKVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRFbWFpbHMoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogIEdldCB0aGUgZmlyc3QgZW1haWwgcmVnaXN0ZXJlZCBvbiBBbmRyb2lkIGRldmljZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRFbWFpbCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 517 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DeviceFeedback; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var DeviceFeedbackOriginal = /** @class */ (function (_super) {
    __extends(DeviceFeedbackOriginal, _super);
    function DeviceFeedbackOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeviceFeedbackOriginal.prototype.acoustic = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "acoustic", { "sync": true }, arguments); };
    DeviceFeedbackOriginal.prototype.haptic = function (type) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "haptic", { "sync": true }, arguments); };
    DeviceFeedbackOriginal.prototype.isFeedbackEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isFeedbackEnabled", {}, arguments); };
    DeviceFeedbackOriginal.pluginName = "DeviceFeedback";
    DeviceFeedbackOriginal.plugin = "cordova-plugin-velda-devicefeedback";
    DeviceFeedbackOriginal.pluginRef = "plugins.deviceFeedback";
    DeviceFeedbackOriginal.repo = "https://github.com/VVelda/device-feedback";
    DeviceFeedbackOriginal.platforms = ["Android"];
    return DeviceFeedbackOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var DeviceFeedback = new DeviceFeedbackOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kZXZpY2UtZmVlZGJhY2svaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBd0NwQyxrQ0FBaUI7Ozs7SUFNbkQsaUNBQVE7SUFRUiwrQkFBTSxhQUFDLElBQVk7SUFRbkIsMENBQWlCOzs7Ozs7eUJBL0RuQjtFQXlDb0MsaUJBQWlCO1NBQXhDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBEZXZpY2UgRmVlZGJhY2tcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIFBsdWdpbiB0aGF0IGxldHMgeW91IHByb3ZpZGUgaGFwdGljIG9yIGFjb3VzdGljIGZlZWRiYWNrIG9uIEFuZHJvaWQgZGV2aWNlcy5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IERldmljZUZlZWRiYWNrIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9kZXZpY2UtZmVlZGJhY2snO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZGV2aWNlRmVlZGJhY2s6IERldmljZUZlZWRiYWNrKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogdGhpcy5kZXZpY2VGZWVkYmFjay5hY291c3RpYygpO1xuICpcbiAqIHRoaXMuZGV2aWNlRmVlZGJhY2suaGFwdGljKDApO1xuICpcbiAqIHRoaXMuZGV2aWNlRmVlZGJhY2suaXNGZWVkYmFja0VuYWJsZWQoKVxuICogICAudGhlbigoZmVlZGJhY2spID0+IHtcbiAqICAgICBjb25zb2xlLmxvZyhmZWVkYmFjayk7XG4gKiAgICAgLy8ge1xuICogICAgIC8vICAgYWNvdXN0aWM6IHRydWUsXG4gKiAgICAgLy8gICBoYXB0aWM6IHRydWVcbiAqICAgICAvLyB9XG4gKiAgIH0pO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0RldmljZUZlZWRiYWNrJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tdmVsZGEtZGV2aWNlZmVlZGJhY2snLFxuICBwbHVnaW5SZWY6ICdwbHVnaW5zLmRldmljZUZlZWRiYWNrJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9WVmVsZGEvZGV2aWNlLWZlZWRiYWNrJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEZXZpY2VGZWVkYmFjayBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogUHJvdmlkZSBzb3VuZCBmZWVkYmFjayB0byB1c2VyLCBuZXZlcnRoZWxlc3MgcmVzcGVjdCB1c2VyJ3Mgc2V0dGluZ3MgYW5kIGN1cnJlbnQgYWN0aXZlIGRldmljZSBwcm9maWxlIGFzIG5hdGl2ZSBmZWVkYmFjayBkby5cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBhY291c3RpYygpOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBQcm92aWRlIHZpYnJhdGUgZmVlZGJhY2sgdG8gdXNlciwgbmV2ZXJ0aGVsZXNzIHJlc3BlY3QgdXNlcidzIHRhY3RpbGUgZmVlZGJhY2sgc2V0dGluZyBhcyBuYXRpdmUgZmVlZGJhY2sgZG8uXG4gICAqIEBwYXJhbSB0eXBlIHtOdW1iZXJ9IFNwZWNpZnkgdHlwZSBvZiB2aWJyYXRpb24gZmVlZGJhY2suIDAgZm9yIGxvbmcgcHJlc3MsIDEgZm9yIHZpcnR1YWwga2V5LCBvciAzIGZvciBrZXlib2FyZCB0YXAuXG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgaGFwdGljKHR5cGU6IG51bWJlcik6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGhhcHRpYyBhbmQgYWNvdXN0aWMgZmVlZGJhY2sgaXMgZW5hYmxlZCBieSB1c2VyIHNldHRpbmdzLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc0ZlZWRiYWNrRW5hYmxlZCgpOiBQcm9taXNlPHsgaGFwdGljOiBib29sZWFuOyBhY291c3RpYzogYm9vbGVhbjsgfT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 518 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DeviceMotion; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var DeviceMotionOriginal = /** @class */ (function (_super) {
    __extends(DeviceMotionOriginal, _super);
    function DeviceMotionOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeviceMotionOriginal.prototype.getCurrentAcceleration = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCurrentAcceleration", {}, arguments); };
    DeviceMotionOriginal.prototype.watchAcceleration = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "watchAcceleration", { "callbackOrder": "reverse", "observable": true, "clearFunction": "clearWatch" }, arguments); };
    DeviceMotionOriginal.pluginName = "DeviceMotion";
    DeviceMotionOriginal.plugin = "cordova-plugin-device-motion";
    DeviceMotionOriginal.pluginRef = "navigator.accelerometer";
    DeviceMotionOriginal.repo = "https://github.com/apache/cordova-plugin-device-motion";
    DeviceMotionOriginal.platforms = ["Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "Tizen", "Ubuntu", "Windows", "Windows Phone 8"];
    return DeviceMotionOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var DeviceMotion = new DeviceMotionOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kZXZpY2UtbW90aW9uL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7SUEyRVgsZ0NBQWlCOzs7O0lBT2pELDZDQUFzQjtJQWN0Qix3Q0FBaUIsYUFBQyxPQUEwQzs7Ozs7O3VCQWxHOUQ7RUE2RWtDLGlCQUFpQjtTQUF0QyxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuZXhwb3J0IGludGVyZmFjZSBEZXZpY2VNb3Rpb25BY2NlbGVyYXRpb25EYXRhIHtcblxuICAvKipcbiAgICogQW1vdW50IG9mIGFjY2VsZXJhdGlvbiBvbiB0aGUgeC1heGlzLiAoaW4gbS9zXjIpXG4gICAqL1xuICB4OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEFtb3VudCBvZiBhY2NlbGVyYXRpb24gb24gdGhlIHktYXhpcy4gKGluIG0vc14yKVxuICAgKi9cbiAgeTogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBBbW91bnQgb2YgYWNjZWxlcmF0aW9uIG9uIHRoZSB6LWF4aXMuIChpbiBtL3NeMilcbiAgICovXG4gIHo6IG51bWJlcjtcblxuICAvKipcbiAgICogQ3JlYXRpb24gdGltZXN0YW1wIGluIG1pbGxpc2Vjb25kcy5cbiAgICovXG4gIHRpbWVzdGFtcDogYW55O1xuXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGV2aWNlTW90aW9uQWNjZWxlcm9tZXRlck9wdGlvbnMge1xuXG4gIC8qKlxuICAgKiBSZXF1ZXN0ZWQgcGVyaW9kIG9mIGNhbGxzIHRvIGFjY2VsZXJvbWV0ZXJTdWNjZXNzIHdpdGggYWNjZWxlcmF0aW9uIGRhdGEgaW4gTWlsbGlzZWNvbmRzLiBEZWZhdWx0OiAxMDAwMFxuICAgKi9cbiAgZnJlcXVlbmN5PzogbnVtYmVyO1xuXG59XG5cbi8qKlxuICogQG5hbWUgRGV2aWNlIE1vdGlvblxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtcGx1Z2luLWRldmljZS1tb3Rpb25gLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbRGV2aWNlIE1vdGlvbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vYXBhY2hlL2NvcmRvdmEtcGx1Z2luLWRldmljZS1tb3Rpb24pLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgRGV2aWNlTW90aW9uLCBEZXZpY2VNb3Rpb25BY2NlbGVyYXRpb25EYXRhIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9kZXZpY2UtbW90aW9uJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGRldmljZU1vdGlvbjogRGV2aWNlTW90aW9uKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiAvLyBHZXQgdGhlIGRldmljZSBjdXJyZW50IGFjY2VsZXJhdGlvblxuICogdGhpcy5kZXZpY2VNb3Rpb24uZ2V0Q3VycmVudEFjY2VsZXJhdGlvbigpLnRoZW4oXG4gKiAgIChhY2NlbGVyYXRpb246IERldmljZU1vdGlvbkFjY2VsZXJhdGlvbkRhdGEpID0+IGNvbnNvbGUubG9nKGFjY2VsZXJhdGlvbiksXG4gKiAgIChlcnJvcjogYW55KSA9PiBjb25zb2xlLmxvZyhlcnJvcilcbiAqICk7XG4gKlxuICogLy8gV2F0Y2ggZGV2aWNlIGFjY2VsZXJhdGlvblxuICogdmFyIHN1YnNjcmlwdGlvbiA9IHRoaXMuZGV2aWNlTW90aW9uLndhdGNoQWNjZWxlcmF0aW9uKCkuc3Vic2NyaWJlKChhY2NlbGVyYXRpb246IERldmljZU1vdGlvbkFjY2VsZXJhdGlvbkRhdGEpID0+IHtcbiAqICAgY29uc29sZS5sb2coYWNjZWxlcmF0aW9uKTtcbiAqIH0pO1xuICpcbiAqIC8vIFN0b3Agd2F0Y2hcbiAqIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICpcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIERldmljZU1vdGlvbkFjY2VsZXJhdGlvbkRhdGFcbiAqIERldmljZU1vdGlvbkFjY2VsZXJvbWV0ZXJPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnRGV2aWNlTW90aW9uJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZGV2aWNlLW1vdGlvbicsXG4gIHBsdWdpblJlZjogJ25hdmlnYXRvci5hY2NlbGVyb21ldGVyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tZGV2aWNlLW1vdGlvbicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0JsYWNrQmVycnkgMTAnLCAnQnJvd3NlcicsICdGaXJlZm94IE9TJywgJ2lPUycsICdUaXplbicsICdVYnVudHUnLCAnV2luZG93cycsICdXaW5kb3dzIFBob25lIDgnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEZXZpY2VNb3Rpb24gZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgY3VycmVudCBhY2NlbGVyYXRpb24gYWxvbmcgdGhlIHgsIHksIGFuZCB6IGF4ZXMuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPERldmljZU1vdGlvbkFjY2VsZXJhdGlvbkRhdGE+fSBSZXR1cm5zIG9iamVjdCB3aXRoIHgsIHksIHosIGFuZCB0aW1lc3RhbXAgcHJvcGVydGllc1xuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRDdXJyZW50QWNjZWxlcmF0aW9uKCk6IFByb21pc2U8RGV2aWNlTW90aW9uQWNjZWxlcmF0aW9uRGF0YT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBXYXRjaCB0aGUgZGV2aWNlIGFjY2VsZXJhdGlvbi4gQ2xlYXIgdGhlIHdhdGNoIGJ5IHVuc3Vic2NyaWJpbmcgZnJvbSB0aGUgb2JzZXJ2YWJsZS5cbiAgICogQHBhcmFtIHtBY2NlbGVyb21ldGVyT3B0aW9uc30gb3B0aW9ucyBsaXN0IG9mIG9wdGlvbnMgZm9yIHRoZSBhY2NlbGVyb21ldGVyLlxuICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxEZXZpY2VNb3Rpb25BY2NlbGVyYXRpb25EYXRhPn0gT2JzZXJ2YWJsZSByZXR1cm5zIGFuIG9ic2VydmFibGUgdGhhdCB5b3UgY2FuIHN1YnNjcmliZSB0b1xuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJyxcbiAgICBvYnNlcnZhYmxlOiB0cnVlLFxuICAgIGNsZWFyRnVuY3Rpb246ICdjbGVhcldhdGNoJ1xuICB9KVxuICB3YXRjaEFjY2VsZXJhdGlvbihvcHRpb25zPzogRGV2aWNlTW90aW9uQWNjZWxlcm9tZXRlck9wdGlvbnMpOiBPYnNlcnZhYmxlPERldmljZU1vdGlvbkFjY2VsZXJhdGlvbkRhdGE+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 519 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DeviceOrientation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var DeviceOrientationOriginal = /** @class */ (function (_super) {
    __extends(DeviceOrientationOriginal, _super);
    function DeviceOrientationOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeviceOrientationOriginal.prototype.getCurrentHeading = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCurrentHeading", {}, arguments); };
    DeviceOrientationOriginal.prototype.watchHeading = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "watchHeading", { "callbackOrder": "reverse", "observable": true, "clearFunction": "clearWatch" }, arguments); };
    DeviceOrientationOriginal.pluginName = "DeviceOrientation";
    DeviceOrientationOriginal.plugin = "cordova-plugin-device-orientation";
    DeviceOrientationOriginal.pluginRef = "navigator.compass";
    DeviceOrientationOriginal.repo = "https://github.com/apache/cordova-plugin-device-orientation";
    DeviceOrientationOriginal.platforms = ["Amazon Fire OS", "Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "Tizen", "Ubuntu", "Windows", "Windows Phone"];
    return DeviceOrientationOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var DeviceOrientation = new DeviceOrientationOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kZXZpY2Utb3JpZW50YXRpb24vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQWdGTixxQ0FBaUI7Ozs7SUFPdEQsNkNBQWlCO0lBZ0JqQix3Q0FBWSxhQUFDLE9BQXlDOzs7Ozs7NEJBekd4RDtFQWtGdUMsaUJBQWlCO1NBQTNDLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGV2aWNlT3JpZW50YXRpb25Db21wYXNzSGVhZGluZyB7XG5cbiAgLyoqXG4gICAqIFRoZSBoZWFkaW5nIGluIGRlZ3JlZXMgZnJvbSAwLTM1OS45OSBhdCBhIHNpbmdsZSBtb21lbnQgaW4gdGltZS4gKE51bWJlcilcbiAgICovXG4gIG1hZ25ldGljSGVhZGluZzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgaGVhZGluZyByZWxhdGl2ZSB0byB0aGUgZ2VvZ3JhcGhpYyBOb3J0aCBQb2xlIGluIGRlZ3JlZXMgMC0zNTkuOTkgYXQgYSBzaW5nbGUgbW9tZW50IGluIHRpbWUuIEEgbmVnYXRpdmUgdmFsdWUgaW5kaWNhdGVzIHRoYXQgdGhlIHRydWUgaGVhZGluZyBjYW4ndCBiZSBkZXRlcm1pbmVkLiAoTnVtYmVyKVxuICAgKi9cbiAgdHJ1ZUhlYWRpbmc6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIGRldmlhdGlvbiBpbiBkZWdyZWVzIGJldHdlZW4gdGhlIHJlcG9ydGVkIGhlYWRpbmcgYW5kIHRoZSB0cnVlIGhlYWRpbmcuIChOdW1iZXIpXG4gICAqL1xuICBoZWFkaW5nQWNjdXJhY3k6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIHRpbWUgYXQgd2hpY2ggdGhpcyBoZWFkaW5nIHdhcyBkZXRlcm1pbmVkLiAoRE9NVGltZVN0YW1wKVxuICAgKi9cbiAgdGltZXN0YW1wOiBhbnk7XG5cbn1cblxuZXhwb3J0IGludGVyZmFjZSBEZXZpY2VPcmllbnRhdGlvbkNvbXBhc3NPcHRpb25zIHtcblxuICAvKipcbiAgICogSG93IG9mdGVuIHRvIHJldHJpZXZlIHRoZSBjb21wYXNzIGhlYWRpbmcgaW4gbWlsbGlzZWNvbmRzLiAoTnVtYmVyKSAoRGVmYXVsdDogMTAwKVxuICAgKi9cbiAgZnJlcXVlbmN5PzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgY2hhbmdlIGluIGRlZ3JlZXMgcmVxdWlyZWQgdG8gaW5pdGlhdGUgYSB3YXRjaEhlYWRpbmcgc3VjY2VzcyBjYWxsYmFjay4gV2hlbiB0aGlzIHZhbHVlIGlzIHNldCwgZnJlcXVlbmN5IGlzIGlnbm9yZWQuIChOdW1iZXIpXG4gICAqL1xuICBmaWx0ZXI/OiBudW1iZXI7XG5cbn1cblxuLyoqXG4gKiBAbmFtZSBEZXZpY2UgT3JpZW50YXRpb25cbiAqIEBkZXNjcmlwdGlvblxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGBjb3Jkb3ZhLXBsdWdpbi1kZXZpY2Utb3JpZW50YXRpb25gLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbRGV2aWNlIE9yaWVudGF0aW9uIGRvY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tZGV2aWNlLW9yaWVudGF0aW9uKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIC8vIERldmljZU9yaWVudGF0aW9uQ29tcGFzc0hlYWRpbmcgaXMgYW4gaW50ZXJmYWNlIGZvciBjb21wYXNzXG4gKiBpbXBvcnQgeyBEZXZpY2VPcmllbnRhdGlvbiwgRGV2aWNlT3JpZW50YXRpb25Db21wYXNzSGVhZGluZyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvZGV2aWNlLW9yaWVudGF0aW9uJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGRldmljZU9yaWVudGF0aW9uOiBEZXZpY2VPcmllbnRhdGlvbikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogLy8gR2V0IHRoZSBkZXZpY2UgY3VycmVudCBjb21wYXNzIGhlYWRpbmdcbiAqIHRoaXMuZGV2aWNlT3JpZW50YXRpb24uZ2V0Q3VycmVudEhlYWRpbmcoKS50aGVuKFxuICogICAoZGF0YTogRGV2aWNlT3JpZW50YXRpb25Db21wYXNzSGVhZGluZykgPT4gY29uc29sZS5sb2coZGF0YSksXG4gKiAgIChlcnJvcjogYW55KSA9PiBjb25zb2xlLmxvZyhlcnJvcilcbiAqICk7XG4gKlxuICogLy8gV2F0Y2ggdGhlIGRldmljZSBjb21wYXNzIGhlYWRpbmcgY2hhbmdlXG4gKiB2YXIgc3Vic2NyaXB0aW9uID0gdGhpcy5kZXZpY2VPcmllbnRhdGlvbi53YXRjaEhlYWRpbmcoKS5zdWJzY3JpYmUoXG4gKiAgIChkYXRhOiBEZXZpY2VPcmllbnRhdGlvbkNvbXBhc3NIZWFkaW5nKSA9PiBjb25zb2xlLmxvZyhkYXRhKVxuICogKTtcbiAqXG4gKiAvLyBTdG9wIHdhdGNoaW5nIGhlYWRpbmcgY2hhbmdlXG4gKiBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIERldmljZU9yaWVudGF0aW9uQ29tcGFzc09wdGlvbnNcbiAqIERldmljZU9yaWVudGF0aW9uQ29tcGFzc0hlYWRpbmdcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdEZXZpY2VPcmllbnRhdGlvbicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWRldmljZS1vcmllbnRhdGlvbicsXG4gIHBsdWdpblJlZjogJ25hdmlnYXRvci5jb21wYXNzJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tZGV2aWNlLW9yaWVudGF0aW9uJyxcbiAgcGxhdGZvcm1zOiBbJ0FtYXpvbiBGaXJlIE9TJywgJ0FuZHJvaWQnLCAnQmxhY2tCZXJyeSAxMCcsICdCcm93c2VyJywgJ0ZpcmVmb3ggT1MnLCAnaU9TJywgJ1RpemVuJywgJ1VidW50dScsICdXaW5kb3dzJywgJ1dpbmRvd3MgUGhvbmUnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEZXZpY2VPcmllbnRhdGlvbiBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogR2V0IHRoZSBjdXJyZW50IGNvbXBhc3MgaGVhZGluZy5cbiAgICogQHJldHVybnMge1Byb21pc2U8RGV2aWNlT3JpZW50YXRpb25Db21wYXNzSGVhZGluZz59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldEN1cnJlbnRIZWFkaW5nKCk6IFByb21pc2U8RGV2aWNlT3JpZW50YXRpb25Db21wYXNzSGVhZGluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGRldmljZSBjdXJyZW50IGhlYWRpbmcgYXQgYSByZWd1bGFyIGludGVydmFsXG4gICAqXG4gICAqIFN0b3AgdGhlIHdhdGNoIGJ5IHVuc3Vic2NyaWJpbmcgZnJvbSB0aGUgb2JzZXJ2YWJsZVxuICAgKiBAcGFyYW0ge0RldmljZU9yaWVudGF0aW9uQ29tcGFzc09wdGlvbnN9IG9wdGlvbnMgT3B0aW9ucyBmb3IgY29tcGFzcy4gRnJlcXVlbmN5IGFuZCBGaWx0ZXIuIE9wdGlvbmFsXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPERldmljZU9yaWVudGF0aW9uQ29tcGFzc0hlYWRpbmc+fSBSZXR1cm5zIGFuIG9ic2VydmFibGUgdGhhdCBjb250YWlucyB0aGUgY29tcGFzcyBoZWFkaW5nXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnLFxuICAgIG9ic2VydmFibGU6IHRydWUsXG4gICAgY2xlYXJGdW5jdGlvbjogJ2NsZWFyV2F0Y2gnXG4gIH0pXG4gIHdhdGNoSGVhZGluZyhvcHRpb25zPzogRGV2aWNlT3JpZW50YXRpb25Db21wYXNzT3B0aW9ucyk6IE9ic2VydmFibGU8RGV2aWNlT3JpZW50YXRpb25Db21wYXNzSGVhZGluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 520 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Diagnostic; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var DiagnosticOriginal = /** @class */ (function (_super) {
    __extends(DiagnosticOriginal, _super);
    function DiagnosticOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.permission = {
            READ_CALENDAR: 'READ_CALENDAR',
            WRITE_CALENDAR: 'WRITE_CALENDAR',
            CAMERA: 'CAMERA',
            READ_CONTACTS: 'READ_CONTACTS',
            WRITE_CONTACTS: 'WRITE_CONTACTS',
            GET_ACCOUNTS: 'GET_ACCOUNTS',
            ACCESS_FINE_LOCATION: 'ACCESS_FINE_LOCATION',
            ACCESS_COARSE_LOCATION: 'ACCESS_COARSE_LOCATION',
            RECORD_AUDIO: 'RECORD_AUDIO',
            READ_PHONE_STATE: 'READ_PHONE_STATE',
            CALL_PHONE: 'CALL_PHONE',
            ADD_VOICEMAIL: 'ADD_VOICEMAIL',
            USE_SIP: 'USE_SIP',
            PROCESS_OUTGOING_CALLS: 'PROCESS_OUTGOING_CALLS',
            READ_CALL_LOG: 'READ_CALL_LOG',
            WRITE_CALL_LOG: 'WRITE_CALL_LOG',
            SEND_SMS: 'SEND_SMS',
            RECEIVE_SMS: 'RECEIVE_SMS',
            READ_SMS: 'READ_SMS',
            RECEIVE_WAP_PUSH: 'RECEIVE_WAP_PUSH',
            RECEIVE_MMS: 'RECEIVE_MMS',
            WRITE_EXTERNAL_STORAGE: 'WRITE_EXTERNAL_STORAGE',
            READ_EXTERNAL_STORAGE: 'READ_EXTERNAL_STORAGE',
            BODY_SENSORS: 'BODY_SENSORS'
        };
        _this.locationAuthorizationMode = {
            ALWAYS: 'always',
            WHEN_IN_USE: 'when_in_use'
        };
        _this.permissionGroups = {
            CALENDAR: ['READ_CALENDAR', 'WRITE_CALENDAR'],
            CAMERA: ['CAMERA'],
            CONTACTS: ['READ_CONTACTS', 'WRITE_CONTACTS', 'GET_ACCOUNTS'],
            LOCATION: ['ACCESS_FINE_LOCATION', 'ACCESS_COARSE_LOCATION'],
            MICROPHONE: ['RECORD_AUDIO'],
            PHONE: ['READ_PHONE_STATE', 'CALL_PHONE', 'ADD_VOICEMAIL', 'USE_SIP', 'PROCESS_OUTGOING_CALLS', 'READ_CALL_LOG', 'WRITE_CALL_LOG'],
            SENSORS: ['BODY_SENSORS'],
            SMS: ['SEND_SMS', 'RECEIVE_SMS', 'READ_SMS', 'RECEIVE_WAP_PUSH', 'RECEIVE_MMS'],
            STORAGE: ['READ_EXTERNAL_STORAGE', 'WRITE_EXTERNAL_STORAGE']
        };
        _this.locationMode = {
            HIGH_ACCURACY: 'high_accuracy',
            DEVICE_ONLY: 'device_only',
            BATTERY_SAVING: 'battery_saving',
            LOCATION_OFF: 'location_off'
        };
        _this.bluetoothState = {
            UNKNOWN: 'unknown',
            RESETTING: 'resetting',
            UNSUPPORTED: 'unsupported',
            UNAUTHORIZED: 'unauthorized',
            POWERED_OFF: 'powered_off',
            POWERED_ON: 'powered_on',
            POWERING_OFF: 'powering_off',
            POWERING_ON: 'powering_on'
        };
        return _this;
    }
    DiagnosticOriginal.prototype.isLocationAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isLocationAvailable", {}, arguments); };
    DiagnosticOriginal.prototype.isWifiAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isWifiAvailable", {}, arguments); };
    DiagnosticOriginal.prototype.isCameraAvailable = function (externalStorage) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isCameraAvailable", { "callbackOrder": "reverse" }, arguments); };
    DiagnosticOriginal.prototype.isBluetoothAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isBluetoothAvailable", {}, arguments); };
    DiagnosticOriginal.prototype.switchToLocationSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchToLocationSettings", { "sync": true, "platforms": ["Android", "Windows 10", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.switchToMobileDataSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchToMobileDataSettings", { "sync": true, "platforms": ["Android", "Windows 10"] }, arguments); };
    DiagnosticOriginal.prototype.switchToBluetoothSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchToBluetoothSettings", { "sync": true, "platforms": ["Android", "Windows 10"] }, arguments); };
    DiagnosticOriginal.prototype.switchToWifiSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchToWifiSettings", { "sync": true, "platforms": ["Android", "Windows 10"] }, arguments); };
    DiagnosticOriginal.prototype.isWifiEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isWifiEnabled", { "platforms": ["Android", "Windows 10"] }, arguments); };
    DiagnosticOriginal.prototype.setWifiState = function (state) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setWifiState", { "callbackOrder": "reverse", "platforms": ["Android", "Windows 10"] }, arguments); };
    DiagnosticOriginal.prototype.setBluetoothState = function (state) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setBluetoothState", { "callbackOrder": "reverse", "platforms": ["Android", "Windows 10"] }, arguments); };
    DiagnosticOriginal.prototype.isLocationEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isLocationEnabled", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.isLocationAuthorized = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isLocationAuthorized", {}, arguments); };
    DiagnosticOriginal.prototype.getLocationAuthorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getLocationAuthorizationStatus", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.requestLocationAuthorization = function (mode) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestLocationAuthorization", { "platforms": ["Android", "iOS"], "callbackOrder": "reverse" }, arguments); };
    DiagnosticOriginal.prototype.isCameraPresent = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isCameraPresent", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.isCameraAuthorized = function (externalStorage) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isCameraAuthorized", { "platforms": ["Android", "iOS"], "callbackOrder": "reverse" }, arguments); };
    DiagnosticOriginal.prototype.getCameraAuthorizationStatus = function (externalStorage) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCameraAuthorizationStatus", { "platforms": ["Android", "iOS"], "callbackOrder": "reverse" }, arguments); };
    DiagnosticOriginal.prototype.requestCameraAuthorization = function (externalStorage) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestCameraAuthorization", { "platforms": ["Android", "iOS"], "callbackOrder": "reverse" }, arguments); };
    DiagnosticOriginal.prototype.isMicrophoneAuthorized = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isMicrophoneAuthorized", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.getMicrophoneAuthorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMicrophoneAuthorizationStatus", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.requestMicrophoneAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestMicrophoneAuthorization", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.isContactsAuthorized = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isContactsAuthorized", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.getContactsAuthorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getContactsAuthorizationStatus", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.requestContactsAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestContactsAuthorization", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.isCalendarAuthorized = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isCalendarAuthorized", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.getCalendarAuthorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCalendarAuthorizationStatus", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.requestCalendarAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestCalendarAuthorization", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.switchToSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchToSettings", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.getBluetoothState = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getBluetoothState", { "platforms": ["Android", "iOS"] }, arguments); };
    DiagnosticOriginal.prototype.registerBluetoothStateChangeHandler = function (handler) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerBluetoothStateChangeHandler", { "platforms": ["Android", "iOS"], "sync": true }, arguments); };
    DiagnosticOriginal.prototype.registerLocationStateChangeHandler = function (handler) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerLocationStateChangeHandler", { "platforms": ["Android", "iOS"], "sync": true }, arguments); };
    DiagnosticOriginal.prototype.isGpsLocationAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isGpsLocationAvailable", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.isGpsLocationEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isGpsLocationEnabled", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.isNetworkLocationAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isNetworkLocationAvailable", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.isNetworkLocationEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isNetworkLocationEnabled", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.getLocationMode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getLocationMode", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.getPermissionAuthorizationStatus = function (permission) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPermissionAuthorizationStatus", { "platforms": ["Android"], "callbackOrder": "reverse" }, arguments); };
    DiagnosticOriginal.prototype.getPermissionsAuthorizationStatus = function (permissions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPermissionsAuthorizationStatus", { "platforms": ["Android"], "callbackOrder": "reverse" }, arguments); };
    DiagnosticOriginal.prototype.requestRuntimePermission = function (permission) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestRuntimePermission", { "platforms": ["Android"], "callbackOrder": "reverse" }, arguments); };
    DiagnosticOriginal.prototype.requestRuntimePermissions = function (permissions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestRuntimePermissions", { "platforms": ["Android"], "callbackOrder": "reverse" }, arguments); };
    DiagnosticOriginal.prototype.isRequestingPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isRequestingPermission", { "sync": true }, arguments); };
    DiagnosticOriginal.prototype.registerPermissionRequestCompleteHandler = function (handler) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerPermissionRequestCompleteHandler", { "sync": true }, arguments); };
    DiagnosticOriginal.prototype.isBluetoothEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isBluetoothEnabled", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.hasBluetoothSupport = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasBluetoothSupport", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.hasBluetoothLESupport = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasBluetoothLESupport", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.hasBluetoothLEPeripheralSupport = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasBluetoothLEPeripheralSupport", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.isExternalStorageAuthorized = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isExternalStorageAuthorized", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.getExternalStorageAuthorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getExternalStorageAuthorizationStatus", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.requestExternalStorageAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestExternalStorageAuthorization", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.getExternalSdCardDetails = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getExternalSdCardDetails", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.switchToWirelessSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchToWirelessSettings", { "platforms": ["Android"], "sync": true }, arguments); };
    DiagnosticOriginal.prototype.switchToNFCSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchToNFCSettings", { "platforms": ["Android"], "sync": true }, arguments); };
    DiagnosticOriginal.prototype.isNFCPresent = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isNFCPresent", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.isNFCEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isNFCEnabled", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.isNFCAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isNFCAvailable", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.registerNFCStateChangeHandler = function (handler) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerNFCStateChangeHandler", { "platforms": ["Android"], "sync": true }, arguments); };
    DiagnosticOriginal.prototype.isDataRoamingEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isDataRoamingEnabled", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.isADBModeEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isADBModeEnabled", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.isDeviceRooted = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isDeviceRooted", { "platforms": ["Android"] }, arguments); };
    DiagnosticOriginal.prototype.isCameraRollAuthorized = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isCameraRollAuthorized", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.getCameraRollAuthorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCameraRollAuthorizationStatus", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.requestCameraRollAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestCameraRollAuthorization", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.isRemoteNotificationsEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isRemoteNotificationsEnabled", { "platforms": ["iOS", "Android"] }, arguments); };
    DiagnosticOriginal.prototype.isRegisteredForRemoteNotifications = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isRegisteredForRemoteNotifications", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.getRemoteNotificationsAuthorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getRemoteNotificationsAuthorizationStatus", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.getRemoteNotificationTypes = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getRemoteNotificationTypes", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.isRemindersAuthorized = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isRemindersAuthorized", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.getRemindersAuthorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getRemindersAuthorizationStatus", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.requestRemindersAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestRemindersAuthorization", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.isBackgroundRefreshAuthorized = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isBackgroundRefreshAuthorized", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.getBackgroundRefreshStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getBackgroundRefreshStatus", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.requestBluetoothAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestBluetoothAuthorization", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.isMotionAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isMotionAvailable", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.isMotionRequestOutcomeAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isMotionRequestOutcomeAvailable", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.requestMotionAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestMotionAuthorization", { "platforms": ["iOS"] }, arguments); };
    DiagnosticOriginal.prototype.getMotionAuthorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMotionAuthorizationStatus", { "platforms": ["iOS"] }, arguments); };
    Object.defineProperty(DiagnosticOriginal.prototype, "permissionStatus", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "permissionStatus"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "permissionStatus", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DiagnosticOriginal.prototype, "NFCState", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "NFCState"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "NFCState", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DiagnosticOriginal.prototype, "motionStatus", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "motionStatus"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "motionStatus", value); },
        enumerable: true,
        configurable: true
    });
    DiagnosticOriginal.pluginName = "Diagnostic";
    DiagnosticOriginal.plugin = "cordova.plugins.diagnostic";
    DiagnosticOriginal.pluginRef = "cordova.plugins.diagnostic";
    DiagnosticOriginal.repo = "https://github.com/dpa99c/cordova-diagnostic-plugin";
    DiagnosticOriginal.platforms = ["Android", "iOS", "Windows"];
    return DiagnosticOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Diagnostic = new DiagnosticOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 521 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Dialogs; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var DialogsOriginal = /** @class */ (function (_super) {
    __extends(DialogsOriginal, _super);
    function DialogsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DialogsOriginal.prototype.alert = function (message, title, buttonName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "alert", { "successIndex": 1, "errorIndex": 4 }, arguments); };
    DialogsOriginal.prototype.confirm = function (message, title, buttonLabels) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "confirm", { "successIndex": 1, "errorIndex": 4 }, arguments); };
    DialogsOriginal.prototype.prompt = function (message, title, buttonLabels, defaultText) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "prompt", { "successIndex": 1, "errorIndex": 5 }, arguments); };
    DialogsOriginal.prototype.beep = function (times) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "beep", { "sync": true }, arguments); };
    DialogsOriginal.pluginName = "Dialogs";
    DialogsOriginal.plugin = "cordova-plugin-dialogs";
    DialogsOriginal.pluginRef = "navigator.notification";
    DialogsOriginal.repo = "https://github.com/apache/cordova-plugin-dialogs";
    DialogsOriginal.platforms = ["Amazon Fire OS", "Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "Tizen", "Ubuntu", "Windows", "Windows Phone"];
    return DialogsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Dialogs = new DialogsOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kaWFsb2dzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQWtEM0MsMkJBQWlCOzs7O0lBYTVDLHVCQUFLLGFBQUMsT0FBZSxFQUFFLEtBQWMsRUFBRSxVQUFtQjtJQWUxRCx5QkFBTyxhQUFDLE9BQWUsRUFBRSxLQUFjLEVBQUUsWUFBdUI7SUFnQmhFLHdCQUFNLGFBQUMsT0FBZ0IsRUFBRSxLQUFjLEVBQUUsWUFBdUIsRUFBRSxXQUFvQjtJQVl0RixzQkFBSSxhQUFDLEtBQWE7Ozs7OztrQkEzR3BCO0VBbUQ2QixpQkFBaUI7U0FBakMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgRGlhbG9nc1Byb21wdENhbGxiYWNrIHtcblxuICAvKipcbiAgICogVGhlIGluZGV4IG9mIHRoZSBwcmVzc2VkIGJ1dHRvbi4gKE51bWJlcikgTm90ZSB0aGF0IHRoZSBpbmRleCB1c2VzIG9uZS1iYXNlZCBpbmRleGluZywgc28gdGhlIHZhbHVlIGlzIDEsIDIsIDMsIGV0Yy5cbiAgICovXG4gIGJ1dHRvbkluZGV4OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSB0ZXh0IGVudGVyZWQgaW4gdGhlIHByb21wdCBkaWFsb2cgYm94LiAoU3RyaW5nKVxuICAgKi9cbiAgaW5wdXQxOiBzdHJpbmc7XG5cbn1cblxuXG4vKipcbiAqIEBuYW1lIERpYWxvZ3NcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gZ2l2ZXMgeW91IGFiaWxpdHkgdG8gYWNjZXNzIGFuZCBjdXN0b21pemUgdGhlIGRldmljZSBuYXRpdmUgZGlhbG9ncy5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtcGx1Z2luLWRpYWxvZ3NgLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbRGlhbG9ncyBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9jb3Jkb3ZhLXBsdWdpbi1kaWFsb2dzKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IERpYWxvZ3MgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2RpYWxvZ3MnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZGlhbG9nczogRGlhbG9ncykgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5kaWFsb2dzLmFsZXJ0KCdIZWxsbyB3b3JsZCcpXG4gKiAgIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdEaWFsb2cgZGlzbWlzc2VkJykpXG4gKiAgIC5jYXRjaChlID0+IGNvbnNvbGUubG9nKCdFcnJvciBkaXNwbGF5aW5nIGRpYWxvZycsIGUpKTtcbiAqXG4gKlxuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogRGlhbG9nc1Byb21wdENhbGxiYWNrXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnRGlhbG9ncycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWRpYWxvZ3MnLFxuICBwbHVnaW5SZWY6ICduYXZpZ2F0b3Iubm90aWZpY2F0aW9uJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tZGlhbG9ncycsXG4gIHBsYXRmb3JtczogWydBbWF6b24gRmlyZSBPUycsICdBbmRyb2lkJywgJ0JsYWNrQmVycnkgMTAnLCAnQnJvd3NlcicsICdGaXJlZm94IE9TJywgJ2lPUycsICdUaXplbicsICdVYnVudHUnLCAnV2luZG93cycsICdXaW5kb3dzIFBob25lJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRGlhbG9ncyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogU2hvd3MgYSBjdXN0b20gYWxlcnQgb3IgZGlhbG9nIGJveC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgRGlhbG9nIG1lc3NhZ2UuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0aXRsZSBEaWFsb2cgdGl0bGUuIChPcHRpb25hbCwgZGVmYXVsdHMgdG8gQWxlcnQpXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBidXR0b25OYW1lIEJ1dHRvbiBuYW1lLiAoT3B0aW9uYWwsIGRlZmF1bHRzIHRvIE9LKVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgYmxhbmsgcHJvbWlzZSBvbmNlIHRoZSB1c2VyIGhhcyBkaXNtaXNzZWQgdGhlIGFsZXJ0LlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN1Y2Nlc3NJbmRleDogMSxcbiAgICBlcnJvckluZGV4OiA0XG4gIH0pXG4gIGFsZXJ0KG1lc3NhZ2U6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcsIGJ1dHRvbk5hbWU/OiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBEaXNwbGF5cyBhIGN1c3RvbWl6YWJsZSBjb25maXJtYXRpb24gZGlhbG9nIGJveC5cbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgRGlhbG9nIG1lc3NhZ2UuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0aXRsZSBEaWFsb2cgdGl0bGUuIChPcHRpb25hbCwgZGVmYXVsdHMgdG8gQ29uZmlybSlcbiAgICogQHBhcmFtIHtBcnJheTxzdHJpbmc+fSBidXR0b25MYWJlbHMgQXJyYXkgb2Ygc3RyaW5ncyBzcGVjaWZ5aW5nIGJ1dHRvbiBsYWJlbHMuIChPcHRpb25hbCwgZGVmYXVsdHMgdG8gW09LLENhbmNlbF0pXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPG51bWJlcj59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdGhlIGJ1dHRvbiBpbmRleCB0aGF0IHdhcyBjbGlja2VkLCBvciAwIGlmIHRoZSB1c2VyIGhhcyBkaXNtaXNzZWQgdGhlIGRpYWxvZyBieSBjbGlja2luZyBvdXRzaWRlIHRoZSBkaWFsb2cgYm94LiBOb3RlIHRoYXQgdGhlIGluZGV4IHVzZSBvbmUtYmFzZWQgaW5kZXhpbmcuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3VjY2Vzc0luZGV4OiAxLFxuICAgIGVycm9ySW5kZXg6IDRcbiAgfSlcbiAgY29uZmlybShtZXNzYWdlOiBzdHJpbmcsIHRpdGxlPzogc3RyaW5nLCBidXR0b25MYWJlbHM/OiBzdHJpbmdbXSk6IFByb21pc2U8bnVtYmVyPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIERpc3BsYXlzIGEgbmF0aXZlIGRpYWxvZyBib3ggdGhhdCBpcyBtb3JlIGN1c3RvbWl6YWJsZSB0aGFuIHRoZSBicm93c2VyJ3MgcHJvbXB0IGZ1bmN0aW9uLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBEaWFsb2cgbWVzc2FnZS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHRpdGxlIERpYWxvZyB0aXRsZS4gKE9wdGlvbmFsLCBkZWZhdWx0cyB0byBQcm9tcHQpXG4gICAqIEBwYXJhbSB7QXJyYXk8c3RyaW5nPn0gYnV0dG9uTGFiZWxzICBBcnJheSBvZiBzdHJpbmdzIHNwZWNpZnlpbmcgYnV0dG9uIGxhYmVscy4gKE9wdGlvbmFsLCBkZWZhdWx0cyB0byBbXCJPS1wiLFwiQ2FuY2VsXCJdKVxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGVmYXVsdFRleHQgRGVmYXVsdCB0ZXh0Ym94IGlucHV0IHZhbHVlLiAgKE9wdGlvbmFsLCBEZWZhdWx0OiBlbXB0eSBzdHJpbmcpXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPERpYWxvZ3NQcm9tcHRDYWxsYmFjaz59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgYW4gb2JqZWN0IHdpdGggdGhlIGJ1dHRvbiBpbmRleCBjbGlja2VkIGFuZCB0aGUgdGV4dCBlbnRlcmVkXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3VjY2Vzc0luZGV4OiAxLFxuICAgIGVycm9ySW5kZXg6IDVcbiAgfSlcbiAgcHJvbXB0KG1lc3NhZ2U/OiBzdHJpbmcsIHRpdGxlPzogc3RyaW5nLCBidXR0b25MYWJlbHM/OiBzdHJpbmdbXSwgZGVmYXVsdFRleHQ/OiBzdHJpbmcpOiBQcm9taXNlPERpYWxvZ3NQcm9tcHRDYWxsYmFjaz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG5cbiAgLyoqXG4gICAqIFRoZSBkZXZpY2UgcGxheXMgYSBiZWVwIHNvdW5kLlxuICAgKiBAcGFyYW0ge251bWJlcnN9IHRpbWVzIFRoZSBudW1iZXIgb2YgdGltZXMgdG8gcmVwZWF0IHRoZSBiZWVwLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWVcbiAgfSlcbiAgYmVlcCh0aW1lczogbnVtYmVyKTogdm9pZCB7XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 522 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DNS; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var DNSOriginal = /** @class */ (function (_super) {
    __extends(DNSOriginal, _super);
    function DNSOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DNSOriginal.prototype.resolve = function (hostname) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "resolve", {}, arguments); };
    DNSOriginal.pluginName = "DNS";
    DNSOriginal.plugin = "cordova-plugin-dns";
    DNSOriginal.pluginRef = "cordova.plugins.dns";
    DNSOriginal.repo = "https://bitbucket.org/zegeba/cordova-plugin-dns";
    DNSOriginal.platforms = ["Android"];
    return DNSOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var DNS = new DNSOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kbnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBK0IvQyx1QkFBaUI7Ozs7SUFPeEMscUJBQU8sYUFBQyxRQUFnQjs7Ozs7O2NBdEMxQjtFQStCeUIsaUJBQWlCO1NBQTdCLEdBQUciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBETlNcbiAqIEBkZXNjcmlwdGlvbiBBIHBsdWdpbiBmb3IgQXBhY2hlIENvcmRvdmEgdGhhdCBlbmFibGVzIGFwcGxpY2F0aW9ucyB0byBtYW51YWxseSByZXNvbHZlIGhvc3RuYW1lcyBpbnRvIGFuIHVuZGVybHlpbmcgbmV0d29yayBhZGRyZXNzLiBUaGlzIGlzIG1vc3RseSB1c2VmdWwgZm9yIGRldGVybWluaW5nIHdoZXRoZXIgdGhlcmUgaXMgYSBwcm9ibGVtIHdpdGggdGhlIGRldmljZSdzIEROUyBzZXJ2ZXIgY29uZmlndXJhdGlvbi5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEROUyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvZG5zJztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBkbnM6IEROUykgeyB9XG4gKlxuICogLi4uXG4gKiB0aGlzLmRucy5yZXNvbHZlKGhvc3RuYW1lKVxuICogICAudGhlbihcbiAqICAgICBhZGRyZXNzID0+IGNvbnNvbGUubG9nKCdSZXNvbHZlZCAnICsgaG9zdG5hbWUgKyAnIHRvICcgKyBhZGRyZXNzKSxcbiAqICAgICBlcnJvciA9PiBjb25zb2xlLmxvZygnRmFpbGVkIHRvIHJlc29sdmUgJyArIGhvc3RuYW1lICsgJzogJyArIGVycm9yKVxuICogICApO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0ROUycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWRucycsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5kbnMnLFxuICByZXBvOiAnaHR0cHM6Ly9iaXRidWNrZXQub3JnL3plZ2ViYS9jb3Jkb3ZhLXBsdWdpbi1kbnMnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEROUyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIFJlc29sdmUgaG9zdG5hbWVzIGludG8gYW4gdW5kZXJseWluZyBuZXR3b3JrIGFkZHJlc3MuXG4gICAqIEBwYXJhbSBob3N0bmFtZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHJlc29sdXRpb24uXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlc29sdmUoaG9zdG5hbWU6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 523 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DocumentViewer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var DocumentViewerOriginal = /** @class */ (function (_super) {
    __extends(DocumentViewerOriginal, _super);
    function DocumentViewerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DocumentViewerOriginal.prototype.getSupportInfo = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getSupportInfo", {}, arguments); };
    DocumentViewerOriginal.prototype.canViewDocument = function (url, contentType, options, onPossible, onMissingApp, onImpossible, onError) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "canViewDocument", { "sync": true }, arguments); };
    DocumentViewerOriginal.prototype.viewDocument = function (url, contentType, options, onShow, onClose, onMissingApp, onError) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "viewDocument", { "sync": true }, arguments); };
    DocumentViewerOriginal.pluginName = "Document Viewer";
    DocumentViewerOriginal.plugin = "cordova-plugin-document-viewer";
    DocumentViewerOriginal.pluginRef = "SitewaertsDocumentViewer";
    DocumentViewerOriginal.repo = "https://github.com/sitewaerts/cordova-plugin-document-viewer";
    DocumentViewerOriginal.platforms = ["Android", "iOS", "Windows"];
    return DocumentViewerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var DocumentViewer = new DocumentViewerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9kb2N1bWVudC12aWV3ZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBK0RwQyxrQ0FBaUI7Ozs7SUFRbkQsdUNBQWM7SUFnQmQsd0NBQWUsYUFBQyxHQUFXLEVBQUUsV0FBbUIsRUFBRSxPQUE4QixFQUFFLFVBQXFCLEVBQUUsWUFBdUIsRUFBRSxZQUF1QixFQUFFLE9BQWtCO0lBZTdLLHFDQUFZLGFBQUMsR0FBVyxFQUFFLFdBQW1CLEVBQUUsT0FBOEIsRUFBRSxNQUFpQixFQUFFLE9BQWtCLEVBQUUsWUFBdUIsRUFBRSxPQUFrQjs7Ozs7O3lCQXRHbks7RUErRG9DLGlCQUFpQjtTQUF4QyxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRG9jdW1lbnRWaWV3ZXJPcHRpb25zIHtcbiAgdGl0bGU/OiBzdHJpbmc7XG4gIGRvY3VtZW50Vmlldz86IHtcbiAgICBjbG9zZUxhYmVsOiBzdHJpbmc7XG4gIH07XG4gIG5hdmlnYXRpb25WaWV3Pzoge1xuICAgIGNsb3NlTGFiZWw6IHN0cmluZztcbiAgfTtcbiAgZW1haWw/OiB7XG4gICAgZW5hYmxlZDogYm9vbGVhbjtcbiAgfTtcbiAgcHJpbnQ/OiB7XG4gICAgZW5hYmxlZDogYm9vbGVhbjtcbiAgfTtcbiAgb3BlbldpdGg/OiB7XG4gICAgZW5hYmxlZDogYm9vbGVhbjtcbiAgfTtcbiAgYm9va21hcmtzPzoge1xuICAgIGVuYWJsZWQ6IGJvb2xlYW47XG4gIH07XG4gIHNlYXJjaD86IHtcbiAgICBlbmFibGVkOiBib29sZWFuO1xuICB9O1xuICBhdXRvQ2xvc2U/OiB7XG4gICAgb25QYXVzZTogYm9vbGVhbjtcbiAgfTtcbn1cblxuLyoqXG4gKiBAbmFtZSBEb2N1bWVudCBWaWV3ZXJcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gb2ZmZXJzIGEgc2xpbSBBUEkgdG8gdmlldyBQREYgZmlsZXMgd2hpY2ggYXJlIGVpdGhlciBzdG9yZWQgaW4gdGhlIGFwcHMgYXNzZXRzIGZvbGRlciAoL3d3dy8qKSBvciBpbiBhbnkgb3RoZXIgZmlsZSBzeXN0ZW0gZGlyZWN0b3J5IGF2YWlsYWJsZSB2aWEgdGhlIGNvcmRvdmEgZmlsZSBwbHVnaW4uXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBEb2N1bWVudFZpZXdlciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvZG9jdW1lbnQtdmlld2VyJztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBkb2N1bWVudDogRG9jdW1lbnRWaWV3ZXIpIHsgfVxuICpcbiAqIC4uLlxuICogY29uc3Qgb3B0aW9uczogRG9jdW1lbnRWaWV3ZXJPcHRpb25zID0ge1xuICogICB0aXRsZTogJ015IFBERidcbiAqIH1cbiAqXG4gKiB0aGlzLmRvY3VtZW50LnZpZXdEb2N1bWVudCgnYXNzZXRzL215RmlsZS5wZGYnLCAnYXBwbGljYXRpb24vcGRmJywgb3B0aW9ucylcbiAqXG4gKiBgYGBcbiAqXG4gKiBAaW50ZXJmYWNlc1xuICogRG9jdW1lbnRWaWV3ZXJPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnRG9jdW1lbnQgVmlld2VyJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZG9jdW1lbnQtdmlld2VyJyxcbiAgcGx1Z2luUmVmOiAnU2l0ZXdhZXJ0c0RvY3VtZW50Vmlld2VyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9zaXRld2FlcnRzL2NvcmRvdmEtcGx1Z2luLWRvY3VtZW50LXZpZXdlcicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRG9jdW1lbnRWaWV3ZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIERpc3BsYXlzIHRoZSBlbWFpbCBjb21wb3NlciBwcmUtZmlsbGVkIHdpdGggZGF0YS5cbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmVzb2x2ZXMgcHJvbWlzZSB3aGVuIHRoZSBFbWFpbENvbXBvc2VyIGhhcyBiZWVuIG9wZW5lZFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRTdXBwb3J0SW5mbygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiB0aGUgZG9jdW1lbnQgY2FuIGJlIHNob3duXG4gICAqXG4gICAqIEBwYXJhbSB1cmwge3N0cmluZ30gVXJsIHRvIHRoZSBmaWxlXG4gICAqIEBwYXJhbSBjb250ZW50VHlwZSB7c3RyaW5nfSBDb250ZW50IHR5cGUgb2YgdGhlIGZpbGVcbiAgICogQHBhcmFtIG9wdGlvbnMge0FycmF5PERvY3VtZW50Vmlld2VyT3B0aW9ucz59IG9wdGlvbnNcbiAgICogQHBhcmFtIFtvblBvc3NpYmxlXSB7RnVuY3Rpb259XG4gICAqIEBwYXJhbSBbb25NaXNzaW5nQXBwXSB7RnVuY3Rpb259XG4gICAqIEBwYXJhbSBbb25JbXBvc3NpYmxlXSB7RnVuY3Rpb259XG4gICAqIEBwYXJhbSBbb25FcnJvcl0ge0Z1bmN0aW9ufVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIGNhblZpZXdEb2N1bWVudCh1cmw6IHN0cmluZywgY29udGVudFR5cGU6IHN0cmluZywgb3B0aW9uczogRG9jdW1lbnRWaWV3ZXJPcHRpb25zLCBvblBvc3NpYmxlPzogRnVuY3Rpb24sIG9uTWlzc2luZ0FwcD86IEZ1bmN0aW9uLCBvbkltcG9zc2libGU/OiBGdW5jdGlvbiwgb25FcnJvcj86IEZ1bmN0aW9uKTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogT3BlbnMgdGhlIGZpbGVcbiAgICpcbiAgICogQHBhcmFtIHVybCB7c3RyaW5nfSBVcmwgdG8gdGhlIGZpbGVcbiAgICogQHBhcmFtIGNvbnRlbnRUeXBlIHtzdHJpbmd9IENvbnRlbnQgdHlwZSBvZiB0aGUgZmlsZVxuICAgKiBAcGFyYW0gb3B0aW9ucyB7RG9jdW1lbnRWaWV3ZXJPcHRpb25zfSBvcHRpb25zXG4gICAqIEBwYXJhbSBbb25TaG93XSB7RnVuY3Rpb259XG4gICAqIEBwYXJhbSBbb25DbG9zZV0ge0Z1bmN0aW9ufVxuICAgKiBAcGFyYW0gW29uTWlzc2luZ0FwcF0ge0Z1bmN0aW9ufVxuICAgKiBAcGFyYW0gW29uRXJyb3JdIHtGdW5jdGlvbn1cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICB2aWV3RG9jdW1lbnQodXJsOiBzdHJpbmcsIGNvbnRlbnRUeXBlOiBzdHJpbmcsIG9wdGlvbnM6IERvY3VtZW50Vmlld2VyT3B0aW9ucywgb25TaG93PzogRnVuY3Rpb24sIG9uQ2xvc2U/OiBGdW5jdGlvbiwgb25NaXNzaW5nQXBwPzogRnVuY3Rpb24sIG9uRXJyb3I/OiBGdW5jdGlvbik6IHZvaWQge1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 524 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EmailComposer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var EmailComposerOriginal = /** @class */ (function (_super) {
    __extends(EmailComposerOriginal, _super);
    function EmailComposerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EmailComposerOriginal.prototype.isAvailable = function (app) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                if (app) {
                    EmailComposerOriginal.getPlugin().isAvailable(app, function (isAvailable) {
                        if (isAvailable) {
                            resolve();
                        }
                        else {
                            reject();
                        }
                    });
                }
                else {
                    EmailComposerOriginal.getPlugin().isAvailable(function (isAvailable) {
                        if (isAvailable) {
                            resolve();
                        }
                        else {
                            reject();
                        }
                    });
                }
            });
        }
    }(); };
    EmailComposerOriginal.prototype.requestPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestPermission", { "successIndex": 0, "errorIndex": 2 }, arguments); };
    EmailComposerOriginal.prototype.hasPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasPermission", { "successIndex": 0, "errorIndex": 2 }, arguments); };
    EmailComposerOriginal.prototype.addAlias = function (alias, packageName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addAlias", {}, arguments); };
    EmailComposerOriginal.prototype.open = function (options, scope) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "open", { "successIndex": 1, "errorIndex": 3 }, arguments); };
    EmailComposerOriginal.pluginName = "EmailComposer";
    EmailComposerOriginal.plugin = "cordova-plugin-email-composer";
    EmailComposerOriginal.pluginRef = "cordova.plugins.email";
    EmailComposerOriginal.repo = "https://github.com/katzer/cordova-plugin-email-composer";
    EmailComposerOriginal.platforms = ["Amazon Fire OS", "Android", "Browser", "iOS", "Windows"];
    return EmailComposerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var EmailComposer = new EmailComposerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9lbWFpbC1jb21wb3Nlci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTyw2REFBb0QsTUFBTSxvQkFBb0IsQ0FBQzs7SUE4R25ELGlDQUFpQjs7OztJQVNsRCxtQ0FBVyxhQUFDLEdBQVk7OENBQWdCLENBQUM7WUFDdkMsTUFBTSxDQUFDLElBQUksT0FBTyxDQUFVLFVBQUMsT0FBTyxFQUFFLE1BQU07Z0JBQzFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ1IsYUFBYSxDQUFDLFNBQVMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsVUFBQyxXQUFvQjt3QkFDOUQsRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQzs0QkFDaEIsT0FBTyxFQUFFLENBQUM7d0JBQ1osQ0FBQzt3QkFBQyxJQUFJLENBQUMsQ0FBQzs0QkFDTixNQUFNLEVBQUUsQ0FBQzt3QkFDWCxDQUFDO29CQUNILENBQUMsQ0FBQyxDQUFDO2dCQUNMLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ04sYUFBYSxDQUFDLFNBQVMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxVQUFDLFdBQW9CO3dCQUN6RCxFQUFFLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDOzRCQUNoQixPQUFPLEVBQUUsQ0FBQzt3QkFDWixDQUFDO3dCQUFDLElBQUksQ0FBQyxDQUFDOzRCQUNOLE1BQU0sRUFBRSxDQUFDO3dCQUNYLENBQUM7b0JBQ0gsQ0FBQyxDQUFDLENBQUM7Z0JBQ0wsQ0FBQztZQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQzs7SUFVRCx5Q0FBaUI7SUFZakIscUNBQWE7SUFXYixnQ0FBUSxhQUFDLEtBQWEsRUFBRSxXQUFtQjtJQWMzQyw0QkFBSSxhQUFDLE9BQTZCLEVBQUUsS0FBVzs7Ozs7O3dCQTNMakQ7RUErR21DLGlCQUFpQjtTQUF2QyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgQ29yZG92YUNoZWNrLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBFbWFpbENvbXBvc2VyT3B0aW9ucyB7XG5cbiAgLyoqXG4gICAqIEFwcCB0byBzZW5kIHRoZSBlbWFpbCB3aXRoXG4gICAqL1xuICBhcHA/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEVtYWlsIGFkZHJlc3MoZXMpIGZvciBUbyBmaWVsZFxuICAgKi9cbiAgdG8/OiBzdHJpbmcgfCBBcnJheTxzdHJpbmc+O1xuXG4gIC8qKlxuICAgKiBFbWFpbCBhZGRyZXNzKGVzKSBmb3IgQ0MgZmllbGRcbiAgICovXG4gIGNjPzogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPjtcblxuICAvKipcbiAgICogRW1haWwgYWRkcmVzcyhlcykgZm9yIEJDQyBmaWVsZFxuICAgKi9cbiAgYmNjPzogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPjtcblxuICAvKipcbiAgICogRmlsZSBwYXRocyBvciBiYXNlNjQgZGF0YSBzdHJlYW1zXG4gICAqL1xuICBhdHRhY2htZW50cz86IHN0cmluZ1tdO1xuXG4gIC8qKlxuICAgKiBTdWJqZWN0IG9mIHRoZSBlbWFpbFxuICAgKi9cbiAgc3ViamVjdD86IHN0cmluZztcblxuICAvKipcbiAgICogRW1haWwgYm9keSAoZm9yIEhUTUwsIHNldCBpc0h0bWwgdG8gdHJ1ZSlcbiAgICovXG4gIGJvZHk/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEluZGljYXRlcyBpZiB0aGUgYm9keSBpcyBIVE1MIG9yIHBsYWluIHRleHRcbiAgICovXG4gIGlzSHRtbD86IGJvb2xlYW47XG5cbn1cblxuXG4vKipcbiAqIEBuYW1lIEVtYWlsIENvbXBvc2VyXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogY29yZG92YS1wbHVnaW4tZW1haWwtY29tcG9zZXIuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtFbWFpbCBDb21wb3NlciBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2h5cGVyeTJrL2NvcmRvdmEtZW1haWwtcGx1Z2luKS5cbiAqXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBFbWFpbENvbXBvc2VyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9lbWFpbC1jb21wb3Nlcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBlbWFpbENvbXBvc2VyOiBFbWFpbENvbXBvc2VyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogdGhpcy5lbWFpbENvbXBvc2VyLmlzQXZhaWxhYmxlKCkudGhlbigoYXZhaWxhYmxlOiBib29sZWFuKSA9PntcbiAqICBpZihhdmFpbGFibGUpIHtcbiAqICAgIC8vTm93IHdlIGtub3cgd2UgY2FuIHNlbmRcbiAqICB9XG4gKiB9KTtcbiAqXG4gKiBsZXQgZW1haWwgPSB7XG4gKiAgIHRvOiAnbWF4QG11c3Rlcm1hbm4uZGUnLFxuICogICBjYzogJ2VyaWthQG11c3Rlcm1hbm4uZGUnLFxuICogICBiY2M6IFsnam9obkBkb2UuY29tJywgJ2phbmVAZG9lLmNvbSddLFxuICogICBhdHRhY2htZW50czogW1xuICogICAgICdmaWxlOi8vaW1nL2xvZ28ucG5nJyxcbiAqICAgICAncmVzOi8vaWNvbi5wbmcnLFxuICogICAgICdiYXNlNjQ6aWNvbi5wbmcvL2lWQk9SdzBLR2dvQUFBQU5TVWhFVWcuLi4nLFxuICogICAgICdmaWxlOi8vUkVBRE1FLnBkZidcbiAqICAgXSxcbiAqICAgc3ViamVjdDogJ0NvcmRvdmEgSWNvbnMnLFxuICogICBib2R5OiAnSG93IGFyZSB5b3U/IE5pY2UgZ3JlZXRpbmdzIGZyb20gTGVpcHppZycsXG4gKiAgIGlzSHRtbDogdHJ1ZVxuICogfVxuICpcbiAqIC8vIFNlbmQgYSB0ZXh0IG1lc3NhZ2UgdXNpbmcgZGVmYXVsdCBvcHRpb25zXG4gKiB0aGlzLmVtYWlsQ29tcG9zZXIub3BlbihlbWFpbCk7XG4gKiBgYGBcbiAqXG4gKiBZb3UgY2FuIGFsc28gYXNzaWduIGFsaWFzZXMgdG8gZW1haWwgYXBwc1xuICogYGBgdHNcbiAqIC8vIGFkZCBhbGlhc1xuICogdGhpcy5lbWFpbC5hZGRBbGlhcygnZ21haWwnLCAnY29tLmdvb2dsZS5hbmRyb2lkLmdtJyk7XG4gKlxuICogLy8gdGhlbiB1c2UgYWxpYXMgd2hlbiBzZW5kaW5nIGVtYWlsXG4gKiB0aGlzLmVtYWlsLm9wZW4oe1xuICogICBhcHA6ICdnbWFpbCcsXG4gKiAgIC4uLlxuICogfSk7XG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBFbWFpbENvbXBvc2VyT3B0aW9uc1xuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0VtYWlsQ29tcG9zZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1lbWFpbC1jb21wb3NlcicsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5lbWFpbCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20va2F0emVyL2NvcmRvdmEtcGx1Z2luLWVtYWlsLWNvbXBvc2VyJyxcbiAgcGxhdGZvcm1zOiBbJ0FtYXpvbiBGaXJlIE9TJywgJ0FuZHJvaWQnLCAnQnJvd3NlcicsICdpT1MnLCAnV2luZG93cyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEVtYWlsQ29tcG9zZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFZlcmlmaWVzIGlmIHNlbmRpbmcgZW1haWxzIGlzIHN1cHBvcnRlZCBvbiB0aGUgZGV2aWNlLlxuICAgKlxuICAgKiBAcGFyYW0gW2FwcF0ge3N0cmluZ30gQXBwIGlkIG9yIHVyaSBzY2hlbWUuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJlc29sdmVzIGlmIGF2YWlsYWJsZSwgcmVqZWN0cyBpZiBub3QgYXZhaWxhYmxlXG4gICAqL1xuICBAQ29yZG92YUNoZWNrKClcbiAgaXNBdmFpbGFibGUoYXBwPzogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2U8Ym9vbGVhbj4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgaWYgKGFwcCkge1xuICAgICAgICBFbWFpbENvbXBvc2VyLmdldFBsdWdpbigpLmlzQXZhaWxhYmxlKGFwcCwgKGlzQXZhaWxhYmxlOiBib29sZWFuKSA9PiB7XG4gICAgICAgICAgaWYgKGlzQXZhaWxhYmxlKSB7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlamVjdCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBFbWFpbENvbXBvc2VyLmdldFBsdWdpbigpLmlzQXZhaWxhYmxlKChpc0F2YWlsYWJsZTogYm9vbGVhbikgPT4ge1xuICAgICAgICAgIGlmIChpc0F2YWlsYWJsZSkge1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZWplY3QoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlcXVlc3QgcGVybWlzc2lvbiB0byBhY2Nlc3MgZW1haWwgYWNjb3VudHMgaW5mb3JtYXRpb25cbiAgICogQHJldHVybiB7UHJvbWlzZTxib29sZWFuPn0gcmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgYm9vbGVhbiB0aGF0IGluZGljYXRlcyBpZiB0aGUgcGVybWlzc2lvbiB3YXMgZ3JhbnRlZFxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN1Y2Nlc3NJbmRleDogMCxcbiAgICBlcnJvckluZGV4OiAyXG4gIH0pXG4gIHJlcXVlc3RQZXJtaXNzaW9uKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgdGhlIGFwcCBoYXMgYSBwZXJtaXNzaW9uIHRvIGFjY2VzcyBlbWFpbCBhY2NvdW50cyBpbmZvcm1hdGlvblxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGJvb2xlYW4+fSByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYSBib29sZWFuIHRoYXQgaW5kaWNhdGVzIGlmIHRoZSBwZXJtaXNzaW9uIHdhcyBncmFudGVkXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3VjY2Vzc0luZGV4OiAwLFxuICAgIGVycm9ySW5kZXg6IDJcbiAgfSlcbiAgaGFzUGVybWlzc2lvbigpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQWRkcyBhIG5ldyBtYWlsIGFwcCBhbGlhcy5cbiAgICpcbiAgICogQHBhcmFtIGFsaWFzIHtzdHJpbmd9IFRoZSBhbGlhcyBuYW1lXG4gICAqIEBwYXJhbSBwYWNrYWdlTmFtZSB7c3RyaW5nfSBUaGUgcGFja2FnZSBuYW1lXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGFkZEFsaWFzKGFsaWFzOiBzdHJpbmcsIHBhY2thZ2VOYW1lOiBzdHJpbmcpOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBEaXNwbGF5cyB0aGUgZW1haWwgY29tcG9zZXIgcHJlLWZpbGxlZCB3aXRoIGRhdGEuXG4gICAqXG4gICAqIEBwYXJhbSBvcHRpb25zIHtFbWFpbENvbXBvc2VyT3B0aW9uc30gRW1haWxcbiAgICogQHBhcmFtIFtzY29wZV0ge2FueX0gU2NvcGUgZm9yIHRoZSBwcm9taXNlXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJlc29sdmVzIHByb21pc2Ugd2hlbiB0aGUgRW1haWxDb21wb3NlciBoYXMgYmVlbiBvcGVuZWRcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzdWNjZXNzSW5kZXg6IDEsXG4gICAgZXJyb3JJbmRleDogM1xuICB9KVxuICBvcGVuKG9wdGlvbnM6IEVtYWlsQ29tcG9zZXJPcHRpb25zLCBzY29wZT86IGFueSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 525 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EstimoteBeacons; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var EstimoteBeaconsOriginal = /** @class */ (function (_super) {
    __extends(EstimoteBeaconsOriginal, _super);
    function EstimoteBeaconsOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** Proximity value */
        _this.ProximityUnknown = 0;
        /** Proximity value */
        _this.ProximityImmediate = 1;
        /** Proximity value */
        _this.ProximityNear = 2;
        /** Proximity value */
        _this.ProximityFar = 3;
        /** Beacon colour */
        _this.BeaconColorUnknown = 0;
        /** Beacon colour */
        _this.BeaconColorMintCocktail = 1;
        /** Beacon colour */
        _this.BeaconColorIcyMarshmallow = 2;
        /** Beacon colour */
        _this.BeaconColorBlueberryPie = 3;
        /**
         * Beacon colour.
         */
        _this.BeaconColorSweetBeetroot = 4;
        /** Beacon colour */
        _this.BeaconColorCandyFloss = 5;
        /** Beacon colour */
        _this.BeaconColorLemonTart = 6;
        /** Beacon colour */
        _this.BeaconColorVanillaJello = 7;
        /** Beacon colour */
        _this.BeaconColorLiquoriceSwirl = 8;
        /** Beacon colour */
        _this.BeaconColorWhite = 9;
        /** Beacon colour */
        _this.BeaconColorTransparent = 10;
        /** Region state */
        _this.RegionStateUnknown = 'unknown';
        /** Region state */
        _this.RegionStateOutside = 'outside';
        /** Region state */
        _this.RegionStateInside = 'inside';
        return _this;
    }
    EstimoteBeaconsOriginal.prototype.requestWhenInUseAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestWhenInUseAuthorization", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.requestAlwaysAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestAlwaysAuthorization", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.authorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "authorizationStatus", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.startAdvertisingAsBeacon = function (uuid, major, minor, regionId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startAdvertisingAsBeacon", { "clearFunction": "stopAdvertisingAsBeacon" }, arguments); };
    EstimoteBeaconsOriginal.prototype.stopAdvertisingAsBeacon = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopAdvertisingAsBeacon", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.enableAnalytics = function (enable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableAnalytics", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.isAnalyticsEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAnalyticsEnabled", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.isAuthorized = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAuthorized", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.setupAppIDAndAppToken = function (appID, appToken) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setupAppIDAndAppToken", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.startEstimoteBeaconDiscovery = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startEstimoteBeaconDiscovery", { "observable": true, "clearFunction": "stopEstimoteBeaconDiscovery" }, arguments); };
    EstimoteBeaconsOriginal.prototype.stopEstimoteBeaconDiscovery = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopEstimoteBeaconDiscovery", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.startRangingBeaconsInRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startRangingBeaconsInRegion", { "observable": true, "clearFunction": "stopRangingBeaconsInRegion", "clearWithArgs": true }, arguments); };
    EstimoteBeaconsOriginal.prototype.stopRangingBeaconsInRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopRangingBeaconsInRegion", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.startRangingSecureBeaconsInRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startRangingSecureBeaconsInRegion", { "observable": true, "clearFunction": "stopRangingSecureBeaconsInRegion", "clearWithArgs": true }, arguments); };
    EstimoteBeaconsOriginal.prototype.stopRangingSecureBeaconsInRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopRangingSecureBeaconsInRegion", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.startMonitoringForRegion = function (region, notifyEntryStateOnDisplay) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startMonitoringForRegion", { "observable": true, "clearFunction": "stopMonitoringForRegion", "clearWithArgs": true, "successIndex": 1, "errorIndex": 2 }, arguments); };
    EstimoteBeaconsOriginal.prototype.stopMonitoringForRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopMonitoringForRegion", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.startSecureMonitoringForRegion = function (region, notifyEntryStateOnDisplay) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startSecureMonitoringForRegion", { "observable": true, "clearFunction": "stopSecureMonitoringForRegion", "clearWithArgs": true, "successIndex": 1, "errorIndex": 2 }, arguments); };
    EstimoteBeaconsOriginal.prototype.stopSecureMonitoringForRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopSecureMonitoringForRegion", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.connectToBeacon = function (beacon) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "connectToBeacon", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.disconnectConnectedBeacon = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disconnectConnectedBeacon", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.writeConnectedProximityUUID = function (uuid) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "writeConnectedProximityUUID", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.writeConnectedMajor = function (major) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "writeConnectedMajor", {}, arguments); };
    EstimoteBeaconsOriginal.prototype.writeConnectedMinor = function (minor) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "writeConnectedMinor", {}, arguments); };
    EstimoteBeaconsOriginal.pluginName = "EstimoteBeacons";
    EstimoteBeaconsOriginal.plugin = "cordova-plugin-estimote";
    EstimoteBeaconsOriginal.pluginRef = "estimote.beacons";
    EstimoteBeaconsOriginal.repo = "https://github.com/evothings/phonegap-estimotebeacons";
    EstimoteBeaconsOriginal.platforms = ["Android", "iOS"];
    return EstimoteBeaconsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var EstimoteBeacons = new EstimoteBeaconsOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 526 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ExtendedDeviceInformation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var ExtendedDeviceInformationOriginal = /** @class */ (function (_super) {
    __extends(ExtendedDeviceInformationOriginal, _super);
    function ExtendedDeviceInformationOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ExtendedDeviceInformationOriginal.prototype, "memory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "memory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "memory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExtendedDeviceInformationOriginal.prototype, "cpumhz", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "cpumhz"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "cpumhz", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExtendedDeviceInformationOriginal.prototype, "totalstorage", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "totalstorage"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "totalstorage", value); },
        enumerable: true,
        configurable: true
    });
    ExtendedDeviceInformationOriginal.pluginName = "ExtendedDeviceInformation";
    ExtendedDeviceInformationOriginal.plugin = "cordova-plugin-extended-device-information";
    ExtendedDeviceInformationOriginal.pluginRef = "extended-device-information";
    ExtendedDeviceInformationOriginal.repo = "https://github.com/danielehrhardt/cordova-plugin-extended-device-information";
    ExtendedDeviceInformationOriginal.platforms = ["Android"];
    return ExtendedDeviceInformationOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var ExtendedDeviceInformation = new ExtendedDeviceInformationOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9leHRlbmRlZC1kZXZpY2UtaW5mb3JtYXRpb24vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8seUVBQThDLE1BQU0sb0JBQW9CLENBQUM7O0lBMkJqQyw2Q0FBaUI7Ozs7MEJBTTlELDZDQUFNOzs7Ozs7MEJBTU4sNkNBQU07Ozs7OzswQkFNTixtREFBWTs7Ozs7Ozs7Ozs7b0NBOUNkO0VBNEIrQyxpQkFBaUI7U0FBbkQseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YVByb3BlcnR5LCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBFeHRlbmRlZCBEZXZpY2UgSW5mb3JtYXRpb25cbiAqIEBkZXNjcmlwdGlvblxuICogUmV0cmlldmVzIGFkZGl0aW9uYWwgZGV2aWNlIGluZm9ybWF0aW9uIHRoYXQgaXMgbm90IHByb3ZpZGVkIGJ5IG90aGVyIHBsdWdpbnNcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEV4dGVuZGVkRGV2aWNlSW5mb3JtYXRpb24gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2V4dGVuZGVkLWRldmljZS1pbmZvcm1hdGlvbic7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZXh0ZW5kZWREZXZpY2VJbmZvcm1hdGlvbjogRXh0ZW5kZWREZXZpY2VJbmZvcm1hdGlvbikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogY29uc29sZS5sb2coJ1RoZSBNZW1vcnkgaXM6ICcgKyB0aGlzLmV4dGVuZGVkRGV2aWNlSW5mb3JtYXRpb24ubWVtb3J5KTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0V4dGVuZGVkRGV2aWNlSW5mb3JtYXRpb24nLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1leHRlbmRlZC1kZXZpY2UtaW5mb3JtYXRpb24nLFxuICBwbHVnaW5SZWY6ICdleHRlbmRlZC1kZXZpY2UtaW5mb3JtYXRpb24nLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2RhbmllbGVocmhhcmR0L2NvcmRvdmEtcGx1Z2luLWV4dGVuZGVkLWRldmljZS1pbmZvcm1hdGlvbicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRXh0ZW5kZWREZXZpY2VJbmZvcm1hdGlvbiBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogR2V0IHRoZSBkZXZpY2UncyBtZW1vcnkgc2l6ZVxuICAgKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIG1lbW9yeTogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGRldmljZSdzIENQVSBtaHpcbiAgICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBjcHVtaHo6IHN0cmluZztcblxuICAvKipcbiAgICogR2V0IHRoZSB0b3RhbCBzdG9yYWdlXG4gICAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgdG90YWxzdG9yYWdlOiBzdHJpbmc7XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 527 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Facebook; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FacebookOriginal = /** @class */ (function (_super) {
    __extends(FacebookOriginal, _super);
    function FacebookOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FacebookOriginal.prototype.browserInit = function (appId, version) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "browserInit", {}, arguments); };
    FacebookOriginal.prototype.login = function (permissions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "login", {}, arguments); };
    FacebookOriginal.prototype.logout = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logout", {}, arguments); };
    FacebookOriginal.prototype.getLoginStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getLoginStatus", {}, arguments); };
    FacebookOriginal.prototype.getAccessToken = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAccessToken", {}, arguments); };
    FacebookOriginal.prototype.showDialog = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showDialog", {}, arguments); };
    FacebookOriginal.prototype.api = function (requestPath, permissions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "api", {}, arguments); };
    FacebookOriginal.prototype.logEvent = function (name, params, valueToSum) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logEvent", { "successIndex": 3, "errorIndex": 4 }, arguments); };
    FacebookOriginal.prototype.logPurchase = function (value, currency) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logPurchase", {}, arguments); };
    FacebookOriginal.prototype.appInvite = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "appInvite", {}, arguments); };
    FacebookOriginal.pluginName = "Facebook";
    FacebookOriginal.plugin = "cordova-plugin-facebook4";
    FacebookOriginal.pluginRef = "facebookConnectPlugin";
    FacebookOriginal.repo = "https://github.com/jeduan/cordova-plugin-facebook4";
    FacebookOriginal.install = "ionic cordova plugin add cordova-plugin-facebook4 --variable APP_ID=\"123456789\" --variable APP_NAME=\"myApplication\"";
    FacebookOriginal.installVariables = ["APP_ID", "APP_NAME"];
    FacebookOriginal.platforms = ["Android", "iOS", "Browser"];
    return FacebookOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Facebook = new FacebookOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 528 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FCM; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var FCMOriginal = /** @class */ (function (_super) {
    __extends(FCMOriginal, _super);
    function FCMOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FCMOriginal.prototype.getToken = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getToken", {}, arguments); };
    FCMOriginal.prototype.onTokenRefresh = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onTokenRefresh", { "observable": true }, arguments); };
    FCMOriginal.prototype.subscribeToTopic = function (topic) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "subscribeToTopic", {}, arguments); };
    FCMOriginal.prototype.unsubscribeFromTopic = function (topic) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unsubscribeFromTopic", {}, arguments); };
    FCMOriginal.prototype.onNotification = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onNotification", { "observable": true, "successIndex": 0, "errorIndex": 2 }, arguments); };
    FCMOriginal.pluginName = "FCM";
    FCMOriginal.plugin = "cordova-plugin-fcm";
    FCMOriginal.pluginRef = "FCMPlugin";
    FCMOriginal.repo = "https://github.com/fechanique/cordova-plugin-fcm";
    FCMOriginal.platforms = ["Android", "iOS"];
    return FCMOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FCM = new FCMOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9mY20vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFFeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQStEcEIsdUJBQWlCOzs7O0lBUXhDLHNCQUFRO0lBWVIsNEJBQWM7SUFZZCw4QkFBZ0IsYUFBQyxLQUFhO0lBWTlCLGtDQUFvQixhQUFDLEtBQWE7SUFjbEMsNEJBQWM7Ozs7OztjQTNIaEI7RUFpRXlCLGlCQUFpQjtTQUE3QixHQUFHIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuZXhwb3J0IGludGVyZmFjZSBOb3RpZmljYXRpb25EYXRhIHtcblxuICAvKipcbiAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBub3RpZmljYXRpb24gd2FzIHByZXNzZWQgb3Igbm90XG4gICAqL1xuXG4gIHdhc1RhcHBlZDogYm9vbGVhbjtcblxuICAvKipcbiAgICogTm90aWZpY2F0aW9uIGRhdGEgaGFzaCBpdGVtXG4gICAqL1xuXG4gIFtuYW1lOiBzdHJpbmddOiBhbnk7XG5cbn1cblxuLyoqXG4gKiBAbmFtZSBGQ01cbiAqIEBkZXNjcmlwdGlvblxuICogUHJvdmlkZXMgYmFzaWMgZnVuY3Rpb25hbGl0eSBmb3IgRmlyZWJhc2UgQ2xvdWQgTWVzc2FnaW5nXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBGQ00gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2ZjbSc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBmY206IEZDTSkge31cbiAqXG4gKiAuLi5cbiAqXG4gKiBmY20uc3Vic2NyaWJlVG9Ub3BpYygnbWFya2V0aW5nJyk7XG4gKlxuICogZmNtLmdldFRva2VuKCkudGhlbih0b2tlbj0+e1xuICogICBiYWNrZW5kLnJlZ2lzdGVyVG9rZW4odG9rZW4pO1xuICogfSlcbiAqXG4gKiBmY20ub25Ob3RpZmljYXRpb24oKS5zdWJzY3JpYmUoZGF0YT0+e1xuICogICBpZihkYXRhLndhc1RhcHBlZCl7XG4gKiAgICAgY29uc29sZS5sb2coXCJSZWNlaXZlZCBpbiBiYWNrZ3JvdW5kXCIpO1xuICogICB9IGVsc2Uge1xuICogICAgIGNvbnNvbGUubG9nKFwiUmVjZWl2ZWQgaW4gZm9yZWdyb3VuZFwiKTtcbiAqICAgfVxuICogfSlcbiAqXG4gKiBmY20ub25Ub2tlblJlZnJlc2goKS5zdWJzY3JpYmUodG9rZW49PntcbiAqICAgYmFja2VuZC5yZWdpc3RlclRva2VuKHRva2VuKTtcbiAqIH0pXG4gKlxuICogZmNtLnVuc3Vic2NyaWJlRnJvbVRvcGljKCdtYXJrZXRpbmcnKTtcbiAqXG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBOb3RpZmljYXRpb25EYXRhXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnRkNNJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZmNtJyxcbiAgcGx1Z2luUmVmOiAnRkNNUGx1Z2luJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9mZWNoYW5pcXVlL2NvcmRvdmEtcGx1Z2luLWZjbScsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEZDTSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogR2V0J3MgZGV2aWNlJ3MgY3VycmVudCByZWdpc3RyYXRpb24gaWRcbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nPn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSByZWdpc3RyYXRpb24gaWQgdG9rZW5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0VG9rZW4oKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRXZlbnQgZmlyaW5nIG9uIHRoZSB0b2tlbiByZWZyZXNoXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPHN0cmluZz59IFJldHVybnMgYW4gT2JzZXJ2YWJsZSB0aGF0IG5vdGlmaWVzIHdpdGggdGhlIGNoYW5nZSBvZiBkZXZpY2UncyByZWdpc3RyYXRpb24gaWRcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBvYnNlcnZhYmxlOiB0cnVlXG4gIH0pXG4gIG9uVG9rZW5SZWZyZXNoKCk6IE9ic2VydmFibGU8c3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFN1YnNjcmliZXMgeW91IHRvIGEgW3RvcGljXShodHRwczovL2ZpcmViYXNlLmdvb2dsZS5jb20vZG9jcy9ub3RpZmljYXRpb25zL2FuZHJvaWQvY29uc29sZS10b3BpY3MpXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0b3BpYyBUb3BpYyB0byBiZSBzdWJzY3JpYmVkIHRvXG4gICAqXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHJlc29sdmluZyBpbiByZXN1bHQgb2Ygc3Vic2NyaWJpbmcgdG8gYSB0b3BpY1xuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzdWJzY3JpYmVUb1RvcGljKHRvcGljOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBVbnVic2NyaWJlcyB5b3UgZnJvbSBhIFt0b3BpY10oaHR0cHM6Ly9maXJlYmFzZS5nb29nbGUuY29tL2RvY3Mvbm90aWZpY2F0aW9ucy9hbmRyb2lkL2NvbnNvbGUtdG9waWNzKVxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdG9waWMgVG9waWMgdG8gYmUgdW5zdWJzY3JpYmVkIGZyb21cbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgcmVzb2x2aW5nIGluIHJlc3VsdCBvZiB1bnN1YnNjcmliaW5nIGZyb20gYSB0b3BpY1xuICAgKi9cbiAgQENvcmRvdmEoKVxuICB1bnN1YnNjcmliZUZyb21Ub3BpYyh0b3BpYzogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogV2F0Y2ggZm9yIGluY29taW5nIG5vdGlmaWNhdGlvbnNcbiAgICpcbiAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn0gcmV0dXJucyBhbiBvYmplY3Qgd2l0aCBkYXRhIGZyb20gdGhlIG5vdGlmaWNhdGlvblxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWUsXG4gICAgc3VjY2Vzc0luZGV4OiAwLFxuICAgIGVycm9ySW5kZXg6IDJcbiAgfSlcbiAgb25Ob3RpZmljYXRpb24oKTogT2JzZXJ2YWJsZTxOb3RpZmljYXRpb25EYXRhPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 529 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export FileSaver */
/* unused harmony export FileWriter */
/* unused harmony export FileError */
/* unused harmony export FileReader */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return File; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FileSaver = /** @class */ (function (_super) {
    __extends(FileSaver, _super);
    function FileSaver() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return FileSaver;
}(EventTarget));

var FileWriter = /** @class */ (function (_super) {
    __extends(FileWriter, _super);
    function FileWriter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return FileWriter;
}(FileSaver));

var FileError = /** @class */ (function () {
    function FileError() {
    }
    return FileError;
}());

var FileReader = /** @class */ (function () {
    function FileReader() {
    }
    return FileReader;
}());

var FileOriginal = /** @class */ (function (_super) {
    __extends(FileOriginal, _super);
    function FileOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.cordovaFileError = {
            1: 'NOT_FOUND_ERR',
            2: 'SECURITY_ERR',
            3: 'ABORT_ERR',
            4: 'NOT_READABLE_ERR',
            5: 'ENCODING_ERR',
            6: 'NO_MODIFICATION_ALLOWED_ERR',
            7: 'INVALID_STATE_ERR',
            8: 'SYNTAX_ERR',
            9: 'INVALID_MODIFICATION_ERR',
            10: 'QUOTA_EXCEEDED_ERR',
            11: 'TYPE_MISMATCH_ERR',
            12: 'PATH_EXISTS_ERR',
            13: 'WRONG_ENTRY_TYPE',
            14: 'DIR_READ_ERR',
        };
        return _this;
    }
    FileOriginal.prototype.getFreeDiskSpace = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                cordova.exec(resolve, reject, 'File', 'getFreeDiskSpace', []);
            });
        }
    }(); };
    FileOriginal.prototype.checkDir = function (path, dir) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            if ((/^\//.test(dir))) {
                var err = new FileError(5);
                err.message = 'directory cannot start with \/';
                return Promise.reject(err);
            }
            var fullpath = path + dir;
            return this.resolveDirectoryUrl(fullpath)
                .then(function () {
                return true;
            });
        }
    }(); };
    FileOriginal.prototype.createDir = function (path, dirName, replace) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            if ((/^\//.test(dirName))) {
                var err = new FileError(5);
                err.message = 'directory cannot start with \/';
                return Promise.reject(err);
            }
            var options = {
                create: true
            };
            if (!replace) {
                options.exclusive = true;
            }
            return this.resolveDirectoryUrl(path)
                .then(function (fse) {
                return _this.getDirectory(fse, dirName, options);
            });
        }
    }(); };
    FileOriginal.prototype.removeDir = function (path, dirName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            if ((/^\//.test(dirName))) {
                var err = new FileError(5);
                err.message = 'directory cannot start with \/';
                return Promise.reject(err);
            }
            return this.resolveDirectoryUrl(path)
                .then(function (fse) {
                return _this.getDirectory(fse, dirName, { create: false });
            })
                .then(function (de) {
                return _this.remove(de);
            });
        }
    }(); };
    FileOriginal.prototype.moveDir = function (path, dirName, newPath, newDirName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            newDirName = newDirName || dirName;
            if ((/^\//.test(newDirName))) {
                var err = new FileError(5);
                err.message = 'directory cannot start with \/';
                return Promise.reject(err);
            }
            return this.resolveDirectoryUrl(path)
                .then(function (fse) {
                return _this.getDirectory(fse, dirName, { create: false });
            })
                .then(function (srcde) {
                return _this.resolveDirectoryUrl(newPath)
                    .then(function (deste) {
                    return _this.move(srcde, deste, newDirName);
                });
            });
        }
    }(); };
    FileOriginal.prototype.copyDir = function (path, dirName, newPath, newDirName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            if ((/^\//.test(newDirName))) {
                var err = new FileError(5);
                err.message = 'directory cannot start with \/';
                return Promise.reject(err);
            }
            return this.resolveDirectoryUrl(path)
                .then(function (fse) {
                return _this.getDirectory(fse, dirName, { create: false });
            })
                .then(function (srcde) {
                return _this.resolveDirectoryUrl(newPath)
                    .then(function (deste) {
                    return _this.copy(srcde, deste, newDirName);
                });
            });
        }
    }(); };
    FileOriginal.prototype.listDir = function (path, dirName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            if ((/^\//.test(dirName))) {
                var err = new FileError(5);
                err.message = 'directory cannot start with \/';
                return Promise.reject(err);
            }
            return this.resolveDirectoryUrl(path)
                .then(function (fse) {
                return _this.getDirectory(fse, dirName, { create: false, exclusive: false });
            })
                .then(function (de) {
                var reader = de.createReader();
                return _this.readEntries(reader);
            });
        }
    }(); };
    FileOriginal.prototype.removeRecursively = function (path, dirName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            if ((/^\//.test(dirName))) {
                var err = new FileError(5);
                err.message = 'directory cannot start with \/';
                return Promise.reject(err);
            }
            return this.resolveDirectoryUrl(path)
                .then(function (fse) {
                return _this.getDirectory(fse, dirName, { create: false });
            })
                .then(function (de) {
                return _this.rimraf(de);
            });
        }
    }(); };
    FileOriginal.prototype.checkFile = function (path, file) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            if ((/^\//.test(file))) {
                var err = new FileError(5);
                err.message = 'file cannot start with \/';
                return Promise.reject(err);
            }
            return this.resolveLocalFilesystemUrl(path + file)
                .then(function (fse) {
                if (fse.isFile) {
                    return true;
                }
                else {
                    var err = new FileError(13);
                    err.message = 'input is not a file';
                    return Promise.reject(err);
                }
            });
        }
    }(); };
    FileOriginal.prototype.createFile = function (path, fileName, replace) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            if ((/^\//.test(fileName))) {
                var err = new FileError(5);
                err.message = 'file-name cannot start with \/';
                return Promise.reject(err);
            }
            var options = {
                create: true
            };
            if (!replace) {
                options.exclusive = true;
            }
            return this.resolveDirectoryUrl(path)
                .then(function (fse) {
                return _this.getFile(fse, fileName, options);
            });
        }
    }(); };
    FileOriginal.prototype.removeFile = function (path, fileName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            if ((/^\//.test(fileName))) {
                var err = new FileError(5);
                err.message = 'file-name cannot start with \/';
                return Promise.reject(err);
            }
            return this.resolveDirectoryUrl(path)
                .then(function (fse) {
                return _this.getFile(fse, fileName, { create: false });
            })
                .then(function (fe) {
                return _this.remove(fe);
            });
        }
    }(); };
    FileOriginal.prototype.writeFile = function (path, fileName, text, options) {
        if (options === void 0) { options = {}; }
        return function () {
            var _this = this;
            if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
                if ((/^\//.test(fileName))) {
                    var err = new FileError(5);
                    err.message = 'file-name cannot start with \/';
                    return Promise.reject(err);
                }
                var getFileOpts = {
                    create: !options.append,
                    exclusive: !options.replace
                };
                return this.resolveDirectoryUrl(path)
                    .then(function (directoryEntry) {
                    return _this.getFile(directoryEntry, fileName, getFileOpts);
                })
                    .then(function (fileEntry) {
                    return _this.writeFileEntry(fileEntry, text, options);
                });
            }
        }();
    };
    FileOriginal.prototype.writeExistingFile = function (path, fileName, text) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return this.writeFile(path, fileName, text, { replace: true });
        }
    }(); };
    FileOriginal.prototype.readAsText = function (path, file) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return this.readFile(path, file, 'Text');
        }
    }(); };
    FileOriginal.prototype.readAsDataURL = function (path, file) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return this.readFile(path, file, 'DataURL');
        }
    }(); };
    FileOriginal.prototype.readAsBinaryString = function (path, file) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return this.readFile(path, file, 'BinaryString');
        }
    }(); };
    FileOriginal.prototype.readAsArrayBuffer = function (path, file) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return this.readFile(path, file, 'ArrayBuffer');
        }
    }(); };
    FileOriginal.prototype.moveFile = function (path, fileName, newPath, newFileName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            newFileName = newFileName || fileName;
            if ((/^\//.test(newFileName))) {
                var err = new FileError(5);
                err.message = 'file name cannot start with \/';
                return Promise.reject(err);
            }
            return this.resolveDirectoryUrl(path)
                .then(function (fse) {
                return _this.getFile(fse, fileName, { create: false });
            })
                .then(function (srcfe) {
                return _this.resolveDirectoryUrl(newPath)
                    .then(function (deste) {
                    return _this.move(srcfe, deste, newFileName);
                });
            });
        }
    }(); };
    FileOriginal.prototype.copyFile = function (path, fileName, newPath, newFileName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            newFileName = newFileName || fileName;
            if ((/^\//.test(newFileName))) {
                var err = new FileError(5);
                err.message = 'file name cannot start with \/';
                return Promise.reject(err);
            }
            return this.resolveDirectoryUrl(path)
                .then(function (fse) {
                return _this.getFile(fse, fileName, { create: false });
            })
                .then(function (srcfe) {
                return _this.resolveDirectoryUrl(newPath)
                    .then(function (deste) {
                    return _this.copy(srcfe, deste, newFileName);
                });
            });
        }
    }(); };
    FileOriginal.prototype.resolveLocalFilesystemUrl = function (fileUrl) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                try {
                    window.resolveLocalFileSystemURL(fileUrl, function (entry) {
                        resolve(entry);
                    }, function (err) {
                        _this.fillErrorMessage(err);
                        reject(err);
                    });
                }
                catch (xc) {
                    _this.fillErrorMessage(xc);
                    reject(xc);
                }
            });
        }
    }(); };
    FileOriginal.prototype.resolveDirectoryUrl = function (directoryUrl) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return this.resolveLocalFilesystemUrl(directoryUrl)
                .then(function (de) {
                if (de.isDirectory) {
                    return de;
                }
                else {
                    var err = new FileError(13);
                    err.message = 'input is not a directory';
                    return Promise.reject(err);
                }
            });
        }
    }(); };
    FileOriginal.prototype.getDirectory = function (directoryEntry, directoryName, flags) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                try {
                    directoryEntry.getDirectory(directoryName, flags, function (de) {
                        resolve(de);
                    }, function (err) {
                        _this.fillErrorMessage(err);
                        reject(err);
                    });
                }
                catch (xc) {
                    _this.fillErrorMessage(xc);
                    reject(xc);
                }
            });
        }
    }(); };
    FileOriginal.prototype.getFile = function (directoryEntry, fileName, flags) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                try {
                    directoryEntry.getFile(fileName, flags, resolve, function (err) {
                        _this.fillErrorMessage(err);
                        reject(err);
                    });
                }
                catch (xc) {
                    _this.fillErrorMessage(xc);
                    reject(xc);
                }
            });
        }
    }(); };
    /** Write content to FileEntry.
     *
     * @hidden
     * @param {FileEntry} fe file entry object
     * @param {string | Blob} text content or blob to write
     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.
     * @returns {Promise<FileEntry>} Returns a Promise that resolves to updated file entry or rejects with an error.
     */
    FileOriginal.prototype.writeFileEntry = function (fe, text, options) {
        var _this = this;
        return this.createWriter(fe)
            .then(function (writer) {
            if (options.append) {
                writer.seek(writer.length);
            }
            if (options.truncate) {
                writer.truncate(options.truncate);
            }
            return _this.write(writer, text);
        })
            .then(function () { return fe; });
    };
    FileOriginal.prototype.readFile = function (path, file, readAs) {
        var _this = this;
        if ((/^\//.test(file))) {
            var err = new FileError(5);
            err.message = 'file-name cannot start with \/';
            return Promise.reject(err);
        }
        return this.resolveDirectoryUrl(path)
            .then(function (directoryEntry) {
            return _this.getFile(directoryEntry, file, { create: false });
        })
            .then(function (fileEntry) {
            var reader = new FileReader();
            return new Promise(function (resolve, reject) {
                reader.onloadend = function () {
                    if (reader.result !== undefined || reader.result !== null) {
                        resolve(reader.result);
                    }
                    else if (reader.error !== undefined || reader.error !== null) {
                        reject(reader.error);
                    }
                    else {
                        reject({ code: null, message: 'READER_ONLOADEND_ERR' });
                    }
                };
                fileEntry.file(function (file) {
                    reader["readAs" + readAs].call(reader, file);
                }, function (error) {
                    reject(error);
                });
            });
        });
    };
    /**
     * @hidden
     */
    FileOriginal.prototype.fillErrorMessage = function (err) {
        try {
            err.message = this.cordovaFileError[err.code];
        }
        catch (e) {
        }
    };
    /**
     * @hidden
     */
    FileOriginal.prototype.remove = function (fe) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            fe.remove(function () {
                resolve({ success: true, fileRemoved: fe });
            }, function (err) {
                _this.fillErrorMessage(err);
                reject(err);
            });
        });
    };
    /**
     * @hidden
     */
    FileOriginal.prototype.move = function (srce, destdir, newName) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            srce.moveTo(destdir, newName, function (deste) {
                resolve(deste);
            }, function (err) {
                _this.fillErrorMessage(err);
                reject(err);
            });
        });
    };
    /**
     * @hidden
     */
    FileOriginal.prototype.copy = function (srce, destdir, newName) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            srce.copyTo(destdir, newName, function (deste) {
                resolve(deste);
            }, function (err) {
                _this.fillErrorMessage(err);
                reject(err);
            });
        });
    };
    /**
     * @hidden
     */
    FileOriginal.prototype.readEntries = function (dr) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            dr.readEntries(function (entries) {
                resolve(entries);
            }, function (err) {
                _this.fillErrorMessage(err);
                reject(err);
            });
        });
    };
    /**
     * @hidden
     */
    FileOriginal.prototype.rimraf = function (de) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            de.removeRecursively(function () {
                resolve({ success: true, fileRemoved: de });
            }, function (err) {
                _this.fillErrorMessage(err);
                reject(err);
            });
        });
    };
    /**
     * @hidden
     */
    FileOriginal.prototype.createWriter = function (fe) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            fe.createWriter(function (writer) {
                resolve(writer);
            }, function (err) {
                _this.fillErrorMessage(err);
                reject(err);
            });
        });
    };
    /**
     * @hidden
     */
    FileOriginal.prototype.write = function (writer, gu) {
        if (gu instanceof Blob) {
            return this.writeFileInChunks(writer, gu);
        }
        return new Promise(function (resolve, reject) {
            writer.onwriteend = function (evt) {
                if (writer.error) {
                    reject(writer.error);
                }
                else {
                    resolve(evt);
                }
            };
            writer.write(gu);
        });
    };
    /**
     * @hidden
     */
    FileOriginal.prototype.writeFileInChunks = function (writer, file) {
        var BLOCK_SIZE = 1024 * 1024;
        var writtenSize = 0;
        function writeNextChunk() {
            var size = Math.min(BLOCK_SIZE, file.size - writtenSize);
            var chunk = file.slice(writtenSize, writtenSize + size);
            writtenSize += size;
            writer.write(chunk);
        }
        return new Promise(function (resolve, reject) {
            writer.onerror = reject;
            writer.onwrite = function () {
                if (writtenSize < file.size) {
                    writeNextChunk();
                }
                else {
                    resolve();
                }
            };
            writeNextChunk();
        });
    };
    Object.defineProperty(FileOriginal.prototype, "applicationDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "applicationDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "applicationDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "applicationStorageDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "applicationStorageDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "applicationStorageDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "dataDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "dataDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "dataDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "cacheDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "cacheDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "cacheDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "externalApplicationStorageDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "externalApplicationStorageDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "externalApplicationStorageDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "externalDataDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "externalDataDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "externalDataDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "externalCacheDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "externalCacheDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "externalCacheDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "externalRootDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "externalRootDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "externalRootDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "tempDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "tempDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "tempDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "syncedDataDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "syncedDataDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "syncedDataDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "documentsDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "documentsDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "documentsDirectory", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileOriginal.prototype, "sharedDirectory", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "sharedDirectory"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "sharedDirectory", value); },
        enumerable: true,
        configurable: true
    });
    FileOriginal.pluginName = "File";
    FileOriginal.plugin = "cordova-plugin-file";
    FileOriginal.pluginRef = "cordova.file";
    FileOriginal.repo = "https://github.com/apache/cordova-plugin-file";
    FileOriginal.platforms = ["Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "macOS", "Ubuntu", "Windows", "Windows Phone"];
    return FileOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var File = new FileOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 530 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FileChooser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FileChooserOriginal = /** @class */ (function (_super) {
    __extends(FileChooserOriginal, _super);
    function FileChooserOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FileChooserOriginal.prototype.open = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "open", {}, arguments); };
    FileChooserOriginal.pluginName = "FileChooser";
    FileChooserOriginal.plugin = "cordova-plugin-filechooser";
    FileChooserOriginal.pluginRef = "fileChooser";
    FileChooserOriginal.repo = "https://github.com/ihadeed/cordova-filechooser";
    FileChooserOriginal.platforms = ["Android"];
    return FileChooserOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FileChooser = new FileChooserOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9maWxlLWNob29zZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBOEJ2QywrQkFBaUI7Ozs7SUFPaEQsMEJBQUk7Ozs7OztzQkF0Q047RUErQmlDLGlCQUFpQjtTQUFyQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgRmlsZSBDaG9vc2VyXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPcGVucyB0aGUgZmlsZSBwaWNrZXIgb24gQW5kcm9pZCBmb3IgdGhlIHVzZXIgdG8gc2VsZWN0IGEgZmlsZSwgcmV0dXJucyBhIGZpbGUgVVJJLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgRmlsZUNob29zZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2ZpbGUtY2hvb3Nlcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBmaWxlQ2hvb3NlcjogRmlsZUNob29zZXIpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuZmlsZUNob29zZXIub3BlbigpXG4gKiAgIC50aGVuKHVyaSA9PiBjb25zb2xlLmxvZyh1cmkpKVxuICogICAuY2F0Y2goZSA9PiBjb25zb2xlLmxvZyhlKSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnRmlsZUNob29zZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1maWxlY2hvb3NlcicsXG4gIHBsdWdpblJlZjogJ2ZpbGVDaG9vc2VyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9paGFkZWVkL2NvcmRvdmEtZmlsZWNob29zZXInLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEZpbGVDaG9vc2VyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBPcGVuIGEgZmlsZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBvcGVuKCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 531 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FileEncryption; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FileEncryptionOriginal = /** @class */ (function (_super) {
    __extends(FileEncryptionOriginal, _super);
    function FileEncryptionOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FileEncryptionOriginal.prototype.encrypt = function (file, key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "encrypt", {}, arguments); };
    FileEncryptionOriginal.prototype.decrypt = function (file, key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "decrypt", {}, arguments); };
    FileEncryptionOriginal.pluginName = "FileEncryption";
    FileEncryptionOriginal.plugin = "cordova-safe";
    FileEncryptionOriginal.pluginRef = "cordova.plugins.disusered";
    FileEncryptionOriginal.repo = "https://github.com/disusered/cordova-safe";
    FileEncryptionOriginal.platforms = ["Android", "iOS"];
    return FileEncryptionOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FileEncryption = new FileEncryptionOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9maWxlLWVuY3J5cHRpb24vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBK0JwQyxrQ0FBaUI7Ozs7SUFTbkQsZ0NBQU8sYUFBQyxJQUFZLEVBQUUsR0FBVztJQVdqQyxnQ0FBTyxhQUFDLElBQVksRUFBRSxHQUFXOzs7Ozs7eUJBbkRuQztFQStCb0MsaUJBQWlCO1NBQXhDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBGaWxlIEVuY3J5cHRpb25cbiAqIEBkZXNjcmlwdGlvblxuICogU2ltcGxlIGZpbGUgZW5jcnlwdGlvbiBmb3IgQ29yZG92YS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEZpbGVFbmNyeXB0aW9uIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9maWxlLWVuY3J5cHRpb24nO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGZpbGVFbmNyeXB0aW9uOiBGaWxlRW5jcnlwdGlvbikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5maWxlRW5jcnlwdGlvbi5kZWNyeXB0KCdhc3NldHMvanNvbi90b3BTZWNyZXQuanNvbicsICdzZWNyZXRLZXknKTtcbiAqXG4gKiB0aGlzLmZpbGVFbmNyeXB0aW9uLmVuY3J5cHQoJ2Fzc2V0cy9qc29uL3RvcFNlY3JldC5qc29uJywgJ3NlY3JldEtleScpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0ZpbGVFbmNyeXB0aW9uJyxcbiAgcGx1Z2luOiAnY29yZG92YS1zYWZlJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLmRpc3VzZXJlZCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZGlzdXNlcmVkL2NvcmRvdmEtc2FmZScsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEZpbGVFbmNyeXB0aW9uIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBFbnJjeXB0IGEgZmlsZVxuICAgKiBAcGFyYW0gZmlsZSB7c3RyaW5nfSBBIHN0cmluZyByZXByZXNlbnRpbmcgYSBsb2NhbCBVUklcbiAgICogQHBhcmFtIGtleSB7c3RyaW5nfSBBIGtleSBmb3IgdGhlIGNyeXB0byBvcGVyYXRpb25zXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHNvbWV0aGluZyBoYXBwZW5zXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGVuY3J5cHQoZmlsZTogc3RyaW5nLCBrZXk6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIERlY3J5cHQgYSBmaWxlXG4gICAqIEBwYXJhbSBmaWxlIHtzdHJpbmd9IEEgc3RyaW5nIHJlcHJlc2VudGluZyBhIGxvY2FsIFVSSVxuICAgKiBAcGFyYW0ga2V5IHtzdHJpbmd9IEEga2V5IGZvciB0aGUgY3J5cHRvIG9wZXJhdGlvbnNcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gc29tZXRoaW5nIGhhcHBlbnNcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZGVjcnlwdChmaWxlOiBzdHJpbmcsIGtleTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 532 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FileOpener; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FileOpenerOriginal = /** @class */ (function (_super) {
    __extends(FileOpenerOriginal, _super);
    function FileOpenerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FileOpenerOriginal.prototype.open = function (filePath, fileMIMEType) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "open", { "callbackStyle": "object", "successName": "success", "errorName": "error" }, arguments); };
    FileOpenerOriginal.prototype.uninstall = function (packageId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "uninstall", { "callbackStyle": "object", "successName": "success", "errorName": "error" }, arguments); };
    FileOpenerOriginal.prototype.appIsInstalled = function (packageId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "appIsInstalled", { "callbackStyle": "object", "successName": "success", "errorName": "error" }, arguments); };
    FileOpenerOriginal.pluginName = "FileOpener";
    FileOpenerOriginal.plugin = "cordova-plugin-file-opener2";
    FileOpenerOriginal.pluginRef = "cordova.plugins.fileOpener2";
    FileOpenerOriginal.repo = "https://github.com/pwlin/cordova-plugin-file-opener2";
    FileOpenerOriginal.platforms = ["Android", "iOS", "Windows", "Windows Phone 8"];
    return FileOpenerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FileOpener = new FileOpenerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9maWxlLW9wZW5lci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUE2QnhDLDhCQUFpQjs7OztJQWEvQyx5QkFBSSxhQUFDLFFBQWdCLEVBQUUsWUFBb0I7SUFjM0MsOEJBQVMsYUFBQyxTQUFpQjtJQWMzQixtQ0FBYyxhQUFDLFNBQWlCOzs7Ozs7cUJBdkVsQztFQThCZ0MsaUJBQWlCO1NBQXBDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBGaWxlIE9wZW5lclxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiB3aWxsIG9wZW4gYSBmaWxlIG9uIHlvdXIgZGV2aWNlIGZpbGUgc3lzdGVtIHdpdGggaXRzIGRlZmF1bHQgYXBwbGljYXRpb24uXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBGaWxlT3BlbmVyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9maWxlLW9wZW5lcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBmaWxlT3BlbmVyOiBGaWxlT3BlbmVyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmZpbGVPcGVuZXIub3BlbigncGF0aC90by9maWxlLnBkZicsICdhcHBsaWNhdGlvbi9wZGYnKVxuICogICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygnRmlsZSBpcyBvcGVuZWQnKSlcbiAqICAgLmNhdGNoKGUgPT4gY29uc29sZS5sb2coJ0Vycm9yIG9wZW5lbmluZyBmaWxlJywgZSkpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0ZpbGVPcGVuZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1maWxlLW9wZW5lcjInLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuZmlsZU9wZW5lcjInLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3B3bGluL2NvcmRvdmEtcGx1Z2luLWZpbGUtb3BlbmVyMicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzJywgJ1dpbmRvd3MgUGhvbmUgOCddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEZpbGVPcGVuZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIE9wZW4gYW4gZmlsZVxuICAgKiBAcGFyYW0gZmlsZVBhdGgge3N0cmluZ30gRmlsZSBQYXRoXG4gICAqIEBwYXJhbSBmaWxlTUlNRVR5cGUge3N0cmluZ30gRmlsZSBNSU1FIFR5cGVcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja1N0eWxlOiAnb2JqZWN0JyxcbiAgICBzdWNjZXNzTmFtZTogJ3N1Y2Nlc3MnLFxuICAgIGVycm9yTmFtZTogJ2Vycm9yJ1xuICB9KVxuICBvcGVuKGZpbGVQYXRoOiBzdHJpbmcsIGZpbGVNSU1FVHlwZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVW5pbnN0YWxscyBhIHBhY2thZ2VcbiAgICogQHBhcmFtIHBhY2thZ2VJZCB7c3RyaW5nfSAgUGFja2FnZSBJRFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrU3R5bGU6ICdvYmplY3QnLFxuICAgIHN1Y2Nlc3NOYW1lOiAnc3VjY2VzcycsXG4gICAgZXJyb3JOYW1lOiAnZXJyb3InXG4gIH0pXG4gIHVuaW5zdGFsbChwYWNrYWdlSWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGFuIGFwcCBpcyBhbHJlYWR5IGluc3RhbGxlZFxuICAgKiBAcGFyYW0gcGFja2FnZUlkIHtzdHJpbmd9IFBhY2thZ2UgSURcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja1N0eWxlOiAnb2JqZWN0JyxcbiAgICBzdWNjZXNzTmFtZTogJ3N1Y2Nlc3MnLFxuICAgIGVycm9yTmFtZTogJ2Vycm9yJ1xuICB9KVxuICBhcHBJc0luc3RhbGxlZChwYWNrYWdlSWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 533 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FilePath; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FilePathOriginal = /** @class */ (function (_super) {
    __extends(FilePathOriginal, _super);
    function FilePathOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FilePathOriginal.prototype.resolveNativePath = function (path) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "resolveNativePath", {}, arguments); };
    FilePathOriginal.pluginName = "FilePath";
    FilePathOriginal.plugin = "cordova-plugin-filepath";
    FilePathOriginal.pluginRef = "window.FilePath";
    FilePathOriginal.repo = "https://github.com/hiddentao/cordova-plugin-filepath";
    FilePathOriginal.platforms = ["Android"];
    return FilePathOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FilePath = new FilePathOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9maWxlLXBhdGgvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBZ0MxQyw0QkFBaUI7Ozs7SUFRN0Msb0NBQWlCLGFBQUMsSUFBWTs7Ozs7O21CQXpDaEM7RUFpQzhCLGlCQUFpQjtTQUFsQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmRlY2xhcmUgY29uc3Qgd2luZG93OiBhbnk7XG5cbi8qKlxuICogQG5hbWUgRmlsZSBQYXRoXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBUaGlzIHBsdWdpbiBhbGxvd3MgeW91IHRvIHJlc29sdmUgdGhlIG5hdGl2ZSBmaWxlc3lzdGVtIHBhdGggZm9yIEFuZHJvaWQgY29udGVudCBVUklzIGFuZCBpcyBiYXNlZCBvbiBjb2RlIGluIHRoZSBhRmlsZUNob29zZXIgbGlicmFyeS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEZpbGVQYXRoIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9maWxlLXBhdGgnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZmlsZVBhdGg6IEZpbGVQYXRoKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmZpbGVQYXRoLnJlc29sdmVOYXRpdmVQYXRoKHBhdGgpXG4gKiAgIC50aGVuKGZpbGVQYXRoID0+IGNvbnNvbGUubG9nKGZpbGVQYXRoKSlcbiAqICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdGaWxlUGF0aCcsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWZpbGVwYXRoJyxcbiAgcGx1Z2luUmVmOiAnd2luZG93LkZpbGVQYXRoJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9oaWRkZW50YW8vY29yZG92YS1wbHVnaW4tZmlsZXBhdGgnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEZpbGVQYXRoIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBSZXNvbHZlIG5hdGl2ZSBwYXRoIGZvciBnaXZlbiBjb250ZW50IFVSTC9wYXRoLlxuICAgKiBAcGFyYW0ge1N0cmluZ30gcGF0aCAgQ29udGVudCBVUkwvcGF0aC5cbiAgICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcmVzb2x2ZU5hdGl2ZVBhdGgocGF0aDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 534 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FileTransfer; });
/* unused harmony export FileTransferObject */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FileTransferOriginal = /** @class */ (function (_super) {
    __extends(FileTransferOriginal, _super);
    function FileTransferOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Error code rejected from upload with FileTransferError
         * Defined in FileTransferError.
         *      FILE_NOT_FOUND_ERR: 1   Return when file was not found
         *      INVALID_URL_ERR: 2,     Return when url was invalid
         *      CONNECTION_ERR: 3,      Return on connection error
         *      ABORT_ERR: 4,           Return on aborting
         *      NOT_MODIFIED_ERR: 5     Return on '304 Not Modified' HTTP response
         * @enum {number}
         */
        _this.FileTransferErrorCode = {
            FILE_NOT_FOUND_ERR: 1,
            INVALID_URL_ERR: 2,
            CONNECTION_ERR: 3,
            ABORT_ERR: 4,
            NOT_MODIFIED_ERR: 5
        };
        return _this;
    }
    /**
     * Creates a new FileTransferOriginal object
     * @return {FileTransferObject}
     */
    FileTransferOriginal.prototype.create = function () {
        return new FileTransferObject();
    };
    FileTransferOriginal.pluginName = "FileTransfer";
    FileTransferOriginal.plugin = "cordova-plugin-file-transfer";
    FileTransferOriginal.pluginRef = "FileTransfer";
    FileTransferOriginal.repo = "https://github.com/apache/cordova-plugin-file-transfer";
    FileTransferOriginal.platforms = ["Amazon Fire OS", "Android", "Browser", "iOS", "Ubuntu", "Windows", "Windows Phone"];
    return FileTransferOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FileTransfer = new FileTransferOriginal();

var FileTransferObject = /** @class */ (function () {
    function FileTransferObject() {
        if (checkAvailability(FileTransferOriginal.getPluginRef(), null, FileTransferOriginal.getPluginName()) === true) {
            this._objectInstance = new (FileTransferOriginal.getPlugin())();
        }
    }
    FileTransferObject.prototype.upload = function (fileUrl, url, options, trustAllHosts) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "upload", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    FileTransferObject.prototype.download = function (source, target, trustAllHosts, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "download", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    FileTransferObject.prototype.onProgress = function (listener) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            this._objectInstance.onprogress = listener;
        }
    }(); };
    FileTransferObject.prototype.abort = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "abort", { "sync": true }, arguments); };
    FileTransferObject.plugin = "cordova-plugin-file-transfer";
    FileTransferObject.pluginName = "FileTransfer";
    return FileTransferObject;
}());

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 535 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FingerprintAIO; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FingerprintAIOOriginal = /** @class */ (function (_super) {
    __extends(FingerprintAIOOriginal, _super);
    function FingerprintAIOOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FingerprintAIOOriginal.prototype.isAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAvailable", {}, arguments); };
    FingerprintAIOOriginal.prototype.show = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", {}, arguments); };
    FingerprintAIOOriginal.pluginName = "FingerprintAIO";
    FingerprintAIOOriginal.plugin = "cordova-plugin-fingerprint-aio";
    FingerprintAIOOriginal.pluginRef = "Fingerprint";
    FingerprintAIOOriginal.repo = "https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio";
    FingerprintAIOOriginal.platforms = ["Android", "iOS"];
    return FingerprintAIOOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FingerprintAIO = new FingerprintAIOOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9maW5nZXJwcmludC1haW8vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBa0VwQyxrQ0FBaUI7Ozs7SUFPbkQsb0NBQVc7SUFVWCw2QkFBSSxhQUFDLE9BQTJCOzs7Ozs7eUJBcEZsQztFQW1Fb0MsaUJBQWlCO1NBQXhDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuXG5leHBvcnQgaW50ZXJmYWNlIEZpbmdlcnByaW50T3B0aW9ucyB7XG4gIC8qKlxuICAgKiBLZXkgZm9yIHBsYXRmb3JtIGtleWNoYWluXG4gICAqL1xuICBjbGllbnRJZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBTZWNyZXQgcGFzc3dvcmQuIE9ubHkgZm9yIGFuZHJvaWRcbiAgICovXG4gIGNsaWVudFNlY3JldD86IHN0cmluZztcblxuICAvKipcbiAgICogRGlzYWJsZSAndXNlIGJhY2t1cCcgb3B0aW9uLiBPbmx5IGZvciBhbmRyb2lkIChvcHRpb25hbClcbiAgICovXG4gIGRpc2FibGVCYWNrdXA/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBUaXRsZSBvZiBmYWxsYmFjayBidXR0b24uIE9ubHkgZm9yIGlPU1xuICAgKi9cbiAgbG9jYWxpemVkRmFsbGJhY2tUaXRsZT86IHN0cmluZztcblxuICAvKipcbiAgICogRGVzY3JpcHRpb24gaW4gYXV0aGVudGljYXRpb24gZGlhbG9ndWUuIE9ubHkgZm9yIGlPU1xuICAgKi9cbiAgbG9jYWxpemVkUmVhc29uPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIEBuYW1lIEZpbmdlcnByaW50IEFJT1xuICogQGRlc2NyaXB0aW9uXG4gKiBVc2Ugc2ltcGxlIGZpbmdlcnByaW50IGF1dGhlbnRpY2F0aW9uIG9uIEFuZHJvaWQgYW5kIGlPUy5cbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBjb3Jkb3ZhLXBsdWdpbi1maW5nZXJwcmludC1haW8uIEZvciBtb3JlIGluZm8gYWJvdXQgcGx1Z2luLCB2aXN0OiBodHRwczovL2dpdGh1Yi5jb20vTmlrbGFzTWVyei9jb3Jkb3ZhLXBsdWdpbi1maW5nZXJwcmludC1haW9cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEZpbmdlcnByaW50QUlPIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9maW5nZXJwcmludC1haW8nO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZmFpbzogRmluZ2VycHJpbnRBSU8pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuZmFpby5zaG93KHtcbiAqICAgICBjbGllbnRJZDogJ0ZpbmdlcnByaW50LURlbW8nLFxuICogICAgIGNsaWVudFNlY3JldDogJ3Bhc3N3b3JkJywgLy9Pbmx5IG5lY2Vzc2FyeSBmb3IgQW5kcm9pZFxuICogICAgIGRpc2FibGVCYWNrdXA6dHJ1ZSwgIC8vT25seSBmb3IgQW5kcm9pZChvcHRpb25hbClcbiAqICAgICBsb2NhbGl6ZWRGYWxsYmFja1RpdGxlOiAnVXNlIFBpbicsIC8vT25seSBmb3IgaU9TXG4gKiAgICAgbG9jYWxpemVkUmVhc29uOiAnUGxlYXNlIGF1dGhlbnRpY2F0ZScgLy9Pbmx5IGZvciBpT1NcbiAqIH0pXG4gKiAudGhlbigocmVzdWx0OiBhbnkpID0+IGNvbnNvbGUubG9nKHJlc3VsdCkpXG4gKiAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUubG9nKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogRmluZ2VycHJpbnRPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnRmluZ2VycHJpbnRBSU8nLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1maW5nZXJwcmludC1haW8nLFxuICBwbHVnaW5SZWY6ICdGaW5nZXJwcmludCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vTmlrbGFzTWVyei9jb3Jkb3ZhLXBsdWdpbi1maW5nZXJwcmludC1haW8nLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBGaW5nZXJwcmludEFJTyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogQ2hlY2sgaWYgZmluZ2VycHJpbnQgYXV0aGVudGljYXRpb24gaXMgYXZhaWxhYmxlXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2Ugd2l0aCByZXN1bHRcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaXNBdmFpbGFibGUoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2hvdyBhdXRoZW50aWNhdGlvbiBkaWFsb2d1ZVxuICAgKiBAcGFyYW0gb3B0aW9ucyB7RmluZ2VycHJpbnRPcHRpb25zfSBvcHRpb25zIGZvciBwbGF0Zm9ybSBzcGVjaWZpYyBmaW5nZXJwcmludCBBUElcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gYXV0aGVudGljYXRpb24gd2FzIHN1Y2Nlc3NmdWxsXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNob3cob3B0aW9uczogRmluZ2VycHJpbnRPcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 536 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Firebase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var FirebaseOriginal = /** @class */ (function (_super) {
    __extends(FirebaseOriginal, _super);
    function FirebaseOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FirebaseOriginal.prototype.getToken = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getToken", {}, arguments); };
    FirebaseOriginal.prototype.onTokenRefresh = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onTokenRefresh", { "observable": true }, arguments); };
    FirebaseOriginal.prototype.onNotificationOpen = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onNotificationOpen", { "observable": true }, arguments); };
    FirebaseOriginal.prototype.grantPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "grantPermission", { "platforms": ["iOS"] }, arguments); };
    FirebaseOriginal.prototype.hasPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasPermission", {}, arguments); };
    FirebaseOriginal.prototype.setBadgeNumber = function (badgeNumber) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setBadgeNumber", {}, arguments); };
    FirebaseOriginal.prototype.getBadgeNumber = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getBadgeNumber", {}, arguments); };
    FirebaseOriginal.prototype.subscribe = function (topic) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "subscribe", {}, arguments); };
    FirebaseOriginal.prototype.unsubscribe = function (topic) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unsubscribe", {}, arguments); };
    FirebaseOriginal.prototype.unregister = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unregister", {}, arguments); };
    FirebaseOriginal.prototype.logEvent = function (type, data) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logEvent", {}, arguments); };
    FirebaseOriginal.prototype.logError = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logError", {}, arguments); };
    FirebaseOriginal.prototype.setScreenName = function (name) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setScreenName", {}, arguments); };
    FirebaseOriginal.prototype.setUserId = function (userId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setUserId", {}, arguments); };
    FirebaseOriginal.prototype.setUserProperty = function (name, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setUserProperty", {}, arguments); };
    FirebaseOriginal.prototype.fetch = function (cacheExpirationSeconds) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "fetch", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    FirebaseOriginal.prototype.activateFetched = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "activateFetched", {}, arguments); };
    FirebaseOriginal.prototype.getValue = function (key, namespace) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getValue", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    FirebaseOriginal.prototype.getByteArray = function (key, namespace) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getByteArray", { "platforms": ["Android"], "successIndex": 2, "errorIndex": 3 }, arguments); };
    FirebaseOriginal.prototype.getInfo = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getInfo", { "platforms": ["Android"] }, arguments); };
    FirebaseOriginal.prototype.setConfigSettings = function (settings) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setConfigSettings", { "platforms": ["Android"] }, arguments); };
    FirebaseOriginal.prototype.setDefaults = function (defaults, namespace) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setDefaults", { "platforms": ["Android"], "successIndex": 2, "errorIndex": 3 }, arguments); };
    FirebaseOriginal.prototype.getVerificationID = function (phoneNumber) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getVerificationID", { "platforms": ["iOS"] }, arguments); };
    FirebaseOriginal.prototype.verifyPhoneNumber = function (phoneNumber, timeoutDuration) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "verifyPhoneNumber", { "platforms": ["Android"], "successIndex": 2, "errorIndex": 3 }, arguments); };
    FirebaseOriginal.pluginName = "Firebase";
    FirebaseOriginal.plugin = "cordova-plugin-firebase";
    FirebaseOriginal.pluginRef = "FirebasePlugin";
    FirebaseOriginal.repo = "https://github.com/arnesson/cordova-plugin-firebase";
    FirebaseOriginal.platforms = ["Android", "iOS"];
    return FirebaseOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Firebase = new FirebaseOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 537 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FirebaseAnalytics; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FirebaseAnalyticsOriginal = /** @class */ (function (_super) {
    __extends(FirebaseAnalyticsOriginal, _super);
    function FirebaseAnalyticsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FirebaseAnalyticsOriginal.prototype.logEvent = function (name, params) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logEvent", {}, arguments); };
    FirebaseAnalyticsOriginal.prototype.setUserId = function (id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setUserId", {}, arguments); };
    FirebaseAnalyticsOriginal.prototype.setUserProperty = function (name, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setUserProperty", {}, arguments); };
    FirebaseAnalyticsOriginal.prototype.setEnabled = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setEnabled", {}, arguments); };
    FirebaseAnalyticsOriginal.prototype.setCurrentScreen = function (name) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setCurrentScreen", {}, arguments); };
    FirebaseAnalyticsOriginal.pluginName = "FirebaseAnalytics";
    FirebaseAnalyticsOriginal.plugin = "cordova-plugin-firebase-analytics";
    FirebaseAnalyticsOriginal.pluginRef = "cordova.plugins.firebase.analytics";
    FirebaseAnalyticsOriginal.repo = "https://github.com/chemerisuk/cordova-plugin-firebase-analytics";
    FirebaseAnalyticsOriginal.platforms = ["Android", "iOS"];
    return FirebaseAnalyticsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FirebaseAnalytics = new FirebaseAnalyticsOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9maXJlYmFzZS1hbmFseXRpY3MvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBbUNqQyxxQ0FBaUI7Ozs7SUFVdEQsb0NBQVEsYUFBQyxJQUFZLEVBQUUsTUFBVztJQVdsQyxxQ0FBUyxhQUFDLEVBQVU7SUFZcEIsMkNBQWUsYUFBQyxJQUFZLEVBQUUsS0FBYTtJQVUzQyxzQ0FBVSxhQUFDLE9BQWdCO0lBVzNCLDRDQUFnQixhQUFDLElBQVk7Ozs7Ozs0QkExRi9CO0VBb0N1QyxpQkFBaUI7U0FBM0MsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQGJldGFcbiAqIEBuYW1lIEZpcmViYXNlIEFuYWx5dGljc1xuICogQGRlc2NyaXB0aW9uXG4gKiBDb3Jkb3ZhIHBsdWdpbiBmb3IgRmlyZWJhc2UgQW5hbHl0aWNzXG4gKlxuICogR28gdG8gZmlyZWJhc2UgY29uc29sZSBhbmQgZXhwb3J0IGdvb2dsZS1zZXJ2aWNlcy5qc29uIGFuZCBHb29nbGVTZXJ2aWNlLUluZm8ucGxpc3QuIFB1dCB0aG9zZSBmaWxlcyBpbnRvIHRoZSByb290IG9mIHlvdXIgY29yZG92YSBhcHAgZm9sZGVyLlxuICpcbiAqIE5PVEU6IG9uIGlPUyBpbiBvcmRlciB0byBjb2xsZWN0IGRlbW9ncmFwaGljLCBhZ2UsIGdlbmRlciBkYXRhIGV0Yy4geW91IHNob3VsZCBhZGRpdGlvbmFsbHkgaW5jbHVkZSBBZFN1cHBvcnQuZnJhbWV3b3JrIGludG8geW91ciBwcm9qZWN0LlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgRmlyZWJhc2VBbmFseXRpY3MgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2ZpcmViYXNlLWFuYWx5dGljcyc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZmlyZWJhc2VBbmFseXRpY3M6IEZpcmViYXNlQW5hbHl0aWNzKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmZpcmViYXNlQW5hbHl0aWNzLmxvZ0V2ZW50KCdwYWdlX3ZpZXcnLCB7cGFnZTogXCJkYXNoYm9hcmRcIn0pXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnRmlyZWJhc2VBbmFseXRpY3MnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1maXJlYmFzZS1hbmFseXRpY3MnLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuZmlyZWJhc2UuYW5hbHl0aWNzJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9jaGVtZXJpc3VrL2NvcmRvdmEtcGx1Z2luLWZpcmViYXNlLWFuYWx5dGljcycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEZpcmViYXNlQW5hbHl0aWNzIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBMb2dzIGFuIGFwcCBldmVudC5cbiAgICogQmUgYXdhcmUgb2YgYXV0b21hdGljYWxseSBjb2xsZWN0ZWQgZXZlbnRzLlxuICAgKiBAcGFyYW0gbmFtZSB7c3RyaW5nfSBUaGUgbmFtZSBvZiB0aGUgZXZlbnRcbiAgICogQHBhcmFtIHBhcmFtcyB7YW55fSBTb21lIHBhcmFtIHRvIGNvbmZpZ3VyZSBzb21ldGhpbmdcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBsb2dFdmVudChuYW1lOiBzdHJpbmcsIHBhcmFtczogYW55KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgdXNlciBJRCBwcm9wZXJ0eS5cbiAgICogVGhpcyBmZWF0dXJlIG11c3QgYmUgdXNlZCBpbiBhY2NvcmRhbmNlIHdpdGggR29vZ2xlJ3MgUHJpdmFjeSBQb2xpY3kuXG4gICAqIEBwYXJhbSBpZCB7c3RyaW5nfSBUaGUgdXNlciBJRFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldFVzZXJJZChpZDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBmZWF0dXJlIG11c3QgYmUgdXNlZCBpbiBhY2NvcmRhbmNlIHdpdGggR29vZ2xlJ3MgUHJpdmFjeSBQb2xpY3kuXG4gICAqIEJlIGF3YXJlIG9mIGF1dG9tYXRpY2FsbHkgY29sbGVjdGVkIHVzZXIgcHJvcGVydGllcy5cbiAgICogQHBhcmFtIG5hbWUge3N0cmluZ30gVGhlIHByb3BlcnR5IG5hbWVcbiAgICogQHBhcmFtIHZhbHVlIHtzdHJpbmd9IFRoZSBwcm9wZXJ0eSB2YWx1ZVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldFVzZXJQcm9wZXJ0eShuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHdoZXRoZXIgYW5hbHl0aWNzIGNvbGxlY3Rpb24gaXMgZW5hYmxlZCBmb3IgdGhpcyBhcHAgb24gdGhpcyBkZXZpY2UuXG4gICAqIEBwYXJhbSBlbmFibGVkIHtib29sZWFufVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldEVuYWJsZWQoZW5hYmxlZDogYm9vbGVhbik6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGN1cnJlbnQgc2NyZWVuIG5hbWUsIHdoaWNoIHNwZWNpZmllcyB0aGUgY3VycmVudCB2aXN1YWwgY29udGV4dCBpbiB5b3VyIGFwcC5cbiAgICogVGhpcyBoZWxwcyBpZGVudGlmeSB0aGUgYXJlYXMgaW4geW91ciBhcHAgd2hlcmUgdXNlcnMgc3BlbmQgdGhlaXIgdGltZSBhbmQgaG93IHRoZXkgaW50ZXJhY3Qgd2l0aCB5b3VyIGFwcC5cbiAgICogQHBhcmFtIG5hbWUge3N0cmluZ30gVGhlIG5hbWUgb2YgdGhlIHNjcmVlblxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldEN1cnJlbnRTY3JlZW4obmFtZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 538 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FirebaseDynamicLinks; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FirebaseDynamicLinksOriginal = /** @class */ (function (_super) {
    __extends(FirebaseDynamicLinksOriginal, _super);
    function FirebaseDynamicLinksOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FirebaseDynamicLinksOriginal.prototype.onDynamicLink = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onDynamicLink", {}, arguments); };
    FirebaseDynamicLinksOriginal.prototype.sendInvitation = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "sendInvitation", {}, arguments); };
    FirebaseDynamicLinksOriginal.pluginName = "FirebaseDynamicLinks";
    FirebaseDynamicLinksOriginal.plugin = " cordova-plugin-firebase-dynamiclinks";
    FirebaseDynamicLinksOriginal.pluginRef = "cordova.plugins.firebase.dynamiclinks";
    FirebaseDynamicLinksOriginal.repo = "https://github.com/chemerisuk/cordova-plugin-firebase-dynamiclinks";
    FirebaseDynamicLinksOriginal.install = "ionic cordova plugin add cordova-plugin-firebase-dynamiclinks --save --variable APP_DOMAIN=\"example.com\" --variable APP_PATH=\"/\"";
    FirebaseDynamicLinksOriginal.installVariables = ["APP_DOMAIN", "APP_PATH"];
    FirebaseDynamicLinksOriginal.platforms = ["Android", "iOS"];
    return FirebaseDynamicLinksOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FirebaseDynamicLinks = new FirebaseDynamicLinksOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9maXJlYmFzZS1keW5hbWljLWxpbmtzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQXdFOUIsd0NBQWlCOzs7O0lBT3pELDRDQUFhO0lBVWIsNkNBQWMsYUFBQyxPQUE0Qjs7Ozs7Ozs7K0JBMUY3QztFQXlFMEMsaUJBQWlCO1NBQTlDLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIER5bmFtaWNMaW5rc09wdGlvbnMge1xuICB0aXRsZTogc3RyaW5nO1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIGRlZXBMaW5rPzogc3RyaW5nO1xuICBjYWxsVG9BY3Rpb25UZXh0Pzogc3RyaW5nO1xufVxuXG4vKipcbiAqIEBiZXRhXG4gKiBAbmFtZSBGaXJlYmFzZSBEeW5hbWljIExpbmtzXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvcmRvdmEgcGx1Z2luIGZvciBGaXJlYmFzZSBJbnZpdGVzIGFuZCBGaXJlYmFzZSBEeW5hbWljIExpbmtzXG4gKlxuICogVmFyaWFibGVzIEFQUF9ET01BSU4gYW5kIEFQUF9QQVRIIHNwZWNpZnkgd2ViIFVSTCB3aGVyZSB5b3VyIGFwcCB3aWxsIHN0YXJ0IGFuIGFjdGl2aXR5IHRvIGhhbmRsZSB0aGUgbGluay4gVGhleSBhbHNvIHVzZWQgdG8gc2V0dXAgc3VwcG9ydCBmb3IgQXBwIEluZGV4aW5nLlxuICogVmFyaWFibGUgUkVWRVJTRURfQ0xJRU5UX0lEIGNhbiBiZSBmb3VuZCBpbiB5b3VyIEdvb2dsZVNlcnZpY2UtSW5mby5wbGlzdCB1bmRlciB0aGUgc2FtZSBrZXkgbmFtZS5cbiAqIFZhcmlhYmxlIFBIT1RPX0xJQlJBUllfVVNBR0VfREVTQ1JJUFRJT04gc3BlY2lmaWVzIHJlcXVpcmVkIHZhbHVlIGZvciBOU1Bob3RvTGlicmFyeVVzYWdlRGVzY3JpcHRpb24gb24gaU9TLlxuICogR28gdG8gZmlyZWJhc2UgY29uc29sZSBhbmQgZXhwb3J0IGdvb2dsZS1zZXJ2aWNlcy5qc29uIGFuZCBHb29nbGVTZXJ2aWNlLUluZm8ucGxpc3QuIFB1dCB0aG9zZSBmaWxlcyBpbnRvIHRoZSByb290IG9mIHlvdXIgY29yZG92YSBhcHAgZm9sZGVyLlxuICpcbiAqIFByZWZlcmVuY2VzOlxuICpcbiAqIFByZWZlcmVuY2VzIEdvb2dsZUlPU0NsaWVudElkIGFuZCBHb29nbGVBbmRyb2lkQ2xpZW50SWQgYXJlIHVzZWQgdG8gc2V0dXAgZHluYW1pYyBsaW5rcyB3aGVuIHlvdSBoYXZlIGFuIGFwcCBmb3Igc2V2ZXJhbCBwbGF0Zm9ybXMuXG4gKiBZb3UgY2FuIGZpbmQgdmFsdWVzIGF0IHlvdXIgR29vZ2xlU2VydmljZS1JbmZvLnBsaXN0IChrZXkgQU5EUk9JRF9DTElFTlRfSUQpIGFuZCBnb29nbGUtc2VydmljZXMuanNvbiAoa2V5IGNsaWVudFswXS5vYXV0aF9jbGllbnRbMF0uY2xpZW50X2lkKS5cbiAqXG4gKmNvbmZpZy54bWw6XG4gKiBgYGB4bWxcbiAqIDxwbGF0Zm9ybSBuYW1lPVwiYW5kcm9pZFwiPlxuICogICAgIDxwcmVmZXJlbmNlIG5hbWU9XCJHb29nbGVJT1NDbGllbnRJZFwiIHZhbHVlPVwiLi4uXCIgLz5cbiAqIDwvcGxhdGZvcm0+XG4gKiA8cGxhdGZvcm0gbmFtZT1cImlvc1wiPlxuICogICAgIDxwcmVmZXJlbmNlIG5hbWU9XCJHb29nbGVBbmRyb2lkQ2xpZW50SWRcIiB2YWx1ZT1cIi4uLlwiIC8+XG4gKiA8L3BsYXRmb3JtPlxuICogYGBgXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEZpcmViYXNlRHluYW1pY0xpbmtzIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9maXJlYmFzZS1keW5hbWljLWxpbmtzJztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBmaXJlYmFzZUR5bmFtaWNMaW5rczogRmlyZWJhc2VEeW5hbWljTGlua3MpIHsgfVxuICpcbiAqIC4uLlxuICogLy8gVGhlIGRlZXBMaW5rIGFuZCBjYWxsVG9BY3Rpb25UZXh0IHByb3BlcnRpZXMgYXJlIG9wdGlvbmFsXG4gKiBjb25zdCBvcHRpb25zOiBEeW5hbWljTGlua3NPcHRpb25zID0ge1xuICogICB0aXRsZTogJ015IFRpdGxlJztcbiAqICAgbWVzc2FnZTogJ015IG1lc3NhZ2UnO1xuICogICBkZWVwTGluazogJ2h0dHA6Ly9leGFtcGxlLmNvbS8nO1xuICogICBjYWxsVG9BY3Rpb25UZXh0OiAnTWVzc2FnZSBvbiBidXR0b24nO1xuICogfVxuICpcbiAqIHRoaXMuZmlyZWJhc2VEeW5hbWljTGlua3Muc2VuZEludml0YXRpb24ob3B0aW9ucylcbiAqICAgLnRoZW4oKHJlczogYW55KSA9PiBjb25zb2xlLmxvZyhyZXMpKVxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAqXG4gKiB0aGlzLmZpcmViYXNlRHluYW1pY0xpbmtzLm9uRHluYW1pY0xpbmsoKVxuICogICAudGhlbigocmVzOiBhbnkpID0+IGNvbnNvbGUubG9nKHJlcykpIC8vSGFuZGxlIHRoZSBsb2dpYyBoZXJlIGFmdGVyIG9wZW5pbmcgdGhlIGFwcCB3aXRoIHRoZSBEeW5hbWljIGxpbmtcbiAqICAgLmNhdGNoKChlcnJvcjphbnkpID0+IGNvbnNvbGUubG9nKGVycm9yKSk7XG4gKiBgYGBcbiAqXG4gKiBAaW50ZXJmYWNlc1xuICogRHluYW1pY0xpbmtzT3B0aW9uc1xuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0ZpcmViYXNlRHluYW1pY0xpbmtzJyxcbiAgcGx1Z2luOiAnIGNvcmRvdmEtcGx1Z2luLWZpcmViYXNlLWR5bmFtaWNsaW5rcycsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5maXJlYmFzZS5keW5hbWljbGlua3MnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2NoZW1lcmlzdWsvY29yZG92YS1wbHVnaW4tZmlyZWJhc2UtZHluYW1pY2xpbmtzJyxcbiAgaW5zdGFsbDogJ2lvbmljIGNvcmRvdmEgcGx1Z2luIGFkZCBjb3Jkb3ZhLXBsdWdpbi1maXJlYmFzZS1keW5hbWljbGlua3MgLS1zYXZlIC0tdmFyaWFibGUgQVBQX0RPTUFJTj1cImV4YW1wbGUuY29tXCIgLS12YXJpYWJsZSBBUFBfUEFUSD1cIi9cIicsXG4gIGluc3RhbGxWYXJpYWJsZXM6IFsnQVBQX0RPTUFJTicsICdBUFBfUEFUSCddLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBGaXJlYmFzZUR5bmFtaWNMaW5rcyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogUmVnaXN0ZXJzIGNhbGxiYWNrIHRoYXQgaXMgdHJpZ2dlcmVkIG9uIGVhY2ggZHluYW1pYyBsaW5rIGNsaWNrLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIG9uRHluYW1pY0xpbmsoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGlzcGxheSBpbnZpdGF0aW9uIGRpYWxvZy5cbiAgICogQHBhcmFtIG9wdGlvbnMge0R5bmFtaWNMaW5rc09wdGlvbnN9IFNvbWUgcGFyYW0gdG8gY29uZmlndXJlIHNvbWV0aGluZ1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNlbmRJbnZpdGF0aW9uKG9wdGlvbnM6IER5bmFtaWNMaW5rc09wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 539 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Flashlight; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FlashlightOriginal = /** @class */ (function (_super) {
    __extends(FlashlightOriginal, _super);
    function FlashlightOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FlashlightOriginal.prototype.available = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "available", {}, arguments); };
    FlashlightOriginal.prototype.switchOn = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchOn", {}, arguments); };
    FlashlightOriginal.prototype.switchOff = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "switchOff", {}, arguments); };
    FlashlightOriginal.prototype.toggle = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "toggle", {}, arguments); };
    FlashlightOriginal.prototype.isSwitchedOn = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isSwitchedOn", { "sync": true }, arguments); };
    FlashlightOriginal.pluginName = "Flashlight";
    FlashlightOriginal.plugin = "cordova-plugin-flashlight";
    FlashlightOriginal.pluginRef = "window.plugins.flashlight";
    FlashlightOriginal.repo = "https://github.com/EddyVerbruggen/Flashlight-PhoneGap-Plugin";
    FlashlightOriginal.platforms = ["Android", "iOS", "Windows Phone 8"];
    return FlashlightOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Flashlight = new FlashlightOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9mbGFzaGxpZ2h0L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQTRCeEMsOEJBQWlCOzs7O0lBTy9DLDhCQUFTO0lBU1QsNkJBQVE7SUFTUiw4QkFBUztJQVNULDJCQUFNO0lBWU4saUNBQVk7Ozs7OztxQkEzRWQ7RUE2QmdDLGlCQUFpQjtTQUFwQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgRmxhc2hsaWdodFxuICogQGRlc2NyaXB0aW9uIFRoaXMgcGx1Z2luIGFsbG93cyB5b3UgdG8gc3dpdGNoIHRoZSBmbGFzaGxpZ2h0IC8gdG9yY2ggb2YgdGhlIGRldmljZSBvbiBhbmQgb2ZmLlxuICpcbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBgY29yZG92YS1wbHVnaW4tZmxhc2hsaWdodGAuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtGbGFzaGxpZ2h0IHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vRWRkeVZlcmJydWdnZW4vRmxhc2hsaWdodC1QaG9uZUdhcC1QbHVnaW4pLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgRmxhc2hsaWdodCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvZmxhc2hsaWdodCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBmbGFzaGxpZ2h0OiBGbGFzaGxpZ2h0KSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmZsYXNobGlnaHQuc3dpdGNoT24oKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdGbGFzaGxpZ2h0JyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZmxhc2hsaWdodCcsXG4gIHBsdWdpblJlZjogJ3dpbmRvdy5wbHVnaW5zLmZsYXNobGlnaHQnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL0VkZHlWZXJicnVnZ2VuL0ZsYXNobGlnaHQtUGhvbmVHYXAtUGx1Z2luJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MgUGhvbmUgOCddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEZsYXNobGlnaHQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiB0aGUgZmxhc2hsaWdodCBpcyBhdmFpbGFibGVcbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIGJvb2xlYW4gc3RhdGluZyBpZiB0aGUgZmxhc2hsaWdodCBpcyBhdmFpbGFibGUuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGF2YWlsYWJsZSgpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU3dpdGNoZXMgdGhlIGZsYXNobGlnaHQgb25cbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHN3aXRjaE9uKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTd2l0Y2hlcyB0aGUgZmxhc2hsaWdodCBvZmZcbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHN3aXRjaE9mZigpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVG9nZ2xlcyB0aGUgZmxhc2hsaWdodFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICB0b2dnbGUoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgdGhlIGZsYXNobGlnaHQgaXMgdHVybmVkIG9uLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIGlzU3dpdGNoZWRPbigpOiBib29sZWFuIHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 540 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export FlurryAnalyticsObject */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FlurryAnalytics; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var FlurryAnalyticsObject = /** @class */ (function () {
    function FlurryAnalyticsObject(_objectInstance) {
        this._objectInstance = _objectInstance;
    }
    FlurryAnalyticsObject.prototype.logEvent = function (eventName, params) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "logEvent", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    FlurryAnalyticsObject.prototype.startTimedEvent = function (eventName, params) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "startTimedEvent", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    FlurryAnalyticsObject.prototype.endTimedEvent = function (eventName, params) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "endTimedEvent", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    FlurryAnalyticsObject.prototype.logError = function (code, message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "logError", {}, arguments); };
    FlurryAnalyticsObject.prototype.logPageView = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "logPageView", {}, arguments); };
    FlurryAnalyticsObject.prototype.setLocation = function (location, message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setLocation", {}, arguments); };
    FlurryAnalyticsObject.prototype.startSession = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "startSession", {}, arguments); };
    FlurryAnalyticsObject.prototype.endSession = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "endSession", {}, arguments); };
    return FlurryAnalyticsObject;
}());

var FlurryAnalyticsOriginal = /** @class */ (function (_super) {
    __extends(FlurryAnalyticsOriginal, _super);
    function FlurryAnalyticsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new instance of FlurryAnalyticsObject
     * @param options {FlurryAnalyticsOptions} options
     * @return {FlurryAnalyticsObject}
     */
    FlurryAnalyticsOriginal.prototype.create = function (options) {
        var instance;
        if (checkAvailability(FlurryAnalyticsOriginal.pluginRef, null, FlurryAnalyticsOriginal.pluginName) === true) {
            instance = new window.FlurryAnalytics(options);
        }
        return new FlurryAnalyticsObject(instance);
    };
    FlurryAnalyticsOriginal.pluginName = "FlurryAnalytics";
    FlurryAnalyticsOriginal.plugin = "cordova-plugin-flurryanalytics";
    FlurryAnalyticsOriginal.pluginRef = "FlurryAnalytics";
    FlurryAnalyticsOriginal.repo = "https://github.com/blakgeek/cordova-plugin-flurryanalytics";
    FlurryAnalyticsOriginal.platforms = ["Android", "iOS"];
    return FlurryAnalyticsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FlurryAnalytics = new FlurryAnalyticsOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 541 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FTP; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs__);



var FTPOriginal = /** @class */ (function (_super) {
    __extends(FTPOriginal, _super);
    function FTPOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FTPOriginal.prototype.connect = function (hostname, username, password) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "connect", {}, arguments); };
    FTPOriginal.prototype.ls = function (path) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "ls", {}, arguments); };
    FTPOriginal.prototype.mkdir = function (path) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "mkdir", {}, arguments); };
    FTPOriginal.prototype.rmdir = function (path) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "rmdir", {}, arguments); };
    FTPOriginal.prototype.rm = function (file) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "rm", {}, arguments); };
    FTPOriginal.prototype.upload = function (localFile, remoteFile) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "upload", { "observable": true }, arguments); };
    FTPOriginal.prototype.download = function (localFile, remoteFile) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "download", { "observable": true }, arguments); };
    FTPOriginal.prototype.cancel = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "cancel", {}, arguments); };
    FTPOriginal.prototype.disconnect = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disconnect", {}, arguments); };
    FTPOriginal.pluginName = "FTP";
    FTPOriginal.plugin = "cordova-plugin-ftp";
    FTPOriginal.pluginRef = "cordova.plugin.ftp";
    FTPOriginal.repo = "https://github.com/xfally/cordova-plugin-ftp";
    FTPOriginal.platforms = ["Android", "iOS"];
    return FTPOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var FTP = new FTPOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9mdHAvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLE1BQU0sQ0FBQzs7SUErQlQsdUJBQWlCOzs7O0lBWXhDLHFCQUFPLGFBQUMsUUFBZ0IsRUFBRSxRQUFnQixFQUFFLFFBQWdCO0lBbUI1RCxnQkFBRSxhQUFDLElBQVk7SUFXZixtQkFBSyxhQUFDLElBQVk7SUFhbEIsbUJBQUssYUFBQyxJQUFZO0lBV2xCLGdCQUFFLGFBQUMsSUFBWTtJQWdCZixvQkFBTSxhQUFDLFNBQWlCLEVBQUUsVUFBa0I7SUFnQjVDLHNCQUFRLGFBQUMsU0FBaUIsRUFBRSxVQUFrQjtJQVU5QyxvQkFBTTtJQVVOLHdCQUFVOzs7Ozs7Y0F2Slo7RUFpQ3lCLGlCQUFpQjtTQUE3QixHQUFHIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbi8qKlxuICogQG5hbWUgRlRQXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoaXMgY29yZG92YSBwbHVnaW4gaXMgY3JlYXRlZCB0byB1c2UgZnRwIChjbGllbnQpIGluIHdlYi9qcy5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEZUUCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvZnRwJztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBmVFA6IEZUUCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICpcbiAqIHRoaXMuZlRQLmNvbm5lY3QoJ2Z0cF9ob3N0JywgJ2Z0cF91c2VyJywgJ2Z0cF9wYXNzd29yZCcpXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2coJ0xvZ2luIHN1Y2Nlc3NmdWwnLCByZXMpKVxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdGVFAnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1mdHAnLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbi5mdHAnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3hmYWxseS9jb3Jkb3ZhLXBsdWdpbi1mdHAnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBGVFAgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIENvbm5lY3QgdG8gb25lIGZ0cCBzZXJ2ZXIuXG4gICAqXG4gICAqIEp1c3QgbmVlZCB0byBpbml0IHRoZSBjb25uZWN0aW9uIG9uY2UuIElmIHN1Y2Nlc3MsIHlvdSBjYW4gZG8gYW55IGZ0cCBhY3Rpb25zIGxhdGVyLlxuICAgKiBAcGFyYW0gaG9zdG5hbWUge3N0cmluZ30gVGhlIGZ0cCBzZXJ2ZXIgdXJsLiBMaWtlIGlwIHdpdGhvdXQgcHJvdG9jb2wgcHJlZml4LCBlLmcuIFwiMTkyLjE2OC4xLjFcIi5cbiAgICogQHBhcmFtIHVzZXJuYW1lIHtzdHJpbmd9IFRoZSBmdHAgbG9naW4gdXNlcm5hbWUuIElmIGl0IGFuZCBgcGFzc3dvcmRgIGFyZSBhbGwgYmxhbmsvdW5kZWZpbmVkLCB0aGUgZGVmYXVsdCB1c2VybmFtZSBcImFub255bW91c1wiIGlzIHVzZWQuXG4gICAqIEBwYXJhbSBwYXNzd29yZCB7c3RyaW5nfSBUaGUgZnRwIGxvZ2luIHBhc3N3b3JkLiBJZiBpdCBhbmQgYHVzZXJuYW1lYCBhcmUgYWxsIGJsYW5rL3VuZGVmaW5lZCwgdGhlIGRlZmF1bHQgcGFzc3dvcmQgXCJhbm9ueW1vdXNAXCIgaXMgdXNlZC5cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBUaGUgc3VjY2VzcyBjYWxsYmFjay4gTm90aWNlOiBGb3IgaU9TLCBpZiB0cmlnZ2VyZWQsIG1lYW5zIGBpbml0YCBzdWNjZXNzLCBidXQgTk9UIG1lYW5zIHRoZSBsYXRlciBhY3Rpb24sIGUuZy4gYGxzYC4uLiBgZG93bmxvYWRgIHdpbGwgc3VjY2VzcyFcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgY29ubmVjdChob3N0bmFtZTogc3RyaW5nLCB1c2VybmFtZTogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogTGlzdCBmaWxlcyAod2l0aCBpbmZvIG9mIGBuYW1lYCwgYHR5cGVgLCBgbGlua2AsIGBzaXplYCwgYG1vZGlmaWVkRGF0ZWApIHVuZGVyIG9uZSBkaXJlY3Rvcnkgb24gdGhlIGZ0cCBzZXJ2ZXIuXG4gICAqIFlvdSBjYW4gZ2V0IG9uZSBmaWxlJ3MgbmFtZSB1c2luZyBgZmlsZUxpc3RbeF0ubmFtZWAgKGB4YCBpcyB0aGUgbG9jYXRpb24gaW4gYXJyYXkpLlxuICAgKlxuICAgKiBFeHBsYWluIGtleTpcbiAgICogLSBuYW1lOiBmaWxlIG5hbWUgKHV0Zi04KS5cbiAgICogLSB0eXBlOiBmaWxlIHR5cGUuIG51bWJlciBgMGAgbWVhbnMgcmVndWxhciBmaWxlLCBgMWAgbWVhbnMgZGlyZWN0b3J5LCBgMmAgbWVhbnMgc3ltYm9saWMgbGluaywgYC0xYCBtZWFucyB1bmtub3duIHR5cGUgKG1heWJlIGJsb2NrIGRldiwgY2hhciBkZXYuLi4pLlxuICAgKiAtIGxpbms6IGlmIHRoZSBmaWxlIGlzIGEgc3ltYm9saWMgbGluaywgdGhlbiB0aGlzIGZpZWxkIHN0b3JlIHN5bWJvbGljIGxpbmsgaW5mb3JtYXRpb24gKHV0Zi04KSwgZWxzZSBpdCdzIGEgYmxhbmsgc3RyaW5nLlxuICAgKiAtIHNpemU6IGZpbGUgc2l6ZSBpbiBieXRlcy5cbiAgICogLSBtb2RpZmllZERhdGU6IG1vZGlmaWVkIGRhdGUgb2YgdGhpcyBmaWxlLiBkYXRlIGZvcm1hdCBpcyBgeXl5eS1NTS1kZCBISDptbTpzcyB6enpgLCBlLmcgXCIyMDE1LTEyLTAxIDIwOjQ1OjAwIEdNVCs4XCIuXG4gICAqXG4gICAqIEBwYXJhbSBwYXRoIHtzdHJpbmd9IFRoZSBwYXRoIG9uIHRoZSBmdHAgc2VydmVyLiBlLmcuIFwiL2FkZi8xMjMvXCIuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgbHMocGF0aDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIG9uZSBkaXJlY3Rvcnkgb24gdGhlIGZ0cCBzZXJ2ZXIuXG4gICAqXG4gICAqIEBwYXJhbSBwYXRoIHtzdHJpbmd9IFRoZSBwYXRoIG9uIHRoZSBmdHAgc2VydmVyLiBlLmcuIFwiL2FkZi8xMjMvXCIuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgbWtkaXIocGF0aDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGVsZXRlIG9uZSBkaXJlY3Rvcnkgb24gdGhlIGZ0cCBzZXJ2ZXIuXG4gICAqXG4gICAqIFRpcDogQXMgbWFueSBmdHAgc2VydmVyIGNvdWxkIG5vdCBybSBkaXIgd2hlbiBpdCdzIG5vdCBlbXB0eSwgc28gcm0gYWxsIGZpbGVzIHVuZGVyIHRoZSBkaXIgYXQgZmlyc3QgaXMgcmVjb21tZW5kZWQuXG4gICAqXG4gICAqIEBwYXJhbSBwYXRoIHtzdHJpbmd9IFRoZSBmaWxlICh3aXRoIGZ1bGwgcGF0aCkgeW91IHdhbnQgdG8gZGVsZXRlLiBlLmcuIFwiL2FkZi8xMjMvbmV3RGlyL215RmlsZVwiLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJtZGlyKHBhdGg6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIERlbGV0ZSBvbmUgZmlsZSBvbiB0aGUgZnRwIHNlcnZlci5cbiAgICpcbiAgICogQHBhcmFtIGZpbGUge3N0cmluZ30gVGhlIGZpbGUgKHdpdGggZnVsbCBwYXRoKSB5b3Ugd2FudCB0byBkZWxldGUuIGUuZy4gXCIvYWRmLzEyMy9uZXdEaXIvbXlGaWxlXCIuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcm0oZmlsZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVXBsb2FkIG9uZSBsb2NhbCBmaWxlIHRvIHRoZSBmdHAgc2VydmVyLlxuICAgKlxuICAgKiBAcGFyYW0gbG9jYWxGaWxlIHtzdHJpbmd9IFRoZSBmaWxlICh3aXRoIGZ1bGwgcGF0aCkgeW91IHdhbnQgdG8gdXBsb2FkLiBlLmcuIFwiL2xvY2FsL3BhdGgvdG8vbG9jYWxGaWxlXCIuXG4gICAqIEBwYXJhbSByZW1vdGVGaWxlIHtzdHJpbmd9IFRoZSBmaWxlICh3aXRoIGZ1bGwgcGF0aCkgeW91IHdhbnQgdG8gbG9jYXRlZCBvbiB0aGUgZnRwIHNlcnZlci4gZS5nLiBcIi9hZGYvMTIzL25ld0Rpci9yZW1vdGVGaWxlXCIuXG4gICAqIEByZXR1cm4ge09ic2VydmFibGU8YW55Pn0gUmV0dXJucyBhbiBvYnNlcnZhYmxlLlxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgIEl0IHdpbGwgYmUgdHJpZ2dlcmVkIG1hbnkgdGltZXMgYWNjb3JkaW5nIHRoZSBmaWxlJ3Mgc2l6ZS5cbiAgICogICAgICAgICAgICAgICAgICAgICAgICBUaGUgYXJnIGAwYCwgYDAuMXh4YCwgYDAuMnh4YCAuLi4gYDFgIG1lYW5zIHRoZSB1cGxvYWQgcGVyY2VudC4gV2hlbiBpdCByZWFjaCBgMWAsIG1lYW5zIHN1Y2Nlc3MuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZVxuICB9KVxuICB1cGxvYWQobG9jYWxGaWxlOiBzdHJpbmcsIHJlbW90ZUZpbGU6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIERvd25sb2FkIG9uZSByZW1vdGUgZmlsZSBvbiB0aGUgZnRwIHNlcnZlciB0byBsb2NhbCBwYXRoLlxuICAgKlxuICAgKiBAcGFyYW0gbG9jYWxGaWxlIHtzdHJpbmd9IFRoZSBmaWxlICh3aXRoIGZ1bGwgcGF0aCkgeW91IHdhbnQgdG8gdXBsb2FkLiBlLmcuIFwiL2xvY2FsL3BhdGgvdG8vbG9jYWxGaWxlXCIuXG4gICAqIEBwYXJhbSByZW1vdGVGaWxlIHtzdHJpbmd9IFRoZSBmaWxlICh3aXRoIGZ1bGwgcGF0aCkgeW91IHdhbnQgdG8gbG9jYXRlZCBvbiB0aGUgZnRwIHNlcnZlci4gZS5nLiBcIi9hZGYvMTIzL25ld0Rpci9yZW1vdGVGaWxlXCIuXG4gICAqIEByZXR1cm4ge09ic2VydmFibGU8YW55Pn0gUmV0dXJucyBhbiBvYnNlcnZhYmxlLlxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgIEl0IHdpbGwgYmUgdHJpZ2dlcmVkIG1hbnkgdGltZXMgYWNjb3JkaW5nIHRoZSBmaWxlJ3Mgc2l6ZS5cbiAgICogICAgICAgICAgICAgICAgICAgICAgICBUaGUgYXJnIGAwYCwgYDAuMXh4YCwgYDAuMnh4YCAuLi4gYDFgIG1lYW5zIHRoZSB1cGxvYWQgcGVyY2VudC4gV2hlbiBpdCByZWFjaCBgMWAsIG1lYW5zIHN1Y2Nlc3MuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZVxuICB9KVxuICBkb3dubG9hZChsb2NhbEZpbGU6IHN0cmluZywgcmVtb3RlRmlsZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2FuY2VsIGFsbCByZXF1ZXN0cy4gQWx3YXlzIHN1Y2Nlc3MuXG4gICAqXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgY2FuY2VsKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIERpc2Nvbm5lY3QgZnJvbSBmdHAgc2VydmVyLlxuICAgKlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGRpc2Nvbm5lY3QoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 542 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Geofence; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var GeofenceOriginal = /** @class */ (function (_super) {
    __extends(GeofenceOriginal, _super);
    function GeofenceOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.TransitionType = {
            ENTER: 1,
            EXIT: 2,
            BOTH: 3
        };
        return _this;
    }
    GeofenceOriginal.prototype.onTransitionReceived = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaFunctionOverride"])(this, "onTransitionReceived", {}, arguments); };
    GeofenceOriginal.prototype.initialize = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "initialize", {}, arguments); };
    GeofenceOriginal.prototype.addOrUpdate = function (geofences) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addOrUpdate", {}, arguments); };
    GeofenceOriginal.prototype.remove = function (geofenceId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "remove", {}, arguments); };
    GeofenceOriginal.prototype.removeAll = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "removeAll", {}, arguments); };
    GeofenceOriginal.prototype.getWatched = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getWatched", {}, arguments); };
    /**
     * Called when the user clicks a geofence notification. iOS and Android only.
     *
     * @returns {Observable<any>}
     */
    GeofenceOriginal.prototype.onNotificationClicked = function () {
        return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
            window && window.geofence && (window.geofence.onNotificationClicked = observer.next.bind(observer));
            return function () { return window.geofence.onNotificationClicked = function () {
            }; };
        });
    };
    GeofenceOriginal.pluginName = "Geofence";
    GeofenceOriginal.plugin = "cordova-plugin-geofence";
    GeofenceOriginal.pluginRef = "geofence";
    GeofenceOriginal.repo = "https://github.com/cowbell/cordova-plugin-geofence";
    GeofenceOriginal.platforms = ["Android", "iOS", "Windows", "Windows Phone 8"];
    return GeofenceOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Geofence = new GeofenceOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 543 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Geolocation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var GeolocationOriginal = /** @class */ (function (_super) {
    __extends(GeolocationOriginal, _super);
    function GeolocationOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GeolocationOriginal.prototype.getCurrentPosition = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCurrentPosition", { "callbackOrder": "reverse" }, arguments); };
    /**
     * Watch the current device's position.  Clear the watch by unsubscribing from
     * Observable changes.
     *
     * ```typescript
     * const subscription = this.geolocation.watchPosition()
     *                               .filter((p) => p.coords !== undefined) //Filter Out Errors
     *                               .subscribe(position => {
     *   console.log(position.coords.longitude + ' ' + position.coords.latitude);
     * });
     *
     * // To stop notifications
     * subscription.unsubscribe();
     * ```
     *
     * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).
     * @returns {Observable<Geoposition>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.
     */
    GeolocationOriginal.prototype.watchPosition = function (options) {
        return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
            var watchId = navigator.geolocation.watchPosition(observer.next.bind(observer), observer.next.bind(observer), options);
            return function () { return navigator.geolocation.clearWatch(watchId); };
        });
    };
    GeolocationOriginal.pluginName = "Geolocation";
    GeolocationOriginal.plugin = "cordova-plugin-geolocation";
    GeolocationOriginal.pluginRef = "navigator.geolocation";
    GeolocationOriginal.repo = "https://github.com/apache/cordova-plugin-geolocation";
    GeolocationOriginal.install = "ionic cordova plugin add cordova-plugin-geolocation --variable GEOLOCATION_USAGE_DESCRIPTION=\"To locate you\"";
    GeolocationOriginal.installVariables = ["GEOLOCATION_USAGE_DESCRIPTION"];
    GeolocationOriginal.platforms = ["Amazon Fire OS", "Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "Ubuntu", "Windows", "Windows Phone"];
    return GeolocationOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Geolocation = new GeolocationOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 544 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Globalization; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var GlobalizationOriginal = /** @class */ (function (_super) {
    __extends(GlobalizationOriginal, _super);
    function GlobalizationOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GlobalizationOriginal.prototype.getPreferredLanguage = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPreferredLanguage", {}, arguments); };
    GlobalizationOriginal.prototype.getLocaleName = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getLocaleName", {}, arguments); };
    GlobalizationOriginal.prototype.dateToString = function (date, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "dateToString", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    GlobalizationOriginal.prototype.stringToDate = function (dateString, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stringToDate", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    GlobalizationOriginal.prototype.getDatePattern = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getDatePattern", { "callbackOrder": "reverse" }, arguments); };
    GlobalizationOriginal.prototype.getDateNames = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getDateNames", { "callbackOrder": "reverse" }, arguments); };
    GlobalizationOriginal.prototype.isDayLightSavingsTime = function (date) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isDayLightSavingsTime", {}, arguments); };
    GlobalizationOriginal.prototype.getFirstDayOfWeek = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getFirstDayOfWeek", {}, arguments); };
    GlobalizationOriginal.prototype.numberToString = function (numberToConvert, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "numberToString", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    GlobalizationOriginal.prototype.stringToNumber = function (stringToConvert, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stringToNumber", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    GlobalizationOriginal.prototype.getNumberPattern = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getNumberPattern", { "callbackOrder": "reverse" }, arguments); };
    GlobalizationOriginal.prototype.getCurrencyPattern = function (currencyCode) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCurrencyPattern", {}, arguments); };
    GlobalizationOriginal.pluginName = "Globalization";
    GlobalizationOriginal.plugin = "cordova-plugin-globalization";
    GlobalizationOriginal.pluginRef = "navigator.globalization";
    GlobalizationOriginal.repo = "https://github.com/apache/cordova-plugin-globalization";
    GlobalizationOriginal.platforms = ["Amazon Fire OS", "Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "Tizen", "Ubuntu", "Windows", "Windows Phone"];
    return GlobalizationOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Globalization = new GlobalizationOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 545 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GoogleAnalytics; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var GoogleAnalyticsOriginal = /** @class */ (function (_super) {
    __extends(GoogleAnalyticsOriginal, _super);
    function GoogleAnalyticsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GoogleAnalyticsOriginal.prototype.startTrackerWithId = function (id, interval) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startTrackerWithId", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    GoogleAnalyticsOriginal.prototype.setAllowIDFACollection = function (allow) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setAllowIDFACollection", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.setUserId = function (id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setUserId", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.setAnonymizeIp = function (anonymize) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setAnonymizeIp", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.setAppVersion = function (appVersion) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setAppVersion", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.setOptOut = function (optout) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setOptOut", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.debugMode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "debugMode", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.trackMetric = function (key, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "trackMetric", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    GoogleAnalyticsOriginal.prototype.trackView = function (title, campaignUrl, newSession) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "trackView", { "successIndex": 3, "errorIndex": 4 }, arguments); };
    GoogleAnalyticsOriginal.prototype.addCustomDimension = function (key, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addCustomDimension", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.trackEvent = function (category, action, label, value, newSession) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "trackEvent", { "successIndex": 5, "errorIndex": 6 }, arguments); };
    GoogleAnalyticsOriginal.prototype.trackException = function (description, fatal) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "trackException", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.trackTiming = function (category, intervalInMilliseconds, variable, label) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "trackTiming", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.addTransaction = function (id, affiliation, revenue, tax, shipping, currencyCode) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addTransaction", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.addTransactionItem = function (id, name, sku, category, price, quantity, currencyCode) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addTransactionItem", {}, arguments); };
    GoogleAnalyticsOriginal.prototype.enableUncaughtExceptionReporting = function (shouldEnable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableUncaughtExceptionReporting", {}, arguments); };
    GoogleAnalyticsOriginal.pluginName = "GoogleAnalytics";
    GoogleAnalyticsOriginal.plugin = "cordova-plugin-google-analytics";
    GoogleAnalyticsOriginal.pluginRef = "ga";
    GoogleAnalyticsOriginal.repo = "https://github.com/danwilson/google-analytics-plugin";
    GoogleAnalyticsOriginal.platforms = ["Android", "Browser", "iOS", "Windows Phone 8"];
    return GoogleAnalyticsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var GoogleAnalytics = new GoogleAnalyticsOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 546 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export LatLng */
/* unused harmony export LatLngBounds */
/* unused harmony export VisibleRegion */
/* unused harmony export GoogleMapsEvent */
/* unused harmony export GoogleMapsAnimation */
/* unused harmony export GoogleMapsMapTypeId */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GoogleMaps; });
/* unused harmony export BaseClass */
/* unused harmony export BaseArrayClass */
/* unused harmony export Circle */
/* unused harmony export Environment */
/* unused harmony export Geocoder */
/* unused harmony export Encoding */
/* unused harmony export Poly */
/* unused harmony export Spherical */
/* unused harmony export GoogleMap */
/* unused harmony export GroundOverlay */
/* unused harmony export HtmlInfoWindow */
/* unused harmony export Marker */
/* unused harmony export MarkerCluster */
/* unused harmony export Polygon */
/* unused harmony export Polyline */
/* unused harmony export TileOverlay */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_fromEvent__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_fromEvent___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_fromEvent__);




var LatLng = /** @class */ (function () {
    function LatLng(lat, lng) {
        this.lat = lat;
        this.lng = lng;
    }
    LatLng.prototype.equals = function (other) {
        return this.lat === other.lat && this.lng === other.lng;
    };
    LatLng.prototype.toString = function () {
        return this.lat + ',' + this.lng;
    };
    LatLng.prototype.toUrlValue = function (precision) {
        precision = precision || 6;
        return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);
    };
    return LatLng;
}());

var LatLngBounds = /** @class */ (function () {
    function LatLngBounds(points) {
        this._objectInstance = new (GoogleMapsOriginal.getPlugin()).LatLngBounds(points);
    }
    LatLngBounds.prototype.toString = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "toString", { "sync": true }, arguments); };
    LatLngBounds.prototype.toUrlValue = function (precision) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "toUrlValue", { "sync": true }, arguments); };
    LatLngBounds.prototype.extend = function (LatLng) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "extend", { "sync": true }, arguments); };
    LatLngBounds.prototype.contains = function (LatLng) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "contains", { "sync": true }, arguments); };
    LatLngBounds.prototype.getCenter = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getCenter", { "sync": true }, arguments); };
    Object.defineProperty(LatLngBounds.prototype, "northeast", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "northeast"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "northeast", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LatLngBounds.prototype, "southwest", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "southwest"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "southwest", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LatLngBounds.prototype, "type", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "type"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "type", value); },
        enumerable: true,
        configurable: true
    });
    return LatLngBounds;
}());

var VisibleRegion = /** @class */ (function () {
    function VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight) {
        this._objectInstance = new (GoogleMapsOriginal.getPlugin()).VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight);
    }
    VisibleRegion.prototype.toString = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "toString", { "sync": true }, arguments); };
    VisibleRegion.prototype.toUrlValue = function (precision) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "toUrlValue", { "sync": true }, arguments); };
    VisibleRegion.prototype.contains = function (LatLng) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "contains", { "sync": true }, arguments); };
    Object.defineProperty(VisibleRegion.prototype, "northeast", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "northeast"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "northeast", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisibleRegion.prototype, "southwest", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "southwest"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "southwest", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisibleRegion.prototype, "farLeft", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "farLeft"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "farLeft", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisibleRegion.prototype, "farRight", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "farRight"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "farRight", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisibleRegion.prototype, "nearLeft", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "nearLeft"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "nearLeft", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisibleRegion.prototype, "nearRight", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "nearRight"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "nearRight", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VisibleRegion.prototype, "type", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "type"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "type", value); },
        enumerable: true,
        configurable: true
    });
    return VisibleRegion;
}());

/**
 * @hidden
 * You can listen to these events where appropriate
 */
var GoogleMapsEvent = {
    MAP_READY: 'map_ready',
    MAP_LOADED: 'map_loaded',
    MAP_CLICK: 'map_click',
    MAP_LONG_CLICK: 'map_long_click',
    MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',
    INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',
    INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',
    CAMERA_MOVE_START: 'camera_move_start',
    CAMERA_MOVE: 'camera_move',
    CAMERA_MOVE_END: 'camera_move_end',
    OVERLAY_CLICK: 'overlay_click',
    POLYGON_CLICK: 'polygon_click',
    POLYLINE_CLICK: 'polyline_click',
    CIRCLE_CLICK: 'circle_click',
    GROUND_OVERLAY_CLICK: 'groundoverlay_click',
    INFO_CLICK: 'info_click',
    INFO_LONG_CLICK: 'info_long_click',
    INFO_CLOSE: 'info_close',
    INFO_OPEN: 'info_open',
    CLUSTER_CLICK: 'cluster_click',
    MARKER_CLICK: 'marker_click',
    MARKER_DRAG: 'marker_drag',
    MARKER_DRAG_START: 'marker_drag_start',
    MARKER_DRAG_END: 'marker_drag_end',
    MAP_DRAG: 'map_drag',
    MAP_DRAG_START: 'map_drag_start',
    MAP_DRAG_END: 'map_drag_end'
};
/**
 * @hidden
 */
var GoogleMapsAnimation = {
    BOUNCE: 'BOUNCE',
    DROP: 'DROP'
};
/**
 * @hidden
 */
var GoogleMapsMapTypeId = {
    NORMAL: 'MAP_TYPE_NORMAL',
    ROADMAP: 'MAP_TYPE_ROADMAP',
    SATELLITE: 'MAP_TYPE_SATELLITE',
    HYBRID: 'MAP_TYPE_HYBRID',
    TERRAIN: 'MAP_TYPE_TERRAIN',
    NONE: 'MAP_TYPE_NONE'
};
var GoogleMapsOriginal = /** @class */ (function (_super) {
    __extends(GoogleMapsOriginal, _super);
    function GoogleMapsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a new GoogleMap instance
     * @param element {string | HTMLElement} Element ID or reference to attach the map to
     * @param options {any} Options
     * @return {GoogleMap}
     */
    GoogleMapsOriginal.create = function (element, options) {
        if (element instanceof HTMLElement) {
            if (element.getAttribute('__pluginMapId')) {
                console.error('GoogleMaps', element.tagName + '[__pluginMapId=\'' + element.getAttribute('__pluginMapId') + '\'] has already map.');
                return;
            }
        }
        else if (typeof element === 'object') {
            options = element;
            element = null;
        }
        var googleMap = new GoogleMap(element, options);
        googleMap.set('_overlays', {});
        return googleMap;
    };
    /**
     * @deprecation
     * @hidden
     */
    GoogleMapsOriginal.prototype.create = function (element, options) {
        console.error('GoogleMaps', '[deprecated] Please use GoogleMapsOriginal.create()');
        return GoogleMapsOriginal.create(element, options);
    };
    GoogleMapsOriginal.pluginName = "GoogleMaps";
    GoogleMapsOriginal.pluginRef = "plugin.google.maps";
    GoogleMapsOriginal.plugin = "cordova-plugin-googlemaps";
    GoogleMapsOriginal.repo = "https://github.com/mapsplugin/cordova-plugin-googlemaps";
    GoogleMapsOriginal.install = "ionic cordova plugin add cordova-plugin-googlemaps --variable API_KEY_FOR_ANDROID=\"YOUR_ANDROID_API_KEY_IS_HERE\" --variable API_KEY_FOR_IOS=\"YOUR_IOS_API_KEY_IS_HERE\"";
    GoogleMapsOriginal.installVariables = ["API_KEY_FOR_ANDROID", "API_KEY_FOR_IOS"];
    GoogleMapsOriginal.platforms = ["Android", "iOS"];
    return GoogleMapsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var GoogleMaps = new GoogleMapsOriginal();

var BaseClass = /** @class */ (function () {
    function BaseClass() {
    }
    BaseClass.prototype.addEventListener = function (eventName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                _this._objectInstance.on(eventName, function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    if (args[args.length - 1] instanceof GoogleMapsOriginal.getPlugin().BaseClass) {
                        if (args[args.length - 1].type === 'Map') {
                            args[args.length - 1] = _this;
                        }
                        else if (_this instanceof MarkerCluster) {
                            var overlay = _this.get(args[args.length - 1].getId());
                            if (!overlay) {
                                var markerJS = args[args.length - 1];
                                var markerId_1 = markerJS.getId();
                                var markerCluster = _this;
                                overlay = new Marker(markerCluster.getMap(), markerJS);
                                _this.get('_overlays')[markerId_1] = overlay;
                                markerJS.one(markerJS.getId() + '_remove', function () {
                                    _this.get('_overlays')[markerId_1] = null;
                                });
                            }
                            args[args.length - 1] = overlay;
                        }
                        else {
                            args[args.length - 1] = _this._objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];
                        }
                    }
                    observer.next(args);
                });
            });
        }
    }(); };
    BaseClass.prototype.addListenerOnce = function (eventName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new Promise(function (resolve) {
                _this._objectInstance.one(eventName, function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    if (args[args.length - 1] instanceof GoogleMapsOriginal.getPlugin().BaseClass) {
                        if (args[args.length - 1].type === 'Map') {
                            args[args.length - 1] = _this;
                        }
                        else if (_this instanceof MarkerCluster) {
                            var overlay = _this.get(args[args.length - 1].getId());
                            if (!overlay) {
                                var markerJS = args[args.length - 1];
                                var markerId_2 = markerJS.getId();
                                var markerCluster = _this;
                                overlay = new Marker(markerCluster.getMap(), markerJS);
                                _this.get('_overlays')[markerId_2] = overlay;
                                markerJS.one(markerJS.getId() + '_remove', function () {
                                    _this.get('_overlays')[markerId_2] = null;
                                });
                            }
                            args[args.length - 1] = overlay;
                        }
                        else {
                            args[args.length - 1] = _this._objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];
                        }
                    }
                    resolve(args);
                });
            });
        }
    }(); };
    BaseClass.prototype.get = function (key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "get", { "sync": true }, arguments); };
    BaseClass.prototype.set = function (key, value, noNotify) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "set", { "sync": true }, arguments); };
    BaseClass.prototype.bindTo = function (key, target, targetKey, noNotify) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "bindTo", { "sync": true }, arguments); };
    BaseClass.prototype.on = function (eventName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                _this._objectInstance.on(eventName, function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    if (args[args.length - 1] instanceof GoogleMapsOriginal.getPlugin().BaseClass) {
                        if (args[args.length - 1].type === 'Map') {
                            args[args.length - 1] = _this;
                        }
                        else if (_this instanceof MarkerCluster) {
                            var overlay = _this.get(args[args.length - 1].getId());
                            if (!overlay) {
                                var markerJS = args[args.length - 1];
                                var markerId_3 = markerJS.getId();
                                var markerCluster = _this;
                                overlay = new Marker(markerCluster.getMap(), markerJS);
                                _this.get('_overlays')[markerId_3] = overlay;
                                markerJS.one(markerJS.getId() + '_remove', function () {
                                    _this.get('_overlays')[markerId_3] = null;
                                });
                            }
                            args[args.length - 1] = overlay;
                        }
                        else {
                            args[args.length - 1] = _this._objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];
                        }
                    }
                    observer.next(args);
                });
            });
        }
    }(); };
    BaseClass.prototype.one = function (eventName) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new Promise(function (resolve) {
                _this._objectInstance.one(eventName, function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    if (args[args.length - 1] instanceof GoogleMapsOriginal.getPlugin().BaseClass) {
                        if (args[args.length - 1].type === 'Map') {
                            args[args.length - 1] = _this;
                        }
                        else if (_this instanceof MarkerCluster) {
                            var overlay = _this.get(args[args.length - 1].getId());
                            if (!overlay) {
                                var markerJS = args[args.length - 1];
                                var markerId_4 = markerJS.getId();
                                var markerCluster = _this;
                                overlay = new Marker(markerCluster.getMap(), markerJS);
                                _this.get('_overlays')[markerId_4] = overlay;
                                markerJS.one(markerJS.getId() + '_remove', function () {
                                    _this.get('_overlays')[markerId_4] = null;
                                });
                            }
                            args[args.length - 1] = overlay;
                        }
                        else {
                            args[args.length - 1] = _this._objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];
                        }
                    }
                    resolve(args);
                });
            });
        }
    }(); };
    BaseClass.prototype.empty = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "empty", { "sync": true }, arguments); };
    BaseClass.prototype.trigger = function (eventName) {
        var parameters = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            parameters[_i - 1] = arguments[_i];
        }
        return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "trigger", { "sync": true }, arguments);
    };
    BaseClass.prototype.destroy = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            var map = this._objectInstance.getMap();
            if (map) {
                delete this._objectInstance.getMap().get('_overlays')[this._objectInstance.getId()];
            }
            this._objectInstance.remove();
        }
    }(); };
    BaseClass.plugin = "cordova-plugin-googlemaps";
    BaseClass.pluginName = "GoogleMaps";
    BaseClass.pluginRef = "plugin.google.maps.BaseClass";
    BaseClass.repo = "";
    return BaseClass;
}());

var BaseArrayClass = /** @class */ (function (_super) {
    __extends(BaseArrayClass, _super);
    function BaseArrayClass(initialData) {
        var _this = _super.call(this) || this;
        if (initialData instanceof GoogleMapsOriginal.getPlugin().BaseArrayClass) {
            _this._objectInstance = initialData;
        }
        else {
            _this._objectInstance = new (GoogleMapsOriginal.getPlugin().BaseArrayClass)(initialData);
        }
        return _this;
    }
    BaseArrayClass.prototype.empty = function (noNotify) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "empty", { "sync": true }, arguments); };
    BaseArrayClass.prototype.forEach = function (fn) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "forEach", { "sync": true }, arguments); };
    BaseArrayClass.prototype.forEachAsync = function (fn) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (resolve) {
                _this._objectInstance.forEach(fn, resolve);
            });
        }
    }(); };
    BaseArrayClass.prototype.map = function (fn) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "map", { "sync": true }, arguments); };
    BaseArrayClass.prototype.mapAsync = function (fn) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (resolve) {
                _this._objectInstance.map(fn, resolve);
            });
        }
    }(); };
    BaseArrayClass.prototype.filter = function (fn) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "filter", { "sync": true }, arguments); };
    BaseArrayClass.prototype.filterAsync = function (fn) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (resolve) {
                _this._objectInstance.filter(fn, resolve);
            });
        }
    }(); };
    BaseArrayClass.prototype.getArray = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getArray", { "sync": true }, arguments); };
    BaseArrayClass.prototype.getAt = function (index) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getAt", { "sync": true }, arguments); };
    BaseArrayClass.prototype.getLength = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getLength", { "sync": true }, arguments); };
    BaseArrayClass.prototype.indexOf = function (element) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "indexOf", { "sync": true }, arguments); };
    BaseArrayClass.prototype.reverse = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "reverse", { "sync": true }, arguments); };
    BaseArrayClass.prototype.sort = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "sort", { "sync": true }, arguments); };
    BaseArrayClass.prototype.insertAt = function (index, element, noNotify) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "insertAt", { "sync": true }, arguments); };
    BaseArrayClass.prototype.pop = function (noNotify) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "pop", { "sync": true }, arguments); };
    BaseArrayClass.prototype.push = function (element, noNotify) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "push", { "sync": true }, arguments); };
    BaseArrayClass.prototype.removeAt = function (index, noNotify) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "removeAt", { "sync": true }, arguments); };
    BaseArrayClass.prototype.setAt = function (index, element, noNotify) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setAt", { "sync": true }, arguments); };
    BaseArrayClass.plugin = "cordova-plugin-googlemaps";
    BaseArrayClass.pluginName = "GoogleMaps";
    BaseArrayClass.pluginRef = "plugin.google.maps.BaseArrayClass";
    BaseArrayClass.repo = "";
    return BaseArrayClass;
}(BaseClass));

var Circle = /** @class */ (function (_super) {
    __extends(Circle, _super);
    function Circle(_map, _objectInstance) {
        var _this = _super.call(this) || this;
        _this._map = _map;
        _this._objectInstance = _objectInstance;
        return _this;
    }
    Circle.prototype.getId = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getId", { "sync": true }, arguments); };
    /**
     * Return the map instance.
     * @return {GoogleMap}
     */
    Circle.prototype.getMap = function () {
        return this._map;
    };
    Circle.prototype.setCenter = function (latLng) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setCenter", { "sync": true }, arguments); };
    Circle.prototype.getCenter = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getCenter", { "sync": true }, arguments); };
    Circle.prototype.getRadius = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getRadius", { "sync": true }, arguments); };
    Circle.prototype.setRadius = function (radius) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setRadius", { "sync": true }, arguments); };
    Circle.prototype.setFillColor = function (color) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setFillColor", { "sync": true }, arguments); };
    Circle.prototype.getFillColor = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getFillColor", { "sync": true }, arguments); };
    Circle.prototype.setStrokeWidth = function (strokeWidth) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setStrokeWidth", { "sync": true }, arguments); };
    Circle.prototype.getStrokeWidth = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getStrokeWidth", { "sync": true }, arguments); };
    Circle.prototype.setStrokeColor = function (strokeColor) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setStrokeColor", { "sync": true }, arguments); };
    Circle.prototype.getStrokeColor = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getStrokeColor", { "sync": true }, arguments); };
    Circle.prototype.setClickable = function (clickable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setClickable", { "sync": true }, arguments); };
    Circle.prototype.getClickable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getClickable", { "sync": true }, arguments); };
    Circle.prototype.setZIndex = function (zIndex) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setZIndex", { "sync": true }, arguments); };
    Circle.prototype.getZIndex = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getZIndex", { "sync": true }, arguments); };
    Circle.prototype.remove = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "remove", { "sync": true }, arguments); };
    Circle.prototype.getBounds = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getBounds", { "sync": true }, arguments); };
    Circle.prototype.setVisible = function (visible) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setVisible", { "sync": true }, arguments); };
    Circle.prototype.getVisible = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getVisible", { "sync": true }, arguments); };
    return Circle;
}(BaseClass));

var Environment = /** @class */ (function () {
    function Environment() {
    }
    /**
     * Get the open source software license information for Google Maps SDK for iOS.
     * @return {Promise<any>}
     */
    Environment.getLicenseInfo = function () {
        return new Promise(function (resolve) {
            GoogleMapsOriginal.getPlugin().environment.getLicenseInfo(function (text) { return resolve(text); });
        });
    };
    /**
     * Specifies the background color of the app.
     * @param color
     */
    Environment.setBackgroundColor = function (color) {
        GoogleMapsOriginal.getPlugin().environment.setBackgroundColor(color);
    };
    /**
     * @deprecation
     * @hidden
     */
    Environment.prototype.getLicenseInfo = function () {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.getLicenseInfo()');
        return Environment.getLicenseInfo();
    };
    /**
     * @deprecation
     * @hidden
     */
    Environment.prototype.setBackgroundColor = function (color) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.setBackgroundColor()');
        Environment.setBackgroundColor(color);
    };
    Environment.plugin = "cordova-plugin-googlemaps";
    Environment.pluginName = "GoogleMaps";
    Environment.pluginRef = "plugin.google.maps.environment";
    Environment.repo = "";
    return Environment;
}());

var Geocoder = /** @class */ (function () {
    function Geocoder() {
    }
    /**
     * Converts position to address and vice versa
     * @param {GeocoderRequest} request Request object with either an address or a position
     * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}
     */
    Geocoder.geocode = function (request) {
        if (request.address instanceof Array || Array.isArray(request.address) ||
            request.position instanceof Array || Array.isArray(request.position)) {
            // -------------------------
            // Geocoder.geocode({
            //   address: [
            //    "Kyoto, Japan",
            //    "Tokyo, Japan"
            //   ]
            // })
            // -------------------------
            return new Promise(function (resolve, reject) {
                GoogleMapsOriginal.getPlugin().Geocoder.geocode(request, function (mvcArray) {
                    if (mvcArray) {
                        resolve(new BaseArrayClass(mvcArray));
                    }
                    else {
                        reject();
                    }
                });
            });
        }
        else {
            // -------------------------
            // Geocoder.geocode({
            //   address: "Kyoto, Japan"
            // })
            // -------------------------
            return new Promise(function (resolve, reject) {
                GoogleMapsOriginal.getPlugin().Geocoder.geocode(request, function (results) {
                    if (results) {
                        resolve(results);
                    }
                    else {
                        reject();
                    }
                });
            });
        }
    };
    /**
     * @deprecation
     * @hidden
     */
    Geocoder.prototype.geocode = function (request) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Geocoder.geocode()');
        return Geocoder.geocode(request);
    };
    Geocoder.pluginName = "GoogleMaps";
    Geocoder.pluginRef = "plugin.google.maps.Geocoder";
    Geocoder.plugin = "cordova-plugin-googlemaps";
    Geocoder.repo = "";
    return Geocoder;
}());

var Encoding = /** @class */ (function () {
    function Encoding() {
    }
    /**
     * Decodes an encoded path string into a sequence of LatLngs.
     * @param encoded {string} an encoded path string
     * @param precision? {number} default: 5
     * @return {LatLng}
     */
    Encoding.decodePath = function (encoded, precision) {
        return;
    };
    /**
     * Encodes a sequence of LatLngs into an encoded path string.
     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>} a sequence of LatLngs
     * @return {string}
     */
    Encoding.encodePath = function (path) {
        return;
    };
    /**
     * @deprecation
     * @hidden
     */
    Encoding.prototype.decodePath = function (encoded, precision) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.decodePath()');
        return Encoding.decodePath(encoded, precision);
    };
    /**
     * @deprecation
     * @hidden
     */
    Encoding.prototype.encodePath = function (path) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.encodePath()');
        return Encoding.encodePath(path);
    };
    Encoding.pluginName = "GoogleMaps";
    Encoding.pluginRef = "plugin.google.maps.geometry.encoding";
    Encoding.plugin = "cordova-plugin-googlemaps";
    Encoding.repo = "";
    return Encoding;
}());

var Poly = /** @class */ (function () {
    function Poly() {
    }
    /**
     * Returns true if the speicified location is in the polygon path
     * @param location {ILatLng}
     * @param path {ILatLng[]}
     * @return {boolean}
     */
    Poly.containsLocation = function (location, path) {
        return GoogleMapsOriginal.getPlugin().geometry.poly.containsLocation(location, path);
    };
    /**
     * Returns true if the speicified location is on the polyline path
     * @param location {ILatLng}
     * @param path {ILatLng[]}
     * @return {boolean}
     */
    Poly.isLocationOnEdge = function (location, path) {
        return GoogleMapsOriginal.getPlugin().geometry.poly.isLocationOnEdge(location, path);
    };
    Poly.pluginName = "GoogleMaps";
    Poly.pluginRef = "plugin.google.maps.geometry.poly";
    Poly.plugin = "cordova-plugin-googlemaps";
    Poly.repo = "";
    return Poly;
}());

var Spherical = /** @class */ (function () {
    function Spherical() {
    }
    /**
     * Returns the distance, in meters, between two LatLngs.
     * @param locationA {ILatLng}
     * @param locationB {ILatLng}
     * @return {number}
     */
    Spherical.computeDistanceBetween = function (from, to) {
        return GoogleMapsOriginal.getPlugin().geometry.spherical.computeDistanceBetween(from, to);
    };
    /**
     * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)
     * @param from {ILatLng}
     * @param distance {number}
     * @param heading {number}
     * @return {LatLng}
     */
    Spherical.computeOffset = function (from, distance, heading) {
        return GoogleMapsOriginal.getPlugin().geometry.spherical.computeOffset(from, distance, heading);
    };
    /**
     * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.
     * @param to {ILatLng} The destination LatLng.
     * @param distance {number} The distance travelled, in meters.
     * @param heading {number} The heading in degrees clockwise from north.
     * @return {LatLng}
     */
    Spherical.computeOffsetOrigin = function (to, distance, heading) {
        return GoogleMapsOriginal.getPlugin().geometry.spherical.computeOffsetOrigin(to, distance, heading);
    };
    /**
     * Returns the length of the given path.
     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}
     * @return {number}
     */
    Spherical.computeLength = function (path) {
        return GoogleMapsOriginal.getPlugin().geometry.spherical.computeLength(path);
    };
    /**
     * Returns the area of a closed path. The computed area uses the same units as the radius.
     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}.
     * @return {number}
     */
    Spherical.computeArea = function (path) {
        return GoogleMapsOriginal.getPlugin().geometry.spherical.computeArea(path);
    };
    /**
     * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.
     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}.
     * @return {number}
     */
    Spherical.computeSignedArea = function (path) {
        return GoogleMapsOriginal.getPlugin().geometry.spherical.computeSignedArea(path);
    };
    /**
     * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).
     * @param from {ILatLng}
     * @param to {ILatLng}
     * @return {number}
     */
    Spherical.computeHeading = function (from, to) {
        return GoogleMapsOriginal.getPlugin().geometry.spherical.computeHeading(from, to);
    };
    /**
     * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.
     * @param from {ILatLng}     The LatLng from which to start.
     * @param to {ILatLng}       The LatLng toward which to travel.
     * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .
     * @return {LatLng}
     */
    Spherical.interpolate = function (from, to, fraction) {
        return GoogleMapsOriginal.getPlugin().geometry.spherical.interpolate(from, to, fraction);
    };
    /**
     * @deprecation
     * @hidden
     */
    Spherical.prototype.computeDistanceBetween = function (from, to) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeDistanceBetween()');
        return Spherical.computeDistanceBetween(from, to);
    };
    /**
     * @deprecation
     * @hidden
     */
    Spherical.prototype.computeOffset = function (from, distance, heading) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffset()');
        return Spherical.computeOffset(from, distance, heading);
    };
    /**
     * @deprecation
     * @hidden
     */
    Spherical.prototype.computeOffsetOrigin = function (to, distance, heading) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffsetOrigin()');
        return Spherical.computeOffsetOrigin(to, distance, heading);
    };
    /**
     * @deprecation
     * @hidden
     */
    Spherical.prototype.computeLength = function (path) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeLength()');
        return Spherical.computeLength(path);
    };
    /**
     * @deprecation
     * @hidden
     */
    Spherical.prototype.computeArea = function (path) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeArea()');
        return Spherical.computeArea(path);
    };
    /**
     * @deprecation
     * @hidden
     */
    Spherical.prototype.computeSignedArea = function (path) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeSignedArea()');
        return Spherical.computeSignedArea(path);
    };
    /**
     * @deprecation
     * @hidden
     */
    Spherical.prototype.computeHeading = function (from, to) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeHeading()');
        return Spherical.computeHeading(from, to);
    };
    /**
     * @deprecation
     * @hidden
     */
    Spherical.prototype.interpolate = function (from, to, fraction) {
        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.interpolate()');
        return Spherical.interpolate(from, to, fraction);
    };
    Spherical.pluginName = "GoogleMaps";
    Spherical.pluginRef = "plugin.google.maps.geometry.spherical";
    Spherical.plugin = "cordova-plugin-googlemaps";
    Spherical.repo = "";
    return Spherical;
}());

var GoogleMap = /** @class */ (function (_super) {
    __extends(GoogleMap, _super);
    function GoogleMap(element, options) {
        var _this = _super.call(this) || this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(GoogleMapsOriginal.getPluginRef(), null, GoogleMapsOriginal.getPluginName()) === true) {
            if (element instanceof HTMLElement) {
                _this._objectInstance = GoogleMapsOriginal.getPlugin().Map.getMap(element, options);
            }
            else if (typeof element === 'string') {
                var dummyObj_1 = new (GoogleMapsOriginal.getPlugin().BaseClass)();
                _this._objectInstance = dummyObj_1;
                var onListeners_1 = [];
                var oneListeners_1 = [];
                var _origAddEventListener_1 = _this._objectInstance.addEventListener;
                var _origAddEventListenerOnce_1 = _this._objectInstance.addEventListenerOnce;
                _this._objectInstance.addEventListener = function (eventName, fn) {
                    if (eventName === GoogleMapsEvent.MAP_READY) {
                        _origAddEventListener_1.call(dummyObj_1, eventName, fn);
                    }
                    else {
                        onListeners_1.push([dummyObj_1, fn]);
                    }
                };
                _this._objectInstance.on = _this._objectInstance.addEventListener;
                _this._objectInstance.addEventListenerOnce = function (eventName, fn) {
                    if (eventName === GoogleMapsEvent.MAP_READY) {
                        _origAddEventListenerOnce_1.call(dummyObj_1, eventName, fn);
                    }
                    else {
                        oneListeners_1.push([dummyObj_1, fn]);
                    }
                };
                _this._objectInstance.one = _this._objectInstance.addEventListenerOnce;
                (new Promise(function (resolve, reject) {
                    var count = 0;
                    var timer = setInterval(function () {
                        var target = document.querySelector('.show-page #' + element);
                        if (target) {
                            clearInterval(timer);
                            resolve(target);
                        }
                        else {
                            if (count++ < 20) {
                                return;
                            }
                            clearInterval(timer);
                            _this._objectInstance.remove();
                            console.error('Can not find the element [#' + element + ']');
                            reject();
                        }
                    }, 100);
                }))
                    .then(function (target) {
                    _this._objectInstance = GoogleMapsOriginal.getPlugin().Map.getMap(target, options);
                    _this._objectInstance.one(GoogleMapsEvent.MAP_READY, function () {
                        _this.set('_overlays', {});
                        onListeners_1.forEach(function (args) {
                            _this.on.apply(_this, args);
                        });
                        oneListeners_1.forEach(function (args) {
                            _this.one.apply(_this, args);
                        });
                        dummyObj_1.trigger(GoogleMapsEvent.MAP_READY);
                    });
                })
                    .catch(function () {
                    _this._objectInstance = null;
                });
            }
            else if (element === null && options) {
                _this._objectInstance = GoogleMapsOriginal.getPlugin().Map.getMap(null, options);
            }
        }
        return _this;
    }
    GoogleMap.prototype.setDiv = function (domNode) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            if (typeof domNode === 'string') {
                this._objectInstance.setDiv(document.querySelector('.show-page #' + domNode));
            }
            else {
                this._objectInstance.setDiv(domNode);
            }
        }
    }(); };
    GoogleMap.prototype.getDiv = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getDiv", { "sync": true }, arguments); };
    GoogleMap.prototype.setMapTypeId = function (mapTypeId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setMapTypeId", { "sync": true }, arguments); };
    GoogleMap.prototype.animateCamera = function (cameraPosition) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "animateCamera", {}, arguments); };
    GoogleMap.prototype.animateCameraZoomIn = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "animateCameraZoomIn", {}, arguments); };
    GoogleMap.prototype.animateCameraZoomOut = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "animateCameraZoomOut", {}, arguments); };
    GoogleMap.prototype.moveCamera = function (cameraPosition) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "moveCamera", {}, arguments); };
    GoogleMap.prototype.moveCameraZoomIn = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "moveCameraZoomIn", {}, arguments); };
    GoogleMap.prototype.moveCameraZoomOut = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "moveCameraZoomOut", {}, arguments); };
    GoogleMap.prototype.getCameraPosition = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getCameraPosition", { "sync": true }, arguments); };
    GoogleMap.prototype.getCameraTarget = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getCameraTarget", { "sync": true }, arguments); };
    GoogleMap.prototype.getCameraZoom = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getCameraZoom", { "sync": true }, arguments); };
    GoogleMap.prototype.getCameraBearing = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getCameraBearing", { "sync": true }, arguments); };
    GoogleMap.prototype.getCameraTilt = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getCameraTilt", { "sync": true }, arguments); };
    GoogleMap.prototype.setCameraTarget = function (latLng) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setCameraTarget", { "sync": true }, arguments); };
    GoogleMap.prototype.setCameraZoom = function (zoomLevel) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setCameraZoom", { "sync": true }, arguments); };
    GoogleMap.prototype.setCameraTilt = function (tiltLevel) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setCameraTilt", { "sync": true }, arguments); };
    GoogleMap.prototype.setCameraBearing = function (bearing) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setCameraBearing", { "sync": true }, arguments); };
    GoogleMap.prototype.panBy = function (x, y) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "panBy", { "sync": true }, arguments); };
    GoogleMap.prototype.getVisibleRegion = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getVisibleRegion", { "sync": true }, arguments); };
    GoogleMap.prototype.getMyLocation = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getMyLocation", {}, arguments); };
    GoogleMap.prototype.setClickable = function (isClickable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setClickable", { "sync": true }, arguments); };
    GoogleMap.prototype.remove = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "remove", {}, arguments); };
    GoogleMap.prototype.clear = function () { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            if (this.get('_overlays')) {
                Object.keys(this.get('_overlays')).forEach(function (overlayId) {
                    _this.get('_overlays')[overlayId] = null;
                    delete _this.get('_overlays')[overlayId];
                });
            }
            return new Promise(function (resolve) {
                _this._objectInstance.clear(function () { return resolve(); });
            });
        }
    }(); };
    GoogleMap.prototype.fromLatLngToPoint = function (latLng) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "fromLatLngToPoint", {}, arguments); };
    GoogleMap.prototype.fromPointToLatLng = function (point) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "fromPointToLatLng", {}, arguments); };
    GoogleMap.prototype.setMyLocationEnabled = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setMyLocationEnabled", { "sync": true }, arguments); };
    GoogleMap.prototype.getFocusedBuilding = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getFocusedBuilding", {}, arguments); };
    GoogleMap.prototype.setIndoorEnabled = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setIndoorEnabled", { "sync": true }, arguments); };
    GoogleMap.prototype.setTrafficEnabled = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setTrafficEnabled", { "sync": true }, arguments); };
    GoogleMap.prototype.setCompassEnabled = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setCompassEnabled", { "sync": true }, arguments); };
    GoogleMap.prototype.setAllGesturesEnabled = function (enabled) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setAllGesturesEnabled", { "sync": true }, arguments); };
    GoogleMap.prototype.setVisible = function (visible) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setVisible", { "sync": true }, arguments); };
    GoogleMap.prototype.setPadding = function (top, right, bottom, left) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setPadding", { "sync": true }, arguments); };
    GoogleMap.prototype.setOptions = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setOptions", { "sync": true }, arguments); };
    GoogleMap.prototype.addMarker = function (options) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                _this._objectInstance.addMarker(options, function (marker) {
                    if (marker) {
                        var overlayId_1 = marker.getId();
                        var overlay_1 = new Marker(_this, marker);
                        _this.get('_overlays')[overlayId_1] = overlay_1;
                        marker.one(overlayId_1 + '_remove', function () {
                            if (_this.get('_overlays')) {
                                _this.get('_overlays')[overlayId_1] = null;
                                overlay_1.destroy();
                            }
                        });
                        resolve(overlay_1);
                    }
                    else {
                        reject();
                    }
                });
            });
        }
    }(); };
    GoogleMap.prototype.addMarkerCluster = function (options) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                _this._objectInstance.addMarkerCluster(options, function (markerCluster) {
                    if (markerCluster) {
                        var overlayId_2 = markerCluster.getId();
                        var overlay_2 = new MarkerCluster(_this, markerCluster);
                        _this.get('_overlays')[overlayId_2] = overlay_2;
                        markerCluster.one('remove', function () {
                            if (_this.get('_overlays')) {
                                _this.get('_overlays')[overlayId_2] = null;
                                overlay_2.destroy();
                            }
                        });
                        markerCluster.set('_overlays', new BaseArrayClass());
                        resolve(overlay_2);
                    }
                    else {
                        reject();
                    }
                });
            });
        }
    }(); };
    GoogleMap.prototype.addCircle = function (options) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                _this._objectInstance.addCircle(options, function (circle) {
                    if (circle) {
                        var overlayId_3 = circle.getId();
                        var overlay_3 = new Circle(_this, circle);
                        _this.get('_overlays')[overlayId_3] = overlay_3;
                        circle.one(overlayId_3 + '_remove', function () {
                            if (_this.get('_overlays')) {
                                _this.get('_overlays')[overlayId_3] = null;
                                overlay_3.destroy();
                            }
                        });
                        resolve(overlay_3);
                    }
                    else {
                        reject();
                    }
                });
            });
        }
    }(); };
    GoogleMap.prototype.addPolygon = function (options) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                _this._objectInstance.addPolygon(options, function (polygon) {
                    if (polygon) {
                        var overlayId_4 = polygon.getId();
                        var overlay_4 = new Polygon(_this, polygon);
                        _this.get('_overlays')[overlayId_4] = overlay_4;
                        polygon.one(overlayId_4 + '_remove', function () {
                            if (_this.get('_overlays')) {
                                _this.get('_overlays')[overlayId_4] = null;
                                overlay_4.destroy();
                            }
                        });
                        resolve(overlay_4);
                    }
                    else {
                        reject();
                    }
                });
            });
        }
    }(); };
    GoogleMap.prototype.addPolyline = function (options) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                _this._objectInstance.addPolyline(options, function (polyline) {
                    if (polyline) {
                        var overlayId_5 = polyline.getId();
                        var overlay_5 = new Polyline(_this, polyline);
                        _this.get('_overlays')[overlayId_5] = overlay_5;
                        polyline.one(overlayId_5 + '_remove', function () {
                            if (_this.get('_overlays')) {
                                _this.get('_overlays')[overlayId_5] = null;
                                overlay_5.destroy();
                            }
                        });
                        resolve(overlay_5);
                    }
                    else {
                        reject();
                    }
                });
            });
        }
    }(); };
    GoogleMap.prototype.addTileOverlay = function (options) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                _this._objectInstance.addTileOverlay(options, function (tileOverlay) {
                    if (tileOverlay) {
                        var overlayId_6 = tileOverlay.getId();
                        var overlay_6 = new TileOverlay(_this, tileOverlay);
                        _this.get('_overlays')[overlayId_6] = overlay_6;
                        tileOverlay.one(overlayId_6 + '_remove', function () {
                            if (_this.get('_overlays')) {
                                _this.get('_overlays')[overlayId_6] = null;
                                overlay_6.destroy();
                            }
                        });
                        resolve(overlay_6);
                    }
                    else {
                        reject();
                    }
                });
            });
        }
    }(); };
    GoogleMap.prototype.addGroundOverlay = function (options) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                _this._objectInstance.addGroundOverlay(options, function (groundOverlay) {
                    if (groundOverlay) {
                        var overlayId_7 = groundOverlay.getId();
                        var overlay_7 = new GroundOverlay(_this, groundOverlay);
                        _this.get('_overlays')[overlayId_7] = overlay_7;
                        groundOverlay.one(overlayId_7 + '_remove', function () {
                            if (_this.get('_overlays')) {
                                _this.get('_overlays')[overlayId_7] = null;
                                overlay_7.destroy();
                            }
                        });
                        resolve(overlay_7);
                    }
                    else {
                        reject();
                    }
                });
            });
        }
    }(); };
    GoogleMap.prototype.refreshLayout = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "refreshLayout", { "sync": true }, arguments); };
    GoogleMap.prototype.toDataURL = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "toDataURL", {}, arguments); };
    GoogleMap.pluginName = "GoogleMaps";
    GoogleMap.plugin = "cordova-plugin-googlemaps";
    return GoogleMap;
}(BaseClass));

var GroundOverlay = /** @class */ (function (_super) {
    __extends(GroundOverlay, _super);
    function GroundOverlay(_map, _objectInstance) {
        var _this = _super.call(this) || this;
        _this._map = _map;
        _this._objectInstance = _objectInstance;
        return _this;
    }
    GroundOverlay.prototype.getId = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getId", { "sync": true }, arguments); };
    /**
     * Return the map instance.
     * @return {GoogleMap}
     */
    GroundOverlay.prototype.getMap = function () {
        return this._map;
    };
    GroundOverlay.prototype.setBounds = function (bounds) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setBounds", { "sync": true }, arguments); };
    GroundOverlay.prototype.setBearing = function (bearing) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setBearing", { "sync": true }, arguments); };
    GroundOverlay.prototype.getBearing = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getBearing", { "sync": true }, arguments); };
    GroundOverlay.prototype.setImage = function (image) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setImage", { "sync": true }, arguments); };
    GroundOverlay.prototype.setOpacity = function (opacity) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setOpacity", { "sync": true }, arguments); };
    GroundOverlay.prototype.getOpacity = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getOpacity", { "sync": true }, arguments); };
    GroundOverlay.prototype.setClickable = function (clickable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setClickable", { "sync": true }, arguments); };
    GroundOverlay.prototype.getClickable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getClickable", { "sync": true }, arguments); };
    GroundOverlay.prototype.setVisible = function (visible) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setVisible", { "sync": true }, arguments); };
    GroundOverlay.prototype.getVisible = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getVisible", { "sync": true }, arguments); };
    GroundOverlay.prototype.setZIndex = function (index) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setZIndex", { "sync": true }, arguments); };
    GroundOverlay.prototype.getZIndex = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getZIndex", { "sync": true }, arguments); };
    GroundOverlay.prototype.remove = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            delete this._objectInstance.getMap().get('_overlays')[this.getId()];
            this._objectInstance.remove();
            this.destroy();
        }
    }(); };
    return GroundOverlay;
}(BaseClass));

var HtmlInfoWindow = /** @class */ (function (_super) {
    __extends(HtmlInfoWindow, _super);
    function HtmlInfoWindow() {
        var _this = _super.call(this) || this;
        _this._objectInstance = new (GoogleMapsOriginal.getPlugin().HtmlInfoWindow)();
        return _this;
    }
    HtmlInfoWindow.prototype.setBackgroundColor = function (color) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setBackgroundColor", {}, arguments); };
    HtmlInfoWindow.prototype.setContent = function (content, cssOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setContent", {}, arguments); };
    HtmlInfoWindow.prototype.open = function (marker) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "open", {}, arguments); };
    HtmlInfoWindow.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "close", {}, arguments); };
    HtmlInfoWindow.plugin = "cordova-plugin-googlemaps";
    HtmlInfoWindow.pluginName = "GoogleMaps";
    HtmlInfoWindow.pluginRef = "plugin.google.maps.HtmlInfoWindow";
    HtmlInfoWindow.repo = "";
    return HtmlInfoWindow;
}(BaseClass));

var Marker = /** @class */ (function (_super) {
    __extends(Marker, _super);
    function Marker(_map, _objectInstance) {
        var _this = _super.call(this) || this;
        _this._map = _map;
        _this._objectInstance = _objectInstance;
        return _this;
    }
    Marker.prototype.getId = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getId", { "sync": true }, arguments); };
    /**
     * Return the map instance.
     * @return {GoogleMap}
     */
    Marker.prototype.getMap = function () {
        return this._map;
    };
    Marker.prototype.setPosition = function (latLng) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setPosition", { "sync": true }, arguments); };
    Marker.prototype.getPosition = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getPosition", { "sync": true }, arguments); };
    Marker.prototype.showInfoWindow = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "showInfoWindow", { "sync": true }, arguments); };
    Marker.prototype.hideInfoWindow = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "hideInfoWindow", { "sync": true }, arguments); };
    Marker.prototype.setAnimation = function (animation) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setAnimation", { "sync": true }, arguments); };
    Marker.prototype.setDisableAutoPan = function (disableAutoPan) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setDisableAutoPan", { "sync": true }, arguments); };
    Marker.prototype.setVisible = function (visible) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setVisible", { "sync": true }, arguments); };
    Marker.prototype.isVisible = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "isVisible", { "sync": true }, arguments); };
    Marker.prototype.setTitle = function (title) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setTitle", { "sync": true }, arguments); };
    Marker.prototype.getTitle = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getTitle", { "sync": true }, arguments); };
    Marker.prototype.setSnippet = function (snippet) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setSnippet", { "sync": true }, arguments); };
    Marker.prototype.getSnippet = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getSnippet", { "sync": true }, arguments); };
    Marker.prototype.setOpacity = function (alpha) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setOpacity", { "sync": true }, arguments); };
    Marker.prototype.getOpacity = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getOpacity", { "sync": true }, arguments); };
    Marker.prototype.remove = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            delete this._objectInstance.getMap().get('_overlays')[this.getId()];
            this._objectInstance.remove();
            this.destroy();
        }
    }(); };
    Marker.prototype.setIconAnchor = function (x, y) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setIconAnchor", { "sync": true }, arguments); };
    Marker.prototype.setInfoWindowAnchor = function (x, y) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setInfoWindowAnchor", { "sync": true }, arguments); };
    Marker.prototype.isInfoWindowShown = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "isInfoWindowShown", { "sync": true }, arguments); };
    Marker.prototype.getHashCode = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getHashCode", { "sync": true }, arguments); };
    Marker.prototype.setZIndex = function (zIndex) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setZIndex", { "sync": true }, arguments); };
    Marker.prototype.getZIndex = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getZIndex", { "sync": true }, arguments); };
    Marker.prototype.setDraggable = function (draggable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setDraggable", { "sync": true }, arguments); };
    Marker.prototype.isDraggable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "isDraggable", { "sync": true }, arguments); };
    Marker.prototype.setFlat = function (flat) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setFlat", { "sync": true }, arguments); };
    Marker.prototype.setIcon = function (icon) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setIcon", { "sync": true }, arguments); };
    Marker.prototype.setRotation = function (rotation) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setRotation", { "sync": true }, arguments); };
    Marker.prototype.getRotation = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getRotation", { "sync": true }, arguments); };
    return Marker;
}(BaseClass));

var MarkerCluster = /** @class */ (function (_super) {
    __extends(MarkerCluster, _super);
    function MarkerCluster(_map, _objectInstance) {
        var _this = _super.call(this) || this;
        _this._map = _map;
        _this._objectInstance = _objectInstance;
        return _this;
    }
    MarkerCluster.prototype.getId = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getId", { "sync": true }, arguments); };
    MarkerCluster.prototype.addMarker = function (marker) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "addMarker", { "sync": true }, arguments); };
    MarkerCluster.prototype.addMarkers = function (markers) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "addMarkers", { "sync": true }, arguments); };
    MarkerCluster.prototype.remove = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            this._objectInstance.set('_overlays', undefined);
            delete this._objectInstance.getMap().get('_overlays')[this.getId()];
            this._objectInstance.remove();
            this.destroy();
        }
    }(); };
    /**
     * Return the map instance.
     * @return {GoogleMap}
     */
    MarkerCluster.prototype.getMap = function () {
        return this._map;
    };
    return MarkerCluster;
}(BaseClass));

var Polygon = /** @class */ (function (_super) {
    __extends(Polygon, _super);
    function Polygon(_map, _objectInstance) {
        var _this = _super.call(this) || this;
        _this._map = _map;
        _this._objectInstance = _objectInstance;
        return _this;
    }
    Polygon.prototype.getId = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getId", { "sync": true }, arguments); };
    /**
     * Return the map instance.
     * @return {GoogleMap}
     */
    Polygon.prototype.getMap = function () {
        return this._map;
    };
    Polygon.prototype.setPoints = function (points) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setPoints", { "sync": true }, arguments); };
    Polygon.prototype.getPoints = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new BaseArrayClass(this._objectInstance.getPoints());
        }
    }(); };
    Polygon.prototype.setHoles = function (holes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setHoles", { "sync": true }, arguments); };
    Polygon.prototype.getHoles = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            var holes = this._objectInstance.getPoints();
            var results = new BaseArrayClass();
            holes.forEach(function (hole) {
                results.push(hole);
            });
            return results;
        }
    }(); };
    Polygon.prototype.setFillColor = function (fillColor) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setFillColor", { "sync": true }, arguments); };
    Polygon.prototype.getFillColor = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getFillColor", { "sync": true }, arguments); };
    Polygon.prototype.setStrokeColor = function (strokeColor) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setStrokeColor", { "sync": true }, arguments); };
    Polygon.prototype.getStrokeColor = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getStrokeColor", { "sync": true }, arguments); };
    Polygon.prototype.setClickable = function (clickable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setClickable", { "sync": true }, arguments); };
    Polygon.prototype.getClickable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getClickable", { "sync": true }, arguments); };
    Polygon.prototype.setVisible = function (visible) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setVisible", { "sync": true }, arguments); };
    Polygon.prototype.getVisible = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getVisible", { "sync": true }, arguments); };
    Polygon.prototype.setZIndex = function (zIndex) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setZIndex", { "sync": true }, arguments); };
    Polygon.prototype.getZIndex = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getZIndex", { "sync": true }, arguments); };
    Polygon.prototype.remove = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            delete this._objectInstance.getMap().get('_overlays')[this.getId()];
            this._objectInstance.remove();
            this.destroy();
        }
    }(); };
    Polygon.prototype.setStrokeWidth = function (strokeWidth) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setStrokeWidth", { "sync": true }, arguments); };
    Polygon.prototype.getStrokeWidth = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getStrokeWidth", { "sync": true }, arguments); };
    Polygon.prototype.setGeodesic = function (geodesic) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setGeodesic", { "sync": true }, arguments); };
    Polygon.prototype.getGeodesic = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getGeodesic", { "sync": true }, arguments); };
    return Polygon;
}(BaseClass));

var Polyline = /** @class */ (function (_super) {
    __extends(Polyline, _super);
    function Polyline(_map, _objectInstance) {
        var _this = _super.call(this) || this;
        _this._map = _map;
        _this._objectInstance = _objectInstance;
        return _this;
    }
    Polyline.prototype.getId = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getId", { "sync": true }, arguments); };
    /**
     * Return the map instance.
     * @return {GoogleMap}
     */
    Polyline.prototype.getMap = function () {
        return this._map;
    };
    Polyline.prototype.setPoints = function (points) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setPoints", { "sync": true }, arguments); };
    Polyline.prototype.getPoints = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new BaseArrayClass(this._objectInstance.getPoints());
        }
    }(); };
    Polyline.prototype.setGeoDesic = function (geoDesic) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setGeoDesic", { "sync": true }, arguments); };
    Polyline.prototype.getGeodesic = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getGeodesic", { "sync": true }, arguments); };
    Polyline.prototype.setVisible = function (visible) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setVisible", { "sync": true }, arguments); };
    Polyline.prototype.getVisible = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getVisible", { "sync": true }, arguments); };
    Polyline.prototype.setClickable = function (clickable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setClickable", { "sync": true }, arguments); };
    Polyline.prototype.getClickable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getClickable", { "sync": true }, arguments); };
    Polyline.prototype.setStrokeColor = function (strokeColor) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setStrokeColor", { "sync": true }, arguments); };
    Polyline.prototype.getStrokeColor = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getStrokeColor", { "sync": true }, arguments); };
    Polyline.prototype.setStrokeWidth = function (strokeWidth) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setStrokeWidth", { "sync": true }, arguments); };
    Polyline.prototype.getStrokeWidth = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getStrokeWidth", { "sync": true }, arguments); };
    Polyline.prototype.setZIndex = function (index) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setZIndex", { "sync": true }, arguments); };
    Polyline.prototype.getZIndex = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getZIndex", { "sync": true }, arguments); };
    Polyline.prototype.remove = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            delete this._objectInstance.getMap().get('_overlays')[this.getId()];
            this._objectInstance.remove();
            this.destroy();
        }
    }(); };
    return Polyline;
}(BaseClass));

var TileOverlay = /** @class */ (function (_super) {
    __extends(TileOverlay, _super);
    function TileOverlay(_map, _objectInstance) {
        var _this = _super.call(this) || this;
        _this._map = _map;
        _this._objectInstance = _objectInstance;
        return _this;
    }
    TileOverlay.prototype.getId = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getId", { "sync": true }, arguments); };
    /**
     * Return the map instance.
     * @return {GoogleMap}
     */
    TileOverlay.prototype.getMap = function () {
        return this._map;
    };
    TileOverlay.prototype.setFadeIn = function (fadeIn) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setFadeIn", { "sync": true }, arguments); };
    TileOverlay.prototype.getFadeIn = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getFadeIn", { "sync": true }, arguments); };
    TileOverlay.prototype.setZIndex = function (zIndex) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setZIndex", { "sync": true }, arguments); };
    TileOverlay.prototype.getZIndex = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getZIndex", { "sync": true }, arguments); };
    TileOverlay.prototype.setOpacity = function (opacity) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setOpacity", { "sync": true }, arguments); };
    TileOverlay.prototype.getOpacity = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getOpacity", { "sync": true }, arguments); };
    TileOverlay.prototype.setVisible = function (visible) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setVisible", { "sync": true }, arguments); };
    TileOverlay.prototype.getVisible = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getVisible", { "sync": true }, arguments); };
    TileOverlay.prototype.getTileSize = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getTileSize", { "sync": true }, arguments); };
    TileOverlay.prototype.remove = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            delete this._objectInstance.getMap().get('_overlays')[this.getId()];
            this._objectInstance.remove();
            this.destroy();
        }
    }(); };
    return TileOverlay;
}(BaseClass));

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 547 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GooglePlayGamesServices; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var GooglePlayGamesServicesOriginal = /** @class */ (function (_super) {
    __extends(GooglePlayGamesServicesOriginal, _super);
    function GooglePlayGamesServicesOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GooglePlayGamesServicesOriginal.prototype.auth = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "auth", {}, arguments); };
    GooglePlayGamesServicesOriginal.prototype.signOut = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "signOut", {}, arguments); };
    GooglePlayGamesServicesOriginal.prototype.isSignedIn = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isSignedIn", {}, arguments); };
    GooglePlayGamesServicesOriginal.prototype.showPlayer = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showPlayer", {}, arguments); };
    GooglePlayGamesServicesOriginal.prototype.submitScore = function (data) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "submitScore", {}, arguments); };
    GooglePlayGamesServicesOriginal.prototype.showAllLeaderboards = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showAllLeaderboards", {}, arguments); };
    GooglePlayGamesServicesOriginal.prototype.showLeaderboard = function (data) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showLeaderboard", {}, arguments); };
    GooglePlayGamesServicesOriginal.prototype.unlockAchievement = function (data) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unlockAchievement", {}, arguments); };
    GooglePlayGamesServicesOriginal.prototype.incrementAchievement = function (data) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "incrementAchievement", {}, arguments); };
    GooglePlayGamesServicesOriginal.prototype.showAchievements = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showAchievements", {}, arguments); };
    GooglePlayGamesServicesOriginal.pluginName = "GooglePlayGamesServices";
    GooglePlayGamesServicesOriginal.plugin = "cordova-plugin-play-games-service";
    GooglePlayGamesServicesOriginal.pluginRef = "plugins.playGamesServices";
    GooglePlayGamesServicesOriginal.repo = "https://github.com/artberri/cordova-plugin-play-games-services";
    GooglePlayGamesServicesOriginal.platforms = ["Android"];
    GooglePlayGamesServicesOriginal.install = "ionic cordova plugin add cordova-plugin-play-games-service --variable APP_ID=\"YOUR_APP_ID";
    return GooglePlayGamesServicesOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var GooglePlayGamesServices = new GooglePlayGamesServicesOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 548 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GooglePlus; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var GooglePlusOriginal = /** @class */ (function (_super) {
    __extends(GooglePlusOriginal, _super);
    function GooglePlusOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GooglePlusOriginal.prototype.login = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "login", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    GooglePlusOriginal.prototype.trySilentLogin = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "trySilentLogin", {}, arguments); };
    GooglePlusOriginal.prototype.logout = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logout", {}, arguments); };
    GooglePlusOriginal.prototype.disconnect = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disconnect", {}, arguments); };
    GooglePlusOriginal.prototype.getSigningCertificateFingerprint = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getSigningCertificateFingerprint", {}, arguments); };
    GooglePlusOriginal.pluginName = "GooglePlus";
    GooglePlusOriginal.plugin = "cordova-plugin-googleplus";
    GooglePlusOriginal.pluginRef = "window.plugins.googleplus";
    GooglePlusOriginal.repo = "https://github.com/EddyVerbruggen/cordova-plugin-googleplus";
    GooglePlusOriginal.install = "ionic cordova plugin add cordova-plugin-googleplus --variable REVERSED_CLIENT_ID=myreversedclientid";
    GooglePlusOriginal.installVariables = ["REVERSED_CLIENT_ID"];
    GooglePlusOriginal.platforms = ["Android", "iOS"];
    return GooglePlusOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var GooglePlus = new GooglePlusOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9nb29nbGUtcGx1cy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUE2QnhDLDhCQUFpQjs7OztJQVcvQywwQkFBSyxhQUFDLE9BQWE7SUFVbkIsbUNBQWMsYUFBQyxPQUFhO0lBUzVCLDJCQUFNO0lBU04sK0JBQVU7SUFTVixxREFBZ0M7Ozs7Ozs7O3FCQTlFbEM7RUE4QmdDLGlCQUFpQjtTQUFwQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgR29vZ2xlIFBsdXNcbiAqIEBkZXNjcmlwdGlvblxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBHb29nbGVQbHVzIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9nb29nbGUtcGx1cyc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBnb29nbGVQbHVzOiBHb29nbGVQbHVzKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmdvb2dsZVBsdXMubG9naW4oe30pXG4gKiAgIC50aGVuKHJlcyA9PiBjb25zb2xlLmxvZyhyZXMpKVxuICogICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnR29vZ2xlUGx1cycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWdvb2dsZXBsdXMnLFxuICBwbHVnaW5SZWY6ICd3aW5kb3cucGx1Z2lucy5nb29nbGVwbHVzJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9FZGR5VmVyYnJ1Z2dlbi9jb3Jkb3ZhLXBsdWdpbi1nb29nbGVwbHVzJyxcbiAgaW5zdGFsbDogJ2lvbmljIGNvcmRvdmEgcGx1Z2luIGFkZCBjb3Jkb3ZhLXBsdWdpbi1nb29nbGVwbHVzIC0tdmFyaWFibGUgUkVWRVJTRURfQ0xJRU5UX0lEPW15cmV2ZXJzZWRjbGllbnRpZCcsXG4gIGluc3RhbGxWYXJpYWJsZXM6IFsnUkVWRVJTRURfQ0xJRU5UX0lEJ10sXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEdvb2dsZVBsdXMgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFRoZSBsb2dpbiBmdW5jdGlvbiB3YWxrcyB0aGUgdXNlciB0aHJvdWdoIHRoZSBHb29nbGUgQXV0aCBwcm9jZXNzLlxuICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN1Y2Nlc3NJbmRleDogMSxcbiAgICBlcnJvckluZGV4OiAyXG4gIH0pXG4gIGxvZ2luKG9wdGlvbnM/OiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBZb3UgY2FuIGNhbGwgdHJ5U2lsZW50TG9naW4gdG8gY2hlY2sgaWYgdGhleSdyZSBhbHJlYWR5IHNpZ25lZCBpbiB0byB0aGUgYXBwIGFuZCBzaWduIHRoZW0gaW4gc2lsZW50bHkgaWYgdGhleSBhcmUuXG4gICAqIEBwYXJhbSBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHRyeVNpbGVudExvZ2luKG9wdGlvbnM/OiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGlzIHdpbGwgY2xlYXIgdGhlIE9BdXRoMiB0b2tlbi5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgbG9nb3V0KCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoaXMgd2lsbCBjbGVhciB0aGUgT0F1dGgyIHRva2VuLCBmb3JnZXQgd2hpY2ggYWNjb3VudCB3YXMgdXNlZCB0byBsb2dpbiwgYW5kIGRpc2Nvbm5lY3QgdGhhdCBhY2NvdW50IGZyb20gdGhlIGFwcC4gVGhpcyB3aWxsIHJlcXVpcmUgdGhlIHVzZXIgdG8gYWxsb3cgdGhlIGFwcCBhY2Nlc3MgYWdhaW4gbmV4dCB0aW1lIHRoZXkgc2lnbiBpbi4gQmUgYXdhcmUgdGhhdCB0aGlzIGVmZmVjdCBpcyBub3QgYWx3YXlzIGluc3RhbnRhbmVvdXMuIEl0IGNhbiB0YWtlIHRpbWUgdG8gY29tcGxldGVseSBkaXNjb25uZWN0LlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBkaXNjb25uZWN0KCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoaXMgd2lsbCByZXRyaWV2ZSB0aGUgQW5kcm9pZCBzaWduaW5nIGNlcnRpZmljYXRlIGZpbmdlcnByaW50IHdoaWNoIGlzIHJlcXVpcmVkIGluIHRoZSBHb29nbGUgRGV2ZWxvcGVyIENvbnNvbGUuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldFNpZ25pbmdDZXJ0aWZpY2F0ZUZpbmdlcnByaW50KCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 549 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Gyroscope; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var GyroscopeOriginal = /** @class */ (function (_super) {
    __extends(GyroscopeOriginal, _super);
    function GyroscopeOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Watching for gyroscope sensor changes
     * @param {GyroscopeOptions} [options]
     * @return {Observable<GyroscopeOrientation>} Returns an Observable that resolves GyroscopeOrientation
     */
    GyroscopeOriginal.prototype.watch = function (options) {
        return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
            var watchId = navigator.gyroscope.watch(observer.next.bind(observer), observer.next.bind(observer), options);
            return function () { return navigator.gyroscope.clearWatch(watchId); };
        });
    };
    GyroscopeOriginal.prototype.getCurrent = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCurrent", { "callbackOrder": "reverse" }, arguments); };
    GyroscopeOriginal.pluginName = "Gyroscope";
    GyroscopeOriginal.plugin = "cordova-plugin-gyroscope";
    GyroscopeOriginal.pluginRef = "navigator.gyroscope";
    GyroscopeOriginal.repo = "https://github.com/NeoLSN/cordova-plugin-gyroscope";
    GyroscopeOriginal.platforms = ["Android", "iOS"];
    return GyroscopeOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Gyroscope = new GyroscopeOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9neXJvc2NvcGUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQWtGZCw2QkFBaUI7Ozs7SUFFOUM7Ozs7T0FJRztJQUNILHlCQUFLLEdBQUwsVUFBTSxPQUEwQjtRQUM5QixNQUFNLENBQUMsSUFBSSxVQUFVLENBQ25CLFVBQUMsUUFBYTtZQUNaLElBQUksT0FBTyxHQUFHLFNBQVMsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQzdHLE1BQU0sQ0FBQyxjQUFNLE9BQUEsU0FBUyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQXZDLENBQXVDLENBQUM7UUFDdkQsQ0FBQyxDQUNGLENBQUM7SUFDSixDQUFDO0lBVUQsOEJBQVUsYUFBQyxPQUEwQjs7Ozs7O29CQTNHdkM7RUFtRitCLGlCQUFpQjtTQUFuQyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZGVjbGFyZSBjb25zdCBuYXZpZ2F0b3I6IGFueTtcblxuLyoqXG4gKiAgQGhpZGRlblxuICovXG5leHBvcnQgaW50ZXJmYWNlIEd5cm9zY29wZU9yaWVudGF0aW9uIHtcbiAgLyoqXG4gICAqICBSZXByZXNlbnQgeC1heGlzXG4gICAqL1xuICB4OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqICBSZXByZXNlbnQgeS1heGlzXG4gICAqL1xuICB5OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqICBSZXByZXNlbnQgei1heGlzXG4gICAqL1xuICB6OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqICBSZXByZXNlbnQgdGltZXN0YW1wIG9mIHNlbnNvciByZWFkLiBEZWZhdWx0IGlzIDEwMDAwbXNcbiAgICovXG4gIHRpbWVzdGFtcDogbnVtYmVyO1xufVxuXG4vKipcbiAqICBAaGlkZGVuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgR3lyb3Njb3BlT3B0aW9ucyB7XG4gIC8qKlxuICAgKiAgUmVwcmVzZW50IGhvdyBvZnRlbiAoaW4gbWlsbGlzZWNvbmRzKSBzZW5zb3Igc2hvdWxkIGJlIHJlYWQuICBEZWZhdWx0IGlzIDEwMDAwIG1zXG4gICAqL1xuICBmcmVxdWVuY3k6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBAbmFtZSBHeXJvc2NvcGVcbiAqIEBkZXNjcmlwdGlvbiBSZWFkIEd5cm9zY29wZSBzZW5zb3IgZGF0YVxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBHeXJvc2NvcGUsIEd5cm9zY29wZU9yaWVudGF0aW9uLCBHeXJvc2NvcGVPcHRpb25zIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9neXJvc2NvcGUnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGd5cm9zY29wZTogR3lyb3Njb3BlKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogbGV0IG9wdGlvbnM6IEd5cm9zY29wZU9wdGlvbnMgPSB7XG4gKiAgICBmcmVxdWVuY3k6IDEwMDBcbiAqIH1cbiAqXG4gKiB0aGlzLmd5cm9zY29wZS5nZXRDdXJyZW50KG9wdGlvbnMpXG4gKiAgIC50aGVuKChvcmllbnRhdGlvbjogR3lyb3Njb3BlT3JpZW50YXRpb24pID0+IHtcbiAqICAgICAgY29uc29sZS5sb2cob3JpZW50YXRpb24ueCwgb3JpZW50YXRpb24ueSwgb3JpZW50YXRpb24ueiwgb3JpZW50YXRpb24udGltZXN0YW1wKTtcbiAqICAgIH0pXG4gKiAgIC5jYXRjaCgpXG4gKlxuICpcbiAqIHRoaXMuZ3lyb3Njb3BlLndhdGNoKClcbiAqICAgIC5zdWJzY3JpYmUoKG9yaWVudGF0aW9uOiBHeXJvc2NvcGVPcmllbnRhdGlvbikgPT4ge1xuICogICAgICAgY29uc29sZS5sb2cob3JpZW50YXRpb24ueCwgb3JpZW50YXRpb24ueSwgb3JpZW50YXRpb24ueiwgb3JpZW50YXRpb24udGltZXN0YW1wKTtcbiAqICAgIH0pO1xuICpcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIEd5cm9zY29wZU9yaWVudGF0aW9uXG4gKiBHeXJvc2NvcGVPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnR3lyb3Njb3BlJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZ3lyb3Njb3BlJyxcbiAgcGx1Z2luUmVmOiAnbmF2aWdhdG9yLmd5cm9zY29wZScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vTmVvTFNOL2NvcmRvdmEtcGx1Z2luLWd5cm9zY29wZScsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEd5cm9zY29wZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogV2F0Y2hpbmcgZm9yIGd5cm9zY29wZSBzZW5zb3IgY2hhbmdlc1xuICAgKiBAcGFyYW0ge0d5cm9zY29wZU9wdGlvbnN9IFtvcHRpb25zXVxuICAgKiBAcmV0dXJuIHtPYnNlcnZhYmxlPEd5cm9zY29wZU9yaWVudGF0aW9uPn0gUmV0dXJucyBhbiBPYnNlcnZhYmxlIHRoYXQgcmVzb2x2ZXMgR3lyb3Njb3BlT3JpZW50YXRpb25cbiAgICovXG4gIHdhdGNoKG9wdGlvbnM/OiBHeXJvc2NvcGVPcHRpb25zKTogT2JzZXJ2YWJsZTxHeXJvc2NvcGVPcmllbnRhdGlvbj4ge1xuICAgIHJldHVybiBuZXcgT2JzZXJ2YWJsZTxHeXJvc2NvcGVPcmllbnRhdGlvbj4oXG4gICAgICAob2JzZXJ2ZXI6IGFueSkgPT4ge1xuICAgICAgICBsZXQgd2F0Y2hJZCA9IG5hdmlnYXRvci5neXJvc2NvcGUud2F0Y2gob2JzZXJ2ZXIubmV4dC5iaW5kKG9ic2VydmVyKSwgb2JzZXJ2ZXIubmV4dC5iaW5kKG9ic2VydmVyKSwgb3B0aW9ucyk7XG4gICAgICAgIHJldHVybiAoKSA9PiBuYXZpZ2F0b3IuZ3lyb3Njb3BlLmNsZWFyV2F0Y2god2F0Y2hJZCk7XG4gICAgICB9XG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgY3VycmVudCBkYXRhIGZyb20gZ3lyb3Njb3BlIHNlbnNvclxuICAgKiBAcGFyYW0ge0d5cm9zY29wZU9wdGlvbnN9IFtvcHRpb25zXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPEd5cm9zY29wZU9yaWVudGF0aW9uPn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyBHeXJvc2NvcGVPcmllbnRhdGlvblxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBnZXRDdXJyZW50KG9wdGlvbnM/OiBHeXJvc2NvcGVPcHRpb25zKTogUHJvbWlzZTxHeXJvc2NvcGVPcmllbnRhdGlvbj4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 550 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HeaderColor; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var HeaderColorOriginal = /** @class */ (function (_super) {
    __extends(HeaderColorOriginal, _super);
    function HeaderColorOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HeaderColorOriginal.prototype.tint = function (color) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "tint", { "callbackStyle": "object", "successName": "success", "errorName": "failure" }, arguments); };
    HeaderColorOriginal.pluginName = "HeaderColor";
    HeaderColorOriginal.plugin = "cordova-plugin-headercolor";
    HeaderColorOriginal.pluginRef = "plugins.headerColor";
    HeaderColorOriginal.repo = "https://github.com/tomloprod/cordova-plugin-headercolor";
    HeaderColorOriginal.platforms = ["Android"];
    return HeaderColorOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var HeaderColor = new HeaderColorOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9oZWFkZXItY29sb3IvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBMEJ2QywrQkFBaUI7Ozs7SUFZaEQsMEJBQUksYUFBQyxLQUFhOzs7Ozs7c0JBdkNwQjtFQTJCaUMsaUJBQWlCO1NBQXJDLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBIZWFkZXIgQ29sb3JcbiAqIEBkZXNjcmlwdGlvblxuICogQ29yZG92YSBwbHVnaW4gdG8gY2hhbmdlIGNvbG9yIG9mIGhlYWRlciBpbiBBbmRyb2lkIE11bHRpdGFzayBWaWV3XG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBIZWFkZXJDb2xvciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvaGVhZGVyLWNvbG9yJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGhlYWRlckNvbG9yOiBIZWFkZXJDb2xvcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5oZWFkZXJDb2xvci50aW50KCcjYmVjYjI5Jyk7XG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdIZWFkZXJDb2xvcicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWhlYWRlcmNvbG9yJyxcbiAgcGx1Z2luUmVmOiAncGx1Z2lucy5oZWFkZXJDb2xvcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vdG9tbG9wcm9kL2NvcmRvdmEtcGx1Z2luLWhlYWRlcmNvbG9yJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBIZWFkZXJDb2xvciBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogU2V0IGEgY29sb3IgdG8gdGhlIHRhc2sgaGVhZGVyXG4gICAqIEBwYXJhbSBjb2xvciB7c3RyaW5nfSBUaGUgaGV4IHZhbHVlIG9mIHRoZSBjb2xvclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrU3R5bGU6ICdvYmplY3QnLFxuICAgIHN1Y2Nlc3NOYW1lOiAnc3VjY2VzcycsXG4gICAgZXJyb3JOYW1lOiAnZmFpbHVyZSdcbiAgfSlcbiAgdGludChjb2xvcjogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 551 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Health; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var HealthOriginal = /** @class */ (function (_super) {
    __extends(HealthOriginal, _super);
    function HealthOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HealthOriginal.prototype.isAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAvailable", { "callbackOrder": "reverse" }, arguments); };
    HealthOriginal.prototype.promptInstallFit = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "promptInstallFit", { "callbackOrder": "reverse" }, arguments); };
    HealthOriginal.prototype.requestAuthorization = function (datatypes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestAuthorization", {}, arguments); };
    HealthOriginal.prototype.isAuthorized = function (datatypes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAuthorized", {}, arguments); };
    HealthOriginal.prototype.query = function (queryOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "query", {}, arguments); };
    HealthOriginal.prototype.queryAggregated = function (queryOptionsAggregated) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "queryAggregated", {}, arguments); };
    HealthOriginal.prototype.store = function (storeOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "store", {}, arguments); };
    HealthOriginal.pluginName = "Health";
    HealthOriginal.plugin = "cordova-plugin-health";
    HealthOriginal.pluginRef = "navigator.health";
    HealthOriginal.repo = "https://github.com/dariosalvi78/cordova-plugin-health";
    HealthOriginal.platforms = ["Android", "iOS"];
    return HealthOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Health = new HealthOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 552 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HealthKit; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var HealthKitOriginal = /** @class */ (function (_super) {
    __extends(HealthKitOriginal, _super);
    function HealthKitOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HealthKitOriginal.prototype.available = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "available", {}, arguments); };
    HealthKitOriginal.prototype.checkAuthStatus = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "checkAuthStatus", {}, arguments); };
    HealthKitOriginal.prototype.requestAuthorization = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestAuthorization", {}, arguments); };
    HealthKitOriginal.prototype.readDateOfBirth = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "readDateOfBirth", {}, arguments); };
    HealthKitOriginal.prototype.readGender = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "readGender", {}, arguments); };
    HealthKitOriginal.prototype.readBloodType = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "readBloodType", {}, arguments); };
    HealthKitOriginal.prototype.readFitzpatrickSkinType = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "readFitzpatrickSkinType", {}, arguments); };
    HealthKitOriginal.prototype.saveWeight = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "saveWeight", {}, arguments); };
    HealthKitOriginal.prototype.readWeight = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "readWeight", {}, arguments); };
    HealthKitOriginal.prototype.saveHeight = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "saveHeight", {}, arguments); };
    HealthKitOriginal.prototype.readHeight = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "readHeight", {}, arguments); };
    HealthKitOriginal.prototype.findWorkouts = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "findWorkouts", {}, arguments); };
    HealthKitOriginal.prototype.saveWorkout = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "saveWorkout", {}, arguments); };
    HealthKitOriginal.prototype.querySampleType = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "querySampleType", {}, arguments); };
    HealthKitOriginal.prototype.querySampleTypeAggregated = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "querySampleTypeAggregated", {}, arguments); };
    HealthKitOriginal.prototype.deleteSamples = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteSamples", {}, arguments); };
    HealthKitOriginal.prototype.monitorSampleType = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "monitorSampleType", {}, arguments); };
    HealthKitOriginal.prototype.sumQuantityType = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "sumQuantityType", {}, arguments); };
    HealthKitOriginal.prototype.saveQuantitySample = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "saveQuantitySample", {}, arguments); };
    HealthKitOriginal.prototype.saveCorrelation = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "saveCorrelation", {}, arguments); };
    HealthKitOriginal.prototype.queryCorrelationType = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "queryCorrelationType", {}, arguments); };
    HealthKitOriginal.pluginName = "HealthKit";
    HealthKitOriginal.plugin = "com.telerik.plugins.healthkit";
    HealthKitOriginal.pluginRef = "window.plugins.healthkit";
    HealthKitOriginal.repo = "https://github.com/Telerik-Verified-Plugins/HealthKit";
    HealthKitOriginal.platforms = ["iOS"];
    return HealthKitOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var HealthKit = new HealthKitOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 553 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Hotspot; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var HotspotOriginal = /** @class */ (function (_super) {
    __extends(HotspotOriginal, _super);
    function HotspotOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HotspotOriginal.prototype.isAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAvailable", {}, arguments); };
    HotspotOriginal.prototype.toggleWifi = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "toggleWifi", {}, arguments); };
    HotspotOriginal.prototype.createHotspot = function (ssid, mode, password) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createHotspot", {}, arguments); };
    HotspotOriginal.prototype.startHotspot = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startHotspot", {}, arguments); };
    HotspotOriginal.prototype.configureHotspot = function (ssid, mode, password) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "configureHotspot", {}, arguments); };
    HotspotOriginal.prototype.stopHotspot = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopHotspot", {}, arguments); };
    HotspotOriginal.prototype.isHotspotEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isHotspotEnabled", {}, arguments); };
    HotspotOriginal.prototype.getAllHotspotDevices = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAllHotspotDevices", {}, arguments); };
    HotspotOriginal.prototype.connectToWifi = function (ssid, password) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "connectToWifi", {}, arguments); };
    HotspotOriginal.prototype.connectToWifiAuthEncrypt = function (ssid, password, authentication, encryption) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "connectToWifiAuthEncrypt", {}, arguments); };
    HotspotOriginal.prototype.addWifiNetwork = function (ssid, mode, password) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addWifiNetwork", {}, arguments); };
    HotspotOriginal.prototype.removeWifiNetwork = function (ssid) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "removeWifiNetwork", {}, arguments); };
    HotspotOriginal.prototype.isConnectedToInternet = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isConnectedToInternet", {}, arguments); };
    HotspotOriginal.prototype.isConnectedToInternetViaWifi = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isConnectedToInternetViaWifi", {}, arguments); };
    HotspotOriginal.prototype.isWifiOn = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isWifiOn", {}, arguments); };
    HotspotOriginal.prototype.isWifiSupported = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isWifiSupported", {}, arguments); };
    HotspotOriginal.prototype.isWifiDirectSupported = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isWifiDirectSupported", {}, arguments); };
    HotspotOriginal.prototype.scanWifi = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "scanWifi", {}, arguments); };
    HotspotOriginal.prototype.scanWifiByLevel = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "scanWifiByLevel", {}, arguments); };
    HotspotOriginal.prototype.startWifiPeriodicallyScan = function (interval, duration) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startWifiPeriodicallyScan", {}, arguments); };
    HotspotOriginal.prototype.stopWifiPeriodicallyScan = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopWifiPeriodicallyScan", {}, arguments); };
    HotspotOriginal.prototype.getNetConfig = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getNetConfig", {}, arguments); };
    HotspotOriginal.prototype.getConnectionInfo = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getConnectionInfo", {}, arguments); };
    HotspotOriginal.prototype.pingHost = function (ip) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "pingHost", {}, arguments); };
    HotspotOriginal.prototype.getMacAddressOfHost = function (ip) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMacAddressOfHost", {}, arguments); };
    HotspotOriginal.prototype.isDnsLive = function (ip) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isDnsLive", {}, arguments); };
    HotspotOriginal.prototype.isPortLive = function (ip) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isPortLive", {}, arguments); };
    HotspotOriginal.prototype.isRooted = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isRooted", {}, arguments); };
    HotspotOriginal.pluginName = "Hotspot";
    HotspotOriginal.plugin = "cordova-plugin-hotspot";
    HotspotOriginal.pluginRef = "cordova.plugins.hotspot";
    HotspotOriginal.repo = "https://github.com/hypery2k/cordova-hotspot-plugin";
    HotspotOriginal.platforms = ["Android"];
    return HotspotOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Hotspot = new HotspotOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 554 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HTTP; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var HTTPOriginal = /** @class */ (function (_super) {
    __extends(HTTPOriginal, _super);
    function HTTPOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HTTPOriginal.prototype.getBasicAuthHeader = function (username, password) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getBasicAuthHeader", { "sync": true }, arguments); };
    HTTPOriginal.prototype.useBasicAuth = function (username, password) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "useBasicAuth", { "sync": true }, arguments); };
    HTTPOriginal.prototype.setHeader = function (header, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setHeader", { "sync": true }, arguments); };
    HTTPOriginal.prototype.setDataSerializer = function (serializer) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setDataSerializer", { "sync": true }, arguments); };
    HTTPOriginal.prototype.clearCookies = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "clearCookies", { "sync": true }, arguments); };
    HTTPOriginal.prototype.removeCookies = function (url, cb) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "removeCookies", { "sync": true }, arguments); };
    HTTPOriginal.prototype.disableRedirect = function (disable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableRedirect", { "sync": true }, arguments); };
    HTTPOriginal.prototype.setRequestTimeout = function (timeout) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setRequestTimeout", { "sync": true }, arguments); };
    HTTPOriginal.prototype.enableSSLPinning = function (enable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableSSLPinning", {}, arguments); };
    HTTPOriginal.prototype.acceptAllCerts = function (accept) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "acceptAllCerts", {}, arguments); };
    HTTPOriginal.prototype.post = function (url, body, headers) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "post", {}, arguments); };
    HTTPOriginal.prototype.get = function (url, parameters, headers) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "get", {}, arguments); };
    HTTPOriginal.prototype.put = function (url, body, headers) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "put", {}, arguments); };
    HTTPOriginal.prototype.patch = function (url, body, headers) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "patch", {}, arguments); };
    HTTPOriginal.prototype.delete = function (url, parameters, headers) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "delete", {}, arguments); };
    HTTPOriginal.prototype.head = function (url, parameters, headers) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "head", {}, arguments); };
    HTTPOriginal.prototype.uploadFile = function (url, body, headers, filePath, name) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "uploadFile", {}, arguments); };
    HTTPOriginal.prototype.downloadFile = function (url, body, headers, filePath) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "downloadFile", {}, arguments); };
    HTTPOriginal.pluginName = "HTTP";
    HTTPOriginal.plugin = "cordova-plugin-advanced-http";
    HTTPOriginal.pluginRef = "cordova.plugin.http";
    HTTPOriginal.repo = "https://github.com/silkimen/cordova-plugin-advanced-http";
    HTTPOriginal.platforms = ["Android", "iOS"];
    return HTTPOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var HTTP = new HTTPOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 555 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Httpd; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var HttpdOriginal = /** @class */ (function (_super) {
    __extends(HttpdOriginal, _super);
    function HttpdOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HttpdOriginal.prototype.startServer = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startServer", { "observable": true, "clearFunction": "stopServer" }, arguments); };
    HttpdOriginal.prototype.getUrl = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getUrl", {}, arguments); };
    HttpdOriginal.prototype.getLocalPath = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getLocalPath", {}, arguments); };
    HttpdOriginal.pluginName = "Httpd";
    HttpdOriginal.plugin = "cordova-plugin-httpd";
    HttpdOriginal.pluginRef = "cordova.plugins.CorHttpd";
    HttpdOriginal.repo = "https://github.com/floatinghotpot/cordova-httpd";
    HttpdOriginal.platforms = ["Android", "iOS", "macOS"];
    return HttpdOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Httpd = new HttpdOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9odHRwZC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0lBdURsQix5QkFBaUI7Ozs7SUFXMUMsMkJBQVcsYUFBQyxPQUFzQjtJQVNsQyxzQkFBTTtJQVNOLDRCQUFZOzs7Ozs7Z0JBdEZkO0VBeUQyQixpQkFBaUI7U0FBL0IsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSHR0cGRPcHRpb25zIHtcbiAgLyoqXG4gICAqIFRoZSBwdWJsaWMgcm9vdCBkaXJlY3RvcnkgZm9yIHlvdXIgd2ViIHNlcnZlci4gVGhpcyBwYXRoIGlzIHJlbGF0aXZlIHRvIHlvdXIgYXBwJ3Mgd3d3IGRpcmVjdG9yeS5cbiAgICogRGVmYXVsdCBpcyBjdXJyZW50IGRpcmVjdG9yeS5cbiAgICovXG4gIHd3d19yb290Pzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIHBvcnQgbnVtYmVyIHRvIHVzZS5cbiAgICogRGVmYXVsdCBpcyA4ODg4XG4gICAqL1xuICBwb3J0PzogbnVtYmVyO1xuICAvKipcbiAgICogU2V0dGluZyB0aGlzIG9wdGlvbiB0byBmYWxzZSB3aWxsIGFsbG93IHJlbW90ZSBhY2Nlc3MgdG8geW91ciB3ZWIgc2VydmVyIChvdmVyIGFueSBJUCkuXG4gICAqIERlZmF1bHQgaXMgZmFsc2UuXG4gICAqL1xuICBsb2NhbGhvc3Rfb25seT86IGJvb2xlYW47XG59XG5cbi8qKlxuICogQG5hbWUgSHR0cGRcbiAqIEBkZXNjcmlwdGlvblxuICogRW1iZWRkZWQgaHR0cGQgZm9yIENvcmRvdmEgYXBwcy4gTGlnaHQgd2VpZ2h0IEhUVFAgc2VydmVyLlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBIdHRwZCwgSHR0cGRPcHRpb25zIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9odHRwZCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBodHRwZDogSHR0cGQpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiBsZXQgb3B0aW9uczogSHR0cGRPcHRpb25zID0ge1xuICogICAgICB3d3dfcm9vdDogJ2h0dHBkX3Jvb3QnLCAvLyByZWxhdGl2ZSBwYXRoIHRvIGFwcCdzIHd3dyBkaXJlY3RvcnlcbiAqICAgICAgcG9ydDogODAsXG4gKiAgICAgIGxvY2FsaG9zdF9vbmx5OiBmYWxzZVxuICogIH1cbiAqXG4gKiB0aGlzLmh0dHBkLnN0YXJ0U2VydmVyKG9wdGlvbnMpLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xuICogIGNvbnNvbGUubG9nKCdTZXJ2ZXIgaXMgbGl2ZScpO1xuICogfSk7XG4gKlxuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogSHR0cGRPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnSHR0cGQnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1odHRwZCcsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5Db3JIdHRwZCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZmxvYXRpbmdob3Rwb3QvY29yZG92YS1odHRwZCcsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdtYWNPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEh0dHBkIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBTdGFydHMgYSB3ZWIgc2VydmVyLlxuICAgKiBAcGFyYW0gb3B0aW9ucyB7SHR0cGRPcHRpb25zfVxuICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxzdHJpbmc+fSBSZXR1cm5zIGFuIE9ic2VydmFibGUuIFN1YnNjcmliZSB0byByZWNlaXZlIHRoZSBVUkwgZm9yIHlvdXIgd2ViIHNlcnZlciAoaWYgc3VjY2VlZGVkKS4gVW5zdWJzY3JpYmUgdG8gc3RvcCB0aGUgc2VydmVyLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWUsXG4gICAgY2xlYXJGdW5jdGlvbjogJ3N0b3BTZXJ2ZXInXG4gIH0pXG4gIHN0YXJ0U2VydmVyKG9wdGlvbnM/OiBIdHRwZE9wdGlvbnMpOiBPYnNlcnZhYmxlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBVUkwgb2YgdGhlIHJ1bm5pbmcgc2VydmVyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZz59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgVVJMIG9mIHRoZSB3ZWIgc2VydmVyLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRVcmwoKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBsb2NhbCBwYXRoIG9mIHRoZSBydW5uaW5nIHdlYnNlcnZlclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIGxvY2FsIHBhdGggb2YgdGhlIHdlYiBzZXJ2ZXIuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldExvY2FsUGF0aCgpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 556 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HyperTrack; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var HyperTrackOriginal = /** @class */ (function (_super) {
    __extends(HyperTrackOriginal, _super);
    function HyperTrackOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HyperTrackOriginal.prototype.helloWorld = function (text) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "helloWorld", {}, arguments); };
    HyperTrackOriginal.prototype.getOrCreateUser = function (name, phone, photo, lookupId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getOrCreateUser", {}, arguments); };
    HyperTrackOriginal.prototype.setUserId = function (userId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setUserId", {}, arguments); };
    HyperTrackOriginal.prototype.startTracking = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startTracking", {}, arguments); };
    HyperTrackOriginal.prototype.createAndAssignAction = function (type, lookupId, expectedPlaceAddress, expectedPlaceLatitude, expectedPlaceLongitude) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createAndAssignAction", {}, arguments); };
    HyperTrackOriginal.prototype.completeAction = function (actionId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "completeAction", {}, arguments); };
    HyperTrackOriginal.prototype.completeActionWithLookupId = function (lookupId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "completeActionWithLookupId", {}, arguments); };
    HyperTrackOriginal.prototype.stopTracking = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopTracking", {}, arguments); };
    HyperTrackOriginal.prototype.getCurrentLocation = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCurrentLocation", {}, arguments); };
    HyperTrackOriginal.prototype.checkLocationPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "checkLocationPermission", {}, arguments); };
    HyperTrackOriginal.prototype.requestPermissions = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestPermissions", {}, arguments); };
    HyperTrackOriginal.prototype.checkLocationServices = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "checkLocationServices", {}, arguments); };
    HyperTrackOriginal.prototype.requestLocationServices = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestLocationServices", {}, arguments); };
    HyperTrackOriginal.pluginName = "HyperTrack";
    HyperTrackOriginal.plugin = "cordova-plugin-hypertrack";
    HyperTrackOriginal.pluginRef = "cordova.plugins.HyperTrack";
    HyperTrackOriginal.repo = "https://github.com/hypertrack/hypertrack-cordova";
    HyperTrackOriginal.platforms = ["Android"];
    return HyperTrackOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var HyperTrack = new HyperTrackOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9oeXBlci10cmFjay9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFxRXhDLDhCQUFpQjs7OztJQU8vQywrQkFBVSxhQUFDLElBQVk7SUFhdkIsb0NBQWUsYUFBQyxJQUFZLEVBQUUsS0FBYSxFQUFFLEtBQWEsRUFBRSxRQUFnQjtJQVU1RSw4QkFBUyxhQUFDLE1BQWM7SUFTeEIsa0NBQWE7SUFjYiwwQ0FBcUIsYUFBQyxJQUFZLEVBQUUsUUFBZ0IsRUFBRSxvQkFBNEIsRUFBRSxxQkFBNkIsRUFBRSxzQkFBOEI7SUFVakosbUNBQWMsYUFBQyxRQUFnQjtJQVUvQiwrQ0FBMEIsYUFBQyxRQUFnQjtJQVUzQyxpQ0FBWTtJQVNaLHVDQUFrQjtJQVVsQiw0Q0FBdUI7SUFVdkIsdUNBQWtCO0lBVWxCLDBDQUFxQjtJQVVyQiw0Q0FBdUI7Ozs7OztxQkExTXpCO0VBc0VnQyxpQkFBaUI7U0FBcEMsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBiZXRhXG4gKiBAbmFtZSBIeXBlclRyYWNrXG4gKiBAZGVzY3JpcHRpb25cbiAqIEh5cGVyVHJhY2sgY29yZG92YSBwbHVnaW4gd3JhcHBlciBmb3IgSW9uaWMgTmF0aXZlLiBMb2NhdGlvbi1iYXNlZCBzZXJ2aWNlcyBwcm92aWRlci5cbiAqIE1ha2Ugc3VyZSB0byBpbmNsdWRlIHlvdXIgcHVibGlzaGFibGUga2V5IGF0IGNvbmZpZy54bWwgKHNlZSBbSHlwZXJUcmFjayBDb3Jkb3ZhIFNldHVwXShodHRwczovL2RvY3MuaHlwZXJ0cmFjay5jb20vc2Rrcy9jb3Jkb3ZhL3NldHVwLmh0bWwjc3RlcC0yLWNvbmZpZ3VyZS10aGUtc2RrKSkuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBIeXBlclRyYWNrIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9oeXBlci10cmFjayc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBoeXBlclRyYWNrOiBIeXBlclRyYWNrKSB7IH1cbiAqXG4gKiAvLyBDaGVjayBpZiBhcHAgaGFzIGxvY2F0aW9uIHBlcm1pc3Npb25zIGVuYWJsZWRcbiAqIHRoaXMuaHlwZXJUcmFjay5jaGVja0xvY2F0aW9uUGVybWlzc2lvbigpLnRoZW4ocmVzcG9uc2UgPT4ge1xuICogICAvLyByZXNwb25zZSAoU3RyaW5nKSBjYW4gYmUgXCJ0cnVlXCIgb3IgXCJmYWxzZVwiXG4gKiAgIGlmIChyZXNwb25zZSAhPSBcInRydWVcIikge1xuICogICAgIC8vIEFzayBmb3IgcGVybWlzc2lvbnNcbiAqICAgICB0aGlzLmh5cGVyVHJhY2sucmVxdWVzdFBlcm1pc3Npb25zKCkudGhlbihyZXNwb25zZSA9PiB7fSwgZXJyb3IgPT4ge30pO1xuICogICB9XG4gKiB9LCBlcnJvciA9PiB7fSk7XG4gKlxuICogLy8gQ2hlY2sgaWYgYXBwIGhhcyBsb2NhdGlvbiBzZXJ2aWNlcyBlbmFibGVkXG4gKiB0aGlzLmh5cGVyVHJhY2suY2hlY2tMb2NhdGlvblNlcnZpY2VzKCkudGhlbihyZXNwb25zZSA9PiB7XG4gKiAgIC8vIHJlc3BvbnNlIChTdHJpbmcpIGNhbiBiZSBcInRydWVcIiBvciBcImZhbHNlXCJcbiAqICAgaWYgKHJlc3BvbnNlICE9IFwidHJ1ZVwiKSB7XG4gKiAgICAgLy8gUmVxdWVzdCBzZXJ2aWNlcyB0byBiZSBlbmFibGVkXG4gKiAgICAgdGhpcy5oeXBlclRyYWNrLnJlcXVlc3RMb2NhdGlvblNlcnZpY2VzKCkudGhlbihyZXNwb25zZSA9PiB7fSwgZXJyb3IgPT4ge30pO1xuICogICB9XG4gKiB9LCBlcnJvciA9PiB7fSk7XG4gKlxuICogLy8gRmlyc3Qgc2V0IHRoZSBjdXJyZW50IHVzZXIuIFRoaXMgY2FuIGJlIGRvbmUgdmlhIGdldE9yQ3JlYXRlVXNlcigpIG9yIHNldFVzZXJJZCgpXG4gKiB0aGlzLmh5cGVyVHJhY2suc2V0VXNlcklkKFwieHh4XCIpLnRoZW4odXNlciA9PiB7XG4gKiAgIC8vIHVzZXIgKFN0cmluZykgaXMgYSBTdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgYSBVc2VyJ3MgSlNPTlxuICpcbiAqICAgdGhpcy5oeXBlclRyYWNrLnN0YXJ0VHJhY2tpbmcoKS50aGVuKHVzZXJJZCA9PiB7fSwgdHJhY2tpbmdFcnJvciA9PiB7fSk7XG4gKlxuICogICB0aGlzLmh5cGVyVHJhY2suY3JlYXRlQW5kQXNzaWduQWN0aW9uKCd2aXNpdCcsICdsb29rdXBJZCcsJ2FkZHJlc3MnLCAyMC4xMiwgLTEwMC4zKS50aGVuKGFjdGlvbiA9PiB7XG4gKiAgICAgLy8gSGFuZGxlIGFjdGlvbi4gSXQncyBhIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgQWN0aW9uJ3MgSlNPTi4gRm9yIGV4YW1wbGU6XG4gKiAgICAgLy8gJ3tcImV0YVwiOlwiSnVsIDE3LCAyMDE3IDEyOjUwOjAzIFBNXCIsXCJhc3NpZ25lZF9hdFwiOlwiSnVsIDE3LCAyMDE3IDEyOjM0OjM4IFBNXCIsLFwiZGlzdGFuY2VcIjpcIjAuMFwiLC4uLn0nXG4gKiAgIH0sIGVycm9yID0+IHt9KTtcbiAqXG4gKiAgIC8vIFlvdSBjYW4gY29tcGxldGUgYW4gYWN0aW9uIHdpdGggY29tcGxldGVBY3Rpb24oKSBvciBjb21wbGV0ZUFjdGlvbldpdGhMb29rdXBJZCgpXG4gKiAgIHRoaXMuaHlwZXJUcmFjay5jb21wbGV0ZUFjdGlvbignYWN0aW9uLWlkJykudGhlbihyZXNwb25zZSA9PiB7XG4gKiAgICAgLy8gSGFuZGxlIHJlc3BvbnNlIChTdHJpbmcpLiBTaG91bGQgYmUgXCJPS1wiLlxuICogICB9LCBlcnJvciA9PiB7fSk7XG4gKlxuICogICB0aGlzLmh5cGVyVHJhY2suZ2V0Q3VycmVudExvY2F0aW9uKCkudGhlbihsb2NhdGlvbiA9PiB7XG4gKiAgICAgLy8gSGFuZGxlIGxvY2F0aW9uLiBJdCdzIGEgU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGEgTG9jYXRpb24ncyBKU09OLkZvciBleGFtcGxlOlxuICogICAgIC8vICd7XCJtQWNjdXJhY3lcIjoyMi42MDEsLFwibUxhdGl0dWRlXCI6MjMuMTIzNDU2LCBcIm1Mb25naXR1ZGVcIjotMTAwLjEyMzQ1NjcsIC4uLn0nXG4gKiAgIH0sIGVycm9yID0+IHt9KTtcbiAqXG4gKiAgIHRoaXMuaHlwZXJUcmFjay5zdG9wVHJhY2tpbmcoKS50aGVuKHN1Y2Nlc3MgPT4ge1xuICogICAgIC8vIEhhbmRsZSBzdWNjZXNzIChTdHJpbmcpLiBTaG91bGQgYmUgXCJPS1wiLlxuICogICB9LCBlcnJvciA9PiB7fSk7XG4gKlxuICogfSwgZXJyb3IgPT4ge30pOypcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0h5cGVyVHJhY2snLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1oeXBlcnRyYWNrJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLkh5cGVyVHJhY2snLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2h5cGVydHJhY2svaHlwZXJ0cmFjay1jb3Jkb3ZhJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBIeXBlclRyYWNrIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogUmV0dXJucyBnaXZlbiB0ZXh0LiBGb3IgdGVzdGluZyBwdXJwb3Nlcy5cbiAgICogQHBhcmFtIHtTdHJpbmd9IHRleHQgR2l2ZW4gdGV4dCB0byBwcmludFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHJlc3VsdCB0ZXh0ICh3aGljaCBpcyB0aGUgc2FtZSBhcyB0aGUgZ2l2ZW4gdGV4dCkgaWYgc3VjY2Vzc2Z1bCwgb3IgaXQgZ2V0cyByZWplY3RlZCBpZiBhbiBlcnJvciBvY3VycmVkLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBoZWxsb1dvcmxkKHRleHQ6IFN0cmluZyk6IFByb21pc2U8U3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyB1c2VyIHRvIGlkZW50aWZ5IHRoZSBjdXJyZW50IGRldmljZSBvciBnZXQgYSB1c2VyIGZyb20gYSBsb29rdXAgaWQuXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIFVzZXIncyBuYW1lXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwaG9uZSBVc2VyJ3MgcGhvbmVcbiAgICogQHBhcmFtIHtTdHJpbmd9IHBob3RvIFVzZXIncyBwaG90byBhcyBVUkwgb3IgYSBCYXNlNjQgY29udmVydGVkIHN0cmluZ1xuICAgKiBAcGFyYW0ge1N0cmluZ30gbG9va3VwSWQgVXNlcidzIGxvb2t1cElkLCB3aGljaCBpcyB1c2VkIHRvIGNoZWNrIGlmIGEgbmV3IHVzZXIgaXMgdG8gYmUgY3JlYXRlZCAoaW4gdGhpcyBjYXNlIHlvdSBjb3VsZCBzZXQgaXQgdG8gYW4gaW50ZXJuYWwgcmVmZXJlbmNlIGZvciB0aGUgdXNlciB0aGF0IHlvdSBjYW4gdXNlIGxhdGVyIHRvIGlkZW50aWZ5IGl0KSwgb3IgaWYgb25lIHdpdGggYW4gZXhpc3RpbmcgbG9va3VwSWQgaXMgdG8gYmUgdXNlZC5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBVc2VyJ3MgSlNPTiwgb3IgaXQgZ2V0cyByZWplY3RlZCBpZiBhbiBlcnJvciBvY3VycmVkLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRPckNyZWF0ZVVzZXIobmFtZTogU3RyaW5nLCBwaG9uZTogU3RyaW5nLCBwaG90bzogU3RyaW5nLCBsb29rdXBJZDogU3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2V0IFVzZXJJZCBmb3IgdGhlIFNESyBjcmVhdGVkIHVzaW5nIEh5cGVyVHJhY2sgQVBJcy4gVGhpcyBpcyB1c2VmdWwgaWYgeW91IGFscmVhZHkgaGF2ZSBhIHVzZXIgcHJldmlvdXNseSBjcmVhdGVkLlxuICAgKiBAcGFyYW0ge1N0cmluZ30gdXNlcklkIFVzZXIncyBJRFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYW4gXCJPS1wiIHN0cmluZyBpZiBzdWNjZXNzZnVsLCBvciBpdCBnZXRzIHJlamVjdGVkIGlmIGFuIGVycm9yIG9jdXJyZWQuIEFuIFwiT0tcIiByZXNwb25zZSBkb2Vzbid0IG5lY2Vzc2FyaWx5IG1lYW4gdGhhdCB0aGUgdXNlcklkIHdhcyBmb3VuZC4gSXQganVzdCBtZWFucyB0aGF0IGl0IHdhcyBzZXQgY29ycmVjdGx5LlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXRVc2VySWQodXNlcklkOiBTdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBFbmFibGUgdGhlIFNESyBhbmQgc3RhcnQgdHJhY2tpbmcuIFRoaXMgd2lsbCBmYWlsIGlmIHRoZXJlIGlzIG5vIHVzZXIgc2V0LlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHVzZXJJZCAoU3RyaW5nKSBvZiB0aGUgVXNlciBiZWluZyB0cmFja2VkIGlmIHN1Y2Nlc3NmdWwsIG9yIGl0IGdldHMgcmVqZWN0ZWQgaWYgYW4gZXJyb3Igb2N1cnJlZC4gT25lIGV4YW1wbGUgb2YgYW4gZXJyb3IgaXMgbm90IHNldHRpbmcgYSBVc2VyIHdpdGggZ2V0T3JDcmVhdGVVc2VyKCkgb3Igc2V0VXNlcklkKCkgYmVmb3JlIGNhbGxpbmcgdGhpcyBmdW5jdGlvbi5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc3RhcnRUcmFja2luZygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgYW5kIGFzc2lnbiBhbiBhY3Rpb24gdG8gdGhlIGN1cnJlbnQgdXNlciB1c2luZyBzcGVjaWZpZWQgcGFyYW1ldGVyc1xuICAgKiBAcGFyYW0ge1N0cmluZ30gdHlwZSBUaGUgYWN0aW9uIHR5cGUuIENhbiBiZSBvbmUgZnJvbSBcInBpY2t1cFwiLCBcImRlbGl2ZXJ5XCIsIFwiZHJvcG9mZlwiLCBcInZpc2l0XCIsIFwic3RvcG92ZXJcIiBvciBcInRhc2tcIlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbG9va3VwSWQgVGhlIEFjdGlvbidzIGRlc2lyZWQgbG9va3VwSWRcbiAgICogQHBhcmFtIHtTdHJpbmd9IGV4cGVjdGVkUGxhY2VBZGRyZXNzIFRoZSBhZGRyZXNzIG9mIHRoZSBBY3Rpb25cbiAgICogQHBhcmFtIHtOdW1iZXJ9IGV4cGVjdGVkUGxhY2VMYXRpdHVkZSBUaGUgbGF0aXR1ZGUgb2YgdGhlIEFjdGlvblxuICAgKiBAcGFyYW0ge051bWJlcn0gZXhwZWN0ZWRQbGFjZUxvbmdpdHVkZSBUaGUgbG9uZ2l0dWRlIG9mIHRoZSBBY3Rpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBBY3Rpb24ncyBKU09OLCBvciBpdCBnZXRzIHJlamVjdGVkIGlmIGFuIGVycm9yIG9jdXJyZWQuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGNyZWF0ZUFuZEFzc2lnbkFjdGlvbih0eXBlOiBTdHJpbmcsIGxvb2t1cElkOiBTdHJpbmcsIGV4cGVjdGVkUGxhY2VBZGRyZXNzOiBTdHJpbmcsIGV4cGVjdGVkUGxhY2VMYXRpdHVkZTogTnVtYmVyLCBleHBlY3RlZFBsYWNlTG9uZ2l0dWRlOiBOdW1iZXIpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb21wbGV0ZSBhbiBhY3Rpb24gZnJvbSB0aGUgU0RLIGJ5IGl0cyBJRFxuICAgKiBAcGFyYW0ge1N0cmluZ30gYWN0aW9uSWQgSUQgb2YgdGhlIEFjdGlvbiB0aGF0IHdpbGwgYmUgbWFya2VkIGFzIGNvbXBsZXRlZFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYW4gXCJPS1wiIHN0cmluZyBpZiBzdWNjZXNzZnVsLCBvciBpdCBnZXRzIHJlamVjdGVkIGlmIGFuIGVycm9yIG9jdXJyZWQuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGNvbXBsZXRlQWN0aW9uKGFjdGlvbklkOiBTdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb21wbGV0ZSBhbiBhY3Rpb24gZnJvbSB0aGUgU0RLIHVzaW5nIEFjdGlvbidzIGxvb2t1cElkIGFzIHBhcmFtZXRlclxuICAgKiBAcGFyYW0ge1N0cmluZ30gbG9va3VwSWQgTG9va3VwIElEIG9mIHRoZSBBY3Rpb24gdGhhdCB3aWxsIGJlIG1hcmtlZCBhcyBjb21wbGV0ZWRcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGFuIFwiT0tcIiBzdHJpbmcgaWYgc3VjY2Vzc2Z1bCwgb3IgaXQgZ2V0cyByZWplY3RlZCBpZiBhbiBlcnJvciBvY3VycmVkLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBjb21wbGV0ZUFjdGlvbldpdGhMb29rdXBJZChsb29rdXBJZDogU3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGlzYWJsZSB0aGUgU0RLIGFuZCBzdG9wIHRyYWNraW5nLlxuICAgKiBOZWVkcyB1c2VyIHNldHRpbmcgKHZpYSBnZXRPckNyZWF0ZVVzZXIoKSBvciBzZXRVc2VySWQoKSkgZmlyc3QuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgYW4gXCJPS1wiIHN0cmluZyBpZiBzdWNjZXNzZnVsLCBvciBpdCBnZXRzIHJlamVjdGVkIGlmIGFuIGVycm9yIG9jdXJyZWQuIE9uZSBleGFtcGxlIG9mIGFuIGVycm9yIGlzIG5vdCBzZXR0aW5nIGEgVXNlciB3aXRoIGdldE9yQ3JlYXRlVXNlcigpIG9yIHNldFVzZXJJZCgpIGJlZm9yZSBjYWxsaW5nIHRoaXMgZnVuY3Rpb24uXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHN0b3BUcmFja2luZygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdXNlcidzIGN1cnJlbnQgbG9jYXRpb24gZnJvbSB0aGUgU0RLXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgTG9jYXRpb24ncyBKU09OLCBvciBpdCBnZXRzIHJlamVjdGVkIGlmIGFuIGVycm9yIG9jdXJyZWQuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldEN1cnJlbnRMb2NhdGlvbigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBMb2NhdGlvbiBwZXJtaXNzaW9uIGhhcyBiZWVuIGdyYW50ZWQgdG8gdGhlIGFwcCAoZm9yIEFuZHJvaWQpLlxuICAgKiBSZXR1cm5zIFwidHJ1ZVwiIG9yIFwiZmFsc2VcIiBpbiBzdWNjZXNzIG1ldGhvZCBhY2NvcmRpbmdseS5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBhIHN0cmluZyB0aGF0IGNhbiBiZSBcInRydWVcIiBvciBcImZhbHNlXCIsIGRlcGVuZGluZyBpZiBsb2NhdGlvbiBwZXJtaXNzaW9uIHdhcyBncmFudGVkLCBvciBpdCBnZXRzIHJlamVjdGVkIGlmIGFuIGVycm9yIG9jdXJyZWQuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGNoZWNrTG9jYXRpb25QZXJtaXNzaW9uKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlcXVlc3QgdXNlciB0byBncmFudCBMb2NhdGlvbiBhY2Nlc3MgdG8gdGhlIGFwcCAoZm9yIEFucmRvaWQpLlxuICAgKiBGb3IgQW5kcm9pZCBNYXJzaG1hbGxvdyBhbmQgYWJvdmUuIEluIG90aGVyIHBsYXRmb3JtcywgdGhlIFByb21pc2UgaXMgbmV2ZXIgcmVzb2x2ZWQuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgYSBzdHJpbmcgdGhhdCBjYW4gYmUgXCJ0cnVlXCIgb3IgXCJmYWxzZVwiLCBkZXBlbmRpbmcgaWYgTG9jYXRpb24gYWNjZXNzIHdhcyBnaXZlbiB0byB0aGUgYXBwLCBvciBpdCBnZXRzIHJlamVjdGVkIGlmIGFuIGVycm9yIG9jdXJyZWQuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlcXVlc3RQZXJtaXNzaW9ucygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBMb2NhdGlvbiBzZXJ2aWNlcyBhcmUgZW5hYmxlZCBvbiB0aGUgZGV2aWNlIChmb3IgQW5kcm9pZCkuXG4gICAqIFJldHVybnMgXCJ0cnVlXCIgb3IgXCJmYWxzZVwiIGluIHN1Y2Nlc3MgbWV0aG9kIGFjY29yZGluZ2x5LlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIGEgc3RyaW5nIHRoYXQgY2FuIGJlIFwidHJ1ZVwiIG9yIFwiZmFsc2VcIiwgZGVwZW5kaW5nIGlmIGxvY2F0aW9uIHNlcnZpY2VzIGFyZSBlbmFibGVkLCBvciBpdCBnZXRzIHJlamVjdGVkIGlmIGFuIGVycm9yIG9jdXJyZWQuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGNoZWNrTG9jYXRpb25TZXJ2aWNlcygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXF1ZXN0IHVzZXIgdG8gZW5hYmxlIExvY2F0aW9uIHNlcnZpY2VzIG9uIHRoZSBkZXZpY2UuXG4gICAqIEZvciBBbmRyb2lkIE1hcnNobWFsbG93IGFuZCBhYm92ZS4gSW4gb3RoZXIgcGxhdGZvcm1zLCB0aGUgUHJvbWlzZSBpcyBuZXZlciByZXNvbHZlZC5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBhIHN0cmluZyB0aGF0IGNhbiBiZSBcInRydWVcIiBvciBcImZhbHNlXCIsIGRlcGVuZGluZyBpZiBMb2NhdGlvbiBzZXJ2aWNlcyB3ZXJlIGVuYWJsZWQsIG9yIGl0IGdldHMgcmVqZWN0ZWQgaWYgYW4gZXJyb3Igb2N1cnJlZC5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcmVxdWVzdExvY2F0aW9uU2VydmljZXMoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 557 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IBeacon; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var IBeaconOriginal = /** @class */ (function (_super) {
    __extends(IBeaconOriginal, _super);
    function IBeaconOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IBeaconOriginal.prototype.Delegate = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            var delegate = new __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"].plugins.locationManager.Delegate();
            delegate.didChangeAuthorizationStatus = function (pluginResult) {
                return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                    var cb = function (data) { return observer.next(data); };
                    return delegate.didChangeAuthorizationStatus = cb;
                });
            };
            delegate.didDetermineStateForRegion = function (pluginResult) {
                return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                    var cb = function (data) { return observer.next(data); };
                    return delegate.didDetermineStateForRegion = cb;
                });
            };
            delegate.didEnterRegion = function (pluginResult) {
                return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                    var cb = function (data) { return observer.next(data); };
                    return delegate.didEnterRegion = cb;
                });
            };
            delegate.didExitRegion = function (pluginResult) {
                return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                    var cb = function (data) { return observer.next(data); };
                    return delegate.didExitRegion = cb;
                });
            };
            delegate.didRangeBeaconsInRegion = function (pluginResult) {
                return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                    var cb = function (data) { return observer.next(data); };
                    return delegate.didRangeBeaconsInRegion = cb;
                });
            };
            delegate.didStartMonitoringForRegion = function (pluginResult) {
                return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                    var cb = function (data) { return observer.next(data); };
                    return delegate.didStartMonitoringForRegion = cb;
                });
            };
            delegate.monitoringDidFailForRegionWithError = function (pluginResult) {
                return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                    var cb = function (data) { return observer.next(data); };
                    return delegate.monitoringDidFailForRegionWithError = cb;
                });
            };
            delegate.peripheralManagerDidStartAdvertising = function (pluginResult) {
                return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                    var cb = function (data) { return observer.next(data); };
                    return delegate.peripheralManagerDidStartAdvertising = cb;
                });
            };
            delegate.peripheralManagerDidUpdateState = function (pluginResult) {
                return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                    var cb = function (data) { return observer.next(data); };
                    return delegate.peripheralManagerDidUpdateState = cb;
                });
            };
            __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"].plugins.locationManager.setDelegate(delegate);
            return delegate;
        }
    }(); };
    IBeaconOriginal.prototype.BeaconRegion = function (identifer, uuid, major, minor, notifyEntryStateOnDisplay) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"].plugins.locationManager.BeaconRegion(identifer, uuid, major, minor, notifyEntryStateOnDisplay);
        }
    }(); };
    IBeaconOriginal.prototype.getDelegate = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getDelegate", {}, arguments); };
    IBeaconOriginal.prototype.setDelegate = function (delegate) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setDelegate", {}, arguments); };
    IBeaconOriginal.prototype.onDomDelegateReady = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onDomDelegateReady", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.isBluetoothEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isBluetoothEnabled", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.enableBluetooth = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableBluetooth", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.disableBluetooth = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableBluetooth", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.startMonitoringForRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startMonitoringForRegion", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.stopMonitoringForRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopMonitoringForRegion", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.requestStateForRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestStateForRegion", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.startRangingBeaconsInRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startRangingBeaconsInRegion", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.stopRangingBeaconsInRegion = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopRangingBeaconsInRegion", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.getAuthorizationStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAuthorizationStatus", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.requestWhenInUseAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestWhenInUseAuthorization", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.requestAlwaysAuthorization = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestAlwaysAuthorization", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.getMonitoredRegions = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMonitoredRegions", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.getRangedRegions = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getRangedRegions", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.isRangingAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isRangingAvailable", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.isMonitoringAvailableForClass = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isMonitoringAvailableForClass", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.startAdvertising = function (region, measuredPower) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startAdvertising", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.stopAdvertising = function (region) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopAdvertising", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.isAdvertisingAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAdvertisingAvailable", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.isAdvertising = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAdvertising", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.disableDebugLogs = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableDebugLogs", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.enableDebugNotifications = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableDebugNotifications", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.disableDebugNotifications = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableDebugNotifications", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.enableDebugLogs = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableDebugLogs", { "otherPromise": true }, arguments); };
    IBeaconOriginal.prototype.appendToDeviceLog = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "appendToDeviceLog", { "otherPromise": true }, arguments); };
    IBeaconOriginal.pluginName = "IBeacon";
    IBeaconOriginal.plugin = "cordova-plugin-ibeacon";
    IBeaconOriginal.pluginRef = "cordova.plugins.locationManager";
    IBeaconOriginal.repo = "https://github.com/petermetz/cordova-plugin-ibeacon";
    IBeaconOriginal.platforms = ["Android", "iOS"];
    return IBeaconOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var IBeacon = new IBeaconOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 558 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImagePicker; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var ImagePickerOriginal = /** @class */ (function (_super) {
    __extends(ImagePickerOriginal, _super);
    function ImagePickerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImagePickerOriginal.prototype.getPictures = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPictures", { "callbackOrder": "reverse" }, arguments); };
    ImagePickerOriginal.prototype.hasReadPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasReadPermission", { "platforms": ["Android"] }, arguments); };
    ImagePickerOriginal.prototype.requestReadPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestReadPermission", { "platforms": ["Android"] }, arguments); };
    ImagePickerOriginal.pluginName = "ImagePicker";
    ImagePickerOriginal.plugin = "cordova-plugin-telerik-imagepicker";
    ImagePickerOriginal.pluginRef = "window.imagePicker";
    ImagePickerOriginal.repo = "https://github.com/Telerik-Verified-Plugins/ImagePicker";
    ImagePickerOriginal.install = "ionic cordova plugin add cordova-plugin-telerik-imagepicker --variable PHOTO_LIBRARY_USAGE_DESCRIPTION=\"your usage message\"";
    ImagePickerOriginal.installVariables = ["PHOTO_LIBRARY_USAGE_DESCRIPTION"];
    ImagePickerOriginal.platforms = ["Android", "iOS"];
    return ImagePickerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var ImagePicker = new ImagePickerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9pbWFnZS1waWNrZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBa0V2QywrQkFBaUI7Ozs7SUFVaEQsaUNBQVcsYUFBQyxPQUEyQjtJQVd2Qyx1Q0FBaUI7SUFXakIsMkNBQXFCOzs7Ozs7OztzQkFuR3ZCO0VBbUVpQyxpQkFBaUI7U0FBckMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5cbmV4cG9ydCBpbnRlcmZhY2UgSW1hZ2VQaWNrZXJPcHRpb25zIHtcbiAgLyoqXG4gICAqIG1heCBpbWFnZXMgdG8gYmUgc2VsZWN0ZWQsIGRlZmF1bHRzIHRvIDE1LiBJZiB0aGlzIGlzIHNldCB0byAxLCB1cG9uIHNlbGVjdGlvbiBvZiBhIHNpbmdsZSBpbWFnZSwgdGhlIHBsdWdpbiB3aWxsIHJldHVybiBpdC4gKEFuZHJvaWQgb25seSlcbiAgICovXG4gIG1heGltdW1JbWFnZXNDb3VudD86IG51bWJlcjtcblxuICAvKipcbiAgICogTWF4IHdpZHRoIHRvIGFsbG93IGltYWdlcyB0byBiZVxuICAgKi9cbiAgd2lkdGg/OiBudW1iZXI7XG4gIC8qKlxuICAgKiBNYXggaGVpZ2h0IHRvIGFsbG93IGltYWdlcyB0byBiZVxuICAgKi9cbiAgaGVpZ2h0PzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBRdWFsaXR5IG9mIGltYWdlcywgZGVmYXVsdHMgdG8gMTAwXG4gICAqL1xuICBxdWFsaXR5PzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBPdXRwdXQgdHlwZSwgZGVmYXVsdHMgdG8gMCAgKEZJTEVfVVJJKS5cbiAgICovXG4gIG91dHB1dFR5cGU/OiBudW1iZXI7XG59XG5cbi8qKlxuICogQG5hbWUgSW1hZ2UgUGlja2VyXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvcmRvdmEgUGx1Z2luIEZvciBNdWx0aXBsZSBJbWFnZSBTZWxlY3Rpb25cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtcGx1Z2luLWltYWdlLXBpY2tlcmAuXG4gKiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBodHRwczovL2dpdGh1Yi5jb20vd3ltc2VlL2NvcmRvdmEtaW1hZ2VQaWNrZXJcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEltYWdlUGlja2VyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9pbWFnZS1waWNrZXInO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGltYWdlUGlja2VyOiBJbWFnZVBpY2tlcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5pbWFnZVBpY2tlci5nZXRQaWN0dXJlcyhvcHRpb25zKS50aGVuKChyZXN1bHRzKSA9PiB7XG4gKiAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0cy5sZW5ndGg7IGkrKykge1xuICogICAgICAgY29uc29sZS5sb2coJ0ltYWdlIFVSSTogJyArIHJlc3VsdHNbaV0pO1xuICogICB9XG4gKiB9LCAoZXJyKSA9PiB7IH0pO1xuICpcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIEltYWdlUGlja2VyT3B0aW9uc1xuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0ltYWdlUGlja2VyJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tdGVsZXJpay1pbWFnZXBpY2tlcicsXG4gIHBsdWdpblJlZjogJ3dpbmRvdy5pbWFnZVBpY2tlcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vVGVsZXJpay1WZXJpZmllZC1QbHVnaW5zL0ltYWdlUGlja2VyJyxcbiAgaW5zdGFsbDogJ2lvbmljIGNvcmRvdmEgcGx1Z2luIGFkZCBjb3Jkb3ZhLXBsdWdpbi10ZWxlcmlrLWltYWdlcGlja2VyIC0tdmFyaWFibGUgUEhPVE9fTElCUkFSWV9VU0FHRV9ERVNDUklQVElPTj1cInlvdXIgdXNhZ2UgbWVzc2FnZVwiJyxcbiAgaW5zdGFsbFZhcmlhYmxlczogWydQSE9UT19MSUJSQVJZX1VTQUdFX0RFU0NSSVBUSU9OJ10sXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEltYWdlUGlja2VyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogUGljayBwaWN0dXJlcyBmcm9tIHRoZSBsaWJyYXJ5LlxuICAgKiBAcGFyYW0ge0ltYWdlUGlja2VyT3B0aW9uc30gb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRoZSBpbWFnZSBmaWxlIFVSSVxuICAgKiBvdGhlcndpc2UgcmVqZWN0cyB3aXRoIGFuIGVycm9yLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBnZXRQaWN0dXJlcyhvcHRpb25zOiBJbWFnZVBpY2tlck9wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiB3ZSBoYXZlIHBlcm1pc3Npb24gdG8gcmVhZCBpbWFnZXNcbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIGJvb2xlYW4gdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB3ZSBoYXZlIHBlcm1pc3Npb25cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG4gIH0pXG4gIGhhc1JlYWRQZXJtaXNzaW9uKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXF1ZXN0IHBlcm1pc3Npb24gdG8gcmVhZCBpbWFnZXNcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG4gIH0pXG4gIHJlcXVlc3RSZWFkUGVybWlzc2lvbigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 559 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageResizer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var ImageResizerOriginal = /** @class */ (function (_super) {
    __extends(ImageResizerOriginal, _super);
    function ImageResizerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImageResizerOriginal.prototype.resize = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "resize", {}, arguments); };
    ImageResizerOriginal.pluginName = "ImageResizer";
    ImageResizerOriginal.plugin = "info.protonet.imageresizer";
    ImageResizerOriginal.pluginRef = "ImageResizer";
    ImageResizerOriginal.repo = "https://github.com/JoschkaSchulz/cordova-plugin-image-resizer";
    ImageResizerOriginal.platforms = ["Android", "iOS", "Windows"];
    return ImageResizerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var ImageResizer = new ImageResizerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9pbWFnZS1yZXNpemVyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQTRFdEMsZ0NBQWlCOzs7O0lBS2pELDZCQUFNLGFBQUMsT0FBNEI7Ozs7Ozt1QkFsRnJDO0VBNkVrQyxpQkFBaUI7U0FBdEMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEltYWdlUmVzaXplck9wdGlvbnMge1xuICAvKipcbiAgICogVGhlIFVSSSBmb3IgdGhlIGltYWdlIG9uIHRoZSBkZXZpY2UgdG8gZ2V0IHNjYWxlZFxuICAgKi9cbiAgdXJpOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSB3aWR0aCBvZiB0aGUgbmV3IGltYWdlXG4gICAqL1xuICB3aWR0aDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgaGVpZ2h0IG9mIHRoZSBuZXcgaW1hZ2VcbiAgICovXG4gIGhlaWdodDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgZm9sZGVyIHRoZSBpbWFnZSBzaG91bGQgYmUgcHV0XG4gICAqIChBbmRyb2lkIG9ubHkpXG4gICAqL1xuICBmb2xkZXJOYW1lPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKlxuICAgKiBRdWFsaXR5IGdpdmVuIGFzIE51bWJlciBmb3IgdGhlIHF1YWxpdHkgb2YgdGhlIG5ldyBpbWFnZVxuICAgKiAoQW5kcm9pZCBhbmQgaU9TIG9ubHkpXG4gICAqL1xuICBxdWFsaXR5PzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBBIGN1c3RvbSBuYW1lIGZvciB0aGUgZmlsZS4gRGVmYXVsdCBuYW1lIGlzIGEgdGltZXN0YW1wXG4gICAqIChBbmRyb2lkIGFuZCBXaW5kb3dzIG9ubHkpXG4gICAqL1xuICBmaWxlTmFtZT86IHN0cmluZztcbn1cblxuLyoqXG4gKiBAbmFtZSBJbWFnZSBSZXNpemVyXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvcmRvdmEgUGx1Z2luIEZvciBJbWFnZSBSZXNpemVcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEltYWdlUmVzaXplciwgSW1hZ2VSZXNpemVyT3B0aW9ucyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvaW1hZ2UtcmVzaXplcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBpbWFnZVJlc2l6ZXI6IEltYWdlUmVzaXplcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogbGV0IG9wdGlvbnMgPSB7XG4gKiAgdXJpOiB1cmksXG4gKiAgZm9sZGVyTmFtZTogJ1Byb3RvbmV0JyxcbiAqICBxdWFsaXR5OiA5MCxcbiAqICB3aWR0aDogMTI4MCxcbiAqICBoZWlnaHQ6IDEyODBcbiAqIH0gYXMgSW1hZ2VSZXNpemVyT3B0aW9ucztcbiAqXG4gKiB0aGlzLmltYWdlUmVzaXplclxuICogICAucmVzaXplKG9wdGlvbnMpXG4gKiAgIC50aGVuKChmaWxlUGF0aDogc3RyaW5nKSA9PiBjb25zb2xlLmxvZygnRmlsZVBhdGgnLCBmaWxlUGF0aCkpXG4gKiAgIC5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKTtcbiAqXG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBJbWFnZVJlc2l6ZXJPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnSW1hZ2VSZXNpemVyJyxcbiAgcGx1Z2luOiAnaW5mby5wcm90b25ldC5pbWFnZXJlc2l6ZXInLFxuICBwbHVnaW5SZWY6ICdJbWFnZVJlc2l6ZXInLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL0pvc2Noa2FTY2h1bHovY29yZG92YS1wbHVnaW4taW1hZ2UtcmVzaXplcicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSW1hZ2VSZXNpemVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcmVzaXplKG9wdGlvbnM6IEltYWdlUmVzaXplck9wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 560 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export InAppBrowserObject */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InAppBrowser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var InAppBrowserObject = /** @class */ (function () {
    /**
     * Opens a URL in a new InAppBrowserOriginal instance, the current browser instance, or the system browser.
     * @param {string} url     The URL to load.
     * @param {string} [target="self"]  The target in which to load the URL, an optional parameter that defaults to _self.
     *                 _self: Opens in the WebView if the URL is in the white list, otherwise it opens in the InAppBrowserOriginal.
     *                 _blank: Opens in the InAppBrowserOriginal.
     *                 _system: Opens in the system's web browser.
     * @param {string | InAppBrowserOptions} [options] Options for the InAppBrowserOriginal. Optional, defaulting to: location=yes.
     *                 The options string must not contain any blank space, and each feature's
     *                 name/value pairs must be separated by a comma. Feature names are case insensitive.
     */
    function InAppBrowserObject(url, target, options) {
        try {
            if (options && typeof options !== 'string') {
                options = Object.keys(options).map(function (key) { return key + "=" + options[key]; }).join(',');
            }
            this._objectInstance = cordova.InAppBrowser.open(url, target, options);
        }
        catch (e) {
            window.open(url, target);
            console.warn('Native: InAppBrowserOriginal is not installed or you are running on a browser. Falling back to window.open.');
        }
    }
    InAppBrowserObject.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "show", { "sync": true }, arguments); };
    InAppBrowserObject.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "close", { "sync": true }, arguments); };
    InAppBrowserObject.prototype.hide = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "hide", { "sync": true }, arguments); };
    InAppBrowserObject.prototype.executeScript = function (script) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "executeScript", {}, arguments); };
    InAppBrowserObject.prototype.insertCSS = function (css) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "insertCSS", {}, arguments); };
    InAppBrowserObject.prototype.on = function (event) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                _this._objectInstance.addEventListener(event, observer.next.bind(observer));
                return function () { return _this._objectInstance.removeEventListener(event, observer.next.bind(observer)); };
            });
        }
    }(); };
    return InAppBrowserObject;
}());

var InAppBrowserOriginal = /** @class */ (function (_super) {
    __extends(InAppBrowserOriginal, _super);
    function InAppBrowserOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Opens a URL in a new InAppBrowserOriginal instance, the current browser instance, or the system browser.
     * @param  url {string}     The URL to load.
     * @param  target {string}  The target in which to load the URL, an optional parameter that defaults to _self.
     * @param  options {string} Options for the InAppBrowserOriginal. Optional, defaulting to: location=yes.
     *                 The options string must not contain any blank space, and each feature's
     *                 name/value pairs must be separated by a comma. Feature names are case insensitive.
     * @returns {InAppBrowserObject}
     */
    InAppBrowserOriginal.prototype.create = function (url, target, options) {
        return new InAppBrowserObject(url, target, options);
    };
    InAppBrowserOriginal.pluginName = "InAppBrowser";
    InAppBrowserOriginal.plugin = "cordova-plugin-inappbrowser";
    InAppBrowserOriginal.pluginRef = "cordova.InAppBrowser";
    InAppBrowserOriginal.repo = "https://github.com/apache/cordova-plugin-inappbrowser";
    InAppBrowserOriginal.platforms = ["AmazonFire OS", "Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "macOS", "Ubuntu", "Windows", "Windows Phone"];
    return InAppBrowserOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var InAppBrowser = new InAppBrowserOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 561 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InAppPurchase; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var InAppPurchaseOriginal = /** @class */ (function (_super) {
    __extends(InAppPurchaseOriginal, _super);
    function InAppPurchaseOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InAppPurchaseOriginal.prototype.getProducts = function (productId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getProducts", { "otherPromise": true }, arguments); };
    InAppPurchaseOriginal.prototype.buy = function (productId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "buy", { "otherPromise": true }, arguments); };
    InAppPurchaseOriginal.prototype.subscribe = function (productId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "subscribe", { "otherPromise": true }, arguments); };
    InAppPurchaseOriginal.prototype.consume = function (productType, receipt, signature) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "consume", { "otherPromise": true }, arguments); };
    InAppPurchaseOriginal.prototype.restorePurchases = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "restorePurchases", { "otherPromise": true }, arguments); };
    InAppPurchaseOriginal.prototype.getReceipt = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getReceipt", { "otherPromise": true, "platforms": ["iOS"] }, arguments); };
    InAppPurchaseOriginal.pluginName = "InAppPurchase";
    InAppPurchaseOriginal.plugin = "cordova-plugin-inapppurchase";
    InAppPurchaseOriginal.pluginRef = "inAppPurchase";
    InAppPurchaseOriginal.repo = "https://github.com/AlexDisler/cordova-plugin-inapppurchase";
    InAppPurchaseOriginal.platforms = ["Android", "iOS"];
    return InAppPurchaseOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var InAppPurchase = new InAppPurchaseOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9pbi1hcHAtcHVyY2hhc2UvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBOERyQyxpQ0FBaUI7Ozs7SUFVbEQsbUNBQVcsYUFBQyxTQUFtQjtJQVkvQiwyQkFBRyxhQUFDLFNBQWlCO0lBWXJCLGlDQUFTLGFBQUMsU0FBaUI7SUFjM0IsK0JBQU8sYUFBQyxXQUFtQixFQUFFLE9BQWUsRUFBRSxTQUFpQjtJQVcvRCx3Q0FBZ0I7SUFZaEIsa0NBQVU7Ozs7Ozt3QkF0SVo7RUErRG1DLGlCQUFpQjtTQUF2QyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cblxuLyoqXG4gKiBAbmFtZSBJbiBBcHAgUHVyY2hhc2VcbiAqIEBkZXNjcmlwdGlvblxuICogQSBsaWdodHdlaWdodCBDb3Jkb3ZhIHBsdWdpbiBmb3IgaW4gYXBwIHB1cmNoYXNlcyBvbiBpT1MvQW5kcm9pZC5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEluQXBwUHVyY2hhc2UgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2luLWFwcC1wdXJjaGFzZSc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBpYXA6IEluQXBwUHVyY2hhc2UpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuaWFwXG4gKiAgLmdldFByb2R1Y3RzKFsncHJvZDEnLCAncHJvZDInLCAuLi5dKVxuICogIC50aGVuKChwcm9kdWN0cykgPT4ge1xuICogICAgY29uc29sZS5sb2cocHJvZHVjdHMpO1xuICogICAgIC8vICBbeyBwcm9kdWN0SWQ6ICdjb20ueW91cmFwcC5wcm9kMScsICd0aXRsZSc6ICcuLi4nLCBkZXNjcmlwdGlvbjogJy4uLicsIHByaWNlOiAnLi4uJyB9LCAuLi5dXG4gKiAgfSlcbiAqICAuY2F0Y2goKGVycikgPT4ge1xuICogICAgY29uc29sZS5sb2coZXJyKTtcbiAqICB9KTtcbiAqXG4gKlxuICogdGhpcy5pYXBcbiAqICAgLmJ1eSgncHJvZDEnKVxuICogICAudGhlbigoZGF0YSk9PiB7XG4gKiAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gKiAgICAgLy8ge1xuICogICAgIC8vICAgdHJhbnNhY3Rpb25JZDogLi4uXG4gKiAgICAgLy8gICByZWNlaXB0OiAuLi5cbiAqICAgICAvLyAgIHNpZ25hdHVyZTogLi4uXG4gKiAgICAgLy8gfVxuICogICB9KVxuICogICAuY2F0Y2goKGVycik9PiB7XG4gKiAgICAgY29uc29sZS5sb2coZXJyKTtcbiAqICAgfSk7XG4gKlxuICogYGBgXG4gKlxuICogQGFkdmFuY2VkXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogLy8gZmlzdCBidXkgdGhlIHByb2R1Y3QuLi5cbiAqIHRoaXMuaWFwXG4gKiAgIC5idXkoJ2NvbnN1bWFibGVfcHJvZDEnKVxuICogICAudGhlbihkYXRhID0+IHRoaXMuaWFwLmNvbnN1bWUoZGF0YS5wcm9kdWN0VHlwZSwgZGF0YS5yZWNlaXB0LCBkYXRhLnNpZ25hdHVyZSkpXG4gKiAgIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdwcm9kdWN0IHdhcyBzdWNjZXNzZnVsbHkgY29uc3VtZWQhJykpXG4gKiAgIC5jYXRjaCggZXJyPT4gY29uc29sZS5sb2coZXJyKSlcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0luQXBwUHVyY2hhc2UnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1pbmFwcHB1cmNoYXNlJyxcbiAgcGx1Z2luUmVmOiAnaW5BcHBQdXJjaGFzZScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vQWxleERpc2xlci9jb3Jkb3ZhLXBsdWdpbi1pbmFwcHB1cmNoYXNlJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSW5BcHBQdXJjaGFzZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogUmV0cmlldmVzIGEgbGlzdCBvZiBmdWxsIHByb2R1Y3QgZGF0YSBmcm9tIEFwcGxlL0dvb2dsZS4gVGhpcyBtZXRob2QgbXVzdCBiZSBjYWxsZWQgYmVmb3JlIG1ha2luZyBwdXJjaGFzZXMuXG4gICAqIEBwYXJhbSB7YXJyYXk8c3RyaW5nPn0gcHJvZHVjdElkIGFuIGFycmF5IG9mIHByb2R1Y3QgaWRzLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYW4gYXJyYXkgb2Ygb2JqZWN0cy5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBvdGhlclByb21pc2U6IHRydWVcbiAgfSlcbiAgZ2V0UHJvZHVjdHMocHJvZHVjdElkOiBzdHJpbmdbXSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEJ1eSBhIHByb2R1Y3QgdGhhdCBtYXRjaGVzIHRoZSBwcm9kdWN0SWQuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9kdWN0SWQgQSBzdHJpbmcgdGhhdCBtYXRjaGVzIHRoZSBwcm9kdWN0IHlvdSB3YW50IHRvIGJ1eS5cbiAgICogQHJldHVybnMge1Byb21pc2U8e3RyYW5zYWN0aW9uSWQ6IHN0cmluZywgcmVjZWlwdDogc3RyaW5nLCBzaWduYXR1cmU6IHN0cmluZywgcHJvZHVjdFR5cGU6IHN0cmluZ30+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHRyYW5zYWN0aW9uIGRldGFpbHMuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb3RoZXJQcm9taXNlOiB0cnVlXG4gIH0pXG4gIGJ1eShwcm9kdWN0SWQ6IHN0cmluZyk6IFByb21pc2U8eyB0cmFuc2FjdGlvbklkOiBzdHJpbmcsIHJlY2VpcHQ6IHN0cmluZywgc2lnbmF0dXJlOiBzdHJpbmcsIHByb2R1Y3RUeXBlOiBzdHJpbmcgfT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTYW1lIGFzIGJ1eSwgYnV0IGZvciBzdWJzY3JpcHRpb24gYmFzZWQgcHJvZHVjdHMuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9kdWN0SWQgQSBzdHJpbmcgdGhhdCBtYXRjaGVzIHRoZSBwcm9kdWN0IHlvdSB3YW50IHRvIHN1YnNjcmliZSB0by5cbiAgICogQHJldHVybnMge1Byb21pc2U8e3RyYW5zYWN0aW9uSWQ6IHN0cmluZywgcmVjZWlwdDogc3RyaW5nLCBzaWduYXR1cmU6IHN0cmluZywgcHJvZHVjdFR5cGU6IHN0cmluZ30+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHRyYW5zYWN0aW9uIGRldGFpbHMuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb3RoZXJQcm9taXNlOiB0cnVlXG4gIH0pXG4gIHN1YnNjcmliZShwcm9kdWN0SWQ6IHN0cmluZyk6IFByb21pc2U8eyB0cmFuc2FjdGlvbklkOiBzdHJpbmcsIHJlY2VpcHQ6IHN0cmluZywgc2lnbmF0dXJlOiBzdHJpbmcsIHByb2R1Y3RUeXBlOiBzdHJpbmcgfT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxsIHRoaXMgZnVuY3Rpb24gYWZ0ZXIgcHVyY2hhc2luZyBhIFwiY29uc3VtYWJsZVwiIHByb2R1Y3QgdG8gbWFyayBpdCBhcyBjb25zdW1lZC4gT24gQW5kcm9pZCwgeW91IG11c3QgY29uc3VtZSBwcm9kdWN0cyB0aGF0IHlvdSB3YW50IHRvIGxldCB0aGUgdXNlciBwdXJjaGFzZSBtdWx0aXBsZSB0aW1lcy4gSWYgeW91IHdpbGwgbm90IGNvbnN1bWUgdGhlIHByb2R1Y3QgYWZ0ZXIgYSBwdXJjaGFzZSwgdGhlIG5leHQgdGltZSB5b3Ugd2lsbCBhdHRlbXB0IHRvIHB1cmNoYXNlIGl0IHlvdSB3aWxsIGdldCB0aGUgZXJyb3IgbWVzc2FnZTpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHByb2R1Y3RUeXBlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSByZWNlaXB0XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzaWduYXR1cmVcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBvdGhlclByb21pc2U6IHRydWVcbiAgfSlcbiAgY29uc3VtZShwcm9kdWN0VHlwZTogc3RyaW5nLCByZWNlaXB0OiBzdHJpbmcsIHNpZ25hdHVyZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVzdG9yZSBhbGwgcHVyY2hhc2VzIGZyb20gdGhlIHN0b3JlXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHdpdGggYW4gYXJyYXkgb2YgcHVyY2hhc2VzLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIG90aGVyUHJvbWlzZTogdHJ1ZVxuICB9KVxuICByZXN0b3JlUHVyY2hhc2VzKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgcmVjZWlwdC5cbiAgICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nPn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCBjb250YWlucyB0aGUgc3RyaW5nIGZvciB0aGUgcmVjZWlwdFxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIG90aGVyUHJvbWlzZTogdHJ1ZSxcbiAgICBwbGF0Zm9ybXM6IFsnaU9TJ11cbiAgfSlcbiAgZ2V0UmVjZWlwdCgpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 562 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export IAPError */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InAppPurchase2; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var IAPError = /** @class */ (function () {
    function IAPError() {
    }
    return IAPError;
}());

var InAppPurchase2Original = /** @class */ (function (_super) {
    __extends(InAppPurchase2Original, _super);
    function InAppPurchase2Original() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InAppPurchase2Original.prototype.get = function (idOrAlias) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "get", { "sync": true }, arguments); };
    InAppPurchase2Original.prototype.error = function (onError) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "error", { "sync": true }, arguments); };
    InAppPurchase2Original.prototype.register = function (product) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "register", { "sync": true }, arguments); };
    InAppPurchase2Original.prototype.when = function (query, event, callback) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "when", { "sync": true }, arguments); };
    InAppPurchase2Original.prototype.once = function (query, event, callback) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "once", { "sync": true }, arguments); };
    InAppPurchase2Original.prototype.off = function (callback) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "off", { "sync": true }, arguments); };
    InAppPurchase2Original.prototype.order = function (product, additionalData) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "order", { "sync": true }, arguments); };
    InAppPurchase2Original.prototype.ready = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "ready", {}, arguments); };
    InAppPurchase2Original.prototype.refresh = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "refresh", { "sync": true }, arguments); };
    Object.defineProperty(InAppPurchase2Original.prototype, "QUIET", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "QUIET"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "QUIET", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERROR", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERROR"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERROR", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "WARNING", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "WARNING"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "WARNING", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "INFO", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "INFO"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "INFO", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "DEBUG", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "DEBUG"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "DEBUG", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "verbosity", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "verbosity"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "verbosity", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "sandbox", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "sandbox"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "sandbox", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "FREE_SUBSCRIPTION", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "FREE_SUBSCRIPTION"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "FREE_SUBSCRIPTION", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "PAID_SUBSCRIPTION", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "PAID_SUBSCRIPTION"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "PAID_SUBSCRIPTION", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "NON_RENEWING_SUBSCRIPTION", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "NON_RENEWING_SUBSCRIPTION"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "NON_RENEWING_SUBSCRIPTION", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "CONSUMABLE", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "CONSUMABLE"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "CONSUMABLE", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "NON_CONSUMABLE", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "NON_CONSUMABLE"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "NON_CONSUMABLE", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_SETUP", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_SETUP"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_SETUP", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_LOAD", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_LOAD"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_LOAD", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_PURCHASE", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_PURCHASE"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_PURCHASE", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_LOAD_RECEIPTS", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_LOAD_RECEIPTS"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_LOAD_RECEIPTS", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_CLIENT_INVALID", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_CLIENT_INVALID"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_CLIENT_INVALID", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_PAYMENT_CANCELLED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_PAYMENT_CANCELLED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_PAYMENT_CANCELLED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_PAYMENT_INVALID", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_PAYMENT_INVALID"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_PAYMENT_INVALID", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_PAYMENT_NOT_ALLOWED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_PAYMENT_NOT_ALLOWED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_PAYMENT_NOT_ALLOWED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_UNKNOWN", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_UNKNOWN"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_UNKNOWN", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_REFRESH_RECEIPTS", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_REFRESH_RECEIPTS"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_REFRESH_RECEIPTS", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_INVALID_PRODUCT_ID", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_INVALID_PRODUCT_ID"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_INVALID_PRODUCT_ID", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_FINISH", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_FINISH"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_FINISH", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_COMMUNICATION", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_COMMUNICATION"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_COMMUNICATION", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_SUBSCRIPTIONS_NOT_AVAILABLE", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_SUBSCRIPTIONS_NOT_AVAILABLE"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_SUBSCRIPTIONS_NOT_AVAILABLE", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_MISSING_TOKEN", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_MISSING_TOKEN"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_MISSING_TOKEN", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_VERIFICATION_FAILED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_VERIFICATION_FAILED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_VERIFICATION_FAILED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_BAD_RESPONSE", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_BAD_RESPONSE"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_BAD_RESPONSE", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_REFRESH", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_REFRESH"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_REFRESH", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_PAYMENT_EXPIRED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_PAYMENT_EXPIRED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_PAYMENT_EXPIRED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_DOWNLOAD", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_DOWNLOAD"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_DOWNLOAD", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "ERR_SUBSCRIPTION_UPDATE_NOT_AVAILABLE", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ERR_SUBSCRIPTION_UPDATE_NOT_AVAILABLE"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ERR_SUBSCRIPTION_UPDATE_NOT_AVAILABLE", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "REGISTERED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "REGISTERED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "REGISTERED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "INVALID", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "INVALID"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "INVALID", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "VALID", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "VALID"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "VALID", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "REQUESTED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "REQUESTED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "REQUESTED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "INITIATED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "INITIATED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "INITIATED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "APPROVED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "APPROVED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "APPROVED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "FINISHED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "FINISHED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "FINISHED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "OWNED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "OWNED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "OWNED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "DOWNLOADING", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "DOWNLOADING"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "DOWNLOADING", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "DOWNLOADED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "DOWNLOADED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "DOWNLOADED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "INVALID_PAYLOAD", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "INVALID_PAYLOAD"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "INVALID_PAYLOAD", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "CONNECTION_FAILED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "CONNECTION_FAILED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "CONNECTION_FAILED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "PURCHASE_EXPIRED", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "PURCHASE_EXPIRED"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "PURCHASE_EXPIRED", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "products", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "products"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "products", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "validator", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "validator"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "validator", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InAppPurchase2Original.prototype, "log", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "log"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "log", value); },
        enumerable: true,
        configurable: true
    });
    InAppPurchase2Original.pluginName = "InAppPurchase2";
    InAppPurchase2Original.plugin = "cc.fovea.cordova.purchase";
    InAppPurchase2Original.pluginRef = "store";
    InAppPurchase2Original.repo = "https://github.com/j3k0/cordova-plugin-purchase";
    InAppPurchase2Original.platforms = ["iOS", "Android", "Windows"];
    InAppPurchase2Original.install = "ionic cordova plugin add cc.fovea.cordova.purchase --variable BILLING_KEY=\"<ANDROID_BILLING_KEY>\"";
    return InAppPurchase2Original;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var InAppPurchase2 = new InAppPurchase2Original();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 563 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IndexAppContent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var IndexAppContentOriginal = /** @class */ (function (_super) {
    __extends(IndexAppContentOriginal, _super);
    function IndexAppContentOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IndexAppContentOriginal.prototype.isIndexingAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isIndexingAvailable", {}, arguments); };
    IndexAppContentOriginal.prototype.setItems = function (items) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setItems", {}, arguments); };
    IndexAppContentOriginal.prototype.onItemPressed = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaFunctionOverride"])(this, "onItemPressed", {}, arguments); };
    IndexAppContentOriginal.prototype.clearItemsForDomains = function (domains) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "clearItemsForDomains", {}, arguments); };
    IndexAppContentOriginal.prototype.clearItemsForIdentifiers = function (identifiers) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "clearItemsForIdentifiers", {}, arguments); };
    IndexAppContentOriginal.prototype.setIndexingInterval = function (intervalMinutes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setIndexingInterval", {}, arguments); };
    IndexAppContentOriginal.pluginName = "IndexAppContent";
    IndexAppContentOriginal.plugin = "cordova-plugin-indexappcontent";
    IndexAppContentOriginal.pluginRef = "window.plugins.indexAppContent";
    IndexAppContentOriginal.repo = "https://github.com/johanblomgren/cordova-plugin-indexappcontent";
    IndexAppContentOriginal.platforms = ["iOS"];
    return IndexAppContentOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var IndexAppContent = new IndexAppContentOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9pbmRleC1hcHAtY29udGVudC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTyxtRUFBK0QsTUFBTSxvQkFBb0IsQ0FBQztBQUNqRyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0lBdUVSLG1DQUFpQjs7OztJQVFwRCw2Q0FBbUI7SUFVbkIsa0NBQVEsYUFBQyxLQUF1QjtJQVVoQyx1Q0FBYTtJQVViLDhDQUFvQixhQUFDLE9BQXNCO0lBVTNDLGtEQUF3QixhQUFDLFdBQTBCO0lBVW5ELDZDQUFtQixhQUFDLGVBQXVCOzs7Ozs7MEJBbkk3QztFQXlFcUMsaUJBQWlCO1NBQXpDLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBDb3Jkb3ZhRnVuY3Rpb25PdmVycmlkZSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuZXhwb3J0IGludGVyZmFjZSBJbmRleEl0ZW0ge1xuICBkb21haW46IHN0cmluZztcbiAgaWRlbnRpZmllcjogc3RyaW5nO1xuICB0aXRsZTogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBVcmwgdG8gaW1hZ2VcbiAgICovXG4gIHVybDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBJdGVtIGtleXdvcmRzXG4gICAqL1xuICBrZXl3b3Jkcz86IEFycmF5PHN0cmluZz47XG5cbiAgLyoqXG4gICAqIExpZmV0aW1lIGluIG1pbnV0ZXNcbiAgICovXG4gIGxpZmV0aW1lPzogbnVtYmVyO1xufVxuXG4vKipcbiAqIEBuYW1lIEluZGV4IEFwcCBDb250ZW50XG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoaXMgcGx1Z2luIGdpdmVzIHlvdSBhIEphdmFzY3JpcHQgQVBJIHRvIGludGVyYWN0IHdpdGggQ29yZSBTcG90bGlnaHQgb24gaU9TICg9PiBpT1MgOSkuXG4gKiBZb3UgY2FuIGFkZCwgdXBkYXRlIGFuZCBkZWxldGUgaXRlbXMgdG8gdGhlIHNwb3RsaWdodCBzZWFyY2ggaW5kZXguXG4gKiBTcG90bGlnaHQgU2VhcmNoIHdpbGwgaW5jbHVkZSB0aGVzZSBpdGVtcyBpbiB0aGUgcmVzdWx0IGxpc3QuIFlvdSBjYW4gZGVlcC1saW5rIHRoZSBzZWFyY2ggcmVzdWx0cyB3aXRoIHlvdXIgYXBwLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgSW5kZXhBcHBDb250ZW50IH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9pbmRleC1hcHAtY29udGVudCc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5kZXhBcHBDb250ZW50OiBJbmRleEFwcENvbnRlbnQpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHZhciBpdGVtcyA9IFtcbiAqICAgICAge1xuICogICAgICAgIGRvbWFpbjogJ2NvbS5teS5kb21haW4nLFxuICogICAgICAgIGlkZW50aWZpZXI6ICc4OGFzZGY3ZHNmJyxcbiAqICAgICAgICB0aXRsZTogJ0ZvbycsXG4gKiAgICAgICAgZGVzY3JpcHRpb246ICdCYXInLFxuICogICAgICAgIHVybDogJ2h0dHA6Ly9sb2NhdGlvbi9vZi9teS9pbWFnZS5qcGcnLFxuICogICAgfSxcbiAqICAgIHtcbiAqICAgICAgICBkb21haW46ICdjb20ub3RoZXIuZG9tYWluJyxcbiAqICAgICAgICBpZGVudGlmaWVyOiAnOWFzZDY3ZzZhJyxcbiAqICAgICAgICB0aXRsZTogJ0JheicsXG4gKiAgICAgICAgZGVzY3JpcHRpb246ICdXb290JyxcbiAqICAgICAgICB1cmw6ICdodHRwOi8vbG9jYXRpb24vb2YvbXkvaW1hZ2UyLmpwZycsXG4gKiAgICAgfVxuICogXTtcbiAqXG4gKiB0aGlzLmluZGV4QXBwQ29udGVudC5zZXRJdGVtcyhpdGVtcylcbiAqICAgLnRoZW4oKHJlczogYW55KSA9PiBjb25zb2xlLmxvZyhyZXMpKVxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdJbmRleEFwcENvbnRlbnQnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1pbmRleGFwcGNvbnRlbnQnLFxuICBwbHVnaW5SZWY6ICd3aW5kb3cucGx1Z2lucy5pbmRleEFwcENvbnRlbnQnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2pvaGFuYmxvbWdyZW4vY29yZG92YS1wbHVnaW4taW5kZXhhcHBjb250ZW50JyxcbiAgcGxhdGZvcm1zOiBbJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEluZGV4QXBwQ29udGVudCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogVGhlIG9wdGlvbiB0byBpbmRleCBhcHAgY29udGVudCBtaWdodCBub3QgYmUgYXZhaWxhYmxlIGF0IGFsbCBkdWUgdG8gZGV2aWNlIGxpbWl0YXRpb25zIG9yIHVzZXIgc2V0dGluZ3MuXG4gICAqIFRoZXJlZm9yZSBpdCdzIGhpZ2hseSByZWNvbW1lbmRlZCB0byBjaGVjayB1cGZyb250IGlmIGluZGV4aW5nIGlzIHBvc3NpYmxlLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGJvb2xlYW4+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdHJ1ZSBpZiBpbmRleGluZyBpcyBhdmFpbGFibGUsIGZhbHNlIGlmIG5vdFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc0luZGV4aW5nQXZhaWxhYmxlKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgb3IgY2hhbmdlIGl0ZW1zIHRvIHNwb3RsaWdodCBpbmRleFxuICAgKiBAcGFyYW0ge0FycmF5PEluZGV4SXRlbT59IEFycmF5IG9mIGl0ZW1zIHRvIGluZGV4XG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBpZiBpbmRleCBzZXQgd2FzIHN1Y2Nlc3NmdWxsXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldEl0ZW1zKGl0ZW1zOiBBcnJheTxJbmRleEl0ZW0+KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogSWYgdXNlciB0YXBzIG9uIGEgc2VhcmNoIHJlc3VsdCBpbiBzcG90bGlnaHQgdGhlbiB0aGUgYXBwIHdpbGwgYmUgbGF1bmNoZWQuXG4gICAqIFlvdSBjYW4gcmVnaXN0ZXIgYSBKYXZhc2NyaXB0IGhhbmRsZXIgdG8gZ2V0IGluZm9ybWVkIHdoZW4gdGhpcyBoYXBwZW5zLlxuICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxhbnk+fSByZXR1cm5zIGFuIG9ic2VydmFibGUgdGhhdCBub3RpZmllcyB5b3Ugd2hlbiBoZSB1c2VyIHByZXNzZXMgb24gdGhlIGhvbWUgc2NyZWVuIGljb25cbiAgICovXG4gIEBDb3Jkb3ZhRnVuY3Rpb25PdmVycmlkZSgpXG4gIG9uSXRlbVByZXNzZWQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2xlYXIgYWxsIGl0ZW1zIHN0b3JlZCBmb3IgYSBnaXZlbiBhcnJheSBvZiBkb21haW5zXG4gICAqIEBwYXJhbSB7QXJyYXk8c3RyaW5nPn0gQXJyYXkgb2YgZG9tYWlucyB0byBjbGVhclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJlc29sdmUgaWYgc3VjY2Vzc2Z1bGxcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgY2xlYXJJdGVtc0ZvckRvbWFpbnMoZG9tYWluczogQXJyYXk8c3RyaW5nPik6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENsZWFyIGFsbCBpdGVtcyBzdG9yZWQgZm9yIGEgZ2l2ZW4gYXJyYXkgb2YgaWRlbnRpZmllcnNcbiAgICogQHBhcmFtIHtBcnJheTxzdHJpbmc+fSBBcnJheSBvZiBpZGVudGlmaWVycyB0byBjbGVhclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJlc29sdmUgaWYgc3VjY2Vzc2Z1bGxcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgY2xlYXJJdGVtc0ZvcklkZW50aWZpZXJzKGlkZW50aWZpZXJzOiBBcnJheTxzdHJpbmc+KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogWW91IG1pZ2h0IHdhbnQgdG8gYXZvaWQgdG8gdXBkYXRlIHNwb3RsaWdodCBpbmRleCB0b28gZnJlcXVlbnRseS5cbiAgICogV2l0aG91dCBjYWxsaW5nIHRoaXMgZnVuY3Rpb24gYSBzdWJzZXF1ZW50IGNhbGwgdG8gbWFuaXB1bGF0ZSB0aGUgaW5kZXggaXMgb25seSBwb3NzaWJsZSBhZnRlciAxNDQwIG1pbnV0ZXMgKD0gMjQgaG91cnMpIVxuICAgKiBAcGFyYW0ge251bWJlcn0gTnVtZXJpYyB2YWx1ZSA9PiAwXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldEluZGV4aW5nSW50ZXJ2YWwoaW50ZXJ2YWxNaW51dGVzOiBudW1iZXIpIHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 564 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Insomnia; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var InsomniaOriginal = /** @class */ (function (_super) {
    __extends(InsomniaOriginal, _super);
    function InsomniaOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InsomniaOriginal.prototype.keepAwake = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "keepAwake", {}, arguments); };
    InsomniaOriginal.prototype.allowSleepAgain = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "allowSleepAgain", {}, arguments); };
    InsomniaOriginal.pluginName = "Insomnia";
    InsomniaOriginal.plugin = "cordova-plugin-insomnia";
    InsomniaOriginal.pluginRef = "plugins.insomnia";
    InsomniaOriginal.repo = "https://github.com/EddyVerbruggen/Insomnia-PhoneGap-Plugin";
    InsomniaOriginal.platforms = ["Android", "Browser", "Firefox OS", "iOS", "Windows", "Windows Phone 8"];
    return InsomniaOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Insomnia = new InsomniaOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9pbnNvbW5pYS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFzQzFDLDRCQUFpQjs7OztJQU83Qyw0QkFBUztJQVNULGtDQUFlOzs7Ozs7bUJBdkRqQjtFQXVDOEIsaUJBQWlCO1NBQWxDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuXG4vKipcbiAqIEBuYW1lIEluc29tbmlhXG4gKiBAZGVzY3JpcHRpb25cbiAqIFByZXZlbnQgdGhlIHNjcmVlbiBvZiB0aGUgbW9iaWxlIGRldmljZSBmcm9tIGZhbGxpbmcgYXNsZWVwLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgSW5zb21uaWEgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2luc29tbmlhJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGluc29tbmlhOiBJbnNvbW5pYSkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5pbnNvbW5pYS5rZWVwQXdha2UoKVxuICogICAudGhlbihcbiAqICAgICAoKSA9PiBjb25zb2xlLmxvZygnc3VjY2VzcycpLFxuICogICAgICgpID0+IGNvbnNvbGUubG9nKCdlcnJvcicpXG4gKiAgICk7XG4gKlxuICogdGhpcy5pbnNvbW5pYS5hbGxvd1NsZWVwQWdhaW4oKVxuICogICAudGhlbihcbiAqICAgICAoKSA9PiBjb25zb2xlLmxvZygnc3VjY2VzcycpLFxuICogICAgICgpID0+IGNvbnNvbGUubG9nKCdlcnJvcicpXG4gKiAgICk7XG4gKiBgYGBcbiAqXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnSW5zb21uaWEnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1pbnNvbW5pYScsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMuaW5zb21uaWEnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL0VkZHlWZXJicnVnZ2VuL0luc29tbmlhLVBob25lR2FwLVBsdWdpbicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0Jyb3dzZXInLCAnRmlyZWZveCBPUycsICdpT1MnLCAnV2luZG93cycsICdXaW5kb3dzIFBob25lIDgnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBJbnNvbW5pYSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogS2VlcHMgYXdha2UgdGhlIGFwcGxpY2F0aW9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGtlZXBBd2FrZSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBBbGxvd3MgdGhlIGFwcGxpY2F0aW9uIHRvIHNsZWVwIGFnYWluXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGFsbG93U2xlZXBBZ2FpbigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 565 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Instagram; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var InstagramOriginal = /** @class */ (function (_super) {
    __extends(InstagramOriginal, _super);
    function InstagramOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InstagramOriginal.prototype.isInstalled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isInstalled", { "callbackStyle": "node" }, arguments); };
    InstagramOriginal.prototype.share = function (canvasIdOrDataUrl, caption) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "share", { "callbackStyle": "node" }, arguments); };
    InstagramOriginal.prototype.shareAsset = function (assetLocalIdentifier) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareAsset", { "callbackOrder": "reverse" }, arguments); };
    InstagramOriginal.pluginName = "Instagram";
    InstagramOriginal.plugin = "cordova-instagram-plugin";
    InstagramOriginal.pluginRef = "Instagram";
    InstagramOriginal.repo = "https://github.com/vstirbu/InstagramPlugin";
    InstagramOriginal.platforms = ["Android", "iOS"];
    return InstagramOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Instagram = new InstagramOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9pbnN0YWdyYW0vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBNEJ6Qyw2QkFBaUI7Ozs7SUFVOUMsK0JBQVc7SUFlWCx5QkFBSyxhQUFDLGlCQUF5QixFQUFFLE9BQWdCO0lBWWpELDhCQUFVLGFBQUMsb0JBQTRCOzs7Ozs7b0JBbEV6QztFQTZCK0IsaUJBQWlCO1NBQW5DLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBJbnN0YWdyYW1cbiAqIEBkZXNjcmlwdGlvbiBTaGFyZSBhIHBob3RvIHdpdGggdGhlIGluc3RhZ3JhbSBhcHBcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEluc3RhZ3JhbSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvaW5zdGFncmFtJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGluc3RhZ3JhbTogSW5zdGFncmFtKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmluc3RhZ3JhbS5zaGFyZSgnZGF0YTppbWFnZS9wbmc7dWhkdWhmM2hmaWYzMycsICdDYXB0aW9uJylcbiAqICAgLnRoZW4oKCkgPT4gY29uc29sZS5sb2coJ1NoYXJlZCEnKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnSW5zdGFncmFtJyxcbiAgcGx1Z2luOiAnY29yZG92YS1pbnN0YWdyYW0tcGx1Z2luJyxcbiAgcGx1Z2luUmVmOiAnSW5zdGFncmFtJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS92c3RpcmJ1L0luc3RhZ3JhbVBsdWdpbicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEluc3RhZ3JhbSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogRGV0ZWN0IGlmIHRoZSBJbnN0YWdyYW0gYXBwbGljYXRpb24gaXMgaW5zdGFsbGVkIG9uIHRoZSBkZXZpY2UuXG4gICAqXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW58c3RyaW5nPn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXR1cm5zIGEgYm9vbGVhbiB2YWx1ZSBpZiBpbnN0YWxsZWQsIG9yIHRoZSBhcHAgdmVyc2lvbiBvbiBhbmRyb2lkXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tTdHlsZTogJ25vZGUnXG4gIH0pXG4gIGlzSW5zdGFsbGVkKCk6IFByb21pc2U8Ym9vbGVhbiB8IHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTaGFyZSBhbiBpbWFnZSBvbiBJbnN0YWdyYW1cbiAgICogTm90ZTogSW5zdGFncmFtIGFwcCBzdG9wcGVkIGFjY2VwdGluZyBwcmUtZmlsbGVkIGNhcHRpb25zIG9uIGJvdGggaU9TIGFuZCBBbmRyb2lkLiBBcyBhIHdvcmstYXJvdW5kLCB0aGUgY2FwdGlvbiBpcyBjb3BpZWQgdG8gdGhlIGNsaXBib2FyZC4gWW91IGhhdmUgdG8gaW5mb3JtIHlvdXIgdXNlcnMgdG8gcGFzdGUgdGhlIGNhcHRpb24uXG4gICAqXG4gICAqIEBwYXJhbSBjYW52YXNJZE9yRGF0YVVybCBUaGUgY2FudmFzIGVsZW1lbnQgaWQgb3IgdGhlIGRhdGFVUkwgb2YgdGhlIGltYWdlIHRvIHNoYXJlXG4gICAqIEBwYXJhbSBjYXB0aW9uIFRoZSBjYXB0aW9uIG9mIHRoZSBpbWFnZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIGlmIHRoZSBpbWFnZSB3YXMgc2hhcmVkXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tTdHlsZTogJ25vZGUnXG4gIH0pXG4gIHNoYXJlKGNhbnZhc0lkT3JEYXRhVXJsOiBzdHJpbmcsIGNhcHRpb24/OiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTaGFyZSBhIGxpYnJhcnkgYXNzZXQgb3IgdmlkZW9cbiAgICogQHBhcmFtIGFzc2V0TG9jYWxJZGVudGlmaWVyIEEgbG9jYWwgZmlsZVVSSVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIGlmIHRoZSBpbWFnZSB3YXMgc2hhcmVkXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIHNoYXJlQXNzZXQoYXNzZXRMb2NhbElkZW50aWZpZXI6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 566 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export IntelSecurityData */
/* unused harmony export IntelSecurityStorage */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IntelSecurity; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var IntelSecurityData = /** @class */ (function () {
    function IntelSecurityData() {
    }
    IntelSecurityData.prototype.createFromData = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createFromData", { "otherPromise": true }, arguments); };
    IntelSecurityData.prototype.createFromSealedData = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createFromSealedData", { "otherPromise": true }, arguments); };
    IntelSecurityData.prototype.getData = function (instanceID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getData", { "otherPromise": true }, arguments); };
    IntelSecurityData.prototype.getSealedData = function (instanceID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getSealedData", { "otherPromise": true }, arguments); };
    IntelSecurityData.prototype.getTag = function (instanceID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getTag", { "otherPromise": true }, arguments); };
    IntelSecurityData.prototype.getPolicy = function (instanceID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPolicy", { "otherPromise": true }, arguments); };
    IntelSecurityData.prototype.getOwners = function (instanceID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getOwners", { "otherPromise": true }, arguments); };
    IntelSecurityData.prototype.getCreator = function (instanceID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCreator", { "otherPromise": true }, arguments); };
    IntelSecurityData.prototype.getWebOwners = function (instanceID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getWebOwners", { "otherPromise": true }, arguments); };
    IntelSecurityData.prototype.changeExtraKey = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "changeExtraKey", { "otherPromise": true }, arguments); };
    IntelSecurityData.prototype.destroy = function (instanceID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "destroy", { "otherPromise": true }, arguments); };
    IntelSecurityData.pluginName = "IntelSecurity";
    IntelSecurityData.plugin = "com-intel-security-cordova-plugin";
    IntelSecurityData.pluginRef = "intel.security.secureData";
    return IntelSecurityData;
}());

var IntelSecurityStorage = /** @class */ (function () {
    function IntelSecurityStorage() {
    }
    IntelSecurityStorage.prototype.delete = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "delete", { "otherPromise": true }, arguments); };
    IntelSecurityStorage.prototype.read = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "read", { "otherPromise": true }, arguments); };
    IntelSecurityStorage.prototype.write = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "write", { "otherPromise": true }, arguments); };
    IntelSecurityStorage.pluginName = "IntelSecurity";
    IntelSecurityStorage.plugin = "com-intel-security-cordova-plugin";
    IntelSecurityStorage.pluginRef = "intel.security.secureStorage";
    return IntelSecurityStorage;
}());

var IntelSecurityOriginal = /** @class */ (function (_super) {
    __extends(IntelSecurityOriginal, _super);
    function IntelSecurityOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * returns an IntelSecurityStorage object
         * @type {IntelSecurityStorage}
         */
        _this.storage = new IntelSecurityStorage();
        /**
         * Returns an IntelSecurityData object
         * @type {IntelSecurityData}
         */
        _this.data = new IntelSecurityData();
        return _this;
    }
    IntelSecurityOriginal.pluginName = "IntelSecurity";
    IntelSecurityOriginal.plugin = "com-intel-security-cordova-plugin";
    IntelSecurityOriginal.pluginRef = "intel.security";
    IntelSecurityOriginal.repo = "https://github.com/AppSecurityApi/com-intel-security-cordova-plugin";
    IntelSecurityOriginal.platforms = ["Android", "iOS", "Windows", "Windows Phone 8"];
    return IntelSecurityOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var IntelSecurity = new IntelSecurityOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 567 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Intercom; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var IntercomOriginal = /** @class */ (function (_super) {
    __extends(IntercomOriginal, _super);
    function IntercomOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IntercomOriginal.prototype.registerIdentifiedUser = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerIdentifiedUser", {}, arguments); };
    IntercomOriginal.prototype.registerUnidentifiedUser = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerUnidentifiedUser", {}, arguments); };
    IntercomOriginal.prototype.reset = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "reset", {}, arguments); };
    IntercomOriginal.prototype.setSecureMode = function (secureHash, secureData) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setSecureMode", {}, arguments); };
    IntercomOriginal.prototype.setUserHash = function (secureHash) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setUserHash", {}, arguments); };
    IntercomOriginal.prototype.updateUser = function (attributes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "updateUser", {}, arguments); };
    IntercomOriginal.prototype.logEvent = function (eventName, metaData) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logEvent", {}, arguments); };
    IntercomOriginal.prototype.displayMessenger = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "displayMessenger", {}, arguments); };
    IntercomOriginal.prototype.displayMessageComposer = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "displayMessageComposer", {}, arguments); };
    IntercomOriginal.prototype.displayMessageComposerWithInitialMessage = function (initialMessage) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "displayMessageComposerWithInitialMessage", {}, arguments); };
    IntercomOriginal.prototype.displayConversationsList = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "displayConversationsList", {}, arguments); };
    IntercomOriginal.prototype.unreadConversationCount = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unreadConversationCount", {}, arguments); };
    IntercomOriginal.prototype.setLauncherVisibility = function (visibility) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setLauncherVisibility", {}, arguments); };
    IntercomOriginal.prototype.setInAppMessageVisibility = function (visibility) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setInAppMessageVisibility", {}, arguments); };
    IntercomOriginal.prototype.hideMessenger = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hideMessenger", {}, arguments); };
    IntercomOriginal.prototype.registerForPush = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerForPush", {}, arguments); };
    IntercomOriginal.pluginName = "Intercom";
    IntercomOriginal.plugin = "cordova-plugin-intercom";
    IntercomOriginal.pluginRef = "intercom";
    IntercomOriginal.repo = "https://github.com/intercom/intercom-cordova";
    IntercomOriginal.platforms = ["Android", "iOS"];
    return IntercomOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Intercom = new IntercomOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9pbnRlcmNvbS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFnQzFDLDRCQUFpQjs7OztJQVE3Qyx5Q0FBc0IsYUFBQyxPQUFZO0lBVW5DLDJDQUF3QixhQUFDLE9BQVk7SUFTckMsd0JBQUs7SUFXTCxnQ0FBYSxhQUFDLFVBQWtCLEVBQUUsVUFBZTtJQVVqRCw4QkFBVyxhQUFDLFVBQWtCO0lBVTlCLDZCQUFVLGFBQUMsVUFBZTtJQVcxQiwyQkFBUSxhQUFDLFNBQWlCLEVBQUUsUUFBYTtJQVN6QyxtQ0FBZ0I7SUFTaEIseUNBQXNCO0lBVXRCLDJEQUF3QyxhQUFDLGNBQXNCO0lBUy9ELDJDQUF3QjtJQVN4QiwwQ0FBdUI7SUFVdkIsd0NBQXFCLGFBQUMsVUFBa0I7SUFVeEMsNENBQXlCLGFBQUMsVUFBa0I7SUFTNUMsZ0NBQWE7SUFTYixrQ0FBZTs7Ozs7O21CQXpMakI7RUFnQzhCLGlCQUFpQjtTQUFsQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgSW50ZXJjb21cbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBpcyBhIHBsdWdpbiB0aGF0IGFsbG93cyB5b3VyIElvbmljIGFwcCB0byB1c2UgSW50ZXJjb20gZm9yIGlPUyBhbmQvb3IgSW50ZXJjb20gZm9yIEFuZHJvaWQuXG4gKiBGb2xsb3cgdGhlIG9mZmljYWwgZG9jdW1lbnRhdGlvbiB0byBzZXR1cCB0aGlzIHBsdWdpbiBjb3JyZWN0bHk6IGh0dHBzOi8vZGV2ZWxvcGVycy5pbnRlcmNvbS5jb20vZG9jcy9jb3Jkb3ZhLXBob25lZ2FwLWNvbmZpZ3VyYXRpb25cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEludGVyY29tIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9pbnRlcmNvbSc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgaW50ZXJjb206IEludGVyY29tKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmludGVyY29tLnJlZ2lzdGVyVW5pZGVudGlmaWVkVXNlcigpO1xuICogLi4uXG4gKiB0aGlzLmludGVyY29tLnJlZ2lzdGVyRm9yUHVzaCgpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0ludGVyY29tJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4taW50ZXJjb20nLFxuICBwbHVnaW5SZWY6ICdpbnRlcmNvbScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vaW50ZXJjb20vaW50ZXJjb20tY29yZG92YScsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBJbnRlcmNvbSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogUmVnaXN0ZXIgYSBpZGVudGlmaWVkIHVzZXJcbiAgICogQHBhcmFtIG9wdGlvbnMge2FueX0gT3B0aW9uc1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlZ2lzdGVySWRlbnRpZmllZFVzZXIob3B0aW9uczogYW55KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXIgYSB1bmlkZW50aWZpZWQgdXNlclxuICAgKiBAcGFyYW0gb3B0aW9ucyB7YW55fSBPcHRpb25zXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcmVnaXN0ZXJVbmlkZW50aWZpZWRVc2VyKG9wdGlvbnM6IGFueSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoaXMgcmVzZXRzIHRoZSBJbnRlcmNvbSBpbnRlZ3JhdGlvbidzIGNhY2hlIG9mIHlvdXIgdXNlcidzIGlkZW50aXR5IGFuZCB3aXBlcyB0aGUgc2xhdGUgY2xlYW4uXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcmVzZXQoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIHNlY3VyZUhhc2gge3N0cmluZ31cbiAgICogQHBhcmFtIHNlY3VyZURhdGEge2FueX1cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXRTZWN1cmVNb2RlKHNlY3VyZUhhc2g6IHN0cmluZywgc2VjdXJlRGF0YTogYW55KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIHNlY3VyZUhhc2gge3N0cmluZ31cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXRVc2VySGFzaChzZWN1cmVIYXNoOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0gYXR0cmlidXRlcyB7YW55fVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHVwZGF0ZVVzZXIoYXR0cmlidXRlczogYW55KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIGV2ZW50TmFtZSB7c3RyaW5nfVxuICAgKiBAcGFyYW0gbWV0YURhdGEge2FueX1cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBsb2dFdmVudChldmVudE5hbWU6IHN0cmluZywgbWV0YURhdGE6IGFueSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZGlzcGxheU1lc3NlbmdlcigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGRpc3BsYXlNZXNzYWdlQ29tcG9zZXIoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIGluaXRpYWxNZXNzYWdlIHtzdHJpbmd9XG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZGlzcGxheU1lc3NhZ2VDb21wb3NlcldpdGhJbml0aWFsTWVzc2FnZShpbml0aWFsTWVzc2FnZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBkaXNwbGF5Q29udmVyc2F0aW9uc0xpc3QoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICB1bnJlYWRDb252ZXJzYXRpb25Db3VudCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0gdmlzaWJpbGl0eSB7c3RyaW5nfVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldExhdW5jaGVyVmlzaWJpbGl0eSh2aXNpYmlsaXR5OiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0gdmlzaWJpbGl0eSB7c3RyaW5nfVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldEluQXBwTWVzc2FnZVZpc2liaWxpdHkodmlzaWJpbGl0eTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBoaWRlTWVzc2VuZ2VyKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcmVnaXN0ZXJGb3JQdXNoKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 568 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IsDebug; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var IsDebugOriginal = /** @class */ (function (_super) {
    __extends(IsDebugOriginal, _super);
    function IsDebugOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IsDebugOriginal.prototype.getIsDebug = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getIsDebug", {}, arguments); };
    IsDebugOriginal.pluginName = "IsDebug";
    IsDebugOriginal.plugin = "cordova-plugin-is-debug";
    IsDebugOriginal.pluginRef = "cordova.plugins.IsDebug";
    IsDebugOriginal.repo = "https://github.com/mattlewis92/cordova-plugin-is-debug";
    IsDebugOriginal.platforms = ["Android", "iOS"];
    return IsDebugOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var IsDebug = new IsDebugOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9pcy1kZWJ1Zy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUE4QjNDLDJCQUFpQjs7OztJQU81Qyw0QkFBVTs7Ozs7O2tCQXRDWjtFQStCNkIsaUJBQWlCO1NBQWpDLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBJcyBEZWJ1Z1xuICogQGRlc2NyaXB0aW9uXG4gKiBEZXRlY3QgaWYgdGhlIGFwcCBpcyBydW5uaW5nIGluIGRlYnVnIG1vZGUgb3Igbm90LlxuICogRGVidWcgbW9kZSBpcyB3aGVuIHRoZSBhcHAgaXMgYnVpbHQgYW5kIGluc3RhbGxlZCBsb2NhbGx5IHZpYSB4Y29kZSAvIGVjbGlwc2UgLyB0aGUgY29yZG92YSBjbGkgZXRjLCBjb21wYXJlZCB0byByZWxlYXNlIG1vZGUgd2hlbiB0aGUgYXBwIHdhcyBkb3dubG9hZGVkIGZyb20gdGhlIGFwcCAvIHBsYXkgc3RvcmUgdmlhIGFuIGVuZCB1c2VyLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgSXNEZWJ1ZyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvaXMtZGVidWcnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgaXNEZWJ1ZzogSXNEZWJ1ZykgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5pc0RlYnVnLmdldElzRGVidWcoKVxuICogICAudGhlbigoaXNEZWJ1ZzogYm9vbGVhbikgPT4gY29uc29sZS5sb2coJ0lzIGRlYnVnOicsIGlzRGVidWcpKVxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdJc0RlYnVnJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4taXMtZGVidWcnLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuSXNEZWJ1ZycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vbWF0dGxld2lzOTIvY29yZG92YS1wbHVnaW4taXMtZGVidWcnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBJc0RlYnVnIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmUgaWYgYW4gYXBwIHdhcyBpbnN0YWxsZWQgdmlhIHhjb2RlIC8gZWNsaXBzZSAvIHRoZSBpb25pYyBDTEkgZXRjXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdHJ1ZSBpZiB0aGUgYXBwIHdhcyBpbnN0YWxsZWQgdmlhIHhjb2RlIC8gZWNsaXBzZSAvIHRoZSBpb25pYyBDTEkgZXRjLiBJdCB3aWxsIHJlc29sdmUgdG8gZmFsc2UgaWYgdGhlIGFwcCB3YXMgZG93bmxvYWRlZCBmcm9tIHRoZSBhcHAgLyBwbGF5IHN0b3JlIGJ5IHRoZSBlbmQgdXNlci5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0SXNEZWJ1ZygpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 569 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return JinsMeme; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var JinsMemeOriginal = /** @class */ (function (_super) {
    __extends(JinsMemeOriginal, _super);
    function JinsMemeOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    JinsMemeOriginal.prototype.setAppClientID = function (appClientId, clientSecret) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setAppClientID", {}, arguments); };
    JinsMemeOriginal.prototype.startScan = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startScan", { "observable": true, "clearFunction": "stopScan", "clearWithArgs": true }, arguments); };
    JinsMemeOriginal.prototype.stopScan = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopScan", {}, arguments); };
    JinsMemeOriginal.prototype.connect = function (target) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                var data = __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"].plugins.JinsMemePlugin.connect(target, observer.next.bind(observer), observer.complete.bind(observer), observer.error.bind(observer));
                return function () { return console.log(data); };
            });
        }
    }(); };
    JinsMemeOriginal.prototype.setAutoConnect = function (flag) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setAutoConnect", {}, arguments); };
    JinsMemeOriginal.prototype.isConnected = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isConnected", {}, arguments); };
    JinsMemeOriginal.prototype.disconnect = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disconnect", {}, arguments); };
    JinsMemeOriginal.prototype.startDataReport = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startDataReport", { "observable": true, "clearFunction": "stopDataReport", "clearWithArgs": true }, arguments); };
    JinsMemeOriginal.prototype.stopDataReport = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopDataReport", {}, arguments); };
    JinsMemeOriginal.prototype.getSDKVersion = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getSDKVersion", {}, arguments); };
    JinsMemeOriginal.prototype.getConnectedByOthers = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getConnectedByOthers", {}, arguments); };
    JinsMemeOriginal.prototype.isCalibrated = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isCalibrated", {}, arguments); };
    JinsMemeOriginal.prototype.getConnectedDeviceType = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getConnectedDeviceType", {}, arguments); };
    JinsMemeOriginal.prototype.getConnectedDeviceSubType = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getConnectedDeviceSubType", {}, arguments); };
    JinsMemeOriginal.prototype.getFWVersion = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getFWVersion", {}, arguments); };
    JinsMemeOriginal.prototype.getHWVersion = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getHWVersion", {}, arguments); };
    JinsMemeOriginal.prototype.isDataReceiving = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isDataReceiving", {}, arguments); };
    JinsMemeOriginal.pluginName = "JINS MEME ES";
    JinsMemeOriginal.plugin = "cordova-plugin-jins-meme-es";
    JinsMemeOriginal.pluginRef = "com.jins_jp.meme.plugin";
    JinsMemeOriginal.repo = "https://github.com/BlyncSync/cordova-plugin-jins-meme-es";
    JinsMemeOriginal.platforms = ["Android", "iOS"];
    return JinsMemeOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var JinsMeme = new JinsMemeOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9qaW5zLW1lbWUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sNkRBQW9ELE1BQU0sb0JBQW9CLENBQUM7QUFDdEYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQXNDZiw0QkFBaUI7Ozs7SUFXN0MsaUNBQWMsYUFBQyxXQUFtQixFQUFFLFlBQW9CO0lBYXhELDRCQUFTO0lBU1QsMkJBQVE7SUFZUiwwQkFBTyxhQUFDLE1BQWM7OENBQW1CLENBQUM7WUFDeEMsTUFBTSxDQUFDLElBQUksVUFBVSxDQUFNLFVBQUMsUUFBYTtnQkFDdkMsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUN6SixNQUFNLENBQUMsY0FBTSxPQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQWpCLENBQWlCLENBQUM7WUFDakMsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDOztJQVFELGlDQUFjLGFBQUMsSUFBYTtJQVM1Qiw4QkFBVztJQVNYLDZCQUFVO0lBYVYsa0NBQWU7SUFTZixpQ0FBYztJQVVkLGdDQUFhO0lBU2IsdUNBQW9CO0lBU3BCLCtCQUFZO0lBU1oseUNBQXNCO0lBU3RCLDRDQUF5QjtJQVN6QiwrQkFBWTtJQVNaLCtCQUFZO0lBU1osa0NBQWU7Ozs7OzttQkFuTmpCO0VBd0M4QixpQkFBaUI7U0FBbEMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIENvcmRvdmFDaGVjaywgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuZGVjbGFyZSBjb25zdCBjb3Jkb3ZhOiBhbnk7XG5cbi8qKlxuICogQG5hbWUgSmlucyBNZW1lXG4gKiBAZGVzY3JpcHRpb25cbiAqIEltcGxlbWVudGF0aW9uIG9mIHRoZSBKSU5TIE1FTUUgU0RLXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBKaW5zTWVtZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvamlucy1tZW1lJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGppbnNNZW1lOiBKaW5zTWVtZSkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5qaW5zTWVtZS5zZXRBcHBDbGllbnRJRChhcHBDbGllbnRJZDogc3RyaW5nLCBjbGllbnRTZWNyZXQ6IHN0cmluZykudGhlbihcbiAqICAgLy8gQmx1ZXRvb3RoIHNob3VsZCBiZSBlbmFibGVkIGFuZCB0aGUgSklOUyBNRU1FIHBvd2VyZWQgb24gKGJsaW5raW5nIGJsdWUgbGlnaHQpXG4gKiAgIHRoaXMuamluc01lbWUuc3RhcnRTY2FuKCkuc3Vic2NyaWJlKChtZW1lX2FkZHIpID0+IHtcbiAqICAgICB0aGlzLmppbnNNZW1lLmNvbm5lY3QobWVtZV9hZGRyKS5zdWJzY3JpYmUoKGNvbm5lY3RSZXN1bHQpID0+IHtcbiAqICAgICAgIHRoaXMubWVtZVNlcnZpY2Uuc3RhcnREYXRhUmVwb3J0KCkuc3Vic2NyaWJlKChkYXRhUmVwb3J0KSA9PiB7XG4gKiAgICAgICAgIGNvbnNvbGUubG9nKGRhdGFSZXBvcnQpO1xuICogICAgICAgfSk7XG4gKiAgICAgfSk7XG4gKiAgIH0pO1xuICogLmNhdGNoKGNvbnNvbGUubG9nKCdqaW5zTWVtZS5zZXRBcHBDbGllbnRJRCBhdXRoZW50aWNhdGlvbiBlcnJvcicpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdKSU5TIE1FTUUgRVMnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1qaW5zLW1lbWUtZXMnLFxuICBwbHVnaW5SZWY6ICdjb20uamluc19qcC5tZW1lLnBsdWdpbicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vQmx5bmNTeW5jL2NvcmRvdmEtcGx1Z2luLWppbnMtbWVtZS1lcycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEppbnNNZW1lIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogQXV0aGVudGljYXRpb24gYW5kIGF1dGhvcml6YXRpb24gb2YgQXBwIGFuZCBTREsuXG4gICAqIE11c3QgY2FsbCB0aGlzIG1ldGhvZCBmaXJzdC5cbiAgICogU2lnbiB1cCBmb3IgYW4gYXBwIElEIChhbmQgZ2V0IGFuIGFwcC9jbGllbnQgc2VjcmV0KSBhdCBkZXZlbG9wZXJzLmppbnMuY29tXG4gICAqXG4gICAqQHBhcmFtIHtzdHJpbmd9IHNldEFwcENsaWVudElEXG4gICAqQHBhcmFtIHtzdHJpbmd9IGNsaWVudFNlY3JldFxuICAgKkByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldEFwcENsaWVudElEKGFwcENsaWVudElkOiBzdHJpbmcsIGNsaWVudFNlY3JldDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU3RhcnRzIHNjYW5uaW5nIGZvciBKSU5TIE1FTUUuXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAnc3RvcFNjYW4nLFxuICAgIGNsZWFyV2l0aEFyZ3M6IHRydWVcbiAgfSlcbiAgc3RhcnRTY2FuKCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3BzIHNjYW5uaW5nIEpJTlMgTUVNRS5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc3RvcFNjYW4oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRXN0YWJsaXNoZXMgY29ubmVjdGlvbiB0byBKSU5TIE1FTUUuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0YXJnZXRcbiAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhQ2hlY2soe1xuICAgIG9ic2VydmFibGU6IHRydWVcbiAgfSlcbiAgY29ubmVjdCh0YXJnZXQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIG5ldyBPYnNlcnZhYmxlPGFueT4oKG9ic2VydmVyOiBhbnkpID0+IHtcbiAgICAgIGxldCBkYXRhID0gY29yZG92YS5wbHVnaW5zLkppbnNNZW1lUGx1Z2luLmNvbm5lY3QodGFyZ2V0LCBvYnNlcnZlci5uZXh0LmJpbmQob2JzZXJ2ZXIpLCBvYnNlcnZlci5jb21wbGV0ZS5iaW5kKG9ic2VydmVyKSwgb2JzZXJ2ZXIuZXJyb3IuYmluZChvYnNlcnZlcikpO1xuICAgICAgcmV0dXJuICgpID0+IGNvbnNvbGUubG9nKGRhdGEpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCBhdXRvIGNvbm5lY3Rpb24gbW9kZS5cbiAgICpAcGFyYW0ge0Jvb2xlYW59IGZsYWdcbiAgICpAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXRBdXRvQ29ubmVjdChmbGFnOiBib29sZWFuKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB3aGV0aGVyIGEgY29ubmVjdGlvbiB0byBKSU5TIE1FTUUgaGFzIGJlZW4gZXN0YWJsaXNoZWQuXG4gICAqQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaXNDb25uZWN0ZWQoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGlzY29ubmVjdHMgZnJvbSBKSU5TIE1FTUUuXG4gICAqQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZGlzY29ubmVjdCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdGFydHMgcmVjZWl2aW5nIHJlYWx0aW1lIGRhdGEuXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAnc3RvcERhdGFSZXBvcnQnLFxuICAgIGNsZWFyV2l0aEFyZ3M6IHRydWVcbiAgfSlcbiAgc3RhcnREYXRhUmVwb3J0KCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3BzIHJlY2VpdmluZyBkYXRhLlxuICAgKkByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHN0b3BEYXRhUmVwb3J0KCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgU0RLIHZlcnNpb24uXG4gICAqXG4gICAqQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0U0RLVmVyc2lvbigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIEpJTlMgTUVNRSBjb25uZWN0ZWQgd2l0aCBvdGhlciBhcHBzLlxuICAgKkByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldENvbm5lY3RlZEJ5T3RoZXJzKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgY2FsaWJyYXRpb24gc3RhdHVzXG4gICAqQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaXNDYWxpYnJhdGVkKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgZGV2aWNlIHR5cGUuXG4gICAqQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0Q29ubmVjdGVkRGV2aWNlVHlwZSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGhhcmR3YXJlIHZlcnNpb24uXG4gICAqQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0Q29ubmVjdGVkRGV2aWNlU3ViVHlwZSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIEZXIFZlcnNpb24uXG4gICAqQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0RldWZXJzaW9uKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgSFcgVmVyc2lvbi5cbiAgICpAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRIV1ZlcnNpb24oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyByZXNwb25zZSBhYm91dCB3aGV0aGVyIGRhdGEgd2FzIHJlY2VpdmVkIG9yIG5vdC5cbiAgICpAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc0RhdGFSZWNlaXZpbmcoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 570 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Keyboard; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var KeyboardOriginal = /** @class */ (function (_super) {
    __extends(KeyboardOriginal, _super);
    function KeyboardOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KeyboardOriginal.prototype.hideKeyboardAccessoryBar = function (hide) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hideKeyboardAccessoryBar", { "sync": true }, arguments); };
    KeyboardOriginal.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "sync": true, "platforms": ["Android", "BlackBerry 10", "Windows"] }, arguments); };
    KeyboardOriginal.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "close", { "sync": true, "platforms": ["iOS", "Android", "BlackBerry 10", "Windows"] }, arguments); };
    KeyboardOriginal.prototype.disableScroll = function (disable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableScroll", { "sync": true, "platforms": ["iOS", "Windows"] }, arguments); };
    KeyboardOriginal.prototype.onKeyboardShow = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onKeyboardShow", { "eventObservable": true, "event": "native.keyboardshow", "platforms": ["iOS", "Android", "BlackBerry 10", "Windows"] }, arguments); };
    KeyboardOriginal.prototype.onKeyboardHide = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onKeyboardHide", { "eventObservable": true, "event": "native.keyboardhide", "platforms": ["iOS", "Android", "BlackBerry 10", "Windows"] }, arguments); };
    KeyboardOriginal.pluginName = "Keyboard";
    KeyboardOriginal.plugin = "ionic-plugin-keyboard";
    KeyboardOriginal.pluginRef = "cordova.plugins.Keyboard";
    KeyboardOriginal.repo = "https://github.com/ionic-team/ionic-plugin-keyboard";
    KeyboardOriginal.platforms = ["Android", "BlackBerry 10", "iOS", "Windows"];
    return KeyboardOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Keyboard = new KeyboardOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9rZXlib2FyZC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0lBNEJmLDRCQUFpQjs7OztJQU83QywyQ0FBd0IsYUFBQyxJQUFhO0lBVXRDLHVCQUFJO0lBVUosd0JBQUs7SUFXTCxnQ0FBYSxhQUFDLE9BQWdCO0lBWTlCLGlDQUFjO0lBYWQsaUNBQWM7Ozs7OzttQkE3RmhCO0VBOEI4QixpQkFBaUI7U0FBbEMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5cblxuLyoqXG4gKiBAbmFtZSBLZXlib2FyZFxuICogQGRlc2NyaXB0aW9uXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEtleWJvYXJkIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9rZXlib2FyZCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBrZXlib2FyZDogS2V5Ym9hcmQpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMua2V5Ym9hcmQuc2hvdygpO1xuICpcbiAqIHRoaXMua2V5Ym9hcmQuY2xvc2UoKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdLZXlib2FyZCcsXG4gIHBsdWdpbjogJ2lvbmljLXBsdWdpbi1rZXlib2FyZCcsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5LZXlib2FyZCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vaW9uaWMtdGVhbS9pb25pYy1wbHVnaW4ta2V5Ym9hcmQnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdCbGFja0JlcnJ5IDEwJywgJ2lPUycsICdXaW5kb3dzJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgS2V5Ym9hcmQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIEhpZGUgdGhlIGtleWJvYXJkIGFjY2Vzc29yeSBiYXIgd2l0aCB0aGUgbmV4dCwgcHJldmlvdXMgYW5kIGRvbmUgYnV0dG9ucy5cbiAgICogQHBhcmFtIGhpZGUge2Jvb2xlYW59XG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgaGlkZUtleWJvYXJkQWNjZXNzb3J5QmFyKGhpZGU6IGJvb2xlYW4pOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBGb3JjZSBrZXlib2FyZCB0byBiZSBzaG93bi5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICAgIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0JsYWNrQmVycnkgMTAnLCAnV2luZG93cyddXG4gIH0pXG4gIHNob3coKTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogQ2xvc2UgdGhlIGtleWJvYXJkIGlmIG9wZW4uXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgICBwbGF0Zm9ybXM6IFsnaU9TJywgJ0FuZHJvaWQnLCAnQmxhY2tCZXJyeSAxMCcsICdXaW5kb3dzJ11cbiAgfSlcbiAgY2xvc2UoKTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogUHJldmVudHMgdGhlIG5hdGl2ZSBVSVNjcm9sbFZpZXcgZnJvbSBtb3Zpbmcgd2hlbiBhbiBpbnB1dCBpcyBmb2N1c2VkLlxuICAgKiBAcGFyYW0gZGlzYWJsZSB7Ym9vbGVhbn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICAgIHBsYXRmb3JtczogWydpT1MnLCAnV2luZG93cyddXG4gIH0pXG4gIGRpc2FibGVTY3JvbGwoZGlzYWJsZTogYm9vbGVhbik6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYW4gb2JzZXJ2YWJsZSB0aGF0IG5vdGlmaWVzIHlvdSB3aGVuIHRoZSBrZXlib2FyZCBpcyBzaG93bi4gVW5zdWJzY3JpYmUgdG8gb2JzZXJ2YWJsZSB0byBjYW5jZWwgZXZlbnQgd2F0Y2guXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxuICAgIGV2ZW50OiAnbmF0aXZlLmtleWJvYXJkc2hvdycsXG4gICAgcGxhdGZvcm1zOiBbJ2lPUycsICdBbmRyb2lkJywgJ0JsYWNrQmVycnkgMTAnLCAnV2luZG93cyddXG4gIH0pXG4gIG9uS2V5Ym9hcmRTaG93KCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYW4gb2JzZXJ2YWJsZSB0aGF0IG5vdGlmaWVzIHlvdSB3aGVuIHRoZSBrZXlib2FyZCBpcyBoaWRkZW4uIFVuc3Vic2NyaWJlIHRvIG9ic2VydmFibGUgdG8gY2FuY2VsIGV2ZW50IHdhdGNoLlxuICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBldmVudDogJ25hdGl2ZS5rZXlib2FyZGhpZGUnLFxuICAgIHBsYXRmb3JtczogWydpT1MnLCAnQW5kcm9pZCcsICdCbGFja0JlcnJ5IDEwJywgJ1dpbmRvd3MnXVxuICB9KVxuICBvbktleWJvYXJkSGlkZSgpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 571 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Keychain; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var KeychainOriginal = /** @class */ (function (_super) {
    __extends(KeychainOriginal, _super);
    function KeychainOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KeychainOriginal.prototype.get = function (key, touchIDMessage) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "get", { "callbackOrder": "reverse" }, arguments); };
    KeychainOriginal.prototype.set = function (key, value, useTouchID) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "set", { "callbackOrder": "reverse" }, arguments); };
    KeychainOriginal.prototype.getJson = function (key, touchIDMessage) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getJson", { "callbackOrder": "reverse" }, arguments); };
    KeychainOriginal.prototype.setJson = function (key, obj, useTouchId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setJson", { "callbackOrder": "reverse" }, arguments); };
    KeychainOriginal.prototype.remove = function (key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "remove", { "callbackOrder": "reverse" }, arguments); };
    KeychainOriginal.pluginName = "Keychain";
    KeychainOriginal.plugin = "cordova-plugin-ios-keychain";
    KeychainOriginal.pluginRef = "window.Keychain";
    KeychainOriginal.repo = "https://github.com/ionic-team/cordova-plugin-ios-keychain";
    KeychainOriginal.platforms = ["iOS"];
    return KeychainOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Keychain = new KeychainOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9rZXljaGFpbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFvQzFDLDRCQUFpQjs7OztJQVc3QyxzQkFBRyxhQUFDLEdBQVcsRUFBRSxjQUF1QjtJQWN4QyxzQkFBRyxhQUFDLEdBQVcsRUFBRSxLQUFnQyxFQUFFLFVBQW9CO0lBYXZFLDBCQUFPLGFBQUMsR0FBVyxFQUFFLGNBQXVCO0lBYzVDLDBCQUFPLGFBQUMsR0FBVyxFQUFFLEdBQVEsRUFBRSxVQUFvQjtJQVluRCx5QkFBTSxhQUFDLEdBQVc7Ozs7OzttQkFyR3BCO0VBcUM4QixpQkFBaUI7U0FBbEMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5cbi8qKlxuICogQG5hbWUgS2V5Y2hhaW5cbiAqIEBkZXNjcmlwdGlvblxuICogR2V0IGFuZCBzZXQgZGF0YSBpbiB0aGUgaU9TIEtleWNoYWluXG4gKlxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGBjb3Jkb3ZhLXBsdWdpbi1pb3Mta2V5Y2hhaW5gLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbS2V5Y2hhaW4gcGx1Z2luIGRvY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL2NvcmRvdmEtcGx1Z2luLWlvcy1rZXljaGFpbikuXG4gKlxuICogU2VlIGFsc28gW1NlY3VyZSBTdG9yYWdlXShodHRwczovL2lvbmljZnJhbWV3b3JrLmNvbS9kb2NzL25hdGl2ZS9zZWN1cmUtc3RvcmFnZS8pIGZvciBtb3JlIHN1cHBvcnRlZCBwbGF0Zm9ybXMuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBLZXljaGFpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUva2V5Y2hhaW4nO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUga2V5Y2hhaW46IEtleWNoYWluKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmtleWNoYWluLnNldChrZXksIHZhbHVlKS50aGVuKCgpID0+IHtcbiAqICAgdGhpcy5rZXljaGFpbi5nZXQoa2V5KVxuICogICAgIC50aGVuKHZhbHVlID0+IGNvbnNvbGUubG9nKCdHb3QgdmFsdWUnLCB2YWx1ZSkpXG4gKiAgICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKCdFcnJvciBnZXR0aW5nJywgZXJyKSk7XG4gKiB9KVxuICogLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKCdFcnJvciBzZXR0aW5nJywgZXJyKSk7XG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdLZXljaGFpbicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWlvcy1rZXljaGFpbicsXG4gIHBsdWdpblJlZjogJ3dpbmRvdy5LZXljaGFpbicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vaW9uaWMtdGVhbS9jb3Jkb3ZhLXBsdWdpbi1pb3Mta2V5Y2hhaW4nLFxuICBwbGF0Zm9ybXM6IFsnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgS2V5Y2hhaW4gZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFJldHJpZXZlcyBhIHZhbHVlIGZvciBhIGtleVxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IHRoZSBrZXkgdG8gcmV0cmlldmVcbiAgICogQHBhcmFtIHtzdHJpbmd9IFt0b3VjaElETWVzc2FnZV0gdGhlIG1lc3NhZ2UgdG8gc2hvdyB1bmRlcm5lYXRoIHRoZSBUb3VjaElEIHByb21wdCAoaWYgYW55KVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBnZXQoa2V5OiBzdHJpbmcsIHRvdWNoSURNZXNzYWdlPzogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2V0cyBhIHZhbHVlIGZvciBhIGtleVxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IHRoZSBrZXkgdG8gc2V0XG4gICAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcnxib29sZWFufSB2YWx1ZSB0aGUgdmFsdWUgdG8gc2V0XG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gW3VzZVRvdWNoSURdIHdoZXRoZXIgdG8gc3RvcmUgdGhlIHZhbHVlIHdpdGggc2VjdXJpdHkgc3VjaCB0aGF0IFRvdWNoSUQgd2lsbCBiZSBuZWVkZWQgdG8gZ3JhYiBpdFxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBzZXQoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuLCB1c2VUb3VjaElEPzogYm9vbGVhbik6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgYSBKU09OIHZhbHVlIGZvciBhIGtleVxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IHRoZSBrZXkgdG8gcmV0cmlldmVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHRvdWNoSURNZXNzYWdlIHRoZSBtZXNzYWdlIHRvIHNob3cgdW5kZXJuZWF0aCB0aGUgVG91Y2hJRCBwcm9tcHQgKGlmIGFueSlcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAgZ2V0SnNvbihrZXk6IHN0cmluZywgdG91Y2hJRE1lc3NhZ2U/OiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIGEgSlNPTiB2YWx1ZSBmb3IgYSBrZXlcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleSB0aGUga2V5IHRvIHNldFxuICAgKiBAcGFyYW0ge2FueX0gb2JqIHZhbHVlIHRoZSB2YWx1ZSB0byBzZXRcbiAgICogQHBhcmFtIHtib29sZWFufSBbdXNlVG91Y2hJZF0gV2V0aGVyIHRvIHN0b3JlIHRoZSB2YWx1ZSB3aXRoIHNlY3VyaXR5IHN1Y2ggdGhhdCBUb3VjaElEIHdpbGwgYmUgbmVlZGVkIHRvIGdyYWIgaXRcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAgc2V0SnNvbihrZXk6IHN0cmluZywgb2JqOiBhbnksIHVzZVRvdWNoSWQ/OiBib29sZWFuKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyBhIHZhbHVlIGZvciBhIGtleVxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IHRoZSBrZXkgdG8gcmVtb3ZlXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIHJlbW92ZShrZXk6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 572 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return KeychainTouchId; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var KeychainTouchIdOriginal = /** @class */ (function (_super) {
    __extends(KeychainTouchIdOriginal, _super);
    function KeychainTouchIdOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KeychainTouchIdOriginal.prototype.isAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAvailable", {}, arguments); };
    KeychainTouchIdOriginal.prototype.save = function (key, password) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "save", {}, arguments); };
    KeychainTouchIdOriginal.prototype.verify = function (key, message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "verify", {}, arguments); };
    KeychainTouchIdOriginal.prototype.has = function (key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "has", {}, arguments); };
    KeychainTouchIdOriginal.prototype.delete = function (key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "delete", {}, arguments); };
    KeychainTouchIdOriginal.prototype.setLocale = function (locale) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setLocale", {}, arguments); };
    KeychainTouchIdOriginal.pluginName = "KeychainTouchId";
    KeychainTouchIdOriginal.plugin = "cordova-plugin-keychain-touch-id";
    KeychainTouchIdOriginal.pluginRef = "plugins.touchid";
    KeychainTouchIdOriginal.repo = "https://github.com/sjhoeksma/cordova-plugin-keychain-touch-id";
    KeychainTouchIdOriginal.platforms = ["Android", "iOS"];
    return KeychainTouchIdOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var KeychainTouchId = new KeychainTouchIdOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9rZXljaGFpbi10b3VjaC1pZC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFnQ25DLG1DQUFpQjs7OztJQU9wRCxxQ0FBVztJQVlYLDhCQUFJLGFBQUMsR0FBVyxFQUFFLFFBQWdCO0lBWWxDLGdDQUFNLGFBQUMsR0FBVyxFQUFFLE9BQWU7SUFVbkMsNkJBQUcsYUFBQyxHQUFXO0lBVWYsZ0NBQU0sYUFBQyxHQUFXO0lBU2xCLG1DQUFTLGFBQUMsTUFBYzs7Ozs7OzBCQTdGMUI7RUFpQ3FDLGlCQUFpQjtTQUF6QyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgS2V5Y2hhaW4gVG91Y2ggSWRcbiAqIEBkZXNjcmlwdGlvblxuICogQSBjb3Jkb3ZhIHBsdWdpbiBhZGRpbmcgdGhlIGlPUyBUb3VjaElEIC8gQW5kcm9pZCBmaW5nZXJwcmludCB0byB5b3VyXG4gKiBhcHAgYW5kIGFsbG93aW5nIHlvdSB0byBzdG9yZSBhIHBhc3N3b3JkIHNlY3VyZWx5IGluIHRoZSBkZXZpY2Uga2V5Y2hhaW4uXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBLZXljaGFpblRvdWNoSWQgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2tleWNoYWluLXRvdWNoLWlkJztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBrZXljaGFpblRvdWNoSWQ6IEtleWNoYWluVG91Y2hJZCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICpcbiAqIHRoaXMua2V5Y2hhaW5Ub3VjaElkLmlzQXZhaWxhYmxlKClcbiAqICAgLnRoZW4oKHJlczogYW55KSA9PiBjb25zb2xlLmxvZyhyZXMpKVxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdLZXljaGFpblRvdWNoSWQnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1rZXljaGFpbi10b3VjaC1pZCcsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMudG91Y2hpZCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vc2pob2Vrc21hL2NvcmRvdmEtcGx1Z2luLWtleWNoYWluLXRvdWNoLWlkJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgS2V5Y2hhaW5Ub3VjaElkIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBUb3VjaCBJRCAvIEZpbmdlcnByaW50IGlzIHN1cHBvcnRlZCBieSB0aGUgZGV2aWNlXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZXJlIGlzIGhhcmR3YXJlIHN1cHBvcnRcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaXNBdmFpbGFibGUoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRW5jcnlwdHMgYW5kIFNhdmVzIGEgcGFzc3dvcmQgdW5kZXIgdGhlIGtleSBpbiB0aGUgZGV2aWNlIGtleWNoYWluLCB3aGljaCBjYW4gYmUgcmV0cmlldmVkIGFmdGVyXG4gICAqIHN1Y2Nlc3NmdWwgYXV0aGVudGljYXRpb24gdXNpbmcgZmluZ2VycHJpbnRcbiAgICogQHBhcmFtIGtleSB7c3RyaW5nfSB0aGUga2V5IHlvdSB3YW50IHRvIHN0b3JlXG4gICAqIEBwYXJhbSBwYXNzd29yZCB7c3RyaW5nfSB0aGUgcGFzc3dvcmQgeW91IHdhbnQgdG8gZW5jcnlwdCBhbmQgc3RvcmVcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlcmUgaXMgYSByZXN1bHRcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc2F2ZShrZXk6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIE9wZW5zIHRoZSBmaW5nZXJwcmludCBkaWFsb2csIGZvciB0aGUgZ2l2ZW4ga2V5LCBzaG93aW5nIGFuIGFkZGl0aW9uYWwgbWVzc2FnZS4gUHJvbWlzZSB3aWxsIHJlc29sdmVcbiAgICogd2l0aCB0aGUgcGFzc3dvcmQgc3RvcmVkIGluIGtleWNoYWluIG9yIHdpbGwgcmVzb2x2ZSBhbiBlcnJvciBjb2RlLCB3aGVyZSAtMSBpbmRpY2F0ZWQgbm90IGF2YWlsYWJsZS5cbiAgICogQHBhcmFtIGtleSB7c3RyaW5nfSB0aGUga2V5IHlvdSB3YW50IHRvIHJldHJpZXZlIGZyb20ga2V5Y2hhaW5cbiAgICogQHBhcmFtIG1lc3NhZ2Uge3N0cmluZ30gYSBtZXNzYWdlIHRvIHRoZSB1c2VyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBrZXkgdmFsdWUgaXMgc3VjY2Vzc2Z1bGx5IHJldHJpZXZlZCBvciBhbiBlcnJvclxuICAgKi9cbiAgQENvcmRvdmEoKVxuICB2ZXJpZnkoa2V5OiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiB0aGVyZSBpcyBhIHBhc3N3b3JkIHN0b3JlZCB3aXRoaW4gdGhlIGtleWNoYWluIGZvciB0aGUgZ2l2ZW4ga2V5LlxuICAgKiBAcGFyYW0ga2V5IHtzdHJpbmd9IHRoZSBrZXkgeW91IHdhbnQgdG8gY2hlY2sgZnJvbSBrZXljaGFpblxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBzdWNjZXNzIGlmIHRoZSBrZXkgaXMgYXZhaWxhYmxlIG9yIGZhaWx1cmUgaWYga2V5IGlzIG5vdC5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaGFzKGtleTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGVsZXRlcyB0aGUgcGFzc3dvcmQgc3RvcmVkIHVuZGVyIGdpdmVuIGtleSBmcm9tIHRoZSBrZXljaGFpbi5cbiAgICogQHBhcmFtIGtleSB7c3RyaW5nfSB0aGUga2V5IHlvdSB3YW50IHRvIGRlbGV0ZSBmcm9tIGtleWNoYWluXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHN1Y2Nlc3MgaWYgdGhlIGtleSBpcyBkZWxldGVkIG9yIGZhaWx1cmUgaWYga2V5IGlzIG5vdFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBkZWxldGUoa2V5OiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBsYW5ndWFnZSBvZiB0aGUgZmluZ2VycHJpbnQgZGlhbG9nXG4gICAqIEBwYXJhbSBsb2NhbGUge3N0cmluZ30gbG9jYWxlIHN1YnRhZyBmcm9tIFt0aGlzIGxpc3RdKGh0dHBzOi8vd3d3LmlhbmEub3JnL2Fzc2lnbm1lbnRzL2xhbmd1YWdlLXN1YnRhZy1yZWdpc3RyeS9sYW5ndWFnZS1zdWJ0YWctcmVnaXN0cnkpLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXRMb2NhbGUobG9jYWxlOiBzdHJpbmcpOiB2b2lkIHtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 573 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LaunchNavigator; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var LaunchNavigatorOriginal = /** @class */ (function (_super) {
    __extends(LaunchNavigatorOriginal, _super);
    function LaunchNavigatorOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.APP = {
            USER_SELECT: 'user_select',
            APPLE_MAPS: 'apple_maps',
            GOOGLE_MAPS: 'google_maps',
            WAZE: 'waze',
            CITYMAPPER: 'citymapper',
            NAVIGON: 'navigon',
            TRANSIT_APP: 'transit_app',
            YANDEX: 'yandex',
            UBER: 'uber',
            TOMTOM: 'tomtom',
            BING_MAPS: 'bing_maps',
            SYGIC: 'sygic',
            HERE_MAPS: 'here_maps',
            MOOVIT: 'moovit'
        };
        _this.TRANSPORT_MODE = {
            DRIVING: 'driving',
            WALKING: 'walking',
            BICYCLING: 'bicycling',
            TRANSIT: 'transit'
        };
        return _this;
    }
    LaunchNavigatorOriginal.prototype.navigate = function (destination, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "navigate", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    LaunchNavigatorOriginal.prototype.isAppAvailable = function (app) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAppAvailable", {}, arguments); };
    LaunchNavigatorOriginal.prototype.availableApps = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "availableApps", {}, arguments); };
    LaunchNavigatorOriginal.prototype.getAppDisplayName = function (app) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAppDisplayName", { "sync": true }, arguments); };
    LaunchNavigatorOriginal.prototype.getAppsForPlatform = function (platform) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAppsForPlatform", { "sync": true }, arguments); };
    LaunchNavigatorOriginal.prototype.supportsTransportMode = function (app, platform) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "supportsTransportMode", { "sync": true }, arguments); };
    LaunchNavigatorOriginal.prototype.getTransportModes = function (app, platform) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getTransportModes", { "sync": true }, arguments); };
    LaunchNavigatorOriginal.prototype.supportsDestName = function (app, platform) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "supportsDestName", { "sync": true }, arguments); };
    LaunchNavigatorOriginal.prototype.supportsStart = function (app, platform) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "supportsStart", { "sync": true }, arguments); };
    LaunchNavigatorOriginal.prototype.supportsStartName = function (app, platform) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "supportsStartName", { "sync": true }, arguments); };
    LaunchNavigatorOriginal.prototype.supportsLaunchMode = function (app, platform) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "supportsLaunchMode", { "sync": true }, arguments); };
    LaunchNavigatorOriginal.prototype.userSelect = function (destination, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "userSelect", { "sync": true }, arguments); };
    LaunchNavigatorOriginal.pluginName = "LaunchNavigator";
    LaunchNavigatorOriginal.plugin = "uk.co.workingedge.phonegap.plugin.launchnavigator";
    LaunchNavigatorOriginal.pluginRef = "launchnavigator";
    LaunchNavigatorOriginal.repo = "https://github.com/dpa99c/phonegap-launch-navigator";
    LaunchNavigatorOriginal.platforms = ["Android", "iOS", "Windows", "Windows Phone 8"];
    return LaunchNavigatorOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var LaunchNavigator = new LaunchNavigatorOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 574 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LaunchReview; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var LaunchReviewOriginal = /** @class */ (function (_super) {
    __extends(LaunchReviewOriginal, _super);
    function LaunchReviewOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LaunchReviewOriginal.prototype.launch = function (appId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "launch", { "platforms": ["Android", "iOS"], "callbackOrder": "reverse" }, arguments); };
    LaunchReviewOriginal.prototype.rating = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "rating", { "platforms": ["iOS"] }, arguments); };
    LaunchReviewOriginal.prototype.isRatingSupported = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isRatingSupported", { "platforms": ["Android", "iOS"], "sync": true }, arguments); };
    LaunchReviewOriginal.pluginName = "LaunchReview";
    LaunchReviewOriginal.plugin = "cordova-launch-review";
    LaunchReviewOriginal.pluginRef = "LaunchReview";
    LaunchReviewOriginal.repo = "https://github.com/dpa99c/cordova-launch-review";
    LaunchReviewOriginal.platforms = ["Android", "iOS"];
    return LaunchReviewOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var LaunchReview = new LaunchReviewOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9sYXVuY2gtcmV2aWV3L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQW1DdEMsZ0NBQWlCOzs7O0lBV2pELDZCQUFNLGFBQUMsS0FBYztJQWNyQiw2QkFBTTtJQVVOLHdDQUFpQjs7Ozs7O3VCQXZFbkI7RUFvQ2tDLGlCQUFpQjtTQUF0QyxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgTGF1bmNoIFJldmlld1xuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQXNzaXN0cyBpbiBsZWF2aW5nIHVzZXIgcmV2aWV3cy9yYXRpbmdzIGluIHRoZSBBcHAgU3RvcmVzLlxuICogLSBMYXVuY2hlcyB0aGUgcGxhdGZvcm0ncyBBcHAgU3RvcmUgcGFnZSBmb3IgdGhlIGN1cnJlbnQgYXBwIGluIG9yZGVyIGZvciB0aGUgdXNlciB0byBsZWF2ZSBhIHJldmlldy5cbiAqIC0gT24gaU9TICgxMC4zIGFuZCBhYm92ZSkgaW52b2tlcyB0aGUgbmF0aXZlIGluLWFwcCByYXRpbmcgZGlhbG9nIHdoaWNoIGFsbG93cyBhIHVzZXIgdG8gcmF0ZSB5b3VyIGFwcCB3aXRob3V0IG5lZWRpbmcgdG8gb3BlbiB0aGUgQXBwIFN0b3JlLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgTGF1bmNoUmV2aWV3IH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9sYXVuY2gtcmV2aWV3JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGxhdW5jaFJldmlldzogTGF1bmNoUmV2aWV3KSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmxhdW5jaFJldmlldy5sYXVuY2goKVxuICogICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IGxhdW5jaGVkIHN0b3JlIGFwcCcpO1xuICpcbiAqIGlmKHRoaXMubGF1bmNoUmV2aWV3LmlzUmF0aW5nU3VwcG9ydGVkKCkpe1xuICogICB0aGlzLmxhdW5jaFJldmlldy5yYXRpbmcoKVxuICogICAgIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgbGF1bmNoZWQgcmF0aW5nIGRpYWxvZycpO1xuICogfVxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnTGF1bmNoUmV2aWV3JyxcbiAgcGx1Z2luOiAnY29yZG92YS1sYXVuY2gtcmV2aWV3JyxcbiAgcGx1Z2luUmVmOiAnTGF1bmNoUmV2aWV3JyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9kcGE5OWMvY29yZG92YS1sYXVuY2gtcmV2aWV3JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTGF1bmNoUmV2aWV3IGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBMYXVuY2hlcyBBcHAgU3RvcmUgb24gY3VycmVudCBwbGF0Zm9ybSBpbiBvcmRlciB0byBsZWF2ZSBhIHJldmlldyBmb3IgZ2l2ZW4gYXBwLlxuICAgKiBAcGFyYW0gYXBwSWQge3N0cmluZ30gLSAob3B0aW9uYWwpIHRoZSBwbGF0Zm9ybS1zcGVjaWZpYyBhcHAgSUQgdG8gdXNlIHRvIG9wZW4gdGhlIHBhZ2UgaW4gdGhlIHN0b3JlIGFwcC5cbiAgICogSWYgbm90IHNwZWNpZmllZCwgdGhlIHBsdWdpbiB3aWxsIHVzZSB0aGUgYXBwIElEIGZvciB0aGUgYXBwIGluIHdoaWNoIHRoZSBwbHVnaW4gaXMgY29udGFpbmVkLlxuICAgKiBPbiBBbmRyb2lkIHRoaXMgaXMgdGhlIGZ1bGwgcGFja2FnZSBuYW1lIG9mIHRoZSBhcHAuIEZvciBleGFtcGxlLCBmb3IgR29vZ2xlIE1hcHM6IGBjb20uZ29vZ2xlLmFuZHJvaWQuYXBwcy5tYXBzYFxuICAgKiBPbiBpT1MgdGhpcyBpcyB0aGUgQXBwbGUgSUQgb2YgdGhlIGFwcC4gRm9yIGV4YW1wbGUsIGZvciBHb29nbGUgTWFwczogYDU4NTAyNzM1NGBcbiAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XG4gICAqL1xuICBAQ29yZG92YSh7IHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLCBjYWxsYmFja09yZGVyOiAncmV2ZXJzZScgfSlcbiAgbGF1bmNoKGFwcElkPzogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEludm9rZXMgdGhlIG5hdGl2ZSBpbi1hcHAgcmF0aW5nIGRpYWxvZyB3aGljaCBhbGxvd3MgYSB1c2VyIHRvIHJhdGUgeW91ciBhcHAgd2l0aG91dCBuZWVkaW5nIHRvIG9wZW4gdGhlIEFwcCBTdG9yZS5cbiAgICogUmVxdWlyZXMgaU9TIDEwLjMgYW5kIGFib3ZlOiBDYWxsaW5nIHRoaXMgb24gYW55IHBsYXRmb3JtL3ZlcnNpb24gb3RoZXIgdGhhbiBpT1MgMTAuMysgd2lsbCByZXN1bHQgaW4gdGhlIGVycm9yIGNhbGxiYWNrLlxuICAgKiBTdWNjZXNzIGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHVwIHRvIDMgdGltZXM6XG4gICAqIC0gRmlyc3Q6IGFmdGVyIGBMYXVuY2hSZXZpZXcucmF0aW5nKClgIGlzIGNhbGxlZCBhbmQgdGhlIHJlcXVlc3QgdG8gc2hvdyB0aGUgZGlhbG9nIGlzIHN1Y2Nlc3NmdWwuIFdpbGwgYmUgcGFzc2VkIHRoZSB2YWx1ZSBgcmVxdWVzdGVkYC5cbiAgICogLSBTZWNvbmQ6IGlmIGFuZCB3aGVuIHRoZSBSYXRpbmcgZGlhbG9nIGlzIGFjdHVhbGx5IGRpc3BsYXllZC4gIFdpbGwgYmUgcGFzc2VkIHRoZSB2YWx1ZSBgc2hvd25gLlxuICAgKiAtIFRoaXJkOiBpZiBhbmQgd2hlbiB0aGUgUmF0aW5nIGRpYWxvZyBpcyBkaXNtaXNzZWQuICBXaWxsIGJlIHBhc3NlZCB0aGUgdmFsdWUgYGRpc21pc3NlZGAuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZz59XG4gICAqL1xuICBAQ29yZG92YSh7IHBsYXRmb3JtczogWydpT1MnXSB9KVxuICByYXRpbmcoKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogSW5kaWNhdGVzIGlmIHRoZSBjdXJyZW50IHBsYXRmb3JtL3ZlcnNpb24gc3VwcG9ydHMgaW4tYXBwIHJhdGluZ3MgZGlhbG9nLCBpLmUuIGNhbGxpbmcgTGF1bmNoUmV2aWV3LnJhdGluZygpLlxuICAgKiBXaWxsIHJldHVybiB0cnVlIGlmIGN1cnJlbnQgcGxhdGZvcm0gaXMgaU9TIDEwLjMgb3IgYWJvdmUuXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgQENvcmRvdmEoeyBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXSwgc3luYzogdHJ1ZSB9KVxuICBpc1JhdGluZ1N1cHBvcnRlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 575 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LinkedIn; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var LinkedInOriginal = /** @class */ (function (_super) {
    __extends(LinkedInOriginal, _super);
    function LinkedInOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LinkedInOriginal.prototype.login = function (scopes, promptToInstall) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "login", {}, arguments); };
    LinkedInOriginal.prototype.logout = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logout", { "sync": true }, arguments); };
    LinkedInOriginal.prototype.getRequest = function (path) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getRequest", {}, arguments); };
    LinkedInOriginal.prototype.postRequest = function (path, body) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "postRequest", {}, arguments); };
    LinkedInOriginal.prototype.openProfile = function (memberId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "openProfile", {}, arguments); };
    LinkedInOriginal.prototype.hasActiveSession = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasActiveSession", {}, arguments); };
    LinkedInOriginal.prototype.getActiveSession = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getActiveSession", {}, arguments); };
    LinkedInOriginal.pluginName = "LinkedIn";
    LinkedInOriginal.plugin = "cordova-plugin-linkedin";
    LinkedInOriginal.pluginRef = "cordova.plugins.LinkedIn";
    LinkedInOriginal.repo = "https://github.com/zyra/cordova-plugin-linkedin";
    LinkedInOriginal.install = "ionic cordova plugin add cordova-plugin-linkedin --variable APP_ID=YOUR_APP_ID";
    LinkedInOriginal.installVariables = ["APP_ID"];
    LinkedInOriginal.platforms = ["Android", "iOS"];
    return LinkedInOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var LinkedIn = new LinkedInOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9saW5rZWRpbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUE0RDFDLDRCQUFpQjs7OztJQVM3Qyx3QkFBSyxhQUFDLE1BQTZCLEVBQUUsZUFBd0I7SUFRN0QseUJBQU07SUFTTiw2QkFBVSxhQUFDLElBQVk7SUFXdkIsOEJBQVcsYUFBQyxJQUFZLEVBQUUsSUFBUztJQVVuQyw4QkFBVyxhQUFDLFFBQWdCO0lBUzVCLG1DQUFnQjtJQVNoQixtQ0FBZ0I7Ozs7Ozs7O21CQTdIbEI7RUE0RDhCLGlCQUFpQjtTQUFsQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCB0eXBlIExpbmtlZEluTG9naW5TY29wZXMgPSAncl9iYXNpY3Byb2ZpbGUnIHwgJ3JfZW1haWxhZGRyZXNzJyB8ICdyd19jb21wYW55X2FkbWluJyB8ICd3X3NoYXJlJztcblxuLyoqXG4gKiBAbmFtZSBMaW5rZWRJblxuICogQGRlc2NyaXB0aW9uXG4gKiBBIENvcmRvdmEgcGx1Z2luIHRoYXQgbGV0cyB5b3UgdXNlIExpbmtlZEluIE5hdGl2ZSBTREtzIGZvciBBbmRyb2lkIGFuZCBpT1MuXG4gKlxuICogUGxlYXNlIHNlZSB0aGUgW3BsdWdpbidzIHJlcG9dKGh0dHBzOi8vZ2l0aHViLmNvbS96eXJhbWVkaWEvY29yZG92YS1wbHVnaW4tbGlua2VkaW4jaW5zdGFsbGF0aW9uKSBmb3IgZGV0YWlsZWQgaW5zdGFsbGF0aW9uIHN0ZXBzLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgTGlua2VkSW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2xpbmtlZGluJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGxpbmtlZGluOiBMaW5rZWRJbikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogLy8gY2hlY2sgaWYgdGhlcmUgaXMgYW4gYWN0aXZlIHNlc3Npb25cbiAqIHRoaXMubGlua2VkaW4uaGFzQWN0aXZlU2Vzc2lvbigpLnRoZW4oKGFjdGl2ZSkgPT4gY29uc29sZS5sb2coJ2hhcyBhY3RpdmUgc2Vzc2lvbj8nLCBhY3RpdmUpKTtcbiAqXG4gKiAvLyBsb2dpblxuICogY29uc3Qgc2NvcGVzID0gWydyX2Jhc2ljcHJvZmlsZScsICdyX2VtYWlsYWRkcmVzcycsICdyd19jb21wYW55X2FkbWluJywgJ3dfc2hhcmUnXTtcbiAqIHRoaXMubGlua2VkaW4ubG9naW4oc2NvcGVzLCB0cnVlKVxuICogICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygnTG9nZ2VkIGluIScpXG4gKiAgIC5jYXRjaChlID0+IGNvbnNvbGUubG9nKCdFcnJvciBsb2dnaW5nIGluJywgZSkpO1xuICpcbiAqXG4gKiAvLyBnZXQgY29ubmVjdGlvbnNcbiAqIHRoaXMubGlua2VkaW4uZ2V0UmVxdWVzdCgncGVvcGxlL34nKVxuICogICAudGhlbihyZXMgPT4gY29uc29sZS5sb2cocmVzKSlcbiAqICAgLmNhdGNoKGUgPT4gY29uc29sZS5sb2coZSkpO1xuICpcbiAqIC8vIHNoYXJlIHNvbWV0aGluZyBvbiBwcm9maWxlXG4gKiBjb25zdCBib2R5ID0ge1xuICogICBjb21tZW50OiAnSGVsbG8gd29ybGQhJyxcbiAqICAgdmlzaWJpbGl0eToge1xuICogICAgIGNvZGU6ICdhbnlvbmUnXG4gKiAgIH1cbiAqIH1cbiAqXG4gKiB0aGlzLmxpbmtlZGluLnBvc3RSZXF1ZXN0KCd+L3NoYXJlcycsIGJvZHkpXG4gKiAgIC50aGVuKHJlcyA9PiBjb25zb2xlLmxvZyhyZXMpKVxuICogICAuY2F0Y2goZSA9PiBjb25zb2xlLmxvZyhlKSk7XG4gKlxuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0xpbmtlZEluJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tbGlua2VkaW4nLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuTGlua2VkSW4nLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3p5cmEvY29yZG92YS1wbHVnaW4tbGlua2VkaW4nLFxuICBpbnN0YWxsOiAnaW9uaWMgY29yZG92YSBwbHVnaW4gYWRkIGNvcmRvdmEtcGx1Z2luLWxpbmtlZGluIC0tdmFyaWFibGUgQVBQX0lEPVlPVVJfQVBQX0lEJyxcbiAgaW5zdGFsbFZhcmlhYmxlczogWydBUFBfSUQnXSxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTGlua2VkSW4gZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIExvZ2luIHdpdGggdGhlIExpbmtlZEluIEFwcFxuICAgKiBAcGFyYW0gc2NvcGVzIHtzdHJpbmdbXX0gU2NvcGVzIHRvIGF1dGhvcml6ZVxuICAgKiBAcGFyYW0gcHJvbXB0VG9JbnN0YWxsIHtib29sZWFufSBzZXQgdG8gdHJ1ZSB0byBwcm9tcHQgdGhlIHVzZXIgdG8gZG93bmxvYWQgdGhlIExpbmtlZEluIGFwcCBpZiBpdCdzIG5vdCBpbnN0YWxsZWRcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBsb2dpbihzY29wZXM6IExpbmtlZEluTG9naW5TY29wZXNbXSwgcHJvbXB0VG9JbnN0YWxsOiBib29sZWFuKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2xlYXJzIHRoZSBjdXJyZW50IHNlc3Npb25cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBsb2dvdXQoKTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogTWFrZSBhIGdldCByZXF1ZXN0XG4gICAqIEBwYXJhbSBwYXRoIHtzdHJpbmd9IHJlcXVlc3QgcGF0aFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldFJlcXVlc3QocGF0aDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogTWFrZSBhIHBvc3QgcmVxdWVzdFxuICAgKiBAcGFyYW0gcGF0aCB7c3RyaW5nfSByZXF1ZXN0IHBhdGhcbiAgICogQHBhcmFtIGJvZHkge09iamVjdH0gcmVxdWVzdCBib2R5XG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcG9zdFJlcXVlc3QocGF0aDogc3RyaW5nLCBib2R5OiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBPcGVucyBhIG1lbWJlcidzIHByb2ZpbGVcbiAgICogQHBhcmFtIG1lbWJlcklkIHtzdHJpbmd9IE1lbWJlciBpZFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIG9wZW5Qcm9maWxlKG1lbWJlcklkOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgdGhlcmUgaXMgYWxyZWFkeSBhbiBleGlzdGluZyBhY3RpdmUgc2Vzc2lvbi4gVGhpcyBzaG91bGQgYmUgdXNlZCB0byBhdm9pZCB1bm5lY2Vzc2FyeSBsb2dpbi5cbiAgICogQHJldHVybiB7UHJvbWlzZTxib29sZWFuPn0gcmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgYm9vbGVhbiB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZXJlIGlzIGFuIGFjdGl2ZSBzZXNzaW9uXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGhhc0FjdGl2ZVNlc3Npb24oKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiB0aGVyZSBpcyBhbiBhY3RpdmUgc2Vzc2lvbiBhbmQgcmV0dXJucyB0aGUgYWNjZXNzIHRva2VuIGlmIGl0IGV4aXN0cy5cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYW4gb2JqZWN0IHRoYXQgY29udGFpbnMgYW4gYWNjZXNzIHRva2VuIGlmIHRoZXJlIGlzIGFuIGFjdGl2ZSBzZXNzaW9uXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldEFjdGl2ZVNlc3Npb24oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 576 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LocalNotifications; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var LocalNotificationsOriginal = /** @class */ (function (_super) {
    __extends(LocalNotificationsOriginal, _super);
    function LocalNotificationsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LocalNotificationsOriginal.prototype.schedule = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "schedule", { "sync": true }, arguments); };
    LocalNotificationsOriginal.prototype.update = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "update", { "sync": true }, arguments); };
    LocalNotificationsOriginal.prototype.clear = function (notificationId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "clear", {}, arguments); };
    LocalNotificationsOriginal.prototype.clearAll = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "clearAll", { "successIndex": 0, "errorIndex": 2 }, arguments); };
    LocalNotificationsOriginal.prototype.cancel = function (notificationId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "cancel", {}, arguments); };
    LocalNotificationsOriginal.prototype.cancelAll = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "cancelAll", { "successIndex": 0, "errorIndex": 2 }, arguments); };
    LocalNotificationsOriginal.prototype.isPresent = function (notificationId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isPresent", {}, arguments); };
    LocalNotificationsOriginal.prototype.isScheduled = function (notificationId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isScheduled", {}, arguments); };
    LocalNotificationsOriginal.prototype.isTriggered = function (notificationId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isTriggered", {}, arguments); };
    LocalNotificationsOriginal.prototype.getAllIds = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAllIds", {}, arguments); };
    LocalNotificationsOriginal.prototype.getTriggeredIds = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getTriggeredIds", {}, arguments); };
    LocalNotificationsOriginal.prototype.getScheduledIds = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getScheduledIds", {}, arguments); };
    LocalNotificationsOriginal.prototype.get = function (notificationId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "get", {}, arguments); };
    LocalNotificationsOriginal.prototype.getScheduled = function (notificationId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getScheduled", {}, arguments); };
    LocalNotificationsOriginal.prototype.getTriggered = function (notificationId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getTriggered", {}, arguments); };
    LocalNotificationsOriginal.prototype.getAll = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAll", {}, arguments); };
    LocalNotificationsOriginal.prototype.getAllScheduled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAllScheduled", {}, arguments); };
    LocalNotificationsOriginal.prototype.getAllTriggered = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAllTriggered", {}, arguments); };
    LocalNotificationsOriginal.prototype.registerPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerPermission", {}, arguments); };
    LocalNotificationsOriginal.prototype.hasPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasPermission", {}, arguments); };
    LocalNotificationsOriginal.prototype.on = function (eventName, callback) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "on", { "sync": true }, arguments); };
    LocalNotificationsOriginal.prototype.un = function (eventName, callback) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "un", { "sync": true }, arguments); };
    LocalNotificationsOriginal.pluginName = "LocalNotifications";
    LocalNotificationsOriginal.plugin = "cordova-plugin-local-notification";
    LocalNotificationsOriginal.pluginRef = "cordova.plugins.notification.local";
    LocalNotificationsOriginal.repo = "https://github.com/katzer/cordova-plugin-local-notifications";
    LocalNotificationsOriginal.platforms = ["Android", "iOS", "Windows"];
    return LocalNotificationsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var LocalNotifications = new LocalNotificationsOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 577 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LocationAccuracy; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var LocationAccuracyOriginal = /** @class */ (function (_super) {
    __extends(LocationAccuracyOriginal, _super);
    function LocationAccuracyOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.REQUEST_PRIORITY_NO_POWER = 0;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.REQUEST_PRIORITY_LOW_POWER = 1;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.REQUEST_PRIORITY_BALANCED_POWER_ACCURACY = 2;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.REQUEST_PRIORITY_HIGH_ACCURACY = 3;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.SUCCESS_SETTINGS_SATISFIED = 0;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.SUCCESS_USER_AGREED = 1;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.ERROR_ALREADY_REQUESTING = -1;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.ERROR_INVALID_ACTION = 0;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.ERROR_INVALID_ACCURACY = 1;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.ERROR_EXCEPTION = 1;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.ERROR_CANNOT_CHANGE_ACCURACY = 3;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.ERROR_USER_DISAGREED = 4;
        /**
         * Convenience constant
         * @type {number}
         */
        _this.ERROR_GOOGLE_API_CONNECTION_FAILED = 4;
        return _this;
    }
    LocationAccuracyOriginal.prototype.canRequest = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "canRequest", {}, arguments); };
    LocationAccuracyOriginal.prototype.isRequesting = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isRequesting", {}, arguments); };
    LocationAccuracyOriginal.prototype.request = function (accuracy) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "request", { "callbackOrder": "reverse" }, arguments); };
    LocationAccuracyOriginal.pluginName = "LocationAccuracy";
    LocationAccuracyOriginal.plugin = "cordova-plugin-request-location-accuracy";
    LocationAccuracyOriginal.pluginRef = "cordova.plugins.locationAccuracy";
    LocationAccuracyOriginal.repo = "https://github.com/dpa99c/cordova-plugin-request-location-accuracy";
    LocationAccuracyOriginal.platforms = ["Android", "iOS"];
    return LocationAccuracyOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var LocationAccuracy = new LocationAccuracyOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9sb2NhdGlvbi1hY2N1cmFjeS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFxQ2xDLG9DQUFpQjs7O1FBQ3JEOzs7V0FHRztRQUNILCtCQUF5QixHQUFHLENBQUMsQ0FBQztRQUM5Qjs7O1dBR0c7UUFDSCxnQ0FBMEIsR0FBRyxDQUFDLENBQUM7UUFDL0I7OztXQUdHO1FBQ0gsOENBQXdDLEdBQUcsQ0FBQyxDQUFDO1FBQzdDOzs7V0FHRztRQUNILG9DQUE4QixHQUFHLENBQUMsQ0FBQztRQUNuQzs7O1dBR0c7UUFDSCxnQ0FBMEIsR0FBRyxDQUFDLENBQUM7UUFDL0I7OztXQUdHO1FBQ0gseUJBQW1CLEdBQUcsQ0FBQyxDQUFDO1FBQ3hCOzs7V0FHRztRQUNILDhCQUF3QixHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzlCOzs7V0FHRztRQUNILDBCQUFvQixHQUFHLENBQUMsQ0FBQztRQUN6Qjs7O1dBR0c7UUFDSCw0QkFBc0IsR0FBRyxDQUFDLENBQUM7UUFDM0I7OztXQUdHO1FBQ0gscUJBQWUsR0FBRyxDQUFDLENBQUM7UUFDcEI7OztXQUdHO1FBQ0gsa0NBQTRCLEdBQUcsQ0FBQyxDQUFDO1FBQ2pDOzs7V0FHRztRQUNILDBCQUFvQixHQUFHLENBQUMsQ0FBQztRQUN6Qjs7O1dBR0c7UUFDSCx3Q0FBa0MsR0FBRyxDQUFDLENBQUM7OztJQU92QyxxQ0FBVTtJQVNWLHVDQUFZO0lBVVosa0NBQU8sYUFBQyxRQUFnQjs7Ozs7OzJCQWpJMUI7RUFzQ3NDLGlCQUFpQjtTQUExQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBMb2NhdGlvbiBBY2N1cmFjeVxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIENvcmRvdmEvUGhvbmVnYXAgcGx1Z2luIGZvciBBbmRyb2lkIGFuZCBpT1MgdG8gcmVxdWVzdCBlbmFibGluZy9jaGFuZ2luZyBvZiBMb2NhdGlvbiBTZXJ2aWNlcyBieSB0cmlnZ2VyaW5nIGEgbmF0aXZlIGRpYWxvZyBmcm9tIHdpdGhpbiB0aGUgYXBwLCBhdm9pZGluZyB0aGUgbmVlZCBmb3IgdGhlIHVzZXIgdG8gbGVhdmUgeW91ciBhcHAgdG8gY2hhbmdlIGxvY2F0aW9uIHNldHRpbmdzIG1hbnVhbGx5LlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgTG9jYXRpb25BY2N1cmFjeSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvbG9jYXRpb24tYWNjdXJhY3knO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgbG9jYXRpb25BY2N1cmFjeTogTG9jYXRpb25BY2N1cmFjeSkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5sb2NhdGlvbkFjY3VyYWN5LmNhblJlcXVlc3QoKS50aGVuKChjYW5SZXF1ZXN0OiBib29sZWFuKSA9PiB7XG4gKlxuICogICBpZihjYW5SZXF1ZXN0KSB7XG4gKiAgICAgLy8gdGhlIGFjY3VyYWN5IG9wdGlvbiB3aWxsIGJlIGlnbm9yZWQgYnkgaU9TXG4gKiAgICAgdGhpcy5sb2NhdGlvbkFjY3VyYWN5LnJlcXVlc3QodGhpcy5sb2NhdGlvbkFjY3VyYWN5LlJFUVVFU1RfUFJJT1JJVFlfSElHSF9BQ0NVUkFDWSkudGhlbihcbiAqICAgICAgICgpID0+IGNvbnNvbGUubG9nKCdSZXF1ZXN0IHN1Y2Nlc3NmdWwnKSxcbiAqICAgICAgIGVycm9yID0+IGNvbnNvbGUubG9nKCdFcnJvciByZXF1ZXN0aW5nIGxvY2F0aW9uIHBlcm1pc3Npb25zJywgZXJyb3IpXG4gKiAgICAgKTtcbiAqICAgfVxuICpcbiAqIH0pO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0xvY2F0aW9uQWNjdXJhY3knLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1yZXF1ZXN0LWxvY2F0aW9uLWFjY3VyYWN5JyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLmxvY2F0aW9uQWNjdXJhY3knLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2RwYTk5Yy9jb3Jkb3ZhLXBsdWdpbi1yZXF1ZXN0LWxvY2F0aW9uLWFjY3VyYWN5JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTG9jYXRpb25BY2N1cmFjeSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIGNvbnN0YW50XG4gICAqIEB0eXBlIHtudW1iZXJ9XG4gICAqL1xuICBSRVFVRVNUX1BSSU9SSVRZX05PX1BPV0VSID0gMDtcbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIGNvbnN0YW50XG4gICAqIEB0eXBlIHtudW1iZXJ9XG4gICAqL1xuICBSRVFVRVNUX1BSSU9SSVRZX0xPV19QT1dFUiA9IDE7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgUkVRVUVTVF9QUklPUklUWV9CQUxBTkNFRF9QT1dFUl9BQ0NVUkFDWSA9IDI7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgUkVRVUVTVF9QUklPUklUWV9ISUdIX0FDQ1VSQUNZID0gMztcbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIGNvbnN0YW50XG4gICAqIEB0eXBlIHtudW1iZXJ9XG4gICAqL1xuICBTVUNDRVNTX1NFVFRJTkdTX1NBVElTRklFRCA9IDA7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgU1VDQ0VTU19VU0VSX0FHUkVFRCA9IDE7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgRVJST1JfQUxSRUFEWV9SRVFVRVNUSU5HID0gLTE7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgRVJST1JfSU5WQUxJRF9BQ1RJT04gPSAwO1xuICAvKipcbiAgICogQ29udmVuaWVuY2UgY29uc3RhbnRcbiAgICogQHR5cGUge251bWJlcn1cbiAgICovXG4gIEVSUk9SX0lOVkFMSURfQUNDVVJBQ1kgPSAxO1xuICAvKipcbiAgICogQ29udmVuaWVuY2UgY29uc3RhbnRcbiAgICogQHR5cGUge251bWJlcn1cbiAgICovXG4gIEVSUk9SX0VYQ0VQVElPTiA9IDE7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgRVJST1JfQ0FOTk9UX0NIQU5HRV9BQ0NVUkFDWSA9IDM7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudFxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKi9cbiAgRVJST1JfVVNFUl9ESVNBR1JFRUQgPSA0O1xuICAvKipcbiAgICogQ29udmVuaWVuY2UgY29uc3RhbnRcbiAgICogQHR5cGUge251bWJlcn1cbiAgICovXG4gIEVSUk9SX0dPT0dMRV9BUElfQ09OTkVDVElPTl9GQUlMRUQgPSA0O1xuXG4gIC8qKlxuICAgKiBJbmRpY2F0ZXMgaWYgeW91IGNhbiByZXF1ZXN0IGFjY3VyYXRlIGxvY2F0aW9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc292bGVzIHdpdGggYSBib29sZWFuIHRoYXQgaW5kaWNhdGVzIGlmIHlvdSBjYW4gcmVxdWVzdCBhY2N1cmF0ZSBsb2NhdGlvblxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBjYW5SZXF1ZXN0KCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBJbmRpY2F0ZXMgaWYgYSByZXF1ZXN0IGlzIGN1cnJlbnRseSBpbiBwcm9ncmVzc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgYm9vbGVhbiB0aGF0IGluZGljYXRlcyBpZiBhIHJlcXVlc3QgaXMgY3VycmVudGx5IGluIHByb2dyZXNzXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGlzUmVxdWVzdGluZygpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVxdWVzdHMgYWNjdXJhdGUgbG9jYXRpb25cbiAgICogQHBhcmFtIGFjY3VyYWN5IHtudW1iZXJ9IEFjY3VyYWN5LCBmcm9tIDAgdG8gNC4gWW91IGNhbiB1c2UgdGhlIHN0YXRpYyBwcm9wZXJ0aWVzIG9mIHRoaXMgY2xhc3MgdGhhdCBzdGFydCB3aXRoIFJFUVVFU1RfUFJJT1JJVFlfXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgb24gc3VjY2VzcyBhbmQgcmVqZWN0cyBpZiBhbiBlcnJvciBvY2N1cnJlZFxuICAgKi9cbiAgQENvcmRvdmEoeyBjYWxsYmFja09yZGVyOiAncmV2ZXJzZScgfSlcbiAgcmVxdWVzdChhY2N1cmFjeTogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 578 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Market; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var MarketOriginal = /** @class */ (function (_super) {
    __extends(MarketOriginal, _super);
    function MarketOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MarketOriginal.prototype.open = function (appId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "open", { "callbackStyle": "object", "successName": "success", "errorName": "failure" }, arguments); };
    MarketOriginal.prototype.search = function (keyword) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "search", { "callbackStyle": "object", "successName": "success", "errorName": "failure", "platforms": ["Android"] }, arguments); };
    MarketOriginal.pluginName = "Market";
    MarketOriginal.plugin = "cordova-plugin-market";
    MarketOriginal.pluginRef = "cordova.plugins.market";
    MarketOriginal.repo = "https://github.com/xmartlabs/cordova-plugin-market";
    MarketOriginal.platforms = ["Android", "iOS"];
    return MarketOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Market = new MarketOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9tYXJrZXQvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBMkI1QywwQkFBaUI7Ozs7SUFZM0MscUJBQUksYUFBQyxLQUFhO0lBZWxCLHVCQUFNLGFBQUMsT0FBZTs7Ozs7O2lCQXZEeEI7RUE0QjRCLGlCQUFpQjtTQUFoQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgTWFya2V0XG4gKiBAZGVzY3JpcHRpb25cbiAqIE9wZW5zIGFuIGFwcCdzIHBhZ2UgaW4gdGhlIG1hcmtldCBwbGFjZSAoR29vZ2xlIFBsYXksIEFwcCBTdG9yZSlcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IE1hcmtldCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvbWFya2V0JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIG1hcmtldDogTWFya2V0KSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLm1hcmtldC5vcGVuKCd5b3VyLnBhY2thZ2UubmFtZScpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ01hcmtldCcsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLW1hcmtldCcsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5tYXJrZXQnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3htYXJ0bGFicy9jb3Jkb3ZhLXBsdWdpbi1tYXJrZXQnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBNYXJrZXQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIE9wZW5zIGFuIGFwcCBpbiBHb29nbGUgUGxheSAvIEFwcCBTdG9yZVxuICAgKiBAcGFyYW0gYXBwSWQge3N0cmluZ30gUGFja2FnZSBuYW1lXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja1N0eWxlOiAnb2JqZWN0JyxcbiAgICBzdWNjZXNzTmFtZTogJ3N1Y2Nlc3MnLFxuICAgIGVycm9yTmFtZTogJ2ZhaWx1cmUnXG4gIH0pXG4gIG9wZW4oYXBwSWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNlYXJjaCBhcHBzIGJ5IGtleXdvcmRcbiAgICogQHBhcmFtIGtleXdvcmQge3N0cmluZ30gS2V5d29yZFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tTdHlsZTogJ29iamVjdCcsXG4gICAgc3VjY2Vzc05hbWU6ICdzdWNjZXNzJyxcbiAgICBlcnJvck5hbWU6ICdmYWlsdXJlJyxcbiAgICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG4gIH0pXG4gIHNlYXJjaChrZXl3b3JkOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 579 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export MediaObject */
/* unused harmony export MEDIA_STATUS */
/* unused harmony export MEDIA_ERROR */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Media; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var MediaObject = /** @class */ (function () {
    function MediaObject(_objectInstance) {
        var _this = this;
        this._objectInstance = _objectInstance;
        this.onSuccess = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
            _this.successCallback = observer.next.bind(observer);
            return function () { return _this.successCallback = function () {
            }; };
        });
        this.onError = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
            _this.errorCallback = observer.next.bind(observer);
            return function () { return _this.errorCallback = function () {
            }; };
        });
        this.onStatusUpdate = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
            _this.statusCallback = observer.next.bind(observer);
            return function () { return _this.statusCallback = function () {
            }; };
        });
    }
    MediaObject.prototype.getCurrentAmplitude = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getCurrentAmplitude", {}, arguments); };
    MediaObject.prototype.getCurrentPosition = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getCurrentPosition", {}, arguments); };
    MediaObject.prototype.getDuration = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getDuration", { "sync": true }, arguments); };
    MediaObject.prototype.play = function (iosOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "play", { "sync": true }, arguments); };
    MediaObject.prototype.pause = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "pause", { "sync": true }, arguments); };
    MediaObject.prototype.release = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "release", { "sync": true }, arguments); };
    MediaObject.prototype.seekTo = function (milliseconds) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "seekTo", { "sync": true }, arguments); };
    MediaObject.prototype.setVolume = function (volume) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setVolume", { "sync": true }, arguments); };
    MediaObject.prototype.setRate = function (speedRate) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setRate", { "sync": true }, arguments); };
    MediaObject.prototype.startRecord = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "startRecord", { "sync": true }, arguments); };
    MediaObject.prototype.stopRecord = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "stopRecord", { "sync": true }, arguments); };
    MediaObject.prototype.pauseRecord = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "pauseRecord", { "sync": true }, arguments); };
    MediaObject.prototype.resumeRecord = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "resumeRecord", { "sync": true }, arguments); };
    MediaObject.prototype.stop = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "stop", { "sync": true }, arguments); };
    Object.defineProperty(MediaObject.prototype, "successCallback", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "successCallback"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "successCallback", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MediaObject.prototype, "errorCallback", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "errorCallback"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "errorCallback", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MediaObject.prototype, "statusCallback", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "statusCallback"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "statusCallback", value); },
        enumerable: true,
        configurable: true
    });
    return MediaObject;
}());

var MEDIA_STATUS;
(function (MEDIA_STATUS) {
    MEDIA_STATUS[MEDIA_STATUS["NONE"] = 0] = "NONE";
    MEDIA_STATUS[MEDIA_STATUS["STARTING"] = 1] = "STARTING";
    MEDIA_STATUS[MEDIA_STATUS["RUNNING"] = 2] = "RUNNING";
    MEDIA_STATUS[MEDIA_STATUS["PAUSED"] = 3] = "PAUSED";
    MEDIA_STATUS[MEDIA_STATUS["STOPPED"] = 4] = "STOPPED";
})(MEDIA_STATUS || (MEDIA_STATUS = {}));
var MEDIA_ERROR;
(function (MEDIA_ERROR) {
    MEDIA_ERROR[MEDIA_ERROR["ABORTED"] = 1] = "ABORTED";
    MEDIA_ERROR[MEDIA_ERROR["NETWORK"] = 2] = "NETWORK";
    MEDIA_ERROR[MEDIA_ERROR["DECODE"] = 3] = "DECODE";
    MEDIA_ERROR[MEDIA_ERROR["SUPPORTED"] = 4] = "SUPPORTED";
})(MEDIA_ERROR || (MEDIA_ERROR = {}));
var MediaOriginal = /** @class */ (function (_super) {
    __extends(MediaOriginal, _super);
    function MediaOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // Constants
        /**
         * @hidden
         */
        _this.MEDIA_NONE = 0;
        /**
         * @hidden
         */
        _this.MEDIA_STARTING = 1;
        /**
         * @hidden
         */
        _this.MEDIA_RUNNING = 2;
        /**
         * @hidden
         */
        _this.MEDIA_PAUSED = 3;
        /**
         * @hidden
         */
        _this.MEDIA_STOPPED = 4;
        // error codes
        /**
         * @hidden
         */
        _this.MEDIA_ERR_ABORTED = 1;
        /**
         * @hidden
         */
        _this.MEDIA_ERR_NETWORK = 2;
        /**
         * @hidden
         */
        _this.MEDIA_ERR_DECODE = 3;
        /**
         * @hidden
         */
        _this.MEDIA_ERR_NONE_SUPPORTED = 4;
        return _this;
    }
    /**
     * Open a media file
     * @param src {string} A URI containing the audio content.
     * @return {MediaObject}
     */
    MediaOriginal.prototype.create = function (src) {
        var instance;
        if (checkAvailability(MediaOriginal.getPluginRef(), null, MediaOriginal.getPluginName()) === true) {
            // Creates a new media object
            instance = new (MediaOriginal.getPlugin())(src);
        }
        return new MediaObject(instance);
    };
    MediaOriginal.pluginName = "Media";
    MediaOriginal.repo = "https://github.com/apache/cordova-plugin-media";
    MediaOriginal.plugin = "cordova-plugin-media";
    MediaOriginal.pluginRef = "Media";
    MediaOriginal.platforms = ["Android", "BlackBerry 10", "Browser", "iOS", "Tizen", "Ubuntu", "Windows", "Windows Phone"];
    return MediaOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Media = new MediaOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 580 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MediaCapture; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var MediaCaptureOriginal = /** @class */ (function (_super) {
    __extends(MediaCaptureOriginal, _super);
    function MediaCaptureOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MediaCaptureOriginal.prototype.captureAudio = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "captureAudio", { "callbackOrder": "reverse" }, arguments); };
    MediaCaptureOriginal.prototype.captureImage = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "captureImage", { "callbackOrder": "reverse" }, arguments); };
    MediaCaptureOriginal.prototype.captureVideo = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "captureVideo", { "callbackOrder": "reverse" }, arguments); };
    MediaCaptureOriginal.prototype.onPendingCaptureResult = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onPendingCaptureResult", { "eventObservable": true, "event": "pendingcaptureresult" }, arguments); };
    MediaCaptureOriginal.prototype.onPendingCaptureError = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onPendingCaptureError", { "eventObservable": true, "event": "pendingcaptureerror" }, arguments); };
    Object.defineProperty(MediaCaptureOriginal.prototype, "supportedImageModes", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "supportedImageModes"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "supportedImageModes", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MediaCaptureOriginal.prototype, "supportedAudioModes", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "supportedAudioModes"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "supportedAudioModes", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MediaCaptureOriginal.prototype, "supportedVideoModes", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "supportedVideoModes"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "supportedVideoModes", value); },
        enumerable: true,
        configurable: true
    });
    MediaCaptureOriginal.pluginName = "MediaCapture";
    MediaCaptureOriginal.plugin = "cordova-plugin-media-capture";
    MediaCaptureOriginal.pluginRef = "navigator.device.capture";
    MediaCaptureOriginal.repo = "https://github.com/apache/cordova-plugin-media-capture";
    MediaCaptureOriginal.platforms = ["Android", "BlackBerry 10", "Browser", "iOS", "Ubuntu", "Windows", "Windows Phone"];
    return MediaCaptureOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var MediaCapture = new MediaCaptureOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 581 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MobileAccessibility; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var MobileAccessibilityOriginal = /** @class */ (function (_super) {
    __extends(MobileAccessibilityOriginal, _super);
    function MobileAccessibilityOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobileAccessibilityOriginal.prototype.isScreenReaderRunning = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isScreenReaderRunning", {}, arguments); };
    MobileAccessibilityOriginal.prototype.isVoiceOverRunning = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isVoiceOverRunning", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isTalkBackRunning = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isTalkBackRunning", { "platforms": ["Amazon Fire OS", "Android"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isChromeVoxActive = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isChromeVoxActive", { "platforms": ["Amazon Fire OS", "Android"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isBoldTextEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isBoldTextEnabled", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isClosedCaptioningEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isClosedCaptioningEnabled", {}, arguments); };
    MobileAccessibilityOriginal.prototype.isDarkerSystemColorsEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isDarkerSystemColorsEnabled", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isGrayscaleEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isGrayscaleEnabled", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isGuidedAccessEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isGuidedAccessEnabled", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isInvertColorsEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isInvertColorsEnabled", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isMonoAudioEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isMonoAudioEnabled", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isReduceMotionEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isReduceMotionEnabled", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isReduceTransparencyEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isReduceTransparencyEnabled", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isSpeakScreenEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isSpeakScreenEnabled", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isSpeakSelectionEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isSpeakSelectionEnabled", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isSwitchControlRunning = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isSwitchControlRunning", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.isTouchExplorationEnabled = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isTouchExplorationEnabled", { "platforms": ["Amazon Fire OS", "Android"] }, arguments); };
    MobileAccessibilityOriginal.prototype.getTextZoom = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getTextZoom", {}, arguments); };
    MobileAccessibilityOriginal.prototype.setTextZoom = function (textZoom) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setTextZoom", { "sync": true }, arguments); };
    MobileAccessibilityOriginal.prototype.updateTextZoom = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "updateTextZoom", { "sync": true }, arguments); };
    MobileAccessibilityOriginal.prototype.usePreferredTextZoom = function (value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "usePreferredTextZoom", { "sync": true }, arguments); };
    MobileAccessibilityOriginal.prototype.postNotification = function (mobileAccessibilityNotification, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "postNotification", { "platforms": ["iOS"] }, arguments); };
    MobileAccessibilityOriginal.prototype.speak = function (value, queueMode, properties) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "speak", { "sync": true }, arguments); };
    MobileAccessibilityOriginal.prototype.stop = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stop", { "sync": true }, arguments); };
    MobileAccessibilityOriginal.pluginName = "MobileAccessibility";
    MobileAccessibilityOriginal.plugin = "phonegap-plugin-mobile-accessibility";
    MobileAccessibilityOriginal.pluginRef = "MobileAccessibility";
    MobileAccessibilityOriginal.repo = "https://github.com/phonegap/phonegap-mobile-accessibility";
    MobileAccessibilityOriginal.platforms = ["Android Fire OS", "Android", "iOS", "Windows"];
    return MobileAccessibilityOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var MobileAccessibility = new MobileAccessibilityOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 582 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MSAdal; });
/* unused harmony export AuthenticationContext */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var MSAdalOriginal = /** @class */ (function (_super) {
    __extends(MSAdalOriginal, _super);
    function MSAdalOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MSAdalOriginal.prototype.createAuthenticationContext = function (authority, validateAuthority) {
        if (validateAuthority === void 0) { validateAuthority = true; }
        var authContext;
        if (checkAvailability(MSAdalOriginal.getPluginRef(), null, MSAdalOriginal.getPluginName()) === true) {
            authContext = new (MSAdalOriginal.getPlugin()).AuthenticationContext(authority);
        }
        return new AuthenticationContext(authContext);
    };
    MSAdalOriginal.pluginName = "MSADAL";
    MSAdalOriginal.plugin = "cordova-plugin-ms-adal";
    MSAdalOriginal.pluginRef = "Microsoft.ADAL";
    MSAdalOriginal.repo = "https://github.com/AzureAD/azure-activedirectory-library-for-cordova";
    MSAdalOriginal.platforms = ["Android", "iOS", "Windows"];
    return MSAdalOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var MSAdal = new MSAdalOriginal();

var AuthenticationContext = /** @class */ (function () {
    function AuthenticationContext(_objectInstance) {
        this._objectInstance = _objectInstance;
    }
    AuthenticationContext.prototype.acquireTokenAsync = function (resourceUrl, clientId, redirectUrl, userId, extraQueryParameters) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "acquireTokenAsync", { "otherPromise": true }, arguments); };
    AuthenticationContext.prototype.acquireTokenSilentAsync = function (resourceUrl, clientId, userId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "acquireTokenSilentAsync", { "otherPromise": true }, arguments); };
    Object.defineProperty(AuthenticationContext.prototype, "authority", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "authority"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "authority", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthenticationContext.prototype, "validateAuthority", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "validateAuthority"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "validateAuthority", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthenticationContext.prototype, "tokenCache", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "tokenCache"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "tokenCache", value); },
        enumerable: true,
        configurable: true
    });
    return AuthenticationContext;
}());

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 583 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MusicControls; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var MusicControlsOriginal = /** @class */ (function (_super) {
    __extends(MusicControlsOriginal, _super);
    function MusicControlsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MusicControlsOriginal.prototype.create = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "create", {}, arguments); };
    MusicControlsOriginal.prototype.destroy = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "destroy", {}, arguments); };
    MusicControlsOriginal.prototype.subscribe = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "subscribe", { "observable": true }, arguments); };
    MusicControlsOriginal.prototype.listen = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "listen", { "sync": true }, arguments); };
    MusicControlsOriginal.prototype.updateIsPlaying = function (isPlaying) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "updateIsPlaying", {}, arguments); };
    MusicControlsOriginal.prototype.updateElapsed = function (args) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "updateElapsed", { "platforms": ["iOS"] }, arguments); };
    MusicControlsOriginal.prototype.updateDismissable = function (dismissable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "updateDismissable", {}, arguments); };
    MusicControlsOriginal.pluginName = "MusicControls";
    MusicControlsOriginal.plugin = "cordova-plugin-music-controls";
    MusicControlsOriginal.pluginRef = "MusicControls";
    MusicControlsOriginal.repo = "https://github.com/homerours/cordova-music-controls-plugin";
    MusicControlsOriginal.platforms = ["Android", "iOS", "Windows"];
    return MusicControlsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var MusicControls = new MusicControlsOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 584 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NativeAudio; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var NativeAudioOriginal = /** @class */ (function (_super) {
    __extends(NativeAudioOriginal, _super);
    function NativeAudioOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NativeAudioOriginal.prototype.preloadSimple = function (id, assetPath) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "preloadSimple", {}, arguments); };
    NativeAudioOriginal.prototype.preloadComplex = function (id, assetPath, volume, voices, delay) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "preloadComplex", {}, arguments); };
    NativeAudioOriginal.prototype.play = function (id, completeCallback) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "play", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    NativeAudioOriginal.prototype.stop = function (id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stop", {}, arguments); };
    NativeAudioOriginal.prototype.loop = function (id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "loop", {}, arguments); };
    NativeAudioOriginal.prototype.unload = function (id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unload", {}, arguments); };
    NativeAudioOriginal.prototype.setVolumeForComplexAsset = function (id, volume) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setVolumeForComplexAsset", {}, arguments); };
    NativeAudioOriginal.pluginName = "NativeAudio";
    NativeAudioOriginal.plugin = "cordova-plugin-nativeaudio";
    NativeAudioOriginal.pluginRef = "plugins.NativeAudio";
    NativeAudioOriginal.repo = "https://github.com/floatinghotpot/cordova-plugin-nativeaudio";
    NativeAudioOriginal.platforms = ["Android", "Browser", "iOS"];
    return NativeAudioOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var NativeAudio = new NativeAudioOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9uYXRpdmUtYXVkaW8vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBdUN2QywrQkFBaUI7Ozs7SUFRaEQsbUNBQWEsYUFBQyxFQUFVLEVBQUUsU0FBaUI7SUFjM0Msb0NBQWMsYUFBQyxFQUFVLEVBQUUsU0FBaUIsRUFBRSxNQUFjLEVBQUUsTUFBYyxFQUFFLEtBQWE7SUFjM0YsMEJBQUksYUFBQyxFQUFVLEVBQUUsZ0JBQTJCO0lBVTVDLDBCQUFJLGFBQUMsRUFBVTtJQVVmLDBCQUFJLGFBQUMsRUFBVTtJQVVmLDRCQUFNLGFBQUMsRUFBVTtJQVdqQiw4Q0FBd0IsYUFBQyxFQUFVLEVBQUUsTUFBYzs7Ozs7O3NCQXJIckQ7RUF3Q2lDLGlCQUFpQjtTQUFyQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgTmF0aXZlIEF1ZGlvXG4gKiBAZGVzY3JpcHRpb24gTmF0aXZlIEF1ZGlvIFBsYXliYWNrXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IE5hdGl2ZUF1ZGlvIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9uYXRpdmUtYXVkaW8nO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF0aXZlQXVkaW86IE5hdGl2ZUF1ZGlvKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLm5hdGl2ZUF1ZGlvLnByZWxvYWRTaW1wbGUoJ3VuaXF1ZUlkMScsICdwYXRoL3RvL2ZpbGUubXAzJykudGhlbihvblN1Y2Nlc3MsIG9uRXJyb3IpO1xuICogdGhpcy5uYXRpdmVBdWRpby5wcmVsb2FkQ29tcGxleCgndW5pcXVlSWQyJywgJ3BhdGgvdG8vZmlsZTIubXAzJywgMSwgMSwgMCkudGhlbihvblN1Y2Nlc3MsIG9uRXJyb3IpO1xuICpcbiAqIHRoaXMubmF0aXZlQXVkaW8ucGxheSgndW5pcXVlSWQxJykudGhlbihvblN1Y2Nlc3MsIG9uRXJyb3IpO1xuICpcbiAqIC8vIGNhbiBvcHRpb25hbGx5IHBhc3MgYSBjYWxsYmFjayB0byBiZSBjYWxsZWQgd2hlbiB0aGUgZmlsZSBpcyBkb25lIHBsYXlpbmdcbiAqIHRoaXMubmF0aXZlQXVkaW8ucGxheSgndW5pcXVlSWQxJywgKCkgPT4gY29uc29sZS5sb2coJ3VuaXF1ZUlkMSBpcyBkb25lIHBsYXlpbmcnKSk7XG4gKlxuICogdGhpcy5uYXRpdmVBdWRpby5sb29wKCd1bmlxdWVJZDInKS50aGVuKG9uU3VjY2Vzcywgb25FcnJvcik7XG4gKlxuICogdGhpcy5uYXRpdmVBdWRpby5zZXRWb2x1bWVGb3JDb21wbGV4QXNzZXQoJ3VuaXF1ZUlkMicsIDAuNikudGhlbihvblN1Y2Nlc3Msb25FcnJvcik7XG4gKlxuICogdGhpcy5uYXRpdmVBdWRpby5zdG9wKCd1bmlxdWVJZDEnKS50aGVuKG9uU3VjY2VzcyxvbkVycm9yKTtcbiAqXG4gKiB0aGlzLm5hdGl2ZUF1ZGlvLnVubG9hZCgndW5pcXVlSWQxJykudGhlbihvblN1Y2Nlc3Msb25FcnJvcik7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnTmF0aXZlQXVkaW8nLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1uYXRpdmVhdWRpbycsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMuTmF0aXZlQXVkaW8nLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2Zsb2F0aW5naG90cG90L2NvcmRvdmEtcGx1Z2luLW5hdGl2ZWF1ZGlvJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnQnJvd3NlcicsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBOYXRpdmVBdWRpbyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIExvYWRzIGFuIGF1ZGlvIGZpbGUgaW50byBtZW1vcnkuIE9wdGltaXplZCBmb3Igc2hvcnQgY2xpcHMgLyBzaW5nbGUgc2hvdHMgKHVwIHRvIGZpdmUgc2Vjb25kcykuIENhbm5vdCBiZSBzdG9wcGVkIC8gbG9vcGVkLlxuICAgKiBAcGFyYW0gaWQge3N0cmluZ30gdW5pcXVlIElEIGZvciB0aGUgYXVkaW8gZmlsZVxuICAgKiBAcGFyYW0gYXNzZXRQYXRoIHtzdHJpbmd9ICB0aGUgcmVsYXRpdmUgcGF0aCBvciBhYnNvbHV0ZSBVUkwgKGlubHVkaW5nIGh0dHA6Ly8pIHRvIHRoZSBhdWRpbyBhc3NldC5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcHJlbG9hZFNpbXBsZShpZDogc3RyaW5nLCBhc3NldFBhdGg6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIExvYWRzIGFuIGF1ZGlvIGZpbGUgaW50byBtZW1vcnkuIE9wdGltaXplZCBmb3IgYmFja2dyb3VuZCBtdXNpYyAvIGFtYmllbnQgc291bmQuIFVzZXMgaGlnaGxldmVsIG5hdGl2ZSBBUElzIHdpdGggYSBsYXJnZXIgZm9vdHByaW50LiAoaU9TOiBBVkF1ZGlvUGxheWVyKS4gQ2FuIGJlIHN0b3BwZWQgLyBsb29wZWQgYW5kIHVzZWQgd2l0aCBtdWx0aXBsZSB2b2ljZXMuIENhbiBiZSBmYWRlZCBpbiBhbmQgb3V0IHVzaW5nIHRoZSBkZWxheSBwYXJhbWV0ZXIuXG4gICAqIEBwYXJhbSBpZCB7c3RyaW5nfSB1bmlxdWUgSUQgZm9yIHRoZSBhdWRpbyBmaWxlXG4gICAqIEBwYXJhbSBhc3NldFBhdGgge3N0cmluZ30gIHRoZSByZWxhdGl2ZSBwYXRoIG9yIGFic29sdXRlIFVSTCAoaW5sdWRpbmcgaHR0cDovLykgdG8gdGhlIGF1ZGlvIGFzc2V0LlxuICAgKiBAcGFyYW0gdm9sdW1lIHtudW1iZXJ9IHRoZSB2b2x1bWUgb2YgdGhlIHByZWxvYWRlZCBzb3VuZCAoMC4xIHRvIDEuMClcbiAgICogQHBhcmFtIHZvaWNlcyB7bnVtYmVyfSB0aGUgbnVtYmVyIG9mIG11bHRpY2hhbm5lbCB2b2ljZXMgYXZhaWxhYmxlXG4gICAqIEBwYXJhbSBkZWxheSB7bnVtYmVyfVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBwcmVsb2FkQ29tcGxleChpZDogc3RyaW5nLCBhc3NldFBhdGg6IHN0cmluZywgdm9sdW1lOiBudW1iZXIsIHZvaWNlczogbnVtYmVyLCBkZWxheTogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUGxheXMgYW4gYXVkaW8gYXNzZXRcbiAgICogQHBhcmFtIGlkIHtzdHJpbmd9IHVuaXF1ZSBJRCBmb3IgdGhlIGF1ZGlvIGZpbGVcbiAgICogQHBhcmFtIGNvbXBsZXRlQ2FsbGJhY2sge0Z1bmN0aW9ufSBvcHRpb25hbC4gQ2FsbGJhY2sgdG8gYmUgaW52b2tlZCB3aGVuIGF1ZGlvIGlzIGRvbmUgcGxheWluZ1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN1Y2Nlc3NJbmRleDogMSxcbiAgICBlcnJvckluZGV4OiAyXG4gIH0pXG4gIHBsYXkoaWQ6IHN0cmluZywgY29tcGxldGVDYWxsYmFjaz86IEZ1bmN0aW9uKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU3RvcHMgcGxheWluZyBhbiBhdWRpb1xuICAgKiBAcGFyYW0gaWQge3N0cmluZ30gdW5pcXVlIElEIGZvciB0aGUgYXVkaW8gZmlsZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzdG9wKGlkOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBMb29wcyBhbiBhdWRpbyBhc3NldCBpbmZpbml0ZWx5LCB0aGlzIG9ubHkgd29ya3MgZm9yIGNvbXBsZXggYXNzZXRzXG4gICAqIEBwYXJhbSBpZCB7c3RyaW5nfSB1bmlxdWUgSUQgZm9yIHRoZSBhdWRpbyBmaWxlXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgbG9vcChpZDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVW5sb2FkcyBhbiBhdWRpbyBmaWxlIGZyb20gbWVtb3J5XG4gICAqIEBwYXJhbSBpZCB7c3RyaW5nfSB1bmlxdWUgSUQgZm9yIHRoZSBhdWRpbyBmaWxlXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHVubG9hZChpZDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2hhbmdlcyB0aGUgdm9sdW1lIGZvciBwcmVsb2FkZWQgY29tcGxleCBhc3NldHMuXG4gICAqIEBwYXJhbSBpZCB7c3RyaW5nfSB1bmlxdWUgSUQgZm9yIHRoZSBhdWRpbyBmaWxlXG4gICAqIEBwYXJhbSB2b2x1bWUge251bWJlcn0gdGhlIHZvbHVtZSBvZiB0aGUgYXVkaW8gYXNzZXQgKDAuMSB0byAxLjApXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldFZvbHVtZUZvckNvbXBsZXhBc3NldChpZDogc3RyaW5nLCB2b2x1bWU6IG51bWJlcik6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 585 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NativeGeocoder; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var NativeGeocoderOriginal = /** @class */ (function (_super) {
    __extends(NativeGeocoderOriginal, _super);
    function NativeGeocoderOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NativeGeocoderOriginal.prototype.reverseGeocode = function (latitude, longitude) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "reverseGeocode", { "callbackOrder": "reverse" }, arguments); };
    NativeGeocoderOriginal.prototype.forwardGeocode = function (addressString) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "forwardGeocode", { "callbackOrder": "reverse" }, arguments); };
    NativeGeocoderOriginal.pluginName = "NativeGeocoder";
    NativeGeocoderOriginal.plugin = "cordova-plugin-nativegeocoder";
    NativeGeocoderOriginal.pluginRef = "nativegeocoder";
    NativeGeocoderOriginal.repo = "https://github.com/sebastianbaar/cordova-plugin-nativegeocoder";
    NativeGeocoderOriginal.platforms = ["iOS", "Android"];
    return NativeGeocoderOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var NativeGeocoder = new NativeGeocoderOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9uYXRpdmUtZ2VvY29kZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBbUNwQyxrQ0FBaUI7Ozs7SUFXbkQsdUNBQWMsYUFBQyxRQUFnQixFQUFFLFNBQWlCO0lBWWxELHVDQUFjLGFBQUMsYUFBcUI7Ozs7Ozt5QkEzRHRDO0VBb0NvQyxpQkFBaUI7U0FBeEMsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIE5hdGl2ZSBHZW9jb2RlclxuICogQGRlc2NyaXB0aW9uXG4gKiBDb3Jkb3ZhIHBsdWdpbiBmb3IgbmF0aXZlIGZvcndhcmQgYW5kIHJldmVyc2UgZ2VvY29kaW5nXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBOYXRpdmVHZW9jb2RlciwgTmF0aXZlR2VvY29kZXJSZXZlcnNlUmVzdWx0LCBOYXRpdmVHZW9jb2RlckZvcndhcmRSZXN1bHQgfSBmcm9tICdAaW9uaWMtbmF0aXZlL25hdGl2ZS1nZW9jb2Rlcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBuYXRpdmVHZW9jb2RlcjogTmF0aXZlR2VvY29kZXIpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMubmF0aXZlR2VvY29kZXIucmV2ZXJzZUdlb2NvZGUoNTIuNTA3MjA5NSwgMTMuMTQ1MjgxOClcbiAqICAgLnRoZW4oKHJlc3VsdDogTmF0aXZlR2VvY29kZXJSZXZlcnNlUmVzdWx0KSA9PiBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyZXN1bHQpKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmxvZyhlcnJvcikpO1xuICpcbiAqIHRoaXMubmF0aXZlR2VvY29kZXIuZm9yd2FyZEdlb2NvZGUoJ0JlcmxpbicpXG4gKiAgIC50aGVuKChjb29yZGluYXRlczogTmF0aXZlR2VvY29kZXJGb3J3YXJkUmVzdWx0KSA9PiBjb25zb2xlLmxvZygnVGhlIGNvb3JkaW5hdGVzIGFyZSBsYXRpdHVkZT0nICsgY29vcmRpbmF0ZXMubGF0aXR1ZGUgKyAnIGFuZCBsb25naXR1ZGU9JyArIGNvb3JkaW5hdGVzLmxvbmdpdHVkZSkpXG4gKiAgIC5jYXRjaCgoZXJyb3I6IGFueSkgPT4gY29uc29sZS5sb2coZXJyb3IpKTtcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIE5hdGl2ZUdlb2NvZGVyUmV2ZXJzZVJlc3VsdFxuICogTmF0aXZlR2VvY29kZXJGb3J3YXJkUmVzdWx0XG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnTmF0aXZlR2VvY29kZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1uYXRpdmVnZW9jb2RlcicsXG4gIHBsdWdpblJlZjogJ25hdGl2ZWdlb2NvZGVyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9zZWJhc3RpYW5iYWFyL2NvcmRvdmEtcGx1Z2luLW5hdGl2ZWdlb2NvZGVyJyxcbiAgcGxhdGZvcm1zOiBbJ2lPUycsICdBbmRyb2lkJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTmF0aXZlR2VvY29kZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFJldmVyc2UgZ2VvY29kZSBhIGdpdmVuIGxhdGl0dWRlIGFuZCBsb25naXR1ZGUgdG8gZmluZCBsb2NhdGlvbiBhZGRyZXNzXG4gICAqIEBwYXJhbSBsYXRpdHVkZSB7bnVtYmVyfSBUaGUgbGF0aXR1ZGVcbiAgICogQHBhcmFtIGxvbmdpdHVkZSB7bnVtYmVyfSBUaGUgbG9uZ2l0dWRlXG4gICAqIEByZXR1cm4ge1Byb21pc2U8TmF0aXZlR2VvY29kZXJSZXZlcnNlUmVzdWx0Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAgcmV2ZXJzZUdlb2NvZGUobGF0aXR1ZGU6IG51bWJlciwgbG9uZ2l0dWRlOiBudW1iZXIpOiBQcm9taXNlPE5hdGl2ZUdlb2NvZGVyUmV2ZXJzZVJlc3VsdD4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBGb3J3YXJkIGdlb2NvZGUgYSBnaXZlbiBhZGRyZXNzIHRvIGZpbmQgY29vcmRpbmF0ZXNcbiAgICogQHBhcmFtIGFkZHJlc3NTdHJpbmcge3N0cmluZ30gVGhlIGFkZHJlc3MgdG8gYmUgZ2VvY29kZWRcbiAgICogQHJldHVybiB7UHJvbWlzZTxOYXRpdmVHZW9jb2RlckZvcndhcmRSZXN1bHQ+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBmb3J3YXJkR2VvY29kZShhZGRyZXNzU3RyaW5nOiBzdHJpbmcpOiBQcm9taXNlPE5hdGl2ZUdlb2NvZGVyRm9yd2FyZFJlc3VsdD4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuXG4vKipcbiAqIEVuY2Fwc3VsYXRlcyBmb3JtYXQgaW5mb3JtYXRpb24gYWJvdXQgYSByZXZlcnNlIGdlb2NvZGluZyByZXN1bHQuXG4gKiBtb3JlIEluZm86XG4gKiAgLSBodHRwczovL2RldmVsb3Blci5hcHBsZS5jb20vZG9jdW1lbnRhdGlvbi9jb3JlbG9jYXRpb24vY2xwbGFjZW1hcmtcbiAqICAtIGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL3JlZmVyZW5jZS9hbmRyb2lkL2xvY2F0aW9uL0FkZHJlc3MuaHRtbFxuICovXG5leHBvcnQgaW50ZXJmYWNlIE5hdGl2ZUdlb2NvZGVyUmV2ZXJzZVJlc3VsdCB7XG4gIC8qKlxuICAgKiBUaGUgY291bnRyeSBjb2RlLlxuICAgKi9cbiAgY291bnRyeUNvZGU6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBjb3VudHJ5IG5hbWUuXG4gICAqL1xuICBjb3VudHJ5TmFtZTogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIHBvc3RhbCBjb2RlLlxuICAgKi9cbiAgcG9zdGFsQ29kZTogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGFkbWluaXN0cmF0aXZlQXJlYS5cbiAgICovXG4gIGFkbWluaXN0cmF0aXZlQXJlYTogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIHN1YkFkbWluaXN0cmF0aXZlQXJlYS5cbiAgICovXG4gIHN1YkFkbWluaXN0cmF0aXZlQXJlYTogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGxvY2FsaXR5LlxuICAgKi9cbiAgbG9jYWxpdHk6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBzdWJMb2NhbGl0eS5cbiAgICovXG4gIHN1YkxvY2FsaXR5OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgdGhvcm91Z2hmYXJlLlxuICAgKi9cbiAgdGhvcm91Z2hmYXJlOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgc3ViVGhvcm91Z2hmYXJlLlxuICAgKi9cbiAgc3ViVGhvcm91Z2hmYXJlOiBzdHJpbmc7XG59XG5cbi8qKlxuICogRW5jYXBzdWxhdGVzIGZvcm1hdCBpbmZvcm1hdGlvbiBhYm91dCBhIGZvcndhcmQgZ2VvY29kaW5nIHJlc3VsdC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBOYXRpdmVHZW9jb2RlckZvcndhcmRSZXN1bHQge1xuICAvKipcbiAgICogVGhlIGxhdGl0dWRlLlxuICAgKi9cbiAgbGF0aXR1ZGU6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBsb25naXR1ZGUuXG4gICAqL1xuICBsb25naXR1ZGU6IHN0cmluZztcbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 586 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NativeKeyboard; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var NativeKeyboardOriginal = /** @class */ (function (_super) {
    __extends(NativeKeyboardOriginal, _super);
    function NativeKeyboardOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NativeKeyboardOriginal.prototype.showMessenger = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showMessenger", { "sync": true }, arguments); };
    NativeKeyboardOriginal.prototype.hideMessenger = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hideMessenger", { "sync": true }, arguments); };
    NativeKeyboardOriginal.prototype.showMessengerKeyboard = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showMessengerKeyboard", {}, arguments); };
    NativeKeyboardOriginal.prototype.hideMessengerKeyboard = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hideMessengerKeyboard", {}, arguments); };
    NativeKeyboardOriginal.prototype.updateMessenger = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "updateMessenger", {}, arguments); };
    NativeKeyboardOriginal.pluginName = "NativeKeyboard";
    NativeKeyboardOriginal.plugin = "cordova-plugin-native-keyboard";
    NativeKeyboardOriginal.pluginRef = "NativeKeyboard";
    NativeKeyboardOriginal.repo = "https://github.com/EddyVerbruggen/cordova-plugin-native-keyboard";
    NativeKeyboardOriginal.platforms = ["Android", "iOS"];
    return NativeKeyboardOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var NativeKeyboard = new NativeKeyboardOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 587 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NativePageTransitions; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var NativePageTransitionsOriginal = /** @class */ (function (_super) {
    __extends(NativePageTransitionsOriginal, _super);
    function NativePageTransitionsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NativePageTransitionsOriginal.prototype.slide = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "slide", {}, arguments); };
    NativePageTransitionsOriginal.prototype.flip = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "flip", {}, arguments); };
    NativePageTransitionsOriginal.prototype.fade = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "fade", { "platforms": ["iOS", "Android"] }, arguments); };
    NativePageTransitionsOriginal.prototype.drawer = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "drawer", { "platforms": ["iOS", "Android"] }, arguments); };
    NativePageTransitionsOriginal.prototype.curl = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "curl", { "platforms": ["iOS"] }, arguments); };
    NativePageTransitionsOriginal.prototype.executePendingTransition = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "executePendingTransition", {}, arguments); };
    NativePageTransitionsOriginal.prototype.cancelPendingTransition = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "cancelPendingTransition", {}, arguments); };
    NativePageTransitionsOriginal.pluginName = "NativePageTransitions";
    NativePageTransitionsOriginal.plugin = "com.telerik.plugins.nativepagetransitions";
    NativePageTransitionsOriginal.pluginRef = "plugins.nativepagetransitions";
    NativePageTransitionsOriginal.repo = "https://github.com/Telerik-Verified-Plugins/NativePageTransitions";
    NativePageTransitionsOriginal.platforms = ["Android", "iOS", "Windows Phone 8"];
    return NativePageTransitionsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var NativePageTransitions = new NativePageTransitionsOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9uYXRpdmUtcGFnZS10cmFuc2l0aW9ucy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFzRTdCLHlDQUFpQjs7OztJQU8xRCxxQ0FBSyxhQUFDLE9BQWdDO0lBVXRDLG9DQUFJLGFBQUMsT0FBZ0M7SUFVckMsb0NBQUksYUFBQyxPQUFnQztJQVdyQyxzQ0FBTSxhQUFDLE9BQWdDO0lBV3ZDLG9DQUFJLGFBQUMsT0FBZ0M7SUFTckMsd0RBQXdCO0lBU3hCLHVEQUF1Qjs7Ozs7O2dDQTFJekI7RUF1RTJDLGlCQUFpQjtTQUEvQyxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBOYXRpdmVUcmFuc2l0aW9uT3B0aW9ucyB7XG4gIGRpcmVjdGlvbj86IHN0cmluZztcbiAgZHVyYXRpb24/OiBudW1iZXI7XG4gIHNsb3dkb3duZmFjdG9yPzogbnVtYmVyO1xuICBzbGlkZVBpeGVscz86IG51bWJlcjtcbiAgaW9zZGVsYXk/OiBudW1iZXI7XG4gIGFuZHJvaWRkZWxheT86IG51bWJlcjtcbiAgd2lucGhvbmVkZWxheT86IG51bWJlcjtcbiAgZml4ZWRQaXhlbHNUb3A/OiBudW1iZXI7XG4gIGZpeGVkUGl4ZWxzQm90dG9tPzogbnVtYmVyO1xuICBhY3Rpb24/OiBzdHJpbmc7XG4gIG9yaWdpbj86IHN0cmluZztcbiAgaHJlZj86IHN0cmluZztcbn1cblxuLyoqXG4gKiBAbmFtZSBOYXRpdmUgUGFnZSBUcmFuc2l0aW9uc1xuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgTmF0aXZlIFBhZ2UgVHJhbnNpdGlvbnMgcGx1Z2luIHVzZXMgbmF0aXZlIGhhcmR3YXJlIGFjY2VsZXJhdGlvbiB0byBhbmltYXRlIHlvdXIgdHJhbnNpdGlvbnMgYmV0d2VlbiB2aWV3cy4gWW91IGhhdmUgY29tcGxldGUgY29udHJvbCBvdmVyIHRoZSB0eXBlIG9mIHRyYW5zaXRpb24sIHRoZSBkdXJhdGlvbiwgYW5kIGRpcmVjdGlvbi5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IE5hdGl2ZVBhZ2VUcmFuc2l0aW9ucywgTmF0aXZlVHJhbnNpdGlvbk9wdGlvbnMgfSBmcm9tICdAaW9uaWMtbmF0aXZlL25hdGl2ZS1wYWdlLXRyYW5zaXRpb25zJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdGl2ZVBhZ2VUcmFuc2l0aW9uczogTmF0aXZlUGFnZVRyYW5zaXRpb25zKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogLy8gZXhhbXBsZSBvZiBhZGRpbmcgYSB0cmFuc2l0aW9uIHdoZW4gYSBwYWdlL21vZGFsIGNsb3Nlc1xuICogaW9uVmlld1dpbGxMZWF2ZSgpIHtcbiAqXG4gKiAgbGV0IG9wdGlvbnM6IE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zID0ge1xuICogICAgIGRpcmVjdGlvbjogJ3VwJyxcbiAqICAgICBkdXJhdGlvbjogNTAwLFxuICogICAgIHNsb3dkb3duZmFjdG9yOiAzLFxuICogICAgIHNsaWRlUGl4ZWxzOiAyMCxcbiAqICAgICBpb3NkZWxheTogMTAwLFxuICogICAgIGFuZHJvaWRkZWxheTogMTUwLFxuICogICAgIGZpeGVkUGl4ZWxzVG9wOiAwLFxuICogICAgIGZpeGVkUGl4ZWxzQm90dG9tOiA2MFxuICogICAgfVxuICpcbiAqICB0aGlzLm5hdGl2ZVBhZ2VUcmFuc2l0aW9ucy5zbGlkZShvcHRpb25zKVxuICogICAgLnRoZW4ob25TdWNjZXNzKVxuICogICAgLmNhdGNoKG9uRXJyb3IpO1xuICpcbiAqIH1cbiAqXG4gKlxuICogLy8gZXhhbXBsZSBvZiBhZGRpbmcgYSB0cmFuc2l0aW9uIHdoZW4gcHVzaGluZyBhIG5ldyBwYWdlXG4gKiBvcGVuUGFnZShwYWdlOiBhbnkpIHtcbiAqXG4gKiAgIHRoaXMubmF0aXZlUGFnZVRyYW5zaXRpb25zLnNsaWRlKG9wdGlvbnMpO1xuICogICB0aGlzLm5hdkN0cmwucHVzaChwYWdlKTtcbiAqXG4gKiB9XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnTmF0aXZlUGFnZVRyYW5zaXRpb25zJyxcbiAgcGx1Z2luOiAnY29tLnRlbGVyaWsucGx1Z2lucy5uYXRpdmVwYWdldHJhbnNpdGlvbnMnLFxuICBwbHVnaW5SZWY6ICdwbHVnaW5zLm5hdGl2ZXBhZ2V0cmFuc2l0aW9ucycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vVGVsZXJpay1WZXJpZmllZC1QbHVnaW5zL05hdGl2ZVBhZ2VUcmFuc2l0aW9ucycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzIFBob25lIDgnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBOYXRpdmVQYWdlVHJhbnNpdGlvbnMgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBQZXJmb3JtIGEgc2xpZGUgYW5pbWF0aW9uXG4gICAqIEBwYXJhbSBvcHRpb25zIHtOYXRpdmVUcmFuc2l0aW9uT3B0aW9uc30gT3B0aW9ucyBmb3IgdGhlIHRyYW5zaXRpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc2xpZGUob3B0aW9uczogTmF0aXZlVHJhbnNpdGlvbk9wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBQZXJmb3JtIGEgZmxpcCBhbmltYXRpb25cbiAgICogQHBhcmFtIG9wdGlvbnMge05hdGl2ZVRyYW5zaXRpb25PcHRpb25zfSBPcHRpb25zIGZvciB0aGUgdHJhbnNpdGlvblxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBmbGlwKG9wdGlvbnM6IE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUGVyZm9ybSBhIGZhZGUgYW5pbWF0aW9uXG4gICAqIEBwYXJhbSBvcHRpb25zIHtOYXRpdmVUcmFuc2l0aW9uT3B0aW9uc30gT3B0aW9ucyBmb3IgdGhlIHRyYW5zaXRpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHsgcGxhdGZvcm1zOiBbJ2lPUycsICdBbmRyb2lkJ10gfSlcbiAgZmFkZShvcHRpb25zOiBOYXRpdmVUcmFuc2l0aW9uT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cblxuICAvKipcbiAgICogUGVyZm9ybSBhIHNsaWRlIGFuaW1hdGlvblxuICAgKiBAcGFyYW0gb3B0aW9ucyB7TmF0aXZlVHJhbnNpdGlvbk9wdGlvbnN9IE9wdGlvbnMgZm9yIHRoZSB0cmFuc2l0aW9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7IHBsYXRmb3JtczogWydpT1MnLCAnQW5kcm9pZCddIH0pXG4gIGRyYXdlcihvcHRpb25zOiBOYXRpdmVUcmFuc2l0aW9uT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cblxuICAvKipcbiAgICogUGVyZm9ybSBhIHNsaWRlIGFuaW1hdGlvblxuICAgKiBAcGFyYW0gb3B0aW9ucyB7TmF0aXZlVHJhbnNpdGlvbk9wdGlvbnN9IE9wdGlvbnMgZm9yIHRoZSB0cmFuc2l0aW9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7IHBsYXRmb3JtczogWydpT1MnXSB9KVxuICBjdXJsKG9wdGlvbnM6IE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRXhlY3V0ZSBwZW5kaW5nIHRyYW5zaXRpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZXhlY3V0ZVBlbmRpbmdUcmFuc2l0aW9uKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENhbmNlbCBwZW5kaW5nIHRyYW5zaXRpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgY2FuY2VsUGVuZGluZ1RyYW5zaXRpb24oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 588 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NativeRingtones; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var NativeRingtonesOriginal = /** @class */ (function (_super) {
    __extends(NativeRingtonesOriginal, _super);
    function NativeRingtonesOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NativeRingtonesOriginal.prototype.getRingtone = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getRingtone", {}, arguments); };
    NativeRingtonesOriginal.prototype.playRingtone = function (ringtoneUri) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "playRingtone", {}, arguments); };
    NativeRingtonesOriginal.prototype.stopRingtone = function (ringtoneUri) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopRingtone", {}, arguments); };
    NativeRingtonesOriginal.pluginName = "native-ringtones";
    NativeRingtonesOriginal.plugin = "cordova-plugin-native-ringtones";
    NativeRingtonesOriginal.pluginRef = "cordova.plugins.NativeRingtones";
    NativeRingtonesOriginal.repo = "https://github.com/TongZhangzt/cordova-plugin-native-ringtones";
    NativeRingtonesOriginal.platforms = ["Android", "iOS"];
    return NativeRingtonesOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var NativeRingtones = new NativeRingtonesOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9uYXRpdmUtcmluZ3RvbmVzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQWtDbkMsbUNBQWlCOzs7O0lBT3BELHFDQUFXO0lBVVgsc0NBQVksYUFBQyxXQUFtQjtJQVVoQyxzQ0FBWSxhQUFDLFdBQW1COzs7Ozs7MEJBN0RsQztFQWtDcUMsaUJBQWlCO1NBQXpDLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAYmV0YVxuICogQG5hbWUgTmF0aXZlIFJpbmd0b25lc1xuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgcGx1Z2luIGhlbHBzIGdldCB0aGUgbmF0aXZlIHJpbmd0b25lcyBsaXN0IG9uIEFuZHJvaWQgb3IgSU9TIGRldmljZXMuXG4gKiBBbmQgeW91IGNhbiBhbHNvIHVzZSB0aGlzIHBsdWdpbiB0byBwbGF5IG9yIHN0b3AgdGhlIG5hdGl2ZSByaW5ndG9uZXMgYW5kIGN1c3RvbSByaW5ndG9uZXMoYWRkZWQgaW4gdGhlIHd3dyBmb2xkZXIpLlxuICpcbiAqIEB1c2FnZVxuICogYGBgXG4gKiBpbXBvcnQgeyBOYXRpdmVSaW5ndG9uZXMgfSBmcm9tICdAaW9uaWMtbmF0aXZlL25hdGl2ZS1yaW5ndG9uZXMnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHJpbmd0b25lczogTmF0aXZlUmluZ3RvbmVzKSB7IH1cbiAqXG4gKiAuLi5cbiAqIHRoaXMucmluZ3RvbmVzLmdldFJpbmd0b25lKCkudGhlbigocmluZ3RvbmVzKSA9PiB7IGNvbnNvbGUubG9nKHJpbmd0b25lcyk7IH0pO1xuICpcbiAqIHRoaXMucmluZ3RvbmVzLnBsYXlSaW5ndG9uZSgnYXNzZXRzL3Jpbmd0b25lcy9zb3VuZF8xLmNhZicpO1xuICpcbiAqIHRoaXMucmluZ3RvbmVzLnN0b3BSaW5ndG9uZSgnYXNzZXRzL3Jpbmd0b25lcy9zb3VuZF8xLmNhZicpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ25hdGl2ZS1yaW5ndG9uZXMnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1uYXRpdmUtcmluZ3RvbmVzJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLk5hdGl2ZVJpbmd0b25lcycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vVG9uZ1poYW5nenQvY29yZG92YS1wbHVnaW4tbmF0aXZlLXJpbmd0b25lcycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5hdGl2ZVJpbmd0b25lcyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogR2V0IHRoZSByaW5ndG9uZSBsaXN0IG9mIHRoZSBkZXZpY2VcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gcmluZ3RvbmVzIGZvdW5kIHN1Y2Nlc3NmdWxseVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRSaW5ndG9uZSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIHN0YXJ0cyBwbGF5aW5nIHRoZSByaW5ndG9uZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmluZ3RvbmVVcmkgVGhlIHBhdGggdG8gdGhlIHJpbmd0b25lIGZpbGVcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBwbGF5UmluZ3RvbmUocmluZ3RvbmVVcmk6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gc3RvcHMgcGxheWluZyB0aGUgcmluZ3RvbmVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHJpbmd0b25lVXJpIFRoZSBwYXRoIHRvIHRoZSByaW5ndG9uZSBmaWxlXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc3RvcFJpbmd0b25lKHJpbmd0b25lVXJpOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 589 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NativeStorage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var NativeStorageOriginal = /** @class */ (function (_super) {
    __extends(NativeStorageOriginal, _super);
    function NativeStorageOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NativeStorageOriginal.prototype.setItem = function (reference, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setItem", {}, arguments); };
    NativeStorageOriginal.prototype.getItem = function (reference) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getItem", {}, arguments); };
    NativeStorageOriginal.prototype.keys = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "keys", {}, arguments); };
    NativeStorageOriginal.prototype.remove = function (reference) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "remove", {}, arguments); };
    NativeStorageOriginal.prototype.clear = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "clear", {}, arguments); };
    NativeStorageOriginal.pluginName = "NativeStorage";
    NativeStorageOriginal.plugin = "cordova-plugin-nativestorage";
    NativeStorageOriginal.pluginRef = "NativeStorage";
    NativeStorageOriginal.repo = "https://github.com/TheCocoaProject/cordova-plugin-nativestorage";
    NativeStorageOriginal.platforms = ["Android", "Browser", "iOS", "macOS", "Windows"];
    return NativeStorageOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var NativeStorage = new NativeStorageOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9uYXRpdmUtc3RvcmFnZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFvQ3JDLGlDQUFpQjs7OztJQVFsRCwrQkFBTyxhQUFDLFNBQWlCLEVBQUUsS0FBVTtJQVVyQywrQkFBTyxhQUFDLFNBQWlCO0lBU3pCLDRCQUFJO0lBVUosOEJBQU0sYUFBQyxTQUFpQjtJQVN4Qiw2QkFBSzs7Ozs7O3dCQW5GUDtFQXFDbUMsaUJBQWlCO1NBQXZDLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuXG4vKipcbiAqIEBuYW1lIE5hdGl2ZSBTdG9yYWdlXG4gKiBAZGVzY3JpcHRpb24gTmF0aXZlIHN0b3JhZ2Ugb2YgdmFyaWFibGVzIGluIEFuZHJvaWQgYW5kIGlPU1xuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgTmF0aXZlU3RvcmFnZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvbmF0aXZlLXN0b3JhZ2UnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF0aXZlU3RvcmFnZTogTmF0aXZlU3RvcmFnZSkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5uYXRpdmVTdG9yYWdlLnNldEl0ZW0oJ215aXRlbScsIHtwcm9wZXJ0eTogJ3ZhbHVlJywgYW5vdGhlclByb3BlcnR5OiAnYW5vdGhlclZhbHVlJ30pXG4gKiAgIC50aGVuKFxuICogICAgICgpID0+IGNvbnNvbGUubG9nKCdTdG9yZWQgaXRlbSEnKSxcbiAqICAgICBlcnJvciA9PiBjb25zb2xlLmVycm9yKCdFcnJvciBzdG9yaW5nIGl0ZW0nLCBlcnJvcilcbiAqICAgKTtcbiAqXG4gKiB0aGlzLm5hdGl2ZVN0b3JhZ2UuZ2V0SXRlbSgnbXlpdGVtJylcbiAqICAgLnRoZW4oXG4gKiAgICAgZGF0YSA9PiBjb25zb2xlLmxvZyhkYXRhKSxcbiAqICAgICBlcnJvciA9PiBjb25zb2xlLmVycm9yKGVycm9yKVxuICogICApO1xuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnTmF0aXZlU3RvcmFnZScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLW5hdGl2ZXN0b3JhZ2UnLFxuICBwbHVnaW5SZWY6ICdOYXRpdmVTdG9yYWdlJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9UaGVDb2NvYVByb2plY3QvY29yZG92YS1wbHVnaW4tbmF0aXZlc3RvcmFnZScsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0Jyb3dzZXInLCAnaU9TJywgJ21hY09TJywgJ1dpbmRvd3MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBOYXRpdmVTdG9yYWdlIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogU3RvcmVzIGEgdmFsdWVcbiAgICogQHBhcmFtIHJlZmVyZW5jZSB7c3RyaW5nfVxuICAgKiBAcGFyYW0gdmFsdWVcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc2V0SXRlbShyZWZlcmVuY2U6IHN0cmluZywgdmFsdWU6IGFueSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgYSBzdG9yZWQgaXRlbVxuICAgKiBAcGFyYW0gcmVmZXJlbmNlIHtzdHJpbmd9XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldEl0ZW0ocmVmZXJlbmNlOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXRyaWV2aW5nIGFsbCBrZXlzXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGtleXMoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyBhIHNpbmdsZSBzdG9yZWQgaXRlbVxuICAgKiBAcGFyYW0gcmVmZXJlbmNlIHtzdHJpbmd9XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlbW92ZShyZWZlcmVuY2U6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYWxsIHN0b3JlZCB2YWx1ZXMuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGNsZWFyKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 590 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NavigationBar; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var NavigationBarOriginal = /** @class */ (function (_super) {
    __extends(NavigationBarOriginal, _super);
    function NavigationBarOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NavigationBarOriginal.prototype.setUp = function (autohide) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setUp", { "callbackStyle": "object", "successName": "success", "errorName": "failure" }, arguments); };
    NavigationBarOriginal.prototype.hideNavigationBar = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hideNavigationBar", { "callbackStyle": "object", "successName": "success", "errorName": "failure" }, arguments); };
    NavigationBarOriginal.pluginName = "NavigationBar";
    NavigationBarOriginal.plugin = "cordova-plugin-navigationbar";
    NavigationBarOriginal.pluginRef = "navigationbar";
    NavigationBarOriginal.repo = "https://github.com/cranberrygame/cordova-plugin-navigationbar";
    NavigationBarOriginal.platforms = ["Android"];
    return NavigationBarOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var NavigationBar = new NavigationBarOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9uYXZpZ2F0aW9uLWJhci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUE2QnJDLGlDQUFpQjs7OztJQVlsRCw2QkFBSyxhQUFDLFFBQWtCO0lBYXhCLHlDQUFpQjs7Ozs7O3dCQXZEbkI7RUE4Qm1DLGlCQUFpQjtTQUF2QyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cblxuLyoqXG4gKiBAYmV0YVxuICogQG5hbWUgTmF2aWdhdGlvbiBCYXJcbiAqIEBkZXNjcmlwdGlvblxuICogVGhlIE5hdmlnYXRpb25CYXIgcGx1Z2luIGNhbiB5b3UgdG8gaGlkZSBhbmQgYXV0byBoaWRlIHRoZSBhbmRyb2lkIG5hdmlnYXRpb24gYmFyLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgTmF2aWdhdGlvbkJhciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvbmF2aWdhdGlvbi1iYXInO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgbmF2aWdhdGlvbkJhcjogTmF2aWdhdGlvbkJhcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogbGV0IGF1dG9IaWRlOiBib29sZWFuID0gdHJ1ZTtcbiAqIHRoaXMubmF2aWdhdGlvbkJhci5oaWRlKGF1dG9IaWRlKTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ05hdmlnYXRpb25CYXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1uYXZpZ2F0aW9uYmFyJyxcbiAgcGx1Z2luUmVmOiAnbmF2aWdhdGlvbmJhcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vY3JhbmJlcnJ5Z2FtZS9jb3Jkb3ZhLXBsdWdpbi1uYXZpZ2F0aW9uYmFyJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBOYXZpZ2F0aW9uQmFyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBoaWRlIGF1dG9tYXRpY2FsbHkgKG9yIG5vdCkgdGhlIG5hdmlnYXRpb24gYmFyLlxuICAgKiBAcGFyYW0gYXV0b2hpZGUge2Jvb2xlYW59XG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja1N0eWxlOiAnb2JqZWN0JyxcbiAgICBzdWNjZXNzTmFtZTogJ3N1Y2Nlc3MnLFxuICAgIGVycm9yTmFtZTogJ2ZhaWx1cmUnXG4gIH0pXG4gIHNldFVwKGF1dG9oaWRlPzogYm9vbGVhbik6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEhpZGUgdGhlIG5hdmlnYXRpb24gYmFyLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tTdHlsZTogJ29iamVjdCcsXG4gICAgc3VjY2Vzc05hbWU6ICdzdWNjZXNzJyxcbiAgICBlcnJvck5hbWU6ICdmYWlsdXJlJ1xuICB9KVxuICBoaWRlTmF2aWdhdGlvbkJhcigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 591 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Network; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_merge__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_merge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_merge__);




var NetworkOriginal = /** @class */ (function (_super) {
    __extends(NetworkOriginal, _super);
    function NetworkOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NetworkOriginal.prototype.onchange = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"].merge(this.onConnect(), this.onDisconnect());
        }
    }(); };
    NetworkOriginal.prototype.onDisconnect = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onDisconnect", { "eventObservable": true, "event": "offline" }, arguments); };
    NetworkOriginal.prototype.onConnect = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onConnect", { "eventObservable": true, "event": "online" }, arguments); };
    Object.defineProperty(NetworkOriginal.prototype, "type", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "type"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "type", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NetworkOriginal.prototype, "downlinkMax", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "downlinkMax"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "downlinkMax", value); },
        enumerable: true,
        configurable: true
    });
    NetworkOriginal.pluginName = "Network";
    NetworkOriginal.plugin = "cordova-plugin-network-information";
    NetworkOriginal.pluginRef = "navigator.connection";
    NetworkOriginal.repo = "https://github.com/apache/cordova-plugin-network-information";
    NetworkOriginal.platforms = ["Amazon Fire OS", "Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "Tizen", "Ubuntu", "Windows", "Windows Phone"];
    return NetworkOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Network = new NetworkOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9uZXR3b3JrL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLHFHQUFxRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLDJCQUEyQixDQUFDOztJQXdETiwyQkFBaUI7Ozs7SUFxQjVDLDBCQUFROzhDQUFvQixDQUFDO1lBQzNCLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQztRQUNqRSxDQUFDOztJQVVELDhCQUFZO0lBWVosMkJBQVM7MEJBdENULHlCQUFJOzs7Ozs7MEJBT0osZ0NBQVc7Ozs7Ozs7Ozs7O2tCQXpFYjtFQTJENkIsaUJBQWlCO1NBQWpDLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBDb3Jkb3ZhQ2hlY2ssIENvcmRvdmFQcm9wZXJ0eSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcbmltcG9ydCAncnhqcy9hZGQvb2JzZXJ2YWJsZS9tZXJnZSc7XG5cblxuZGVjbGFyZSBjb25zdCBuYXZpZ2F0b3I6IGFueTtcblxuLyoqXG4gKiBAbmFtZSBOZXR3b3JrXG4gKiBAZGVzY3JpcHRpb25cbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBjb3Jkb3ZhLXBsdWdpbi1uZXR3b3JrLWluZm9ybWF0aW9uLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbTmV0d29yayBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9jb3Jkb3ZhLXBsdWdpbi1uZXR3b3JrLWluZm9ybWF0aW9uKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IE5ldHdvcmsgfSBmcm9tICdAaW9uaWMtbmF0aXZlL25ldHdvcmsnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgbmV0d29yazogTmV0d29yaykgeyB9XG4gKlxuICogLi4uXG4gKlxuICogLy8gd2F0Y2ggbmV0d29yayBmb3IgYSBkaXNjb25uZWN0XG4gKiBsZXQgZGlzY29ubmVjdFN1YnNjcmlwdGlvbiA9IHRoaXMubmV0d29yay5vbkRpc2Nvbm5lY3QoKS5zdWJzY3JpYmUoKCkgPT4ge1xuICogICBjb25zb2xlLmxvZygnbmV0d29yayB3YXMgZGlzY29ubmVjdGVkIDotKCcpO1xuICogfSk7XG4gKlxuICogLy8gc3RvcCBkaXNjb25uZWN0IHdhdGNoXG4gKiBkaXNjb25uZWN0U3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gKlxuICpcbiAqIC8vIHdhdGNoIG5ldHdvcmsgZm9yIGEgY29ubmVjdGlvblxuICogbGV0IGNvbm5lY3RTdWJzY3JpcHRpb24gPSB0aGlzLm5ldHdvcmsub25Db25uZWN0KCkuc3Vic2NyaWJlKCgpID0+IHtcbiAqICAgY29uc29sZS5sb2coJ25ldHdvcmsgY29ubmVjdGVkIScpO1xuICogICAvLyBXZSBqdXN0IGdvdCBhIGNvbm5lY3Rpb24gYnV0IHdlIG5lZWQgdG8gd2FpdCBicmllZmx5XG4gKuKAqCAgIC8vIGJlZm9yZSB3ZSBkZXRlcm1pbmUgdGhlIGNvbm5lY3Rpb24gdHlwZS4gTWlnaHQgbmVlZCB0byB3YWl0LlxuICogICAvLyBwcmlvciB0byBkb2luZyBhbnkgYXBpIHJlcXVlc3RzIGFzIHdlbGwuXG4gKiAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICogICAgIGlmICh0aGlzLm5ldHdvcmsudHlwZSA9PT0gJ3dpZmknKSB7XG4gKiAgICAgICBjb25zb2xlLmxvZygnd2UgZ290IGEgd2lmaSBjb25uZWN0aW9uLCB3b29ob28hJyk7XG4gKiAgICAgfVxuICogICB9LCAzMDAwKTtcbiAqIH0pO1xuICpcbiAqIC8vIHN0b3AgY29ubmVjdCB3YXRjaFxuICogY29ubmVjdFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICpcbiAqIGBgYFxuICogQGFkdmFuY2VkXG4gKiBUaGUgYHR5cGVgIHByb3BlcnR5IHdpbGwgcmV0dXJuIG9uZSBvZiB0aGUgZm9sbG93aW5nIGNvbm5lY3Rpb24gdHlwZXM6IGB1bmtub3duYCwgYGV0aGVybmV0YCwgYHdpZmlgLCBgMmdgLCBgM2dgLCBgNGdgLCBgY2VsbHVsYXJgLCBgbm9uZWBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdOZXR3b3JrJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tbmV0d29yay1pbmZvcm1hdGlvbicsXG4gIHBsdWdpblJlZjogJ25hdmlnYXRvci5jb25uZWN0aW9uJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tbmV0d29yay1pbmZvcm1hdGlvbicsXG4gIHBsYXRmb3JtczogWydBbWF6b24gRmlyZSBPUycsICdBbmRyb2lkJywgJ0JsYWNrQmVycnkgMTAnLCAnQnJvd3NlcicsICdGaXJlZm94IE9TJywgJ2lPUycsICdUaXplbicsICdVYnVudHUnLCAnV2luZG93cycsICdXaW5kb3dzIFBob25lJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTmV0d29yayBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogQ29ubmVjdGlvbiB0eXBlXG4gICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICB0eXBlOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIERvd25saW5rIE1heCBTcGVlZFxuICAgKiBAcmV0dXJuIHtzdHJpbmd9XG4gICAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgZG93bmxpbmtNYXg6IHN0cmluZztcblxuICAvKipcbiAgICogUmV0dXJucyBhbiBvYnNlcnZhYmxlIHRvIHdhdGNoIGNvbm5lY3Rpb24gY2hhbmdlc1xuICAgKiBAcmV0dXJuIHtPYnNlcnZhYmxlPGFueT59XG4gICAqL1xuICBAQ29yZG92YUNoZWNrKClcbiAgb25jaGFuZ2UoKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gT2JzZXJ2YWJsZS5tZXJnZSh0aGlzLm9uQ29ubmVjdCgpLCB0aGlzLm9uRGlzY29ubmVjdCgpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgbm90aWZpZWQgd2hlbiB0aGUgZGV2aWNlIGdvZXMgb2ZmbGluZVxuICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxhbnk+fSBSZXR1cm5zIGFuIG9ic2VydmFibGUuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxuICAgIGV2ZW50OiAnb2ZmbGluZSdcbiAgfSlcbiAgb25EaXNjb25uZWN0KCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBub3RpZmllZCB3aGVuIHRoZSBkZXZpY2UgZ29lcyBvbmxpbmVcbiAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn0gUmV0dXJucyBhbiBvYnNlcnZhYmxlLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBldmVudDogJ29ubGluZSdcbiAgfSlcbiAgb25Db25uZWN0KCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 592 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return NetworkInterface; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var NetworkInterfaceOriginal = /** @class */ (function (_super) {
    __extends(NetworkInterfaceOriginal, _super);
    function NetworkInterfaceOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NetworkInterfaceOriginal.prototype.getIPAddress = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getIPAddress", {}, arguments); };
    NetworkInterfaceOriginal.prototype.getWiFiIPAddress = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getWiFiIPAddress", {}, arguments); };
    NetworkInterfaceOriginal.prototype.getCarrierIPAddress = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCarrierIPAddress", {}, arguments); };
    NetworkInterfaceOriginal.pluginName = "NetworkInterface";
    NetworkInterfaceOriginal.plugin = "cordova-plugin-networkinterface";
    NetworkInterfaceOriginal.pluginRef = "networkinterface";
    NetworkInterfaceOriginal.repo = "https://github.com/salbahra/cordova-plugin-networkinterface";
    NetworkInterfaceOriginal.platforms = ["Android", "BlackBerry 10", "Browser", "iOS", "Windows", "Windows Phone"];
    return NetworkInterfaceOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var NetworkInterface = new NetworkInterfaceOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9uZXR3b3JrLWludGVyZmFjZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUE4QmxDLG9DQUFpQjs7OztJQUdyRCx1Q0FBWTtJQVVaLDJDQUFnQjtJQVVoQiw4Q0FBbUI7Ozs7OzsyQkF0RHJCO0VBK0JzQyxpQkFBaUI7U0FBMUMsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgTmV0d29yayBJbnRlcmZhY2VcbiAqIEBkZXNjcmlwdGlvblxuICogTmV0d29yayBpbnRlcmZhY2UgaW5mb3JtYXRpb24gcGx1Z2luIGZvciBDb3Jkb3ZhL1Bob25lR2FwIHRoYXQgc3VwcG9ydHMgQW5kcm9pZCwgQmxhY2tiZXJyeSAxMCwgQnJvd3NlciwgaU9TLCBhbmQgV2luZG93cyBQaG9uZSA4LlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgTmV0d29ya0ludGVyZmFjZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvbmV0d29yay1pbnRlcmZhY2UnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIG5ldHdvcmtJbnRlcmZhY2U6IE5ldHdvcmtJbnRlcmZhY2UpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMubmV0d29ya0ludGVyZmFjZS5nZXRXaUZpSVBBZGRyZXNzKGZ1bmN0aW9uIChpcCkgeyBhbGVydChpcCk7IH0pO1xuICogdGhpcy5uZXR3b3JrSW50ZXJmYWNlLmdldENhcnJpZXJJUEFkZHJlc3MoZnVuY3Rpb24gKGlwKSB7IGFsZXJ0KGlwKTsgfSk7XG4gKlxuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ05ldHdvcmtJbnRlcmZhY2UnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1uZXR3b3JraW50ZXJmYWNlJyxcbiAgcGx1Z2luUmVmOiAnbmV0d29ya2ludGVyZmFjZScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vc2FsYmFocmEvY29yZG92YS1wbHVnaW4tbmV0d29ya2ludGVyZmFjZScsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0JsYWNrQmVycnkgMTAnLCAnQnJvd3NlcicsICdpT1MnLCAnV2luZG93cycsICdXaW5kb3dzIFBob25lJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE5ldHdvcmtJbnRlcmZhY2UgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgQENvcmRvdmEoKVxuICBnZXRJUEFkZHJlc3MoKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogR2V0cyB0aGUgV2lGaSBJUCBhZGRyZXNzXG4gICAqIEBwYXJhbSBzdWNjZXNzIHtGdW5jdGlvbn0gQ2FsbGJhY2sgdXNlZCB3aGVuIHN1Y2Nlc3NmdWxcbiAgICogQHBhcmFtIGVycm9yIHtGdW5jdGlvbn0gQ2FsbGJhY2sgdXNlZCB3aGVuIGZhaWx1cmVcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0V2lGaUlQQWRkcmVzcygpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSB3aXJlbGVzcyBjYXJyaWVyIElQIGFkZHJlc3NcbiAgICogQHBhcmFtIHN1Y2Nlc3Mge0Z1bmN0aW9ufSBDYWxsYmFjayB1c2VkIHdoZW4gc3VjY2Vzc2Z1bFxuICAgKiBAcGFyYW0gZXJyb3Ige0Z1bmN0aW9ufSBDYWxsYmFjayB1c2VkIHdoZW4gZmFpbHVyZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRDYXJyaWVySVBBZGRyZXNzKCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 593 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export OSLockScreenVisibility */
/* unused harmony export OSDisplayType */
/* unused harmony export OSActionType */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OneSignal; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



/**
 * **ANDROID** - Privacy setting for how the notification should be shown on the lockscreen of Android 5+ devices.
 */
var OSLockScreenVisibility;
(function (OSLockScreenVisibility) {
    /**
     * Fully visible (default)
     */
    OSLockScreenVisibility[OSLockScreenVisibility["Public"] = 1] = "Public";
    /**
     * Contents are hidden
     */
    OSLockScreenVisibility[OSLockScreenVisibility["Private"] = 0] = "Private";
    /**
     * Not shown
     */
    OSLockScreenVisibility[OSLockScreenVisibility["Secret"] = -1] = "Secret";
})(OSLockScreenVisibility || (OSLockScreenVisibility = {}));
/**
 * How the notification was displayed to the user. Part of OSNotification. See inFocusDisplaying for more information on how this is used.
 */
var OSDisplayType;
(function (OSDisplayType) {
    /**
     * notification is silent, or inFocusDisplaying is disabled.
     */
    OSDisplayType[OSDisplayType["None"] = 0] = "None";
    /**
     * (**DEFAULT**) - native alert dialog display.
     */
    OSDisplayType[OSDisplayType["InAppAlert"] = 1] = "InAppAlert";
    /**
     * native notification display.
     */
    OSDisplayType[OSDisplayType["Notification"] = 2] = "Notification";
})(OSDisplayType || (OSDisplayType = {}));
var OSActionType;
(function (OSActionType) {
    OSActionType[OSActionType["Opened"] = 0] = "Opened";
    OSActionType[OSActionType["ActionTake"] = 1] = "ActionTake";
})(OSActionType || (OSActionType = {}));
var OneSignalOriginal = /** @class */ (function (_super) {
    __extends(OneSignalOriginal, _super);
    function OneSignalOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * constants to use in inFocusDisplaying()
         */
        _this.OSInFocusDisplayOption = {
            None: 0,
            InAppAlert: 1,
            Notification: 2
        };
        return _this;
    }
    OneSignalOriginal.prototype.startInit = function (appId, googleProjectNumber) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startInit", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.handleNotificationReceived = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "handleNotificationReceived", { "observable": true }, arguments); };
    OneSignalOriginal.prototype.handleNotificationOpened = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "handleNotificationOpened", { "observable": true }, arguments); };
    OneSignalOriginal.prototype.iOSSettings = function (settings) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "iOSSettings", { "sync": true, "platforms": ["iOS"] }, arguments); };
    OneSignalOriginal.prototype.endInit = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "endInit", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.promptForPushNotificationsWithUserResponse = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "promptForPushNotificationsWithUserResponse", { "platforms": ["iOS"] }, arguments); };
    OneSignalOriginal.prototype.getTags = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getTags", {}, arguments); };
    OneSignalOriginal.prototype.getIds = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getIds", {}, arguments); };
    OneSignalOriginal.prototype.sendTag = function (key, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "sendTag", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.sendTags = function (json) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "sendTags", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.deleteTag = function (key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteTag", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.deleteTags = function (keys) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteTags", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.registerForPushNotifications = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerForPushNotifications", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.enableVibrate = function (enable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableVibrate", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.enableSound = function (enable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableSound", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.inFocusDisplaying = function (displayOption) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "inFocusDisplaying", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.setSubscription = function (enable) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setSubscription", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.getPermissionSubscriptionState = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPermissionSubscriptionState", {}, arguments); };
    OneSignalOriginal.prototype.postNotification = function (notificationObj) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "postNotification", {}, arguments); };
    OneSignalOriginal.prototype.cancelNotification = function (notificationId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "cancelNotification", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.promptLocation = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "promptLocation", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.syncHashedEmail = function (email) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "syncHashedEmail", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.setLogLevel = function (logLevel) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setLogLevel", { "sync": true }, arguments); };
    OneSignalOriginal.prototype.addPermissionObserver = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addPermissionObserver", { "observable": true }, arguments); };
    OneSignalOriginal.prototype.addSubscriptionObserver = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "addSubscriptionObserver", { "observable": true }, arguments); };
    OneSignalOriginal.pluginName = "OneSignal";
    OneSignalOriginal.plugin = "onesignal-cordova-plugin";
    OneSignalOriginal.pluginRef = "plugins.OneSignal";
    OneSignalOriginal.repo = "https://github.com/OneSignal/OneSignal-Cordova-SDK";
    OneSignalOriginal.platforms = ["Amazon Fire OS", "Android", "iOS", "Windows"];
    return OneSignalOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var OneSignal = new OneSignalOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 594 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OpenNativeSettings; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var OpenNativeSettingsOriginal = /** @class */ (function (_super) {
    __extends(OpenNativeSettingsOriginal, _super);
    function OpenNativeSettingsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OpenNativeSettingsOriginal.prototype.open = function (setting) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "open", {}, arguments); };
    OpenNativeSettingsOriginal.pluginName = "OpenNativeSettings";
    OpenNativeSettingsOriginal.plugin = "cordova-open-native-settings";
    OpenNativeSettingsOriginal.pluginRef = "cordova.plugins.settings";
    OpenNativeSettingsOriginal.repo = "https://github.com/guyromb/Cordova-open-native-settings";
    OpenNativeSettingsOriginal.platforms = ["Android", "iOS"];
    return OpenNativeSettingsOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var OpenNativeSettings = new OpenNativeSettingsOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9vcGVuLW5hdGl2ZS1zZXR0aW5ncy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFvR2hDLHNDQUFpQjs7OztJQVF2RCxpQ0FBSSxhQUFDLE9BQWU7Ozs7Ozs2QkE1R3RCO0VBb0d3QyxpQkFBaUI7U0FBNUMsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgT3BlbiBOYXRpdmUgU2V0dGluZ3NcbiAqIEBkZXNjcmlwdGlvblxuICogUGx1Z2luIHRvIG9wZW4gbmF0aXZlIHNjcmVlbnMgb2YgaU9TL2FuZHJvaWQgc2V0dGluZ3NcbiAqIEB1c2FnZVxuICogWW91IGNhbiBvcGVuIGFueSBvZiB0aGVzZSBzZXR0aW5nczpcbiAqIGBgYFxuICogXCJhYm91dFwiLCAvLyBpb3NcbiBcImFjY2Vzc2liaWxpdHlcIiwgLy8gaW9zLCBhbmRyb2lkXG4gXCJhY2NvdW50XCIsIC8vIGlvcywgYW5kcm9pZFxuIFwiYWlycGxhbmVfbW9kZVwiLCAvLyBpb3MsIGFuZHJvaWRcbiBcImFwblwiLCAvLyBhbmRyb2lkXG4gXCJhcHBsaWNhdGlvbl9kZXRhaWxzXCIsIC8vIGlvcywgYW5kcm9pZFxuIFwiYXBwbGljYXRpb25fZGV2ZWxvcG1lbnRcIiwgLy8gYW5kcm9pZFxuIFwiYXBwbGljYXRpb25cIiwgLy8gYW5kcm9pZFxuIFwiYXV0b2xvY2tcIiwgLy8gaW9zXG4gXCJiYXR0ZXJ5X29wdGltaXphdGlvblwiLCAvLyBhbmRyb2lkXG4gXCJibHVldG9vdGhcIiwgLy8gaW9zLCBhbmRyb2lkXG4gXCJjYXN0bGVcIiwgLy8gaW9zXG4gXCJjYXB0aW9uaW5nXCIsIC8vIGFuZHJvaWRcbiBcImNhc3RcIiwgLy8gYW5kcm9pZFxuIFwiY2VsbHVsYXJfdXNhZ2VcIiwgLy8gaW9zXG4gXCJjb25maWd1cmF0aW9uX2xpc3RcIiwgLy8gaW9zXG4gXCJkYXRhX3JvYW1pbmdcIiwgLy8gYW5kcm9pZFxuIFwiZGF0ZVwiLCAvLyBpb3MsIGFuZHJvaWRcbiBcImRpc3BsYXlcIiwgLy8gaW9zLCBhbmRyb2lkXG4gXCJkcmVhbVwiLCAvLyBhbmRyb2lkXG4gXCJmYWNldGltZVwiLCAvLyBpb3NcbiBcImhvbWVcIiwgLy8gYW5kcm9pZFxuIFwia2V5Ym9hcmRcIiwgLy8gaW9zLCBhbmRyb2lkXG4gXCJrZXlib2FyZF9zdWJ0eXBlXCIsIC8vIGFuZHJvaWRcbiBcImxvY2FsZVwiLCAvLyBpb3MsIGFuZHJvaWRcbiBcImxvY2F0aW9uXCIsIC8vIGlvcywgYW5kcm9pZFxuIFwibG9jYXRpb25zXCIsIC8vIGlvc1xuIFwibWFuYWdlX2FsbF9hcHBsaWNhdGlvbnNcIiwgLy8gYW5kcm9pZFxuIFwibWFuYWdlX2FwcGxpY2F0aW9uc1wiLCAvLyBhbmRyb2lkXG4gXCJtZW1vcnlfY2FyZFwiLCAvLyBhbmRyb2lkXG4gXCJtdXNpY1wiLCAvLyBpb3NcbiBcIm11c2ljX2VxdWFsaXplclwiLCAvLyBpb3NcbiBcIm11c2ljX3ZvbHVtZVwiLCAvLyBpb3NcbiBcIm5ldHdvcmtcIiwgLy8gaW9zLCBhbmRyb2lkXG4gXCJuaWtlX2lwb2RcIiwgLy8gaW9zXG4gXCJuZmNzaGFyaW5nXCIsIC8vIGFuZHJvaWRcbiBcIm5mY19wYXltZW50XCIsIC8vIGFuZHJvaWRcbiBcIm5mY19zZXR0aW5nc1wiLCAvLyBhbmRyb2lkXG4gXCJub3Rlc1wiLCAvLyBpb3NcbiBcIm5vdGlmaWNhdGlvbl9pZFwiLCAvLyBpb3NcbiBcInBhc3Nib29rXCIsIC8vIGlvc1xuIFwicGhvbmVcIiwgLy8gaW9zXG4gXCJwaG90b3NcIiwgLy8gaW9zXG4gXCJwcmludFwiLCAvLyBhbmRyb2lkXG4gXCJwcml2YWN5XCIsIC8vIGFuZHJvaWRcbiBcInF1aWNrX2xhdW5jaFwiLCAvLyBhbmRyb2lkXG4gXCJyZXNldFwiLCAvLyBpb3NcbiBcInJpbmd0b25lXCIsIC8vIGlvc1xuIFwiYnJvd3NlclwiLCAvLyBpb3NcbiBcInNlYXJjaFwiLCAvLyBpb3MsIGFuZHJvaWRcbiBcInNlY3VyaXR5XCIsIC8vIGFuZHJvaWRcbiBcInNldHRpbmdzXCIsIC8vIGlvcywgYW5kcm9pZFxuIFwic2hvd19yZWd1bGF0b3J5X2luZm9cIixcbiBcInNvdW5kXCIsIC8vIGlvcywgYW5kcm9pZFxuIFwic29mdHdhcmVfdXBkYXRlXCIsIC8vIGlvc1xuIFwic3RvcmFnZVwiLCAvLyBpb3MsIGFuZHJvaWRcbiBcInN0b3JlXCIsIC8vIGlvcywgYW5kcm9pZFxuIFwic3luY1wiLCAvLyBhbmRyb2lkXG4gXCJ0ZXRoZXJpbmdcIiwgLy8gaW9zXG4gXCJ0d2l0dGVyXCIsIC8vIGlvc1xuIFwidG91Y2hcIiwgLy8gaW9zXG4gXCJ1c2FnZVwiLCAvLyBpb3MsIGFuZHJvaWRcbiBcInVzZXJfZGljdGlvbmFyeVwiLCAvLyBhbmRyb2lkXG4gXCJ2aWRlb1wiLCAvLyBpb3NcbiBcInZvaWNlX2lucHV0XCIsIC8vIGFuZHJvaWRcbiBcInZwblwiLCAvLyBpb3NcbiBcIndhbGxwYXBlclwiLCAvLyBpb3NcbiBcIndpZmlfaXBcIiwgLy8gYW5kcm9pZFxuIFwid2lmaVwiLCAvLyBpb3MsIGFuZHJvaWRcbiBcIndpcmVsZXNzXCIgLy8gYW5kcm9pZFxuIGBgYFxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgT3Blbk5hdGl2ZVNldHRpbmdzIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9vcGVuLW5hdGl2ZS1zZXR0aW5ncyc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgb3Blbk5hdGl2ZVNldHRpbmdzOiBPcGVuTmF0aXZlU2V0dGluZ3MpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdPcGVuTmF0aXZlU2V0dGluZ3MnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLW9wZW4tbmF0aXZlLXNldHRpbmdzJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLnNldHRpbmdzJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ndXlyb21iL0NvcmRvdmEtb3Blbi1uYXRpdmUtc2V0dGluZ3MnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBPcGVuTmF0aXZlU2V0dGluZ3MgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIE9wZW5zIGEgc2V0dGluZyBkaWFsb2dcbiAgICogQHBhcmFtIHNldHRpbmcge3N0cmluZ30gc2V0dGluZyBuYW1lXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgb3BlbihzZXR0aW5nOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 595 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PayPal; });
/* unused harmony export PayPalPayment */
/* unused harmony export PayPalItem */
/* unused harmony export PayPalPaymentDetails */
/* unused harmony export PayPalConfiguration */
/* unused harmony export PayPalShippingAddress */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var PayPalOriginal = /** @class */ (function (_super) {
    __extends(PayPalOriginal, _super);
    function PayPalOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PayPalOriginal.prototype.version = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "version", {}, arguments); };
    PayPalOriginal.prototype.init = function (clientIdsForEnvironments) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "init", {}, arguments); };
    PayPalOriginal.prototype.prepareToRender = function (environment, configuration) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "prepareToRender", {}, arguments); };
    PayPalOriginal.prototype.renderSinglePaymentUI = function (payment) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "renderSinglePaymentUI", {}, arguments); };
    PayPalOriginal.prototype.clientMetadataID = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "clientMetadataID", {}, arguments); };
    PayPalOriginal.prototype.renderFuturePaymentUI = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "renderFuturePaymentUI", {}, arguments); };
    PayPalOriginal.prototype.renderProfileSharingUI = function (scopes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "renderProfileSharingUI", {}, arguments); };
    PayPalOriginal.pluginName = "PayPal";
    PayPalOriginal.plugin = "com.paypal.cordova.mobilesdk";
    PayPalOriginal.pluginRef = "PayPalMobile";
    PayPalOriginal.repo = "https://github.com/paypal/PayPal-Cordova-Plugin";
    PayPalOriginal.platforms = ["Android", "iOS"];
    return PayPalOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var PayPal = new PayPalOriginal();

var PayPalPayment = /** @class */ (function () {
    function PayPalPayment(amount, currency, shortDescription, intent, details) {
        /**
         * Optional Build Notation code ("BN code"), obtained from partnerprogram@paypal.com,
         * for your tracking purposes.
         */
        this.bnCode = 'PhoneGap_SP';
        this.amount = amount;
        this.currency = currency;
        this.shortDescription = shortDescription;
        this.intent = intent;
        this.details = details;
    }
    return PayPalPayment;
}());

var PayPalItem = /** @class */ (function () {
    /**
     * The PayPalItem class defines an optional itemization for a payment.
     * @see https://developer.paypal.com/docs/api/#item-object for more details.
     * @param {String} name: Name of the item. 127 characters max
     * @param {Number} quantity: Number of units. 10 characters max.
     * @param {String} price: Unit price for this item 10 characters max.
     * May be negative for "coupon" etc
     * @param {String} currency: ISO standard currency code.
     * @param {String} sku: The stock keeping unit for this item. 50 characters max (optional)
     */
    function PayPalItem(name, quantity, price, currency, sku) {
        this.name = name;
        this.quantity = quantity;
        this.price = price;
        this.currency = currency;
        this.sku = sku;
    }
    return PayPalItem;
}());

var PayPalPaymentDetails = /** @class */ (function () {
    /**
     * The PayPalPaymentDetails class defines optional amount details.
     * @param {String} subtotal: Sub-total (amount) of items being paid for. 10 characters max with support for 2 decimal places.
     * @param {String} shipping: Amount charged for shipping. 10 characters max with support for 2 decimal places.
     * @param {String} tax: Amount charged for tax. 10 characters max with support for 2 decimal places.
     */
    function PayPalPaymentDetails(subtotal, shipping, tax) {
        this.subtotal = subtotal;
        this.shipping = shipping;
        this.tax = tax;
    }
    return PayPalPaymentDetails;
}());

var PayPalConfiguration = /** @class */ (function () {
    /**
     * You use a PayPalConfiguration object to configure many aspects of how the SDK behaves.
     * see defaults for options available
     */
    function PayPalConfiguration(options) {
        var defaults = {
            defaultUserEmail: null,
            defaultUserPhoneCountryCode: null,
            defaultUserPhoneNumber: null,
            merchantName: null,
            merchantPrivacyPolicyURL: null,
            merchantUserAgreementURL: null,
            acceptCreditCards: true,
            payPalShippingAddressOption: 0,
            rememberUser: true,
            languageOrLocale: null,
            disableBlurWhenBackgrounding: false,
            presentingInPopover: false,
            forceDefaultsInSandbox: false,
            sandboxUserPassword: null,
            sandboxUserPin: null
        };
        if (options && typeof options === 'object') {
            for (var i in options) {
                if (defaults.hasOwnProperty(i)) {
                    defaults[i] = options[i];
                }
            }
        }
        return defaults;
    }
    return PayPalConfiguration;
}());

var PayPalShippingAddress = /** @class */ (function () {
    /**
     * See the documentation of the individual properties for more detail.
     * @param {String} recipientName: Name of the recipient at this address. 50 characters max.
     * @param {String} line1: Line 1 of the address (e.g., Number, street, etc). 100 characters max.
     * @param {String} line2: Line 2 of the address (e.g., Suite, apt #, etc). 100 characters max. Optional.
     * @param {String} city: City name. 50 characters max.
     * @param {String} state: 2-letter code for US states, and the equivalent for other countries. 100 characters max. Required in certain countries.
     * @param {String} postalCode: ZIP code or equivalent is usually required for countries that have them. 20 characters max. Required in certain countries.
     * @param {String} countryCode: 2-letter country code. 2 characters max.
     */
    function PayPalShippingAddress(recipientName, line1, line2, city, state, postalCode, countryCode) {
        this.recipientName = recipientName;
        this.line1 = line1;
        this.line2 = line2;
        this.city = city;
        this.state = state;
        this.postalCode = postalCode;
        this.countryCode = countryCode;
    }
    return PayPalShippingAddress;
}());

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 596 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Pedometer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var PedometerOriginal = /** @class */ (function (_super) {
    __extends(PedometerOriginal, _super);
    function PedometerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PedometerOriginal.prototype.isStepCountingAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isStepCountingAvailable", {}, arguments); };
    PedometerOriginal.prototype.isDistanceAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isDistanceAvailable", {}, arguments); };
    PedometerOriginal.prototype.isFloorCountingAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isFloorCountingAvailable", {}, arguments); };
    PedometerOriginal.prototype.startPedometerUpdates = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startPedometerUpdates", { "observable": true, "clearFunction": "stopPedometerUpdates" }, arguments); };
    PedometerOriginal.prototype.stopPedometerUpdates = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopPedometerUpdates", {}, arguments); };
    PedometerOriginal.prototype.queryData = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "queryData", { "callbackOrder": "reverse" }, arguments); };
    PedometerOriginal.pluginName = "Pedometer";
    PedometerOriginal.plugin = "cordova-plugin-pedometer";
    PedometerOriginal.pluginRef = "pedometer";
    PedometerOriginal.repo = "https://github.com/leecrossley/cordova-plugin-pedometer";
    PedometerOriginal.platforms = ["Android", "iOS"];
    return PedometerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Pedometer = new PedometerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9wZWRvbWV0ZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQTJDZCw2QkFBaUI7Ozs7SUFPOUMsMkNBQXVCO0lBV3ZCLHVDQUFtQjtJQVduQiw0Q0FBd0I7SUFleEIseUNBQXFCO0lBU3JCLHdDQUFvQjtJQWVwQiw2QkFBUyxhQUFDLE9BQTJDOzs7Ozs7b0JBaEh2RDtFQTRDK0IsaUJBQWlCO1NBQW5DLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL09ic2VydmFibGUnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEludGVyZmFjZSBvZiBhIHBlZG9tZXRlciBkYXRhIG9iamVjdCB3aGljaCBpcyByZXR1cm5lZCBieSB3YXRjaGluZyBmb3IgbmV3IGRhdGEgb3IgYnkgcmVjaWV2aW5nIGhpc3RvcmljYWwgZGF0YVxuICovXG5leHBvcnQgaW50ZXJmYWNlIElQZWRvbWV0ZXJEYXRhIHtcbiAgc3RhcnREYXRlPzogbnVtYmVyO1xuICBlbmREYXRlPzogbnVtYmVyO1xuICBudW1iZXJPZlN0ZXBzOiBudW1iZXI7XG4gIGRpc3RhbmNlOiBudW1iZXI7XG4gIGZsb29yc0FzY2VuZGVkOiBudW1iZXI7XG4gIGZsb29yc0Rlc2NlbmRlZDogbnVtYmVyO1xufVxuXG4vKipcbiAqIEBuYW1lIFBlZG9tZXRlclxuICogQGRlc2NyaXB0aW9uXG4gKiBGZXRjaCBwZWRlc3RyaWFuLXJlbGF0ZWQgcGVkb21ldGVyIGRhdGEsXG4gKiBzdWNoIGFzIHN0ZXAgY291bnRzIGFuZCBvdGhlciBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZGlzdGFuY2UgdHJhdmVsbGVkLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgUGVkb21ldGVyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9wZWRvbWV0ZXInO1xuICpcbiAqIFBlZG9tZXRlci5pc0Rpc3RhbmNlQXZhaWxhYmxlKClcbiAqICAgLnRoZW4oKGF2YWlsYWJsZTogYm9vbGVhbikgPT4gY29uc29sZS5sb2coYXZhaWxhYmxlKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmxvZyhlcnJvcikpO1xuICpcbiAqIFBlZG9tZXRlci5zdGFydFBlZG9tZXRlclVwZGF0ZXMoKVxuICogICAgLnN1YnNjcmliZSgoZGF0YTogSVBlZG9tZXRlckRhdGEpID0+IHtcbiAqICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gKiAgICB9KTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1BlZG9tZXRlcicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXBlZG9tZXRlcicsXG4gIHBsdWdpblJlZjogJ3BlZG9tZXRlcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vbGVlY3Jvc3NsZXkvY29yZG92YS1wbHVnaW4tcGVkb21ldGVyJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUGVkb21ldGVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgc3RlcCBjb3VudGluZyBpcyBhdmFpbGFibGUuIE9ubHkgd29ya3Mgb24gaU9TLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGJvb2xlYW4+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gZmVhdHVyZSBpcyBzdXBwb3J0ZWQgKHRydWUpIG9yIG5vdCBzdXBwb3J0ZWQgKGZhbHNlKVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc1N0ZXBDb3VudGluZ0F2YWlsYWJsZSgpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGlzdGFuY2UgZXN0aW1hdGlvbiBpbmRpY2F0ZXMgdGhlIGFiaWxpdHkgdG8gdXNlIHN0ZXAgaW5mb3JtYXRpb24gdG8gc3VwcGx5IHRoZSBhcHByb3hpbWF0ZSBkaXN0YW5jZSB0cmF2ZWxsZWQgYnkgdGhlIHVzZXIuXG4gICAqIFRoaXMgY2FwYWJpbGl0eSBpcyBub3Qgc3VwcG9ydGVkIG9uIGFsbCBkZXZpY2VzLCBldmVuIHdpdGggaU9TIDguXG4gICAqIE9ubHkgd29ya3Mgb24gaU9TLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGJvb2xlYW4+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gZmVhdHVyZSBpcyBzdXBwb3J0ZWQgKHRydWUpIG9yIG5vdCBzdXBwb3J0ZWQgKGZhbHNlKVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc0Rpc3RhbmNlQXZhaWxhYmxlKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBGbG9vciBjb3VudGluZyBpbmRpY2F0ZXMgdGhlIGFiaWxpdHkgdG8gY291bnQgdGhlIG51bWJlciBvZiBmbG9vcnMgdGhlIHVzZXIgd2Fsa3MgdXAgb3IgZG93biB1c2luZyBzdGFpcnMuXG4gICAqIFRoaXMgY2FwYWJpbGl0eSBpcyBub3Qgc3VwcG9ydGVkIG9uIGFsbCBkZXZpY2VzLCBldmVuIHdpdGggaU9TIDguXG4gICAqIE9ubHkgd29ya3Mgb24gaU9TLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGJvb2xlYW4+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gZmVhdHVyZSBpcyBzdXBwb3J0ZWQgKHRydWUpIG9yIG5vdCBzdXBwb3J0ZWQgKGZhbHNlKVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc0Zsb29yQ291bnRpbmdBdmFpbGFibGUoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0YXJ0cyB0aGUgZGVsaXZlcnkgb2YgcmVjZW50IHBlZGVzdHJpYW4tcmVsYXRlZCBkYXRhIHRvIHlvdXIgQ29yZG92YSBhcHAuXG4gICAqXG4gICAqIFdoZW4gdGhlIGFwcCBpcyBzdXNwZW5kZWQsIHRoZSBkZWxpdmVyeSBvZiB1cGRhdGVzIHN0b3BzIHRlbXBvcmFyaWx5LlxuICAgKiBVcG9uIHJldHVybmluZyB0byBmb3JlZ3JvdW5kIG9yIGJhY2tncm91bmQgZXhlY3V0aW9uLCB0aGUgcGVkb21ldGVyIG9iamVjdCBiZWdpbnMgdXBkYXRlcyBhZ2Fpbi5cbiAgICogQHJldHVybiB7T2JzZXJ2YWJsZTxJUGVkb21ldGVyRGF0YT59IFJldHVybnMgYSBPYnNlcnZhYmxlIHRoYXQgcmVjaWV2ZXMgcmVwZWF0bHkgZGF0YSBmcm9tIHBlZG9tZXRlciBpbiBiYWNrZ3JvdW5kLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWUsXG4gICAgY2xlYXJGdW5jdGlvbjogJ3N0b3BQZWRvbWV0ZXJVcGRhdGVzJ1xuICB9KVxuICBzdGFydFBlZG9tZXRlclVwZGF0ZXMoKTogT2JzZXJ2YWJsZTxJUGVkb21ldGVyRGF0YT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdG9wcyB0aGUgZGVsaXZlcnkgb2YgcmVjZW50IHBlZGVzdHJpYW4gZGF0YSB1cGRhdGVzIHRvIHlvdXIgQ29yZG92YSBhcHAuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8Ym9vbGVhbj59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBwZWRvbWV0ZXIgd2F0Y2hpbmcgd2FzIHN0b3BwZWRcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc3RvcFBlZG9tZXRlclVwZGF0ZXMoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmV0cmlldmVzIHRoZSBkYXRhIGJldHdlZW4gdGhlIHNwZWNpZmllZCBzdGFydCBhbmQgZW5kIGRhdGVzLlxuICAgKiBUaGUgc3RhcnREYXRlIGFuZCBlbmREYXRlIG9wdGlvbnMgYXJlIHJlcXVpcmVkIGFuZCBjYW4gYmUgY29uc3RydWN0ZWQgaW4gYW55IHZhbGlkIEphdmFTY3JpcHQgd2F5XG4gICAqIChlLmcuIG5ldyBEYXRlKDIwMTUsIDQsIDEsIDE1LCAyMCwgMDApIGlzIGFsc28gdmFsaWQsIGFzIGlzIG1pbGxpc2Vjb25kcykuXG4gICAqIE9ubHkgd29ya3Mgb24gaU9TLlxuICAgKiBAcGFyYW0ge2FueX0gb3B0aW9ucyAgc3RhcnQgZGF0ZSBhbmQgZW4gZGF0ZSB3aGVyZSB5b3Ugd2FudCB0byBnZXQgcGVkb21ldGVyIGRhdGFcbiAgICogQHJldHVybiB7UHJvbWlzZTxJUGVkb21ldGVyRGF0YT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBwZWRvbWV0ZXIgZGF0YSBmb3VuZFxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBxdWVyeURhdGEob3B0aW9uczogeyBzdGFydERhdGU6IERhdGUsIGVuZERhdGU6IERhdGUgfSk6IFByb21pc2U8SVBlZG9tZXRlckRhdGE+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 597 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export PLNObject */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PhonegapLocalNotification; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var PLNObject = /** @class */ (function () {
    function PLNObject(title, options) {
        if (checkAvailability(PhonegapLocalNotificationOriginal.pluginRef, null, PhonegapLocalNotificationOriginal.pluginName) === true) {
            this._objectInstance = new Notification(title, options);
        }
    }
    PLNObject.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "close", { "sync": true }, arguments); };
    return PLNObject;
}());

var PhonegapLocalNotificationOriginal = /** @class */ (function (_super) {
    __extends(PhonegapLocalNotificationOriginal, _super);
    function PhonegapLocalNotificationOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * A global object that lets you interact with the Notification API.
     * @param title {string} Title of the local notification.
     * @param Options {LocalNotificationOptions} An object containing optional property/value pairs.
     * @returns {PLNObject}
     */
    PhonegapLocalNotificationOriginal.prototype.create = function (title, options) {
        return new PLNObject(title, options);
    };
    PhonegapLocalNotificationOriginal.prototype.requestPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestPermission", {}, arguments); };
    PhonegapLocalNotificationOriginal.pluginName = "Phonegap Local Notifications";
    PhonegapLocalNotificationOriginal.plugin = "phonegap-plugin-local-notification";
    PhonegapLocalNotificationOriginal.pluginRef = "Notification";
    PhonegapLocalNotificationOriginal.repo = "https://github.com/phonegap/phonegap-plugin-local-notification";
    PhonegapLocalNotificationOriginal.platforms = ["Android", "Browser", "iOS", "Windows"];
    return PhonegapLocalNotificationOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var PhonegapLocalNotification = new PhonegapLocalNotificationOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9waG9uZWdhcC1sb2NhbC1ub3RpZmljYXRpb24vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMkRBQTBFLE1BQU0sb0JBQW9CLENBQUM7O0lBVzFHLG1CQUFZLEtBQWEsRUFBRSxPQUFpQztRQUMxRCxFQUFFLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyx5QkFBeUIsQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLHlCQUF5QixDQUFDLFVBQVUsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDaEgsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLFlBQVksQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDMUQsQ0FBQztJQUNILENBQUM7SUFHRCx5QkFBSztvQkFuQlA7Ozs7SUFnRytDLDZDQUFpQjs7OztJQUU5RDs7Ozs7T0FLRztJQUNILDBDQUFNLEdBQU4sVUFBTyxLQUFhLEVBQUUsT0FBaUM7UUFDckQsTUFBTSxDQUFDLElBQUksU0FBUyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBT0QscURBQWlCOzs7Ozs7b0NBakhuQjtFQWdHK0MsaUJBQWlCO1NBQW5ELHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNoZWNrQXZhaWxhYmlsaXR5LCBDb3Jkb3ZhLCBDb3Jkb3ZhSW5zdGFuY2UsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5kZWNsYXJlIGNvbnN0IE5vdGlmaWNhdGlvbjogYW55O1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIFBMTk9iamVjdCB7XG5cbiAgcHJpdmF0ZSBfb2JqZWN0SW5zdGFuY2U6IGFueTtcblxuICBjb25zdHJ1Y3Rvcih0aXRsZTogc3RyaW5nLCBvcHRpb25zOiBMb2NhbE5vdGlmaWNhdGlvbk9wdGlvbnMpIHtcbiAgICBpZiAoY2hlY2tBdmFpbGFiaWxpdHkoUGhvbmVnYXBMb2NhbE5vdGlmaWNhdGlvbi5wbHVnaW5SZWYsIG51bGwsIFBob25lZ2FwTG9jYWxOb3RpZmljYXRpb24ucGx1Z2luTmFtZSkgPT09IHRydWUpIHtcbiAgICAgIHRoaXMuX29iamVjdEluc3RhbmNlID0gbmV3IE5vdGlmaWNhdGlvbih0aXRsZSwgb3B0aW9ucyk7XG4gICAgfVxuICB9XG5cbiAgQENvcmRvdmFJbnN0YW5jZSh7IHN5bmM6IHRydWUgfSlcbiAgY2xvc2UoKTogdm9pZCB7XG4gIH1cblxufVxuXG5leHBvcnQgaW50ZXJmYWNlIExvY2FsTm90aWZpY2F0aW9uT3B0aW9ucyB7XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGRpcmVjdGlvbiBvZiB0aGUgbm90aWZpY2F0aW9uLiBPbmUgb2YgXCJhdXRvXCIsIFwibHRyXCIgb3IgXCJydGxcIlxuICAgKi9cbiAgZGlyPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiAgU2V0cyB0aGUgbGFuZ3VhZ2Ugb2YgdGhlIG5vdGlmaWNhdGlvblxuICAgKi9cbiAgbGFuZz86IHN0cmluZztcblxuICAvKipcbiAgICogU2V0cyB0aGUgYm9keSBvZiB0aGUgbm90aWZpY2F0aW9uXG4gICAqL1xuICBib2R5Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBpZGVudGlmeWluZyB0YWcgb2YgdGhlIG5vdGlmaWNhdGlvblxuICAgKi9cbiAgdGFnPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBpY29uIG9mIHRoZSBub3RpZmljYXRpb25cbiAgICovXG4gIGljb24/OiBzdHJpbmc7XG5cbn1cblxuLyoqXG4gKiBAbmFtZSBQaG9uZWdhcCBMb2NhbCBOb3RpZmljYXRpb25cbiAqIEBkZXNjcmlwdGlvblxuICogVGhlIExvY2FsIE5vdGlmaWNhdGlvbiBwbHVnaW4gZ2l2ZXMgZGV2ZWxvcGVycyB0aGUgYWJpbGl0eSB0byBwb3N0IG5vdGlmaWNhdGlvbnMgZnJvbSB0aGVpciBhcHAgdGhhdCBzaG93IHVwIGluIHRoZSBkZXZpY2XigJlzIG5vdGlmaWNhdGlvbiBhcmVhLlxuICogVGhlIEFQSSBmb3IgdGhlIGxvY2FsIG5vdGlmaWNhdGlvbiBwbHVnaW4gZm9sbG93cyB0aGUgVzNDIFdlYiBOb3RpZmljYXRpb25zIHNwZWNpZmljYXRpb246IGh0dHBzOi8vd3d3LnczLm9yZy9UUi9ub3RpZmljYXRpb25zL1xuICpcbiAqIEB1c2FnZVxuICogYGBgXG4gKiBpbXBvcnQgeyBQaG9uZWdhcExvY2FsTm90aWZpY2F0aW9uIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9waG9uZWdhcC1sb2NhbC1ub3RpZmljYXRpb24nO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGxvY2FsTm90aWZpY2F0aW9uOiBQaG9uZWdhcExvY2FsTm90aWZpY2F0aW9uKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmxvY2FsTm90aWZpY2F0aW9uLnJlcXVlc3RQZXJtaXNzaW9uKCkudGhlbihcbiAqICAgKHBlcm1pc3Npb24pID0+IHtcbiAqICAgICBpZiAocGVybWlzc2lvbiA9PT0gJ2dyYW50ZWQnKSB7XG4gKlxuICogICAgICAgLy8gQ3JlYXRlIHRoZSBub3RpZmljYXRpb25cbiAqICAgICAgIHRoaXMubG9jYWxOb3RpZmljYXRpb24uY3JlYXRlKCdNeSBUaXRsZScsIHtcbiAqICAgICAgICAgdGFnOiAnbWVzc2FnZTEnLFxuICogICAgICAgICBib2R5OiAnTXkgYm9keScsXG4gKiAgICAgICAgIGljb246ICdhc3NldHMvaWNvbi9mYXZpY29uLmljbydcbiAqICAgICAgIH0pO1xuICpcbiAqICAgICB9XG4gKiAgIH1cbiAqICk7XG4gKlxuICogYGBgXG4gKlxuICogQGludGVyZmFjZXNcbiAqIExvY2FsTm90aWZpY2F0aW9uT3B0aW9uc1xuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1Bob25lZ2FwIExvY2FsIE5vdGlmaWNhdGlvbnMnLFxuICBwbHVnaW46ICdwaG9uZWdhcC1wbHVnaW4tbG9jYWwtbm90aWZpY2F0aW9uJyxcbiAgcGx1Z2luUmVmOiAnTm90aWZpY2F0aW9uJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9waG9uZWdhcC9waG9uZWdhcC1wbHVnaW4tbG9jYWwtbm90aWZpY2F0aW9uJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnQnJvd3NlcicsICdpT1MnLCAnV2luZG93cyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBob25lZ2FwTG9jYWxOb3RpZmljYXRpb24gZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIEEgZ2xvYmFsIG9iamVjdCB0aGF0IGxldHMgeW91IGludGVyYWN0IHdpdGggdGhlIE5vdGlmaWNhdGlvbiBBUEkuXG4gICAqIEBwYXJhbSB0aXRsZSB7c3RyaW5nfSBUaXRsZSBvZiB0aGUgbG9jYWwgbm90aWZpY2F0aW9uLlxuICAgKiBAcGFyYW0gT3B0aW9ucyB7TG9jYWxOb3RpZmljYXRpb25PcHRpb25zfSBBbiBvYmplY3QgY29udGFpbmluZyBvcHRpb25hbCBwcm9wZXJ0eS92YWx1ZSBwYWlycy5cbiAgICogQHJldHVybnMge1BMTk9iamVjdH1cbiAgICovXG4gIGNyZWF0ZSh0aXRsZTogc3RyaW5nLCBvcHRpb25zOiBMb2NhbE5vdGlmaWNhdGlvbk9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFBMTk9iamVjdCh0aXRsZSwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogcmVxdWVzdHMgcGVybWlzc2lvbiBmcm9tIHRoZSB1c2VyIHRvIHNob3cgYSBsb2NhbCBub3RpZmljYXRpb24uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlcXVlc3RQZXJtaXNzaW9uKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 598 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PhotoLibrary; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var PhotoLibraryOriginal = /** @class */ (function (_super) {
    __extends(PhotoLibraryOriginal, _super);
    function PhotoLibraryOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PhotoLibraryOriginal.prototype.getLibrary = function (options) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            var wrappedObservable = wrap(this, 'getLibrary', { callbackOrder: 'reverse' }).apply(this, [options]);
            return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                var wrappedSubscription = wrappedObservable.subscribe({
                    next: function (x) {
                        observer.next(function (result) {
                            return result.library;
                        });
                        if (function (result) {
                            return result.isLastChunk;
                        }) {
                            observer.complete();
                        }
                    },
                    error: function (err) {
                        observer.error(err);
                    },
                    complete: function () {
                        observer.complete();
                    }
                });
                return function () {
                    wrappedSubscription.unsubscribe();
                };
            });
        }
    }(); };
    PhotoLibraryOriginal.prototype.requestAuthorization = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestAuthorization", { "callbackOrder": "reverse" }, arguments); };
    PhotoLibraryOriginal.prototype.getAlbums = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAlbums", { "callbackOrder": "reverse" }, arguments); };
    PhotoLibraryOriginal.prototype.getThumbnailURL = function (photo, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getThumbnailURL", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    PhotoLibraryOriginal.prototype.getPhotoURL = function (photo, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPhotoURL", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    PhotoLibraryOriginal.prototype.getThumbnail = function (photo, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getThumbnail", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    PhotoLibraryOriginal.prototype.getPhoto = function (photo, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPhoto", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    PhotoLibraryOriginal.prototype.saveImage = function (url, album, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "saveImage", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    PhotoLibraryOriginal.prototype.saveVideo = function (url, album) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "saveVideo", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    PhotoLibraryOriginal.pluginName = "PhotoLibrary";
    PhotoLibraryOriginal.plugin = "cordova-plugin-photo-library";
    PhotoLibraryOriginal.pluginRef = "cordova.plugins.photoLibrary";
    PhotoLibraryOriginal.repo = "https://github.com/terikon/cordova-plugin-photo-library";
    PhotoLibraryOriginal.install = "ionic cordova plugin add cordova-plugin-photo-library --variable PHOTO_LIBRARY_USAGE_DESCRIPTION=\"To choose photos\"";
    PhotoLibraryOriginal.installVariables = ["PHOTO_LIBRARY_USAGE_DESCRIPTION"];
    PhotoLibraryOriginal.platforms = ["Android", "Browser", "iOS"];
    return PhotoLibraryOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var PhotoLibrary = new PhotoLibraryOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 599 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PhotoViewer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var PhotoViewerOriginal = /** @class */ (function (_super) {
    __extends(PhotoViewerOriginal, _super);
    function PhotoViewerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PhotoViewerOriginal.prototype.show = function (url, title, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "sync": true }, arguments); };
    PhotoViewerOriginal.pluginName = "PhotoViewer";
    PhotoViewerOriginal.plugin = "com-sarriaroman-photoviewer";
    PhotoViewerOriginal.pluginRef = "PhotoViewer";
    PhotoViewerOriginal.repo = "https://github.com/sarriaroman/photoviewer";
    PhotoViewerOriginal.platforms = ["Android", "iOS"];
    return PhotoViewerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var PhotoViewer = new PhotoViewerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9waG90by12aWV3ZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBaUN2QywrQkFBaUI7Ozs7SUFRaEQsMEJBQUksYUFBQyxHQUFXLEVBQUUsS0FBYyxFQUFFLE9BQTRCOzs7Ozs7c0JBMUNoRTtFQWtDaUMsaUJBQWlCO1NBQXJDLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBQaG90b1ZpZXdlck9wdGlvbnMge1xuICAvKipcbiAgICogU2V0IHRvIGZhbHNlIHRvIGRpc2FibGUgdGhlIHNoYXJlIGJ1dHRvbiAoQW5kcm9pZCBvbmx5KS4gRGVmYXVsdDogdHJ1ZVxuICAgKi9cbiAgc2hhcmU/OiBib29sZWFuO1xufVxuXG4vKipcbiAqIEBuYW1lIFBob3RvIFZpZXdlclxuICogQGRlc2NyaXB0aW9uIFRoaXMgcGx1Z2luIGNhbiBkaXNwbGF5IHlvdXIgaW1hZ2UgaW4gZnVsbCBzY3JlZW4gd2l0aCB0aGUgYWJpbGl0eSB0byBwYW4sIHpvb20sIGFuZCBzaGFyZSB0aGUgaW1hZ2UuXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFBob3RvVmlld2VyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9waG90by12aWV3ZXInO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgcGhvdG9WaWV3ZXI6IFBob3RvVmlld2VyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLnBob3RvVmlld2VyLnNob3coJ2h0dHBzOi8vbXlzaXRlLmNvbS9wYXRoL3RvL2ltYWdlLmpwZycpO1xuICpcbiAqIHRoaXMucGhvdG9WaWV3ZXIuc2hvdygnaHR0cHM6Ly9teXNpdGUuY29tL3BhdGgvdG8vaW1hZ2UuanBnJywgJ015IGltYWdlIHRpdGxlJywge3NoYXJlOiBmYWxzZX0pO1xuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnUGhvdG9WaWV3ZXInLFxuICBwbHVnaW46ICdjb20tc2Fycmlhcm9tYW4tcGhvdG92aWV3ZXInLFxuICBwbHVnaW5SZWY6ICdQaG90b1ZpZXdlcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vc2Fycmlhcm9tYW4vcGhvdG92aWV3ZXInLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQaG90b1ZpZXdlciBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIFNob3dzIGFuIGltYWdlIGluIGZ1bGwgc2NyZWVuXG4gICAqIEBwYXJhbSB1cmwge3N0cmluZ30gVVJMIG9yIHBhdGggdG8gaW1hZ2VcbiAgICogQHBhcmFtIHRpdGxlIHtzdHJpbmd9XG4gICAqIEBwYXJhbSBvcHRpb25zIHtQaG90b1ZpZXdlck9wdGlvbnN9XG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgc2hvdyh1cmw6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcsIG9wdGlvbnM/OiBQaG90b1ZpZXdlck9wdGlvbnMpOiB2b2lkIHtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 600 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PinCheck; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var PinCheckOriginal = /** @class */ (function (_super) {
    __extends(PinCheckOriginal, _super);
    function PinCheckOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PinCheckOriginal.prototype.isPinSetup = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isPinSetup", {}, arguments); };
    PinCheckOriginal.pluginName = "PinCheck";
    PinCheckOriginal.plugin = "cordova-plugin-pincheck";
    PinCheckOriginal.pluginRef = "cordova.plugins.PinCheck";
    PinCheckOriginal.repo = "https://github.com/shangyilim/cordova-plugin-pincheck";
    PinCheckOriginal.platforms = ["Android", "iOS"];
    return PinCheckOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var PinCheck = new PinCheckOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9waW4tY2hlY2svaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBa0MxQyw0QkFBaUI7Ozs7SUFNN0MsNkJBQVU7Ozs7OzttQkF4Q1o7RUFrQzhCLGlCQUFpQjtTQUFsQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgUGluIENoZWNrXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoaXMgcGx1Z2luIGlzIGZvciB1c2Ugd2l0aCBBcGFjaGUgQ29yZG92YSBhbmQgYWxsb3dzIHlvdXIgYXBwbGljYXRpb24gdG8gY2hlY2sgd2hldGhlciBwaW4va2V5Z3VhcmQgb3IgcGFzc2NvZGUgaXMgc2V0dXAgb24gaU9TIGFuZCBBbmRyb2lkIHBob25lcy5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogY29yZG92YS1wbHVnaW4tcGluY2hlY2suIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtQaW5DaGVjayBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL29oaDJhaGgvQXBwQXZhaWxhYmlsaXR5KS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFBpbkNoZWNrIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9waW4tY2hlY2snO1xuICogaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdpb25pYy1hbmd1bGFyJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHBpbkNoZWNrOiBQaW5DaGVjaywgcHJpdmF0ZSBwbGF0Zm9ybTogUGxhdGZvcm0pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMucGluQ2hlY2suaXNQaW5TZXR1cCgpXG4gKiAgIC50aGVuKFxuICogICAgIChzdWNjZXNzOiBzdHJpbmcpID0+ICBjb25zb2xlLmxvZyhcInBpbiBpcyBzZXR1cC5cIik7LFxuICogICAgIChlcnJvcjogc3RyaW5nKSA9PiBjb25zb2xlLmxvZyhcInBpbiBub3Qgc2V0dXAuXCIpO1xuICogICApO1xuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnUGluQ2hlY2snLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1waW5jaGVjaycsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5QaW5DaGVjaycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vc2hhbmd5aWxpbS9jb3Jkb3ZhLXBsdWdpbi1waW5jaGVjaycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBpbkNoZWNrIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogIGNoZWNrIHdoZXRoZXIgcGluL2tleWd1YXJkIG9yIHBhc3Njb2RlIGlzIHNldHVwXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc1BpblNldHVwKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 601 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PinDialog; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var PinDialogOriginal = /** @class */ (function (_super) {
    __extends(PinDialogOriginal, _super);
    function PinDialogOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PinDialogOriginal.prototype.prompt = function (message, title, buttons) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "prompt", { "successIndex": 1, "errorIndex": 4 }, arguments); };
    PinDialogOriginal.pluginName = "PinDialog";
    PinDialogOriginal.plugin = "cordova-plugin-pin-dialog";
    PinDialogOriginal.pluginRef = "plugins.pinDialog";
    PinDialogOriginal.repo = "https://github.com/Paldom/PinDialog";
    PinDialogOriginal.platforms = ["Android", "iOS"];
    return PinDialogOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var PinDialog = new PinDialogOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9waW4tZGlhbG9nL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQWlDekMsNkJBQWlCOzs7O0lBWTlDLDBCQUFNLGFBQUMsT0FBZSxFQUFFLEtBQWEsRUFBRSxPQUFpQjs7Ozs7O29CQTlDMUQ7RUFrQytCLGlCQUFpQjtTQUFuQyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cblxuLyoqXG4gKiBAbmFtZSBQaW4gRGlhbG9nXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFBpbkRpYWxvZyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvcGluLWRpYWxvZyc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgcGluRGlhbG9nOiBQaW5EaWFsb2cpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMucGluRGlhbG9nLnByb21wdCgnRW50ZXIgeW91ciBQSU4nLCAnVmVyaWZ5IFBJTicsIFsnT0snLCAnQ2FuY2VsJ10pXG4gKiAgIC50aGVuKFxuICogICAgIChyZXN1bHQ6IGFueSkgPT4ge1xuICogICAgICAgaWYgKHJlc3VsdC5idXR0b25JbmRleCA9PSAxKSBjb25zb2xlLmxvZygnVXNlciBjbGlja2VkIE9LLCB2YWx1ZSBpczogJywgcmVzdWx0LmlucHV0MSk7XG4gKiAgICAgICBlbHNlIGlmKHJlc3VsdC5idXR0b25JbmRleCA9PSAyKSBjb25zb2xlLmxvZygnVXNlciBjYW5jZWxsZWQnKTtcbiAqICAgICB9XG4gKiAgICk7XG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdQaW5EaWFsb2cnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1waW4tZGlhbG9nJyxcbiAgcGx1Z2luUmVmOiAncGx1Z2lucy5waW5EaWFsb2cnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL1BhbGRvbS9QaW5EaWFsb2cnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQaW5EaWFsb2cgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBTaG93IHBpbiBkaWFsb2dcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgTWVzc2FnZSB0byBzaG93IHRoZSB1c2VyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0aXRsZSBUaXRsZSBvZiB0aGUgZGlhbG9nXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IGJ1dHRvbnMgQnV0dG9ucyB0byBzaG93XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHsgYnV0dG9uSW5kZXg6IG51bWJlciwgaW5wdXQxOiBzdHJpbmcgfT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3VjY2Vzc0luZGV4OiAxLFxuICAgIGVycm9ySW5kZXg6IDQgLy8gbm8gZXJyb3IgY2FsbGJhY2tcbiAgfSlcbiAgcHJvbXB0KG1lc3NhZ2U6IHN0cmluZywgdGl0bGU6IHN0cmluZywgYnV0dG9uczogc3RyaW5nW10pOiBQcm9taXNlPHsgYnV0dG9uSW5kZXg6IG51bWJlciwgaW5wdXQxOiBzdHJpbmcgfT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 602 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Pinterest; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var PinterestOriginal = /** @class */ (function (_super) {
    __extends(PinterestOriginal, _super);
    function PinterestOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PinterestOriginal.prototype.login = function (scopes) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "login", {}, arguments); };
    PinterestOriginal.prototype.getMe = function (fields) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMe", { "callbackOrder": "reverse" }, arguments); };
    PinterestOriginal.prototype.getMyPins = function (fields, limit) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMyPins", { "callbackOrder": "reverse" }, arguments); };
    PinterestOriginal.prototype.getMyBoards = function (fields, limit) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMyBoards", { "callbackOrder": "reverse" }, arguments); };
    PinterestOriginal.prototype.getMyLikes = function (fields, limit) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMyLikes", { "callbackOrder": "reverse" }, arguments); };
    PinterestOriginal.prototype.getMyFollowers = function (fields, limit) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMyFollowers", { "callbackOrder": "reverse" }, arguments); };
    PinterestOriginal.prototype.getMyFollowedBoards = function (fields, limit) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMyFollowedBoards", { "callbackOrder": "reverse" }, arguments); };
    PinterestOriginal.prototype.getMyFollowedInterests = function (fields, limit) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getMyFollowedInterests", { "callbackOrder": "reverse" }, arguments); };
    PinterestOriginal.prototype.getUser = function (username, fields) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getUser", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    PinterestOriginal.prototype.getBoard = function (boardId, fields) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getBoard", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    PinterestOriginal.prototype.getBoardPins = function (boardId, fields, limit) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getBoardPins", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    PinterestOriginal.prototype.deleteBoard = function (boardId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteBoard", {}, arguments); };
    PinterestOriginal.prototype.createBoard = function (name, desc) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createBoard", { "successIndex": 2, "errorIndex": 3 }, arguments); };
    PinterestOriginal.prototype.getPin = function (pinId, fields) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getPin", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    PinterestOriginal.prototype.deletePin = function (pinId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deletePin", {}, arguments); };
    PinterestOriginal.prototype.createPin = function (note, boardId, imageUrl, link) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createPin", { "successIndex": 4, "errorIndex": 5 }, arguments); };
    Object.defineProperty(PinterestOriginal.prototype, "SCOPES", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "SCOPES"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "SCOPES", value); },
        enumerable: true,
        configurable: true
    });
    PinterestOriginal.pluginName = "Pinterest";
    PinterestOriginal.plugin = "cordova-plugin-pinterest";
    PinterestOriginal.pluginRef = "cordova.plugins.Pinterest";
    PinterestOriginal.repo = "https://github.com/zyramedia/cordova-plugin-pinterest";
    PinterestOriginal.install = "ionic cordova plugin add cordova-plugin-pinterest --variable APP_ID=YOUR_APP_ID";
    PinterestOriginal.installVariables = ["APP_ID"];
    PinterestOriginal.platforms = ["Android", "iOS"];
    return PinterestOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Pinterest = new PinterestOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 603 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PowerManagement; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var PowerManagementOriginal = /** @class */ (function (_super) {
    __extends(PowerManagementOriginal, _super);
    function PowerManagementOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PowerManagementOriginal.prototype.acquire = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "acquire", {}, arguments); };
    PowerManagementOriginal.prototype.dim = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "dim", {}, arguments); };
    PowerManagementOriginal.prototype.release = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "release", {}, arguments); };
    PowerManagementOriginal.prototype.setReleaseOnPause = function (set) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setReleaseOnPause", {}, arguments); };
    PowerManagementOriginal.pluginName = "PowerManagement";
    PowerManagementOriginal.plugin = "cordova-plugin-powermanagement-orig";
    PowerManagementOriginal.pluginRef = "powerManagement";
    PowerManagementOriginal.repo = "https://github.com/Viras-/cordova-plugin-powermanagement";
    PowerManagementOriginal.platforms = ["Android", "iOS", "Windows", "Windows Phone"];
    return PowerManagementOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var PowerManagement = new PowerManagementOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9wb3dlci1tYW5hZ2VtZW50L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQThCbkMsbUNBQWlCOzs7O0lBTXBELGlDQUFPO0lBU1AsNkJBQUc7SUFTSCxpQ0FBTztJQVdQLDJDQUFpQixhQUFDLEdBQVk7Ozs7OzswQkFsRWhDO0VBK0JxQyxpQkFBaUI7U0FBekMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIFBvd2VyIE1hbmFnZW1lbnRcbiAqIEBkZXNjcmlwdGlvblxuICogVGhlIFBvd2VyTWFuYWdlbWVudCBwbHVnaW4gb2ZmZXJzIGFjY2VzcyB0byB0aGUgZGV2aWNlcyBwb3dlci1tYW5hZ2VtZW50IGZ1bmN0aW9uYWxpdHkuXG4gKiBJdCBzaG91bGQgYmUgdXNlZCBmb3IgYXBwbGljYXRpb25zIHdoaWNoIGtlZXAgcnVubmluZyBmb3IgYSBsb25nIHRpbWUgd2l0aG91dCBhbnkgdXNlciBpbnRlcmFjdGlvbi5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFBvd2VyTWFuYWdlbWVudCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvcG93ZXItbWFuYWdlbWVudCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBwb3dlck1hbmFnZW1lbnQ6IFBvd2VyTWFuYWdlbWVudCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5wb3dlck1hbmFnZW1lbnQuYWNxdWlyZSgpXG4gKiAgIC50aGVuKG9uU3VjY2VzcylcbiAqICAgLmNhdGNoKG9uRXJyb3IpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1Bvd2VyTWFuYWdlbWVudCcsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXBvd2VybWFuYWdlbWVudC1vcmlnJyxcbiAgcGx1Z2luUmVmOiAncG93ZXJNYW5hZ2VtZW50JyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9WaXJhcy0vY29yZG92YS1wbHVnaW4tcG93ZXJtYW5hZ2VtZW50JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MnLCAnV2luZG93cyBQaG9uZSddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBvd2VyTWFuYWdlbWVudCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIEFjcXVpcmUgYSB3YWtlbG9jayBieSBjYWxsaW5nIHRoaXMuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGFjcXVpcmUoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBhY3F1aXJlcyBhIHBhcnRpYWwgd2FrZWxvY2ssIGFsbG93aW5nIHRoZSBzY3JlZW4gdG8gYmUgZGltbWVkLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBkaW0oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVsZWFzZSB0aGUgd2FrZWxvY2suIEl0J3MgaW1wb3J0YW50IHRvIGRvIHRoaXMgd2hlbiB5b3UncmUgZmluaXNoZWQgd2l0aCB0aGUgd2FrZWxvY2ssIHRvIGF2b2lkIHVubmVjZXNzYXJ5IGJhdHRlcnkgZHJhaW4uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlbGVhc2UoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQnkgZGVmYXVsdCwgdGhlIHBsdWdpbiB3aWxsIGF1dG9tYXRpY2FsbHkgcmVsZWFzZSBhIHdha2Vsb2NrIHdoZW4geW91ciBhcHAgaXMgcGF1c2VkIChlLmcuIHdoZW4gdGhlIHNjcmVlbiBpcyB0dXJuZWQgb2ZmLCBvciB0aGUgdXNlciBzd2l0Y2hlcyB0byBhbm90aGVyIGFwcCkuXG4gICAqIEl0IHdpbGwgcmVhY3F1aXJlIHRoZSB3YWtlbG9jayB1cG9uIGFwcCByZXN1bWUuIElmIHlvdSB3b3VsZCBwcmVmZXIgdG8gZGlzYWJsZSB0aGlzIGJlaGF2aW91ciwgeW91IGNhbiB1c2UgdGhpcyBmdW5jdGlvbi5cbiAgICogQHBhcmFtIHNldCB7Ym9vbGVhbn1cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc2V0UmVsZWFzZU9uUGF1c2Uoc2V0OiBib29sZWFuKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 604 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Printer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var PrinterOriginal = /** @class */ (function (_super) {
    __extends(PrinterOriginal, _super);
    function PrinterOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Checks whether the device is capable of printing (uses `check()` internally)
     * @returns {Promise<boolean>}
     */
    PrinterOriginal.prototype.isAvailable = function () {
        return this.check()
            .then(function (res) { return Promise.resolve(res.avail); });
    };
    PrinterOriginal.prototype.check = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (resolve) {
                PrinterOriginal.getPlugin()
                    .check(function (avail, count) {
                    resolve({ avail: avail, count: count });
                });
            });
        }
    }(); };
    PrinterOriginal.prototype.pick = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "pick", {}, arguments); };
    PrinterOriginal.prototype.print = function (content, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "print", { "successIndex": 2, "errorIndex": 4 }, arguments); };
    PrinterOriginal.pluginName = "Printer";
    PrinterOriginal.plugin = "de.appplant.cordova.plugin.printer";
    PrinterOriginal.pluginRef = "cordova.plugins.printer";
    PrinterOriginal.repo = "https://github.com/katzer/cordova-plugin-printer";
    PrinterOriginal.platforms = ["Android", "iOS", "Windows"];
    return PrinterOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Printer = new PrinterOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9wcmludGVyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDZEQUFvRCxNQUFNLG9CQUFvQixDQUFDOztJQTBFekQsMkJBQWlCOzs7O0lBRTVDOzs7T0FHRztJQUNILDZCQUFXLEdBQVg7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTthQUNoQixJQUFJLENBQUMsVUFBQyxHQUFRLElBQUssT0FBQSxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBMUIsQ0FBMEIsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFPRCx1QkFBSzs4Q0FBaUIsQ0FBQztZQUNyQixNQUFNLENBQUMsSUFBSSxPQUFPLENBQU0sVUFBQyxPQUFpQjtnQkFDeEMsT0FBTyxDQUFDLFNBQVMsRUFBRTtxQkFDaEIsS0FBSyxDQUFDLFVBQUMsS0FBYyxFQUFFLEtBQVU7b0JBQ2hDLE9BQU8sQ0FBQyxFQUFFLEtBQUssT0FBQSxFQUFFLEtBQUssT0FBQSxFQUFFLENBQUMsQ0FBQztnQkFDNUIsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7O0lBT0Qsc0JBQUk7SUFjSix1QkFBSyxhQUFDLE9BQTZCLEVBQUUsT0FBc0I7Ozs7OztrQkF2SDdEO0VBMkU2QixpQkFBaUI7U0FBakMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIENvcmRvdmFDaGVjaywgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJpbnRPcHRpb25zIHtcbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBwcmludCBqb2IgYW5kIHRoZSBkb2N1bWVudFxuICAgKi9cbiAgbmFtZT86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIG5ldHdvcmsgVVJMIG9mIHRoZSBwcmludGVyLlxuICAgKiBPbmx5IHN1cHBvcnRlZCBvbiBpT1MuXG4gICAqL1xuICBwcmludGVySWQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFNwZWNpZmllcyB0aGUgZHVwbGV4IG1vZGUgdG8gdXNlIGZvciB0aGUgcHJpbnQgam9iLlxuICAgKiBFaXRoZXIgZG91YmxlLXNpZGVkIChkdXBsZXg6dHJ1ZSkgb3Igc2luZ2xlLXNpZGVkIChkdXBsZXg6ZmFsc2UpLlxuICAgKiBEb3VibGUtc2lkZWQgYnkgZGVmYXVsdC5cbiAgICogT25seSBzdXBwb3J0ZWQgb24gaU9TXG4gICAqL1xuICBkdXBsZXg/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBUaGUgb3JpZW50YXRpb24gb2YgdGhlIHByaW50ZWQgY29udGVudCwgcG9ydHJhaXQgb3IgbGFuZHNjYXBlXG4gICAqIFBvcnRyYWl0IGJ5IGRlZmF1bHQuXG4gICAqL1xuICBsYW5kc2NhcGU/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBJZiB5b3VyIGFwcGxpY2F0aW9uIG9ubHkgcHJpbnRzIGJsYWNrIHRleHQsIHNldHRpbmcgdGhpcyBwcm9wZXJ0eSB0byB0cnVlIGNhbiByZXN1bHQgaW4gYmV0dGVyIHBlcmZvcm1hbmNlIGluIG1hbnkgY2FzZXMuXG4gICAqIEZhbHNlIGJ5IGRlZmF1bHQuXG4gICAqL1xuICBncmF5c2NhbGU/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBUaGUgU2l6ZSBhbmQgcG9zaXRpb24gb2YgdGhlIHByaW50IHZpZXdcbiAgICovXG4gIGJvdW5kcz86IG51bWJlcltdIHwgYW55O1xufVxuXG4vKipcbiAqIEBuYW1lIFByaW50ZXJcbiAqIEBkZXNjcmlwdGlvbiBQcmludHMgZG9jdW1lbnRzIG9yIEhUTUwgcmVuZGVyZWQgY29udGVudFxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBQcmludGVyLCBQcmludE9wdGlvbnMgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3ByaW50ZXInO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgcHJpbnRlcjogUHJpbnRlcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5wcmludGVyLmlzQXZhaWxhYmxlKCkudGhlbihvblN1Y2Nlc3MsIG9uRXJyb3IpO1xuICpcbiAqIGxldCBvcHRpb25zOiBQcmludE9wdGlvbnMgPSB7XG4gKiAgICAgIG5hbWU6ICdNeURvY3VtZW50JyxcbiAqICAgICAgcHJpbnRlcklkOiAncHJpbnRlcjAwNycsXG4gKiAgICAgIGR1cGxleDogdHJ1ZSxcbiAqICAgICAgbGFuZHNjYXBlOiB0cnVlLFxuICogICAgICBncmF5c2NhbGU6IHRydWVcbiAqICAgIH1cbiAqXG4gKiB0aGlzLnByaW50ZXIucHJpbnQoY29udGVudCwgb3B0aW9ucykudGhlbihvblN1Y2Nlc3MsIG9uRXJyb3IpO1xuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogUHJpbnRPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnUHJpbnRlcicsXG4gIHBsdWdpbjogJ2RlLmFwcHBsYW50LmNvcmRvdmEucGx1Z2luLnByaW50ZXInLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMucHJpbnRlcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20va2F0emVyL2NvcmRvdmEtcGx1Z2luLXByaW50ZXInLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnLCAnV2luZG93cyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFByaW50ZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIENoZWNrcyB3aGV0aGVyIHRoZSBkZXZpY2UgaXMgY2FwYWJsZSBvZiBwcmludGluZyAodXNlcyBgY2hlY2soKWAgaW50ZXJuYWxseSlcbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59XG4gICAqL1xuICBpc0F2YWlsYWJsZSgpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm4gdGhpcy5jaGVjaygpXG4gICAgICAudGhlbigocmVzOiBhbnkpID0+IFByb21pc2UucmVzb2x2ZShyZXMuYXZhaWwpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgdGhlIHByaW50ZXIgc2VydmljZSBpcyBhdmFpbGFibGUgKGlPUykgb3IgaWYgcHJpbnRlciBzZXJ2aWNlcyBhcmUgaW5zdGFsbGVkIGFuZCBlbmFibGVkIChBbmRyb2lkKS5cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmUgd2l0aCBhbiBvYmplY3QgaW5kaWNhdGluZyB3aGV0aGVyIHByaW50aW5nIGlzIGF2YWlsYWJsZSwgYW5kIHByb3ZpZGluZyB0aGUgbnVtYmVyIG9mIHByaW50ZXJzIGF2YWlsYWJsZVxuICAgKi9cbiAgQENvcmRvdmFDaGVjaygpXG4gIGNoZWNrKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlPGFueT4oKHJlc29sdmU6IEZ1bmN0aW9uKSA9PiB7XG4gICAgICBQcmludGVyLmdldFBsdWdpbigpXG4gICAgICAgIC5jaGVjaygoYXZhaWw6IGJvb2xlYW4sIGNvdW50OiBhbnkpID0+IHtcbiAgICAgICAgICByZXNvbHZlKHsgYXZhaWwsIGNvdW50IH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEaXNwbGF5cyBhIHN5c3RlbSBpbnRlcmZhY2UgYWxsb3dpbmcgdGhlIHVzZXIgdG8gc2VsZWN0IGFuIGF2YWlsYWJsZSBwcmludGVyLiBUbyBzcGVhayB3aXRoIGEgcHJpbnRlciBkaXJlY3RseSB5b3UgbmVlZCB0byBrbm93IHRoZSBuZXR3b3JrIGFkZHJlc3MgYnkgcGlja2luZyB0aGVtIGJlZm9yZSB2aWEgYHByaW50ZXIucGlja2AuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHBpY2soKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2VuZHMgY29udGVudCB0byB0aGUgcHJpbnRlci5cbiAgICogQHBhcmFtIGNvbnRlbnQge3N0cmluZyB8IEhUTUxFbGVtZW50fSBUaGUgY29udGVudCB0byBwcmludC4gQ2FuIGJlIGEgVVJMIG9yIGFuIEhUTUwgc3RyaW5nLiBJZiBhIEhUTUwgRE9NIE9iamVjdCBpcyBwcm92aWRlZCwgaXRzIGlubmVySHRtbCBwcm9wZXJ0eSB2YWx1ZSB3aWxsIGJlIHVzZWQuXG4gICAqIEBwYXJhbSBvcHRpb25zIHtQcmludE9wdGlvbnN9IG9wdGlvbmFsLiBUaGUgb3B0aW9ucyB0byBwYXNzIHRvIHRoZSBwcmludGVyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3VjY2Vzc0luZGV4OiAyLFxuICAgIGVycm9ySW5kZXg6IDRcbiAgfSlcbiAgcHJpbnQoY29udGVudDogc3RyaW5nIHwgSFRNTEVsZW1lbnQsIG9wdGlvbnM/OiBQcmludE9wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 605 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export ProDeploy */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Pro; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var ProDeploy = /** @class */ (function () {
    function ProDeploy(_objectInstance) {
        this._objectInstance = _objectInstance;
    }
    ProDeploy.prototype.init = function (config) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "init", {}, arguments); };
    ProDeploy.prototype.check = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "check", { "observable": true }, arguments); };
    ProDeploy.prototype.download = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "download", { "observable": true }, arguments); };
    ProDeploy.prototype.extract = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "extract", {}, arguments); };
    ProDeploy.prototype.redirect = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "redirect", {}, arguments); };
    ProDeploy.prototype.info = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "info", {}, arguments); };
    ProDeploy.prototype.getVersions = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getVersions", {}, arguments); };
    ProDeploy.prototype.deleteVersion = function (version) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "deleteVersion", {}, arguments); };
    return ProDeploy;
}());

var ProOriginal = /** @class */ (function (_super) {
    __extends(ProOriginal, _super);
    function ProOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProOriginal.prototype.deploy = function () { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            if (this._deploy)
                return this._deploy;
            else
                return this._deploy = new ProDeploy(ProOriginal.getPlugin().deploy);
        }
    }(); };
    ProOriginal.prototype.enableCrashLogging = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableCrashLogging", {}, arguments); };
    ProOriginal.prototype.checkForPendingCrash = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "checkForPendingCrash", {}, arguments); };
    ProOriginal.prototype.loadPendingCrash = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "loadPendingCrash", {}, arguments); };
    ProOriginal.prototype.forceCrash = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "forceCrash", {}, arguments); };
    ProOriginal.prototype.getAppInfo = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getAppInfo", {}, arguments); };
    ProOriginal.pluginName = "Pro";
    ProOriginal.plugin = "cordova-plugin-ionic";
    ProOriginal.pluginRef = "IonicCordova";
    ProOriginal.repo = "https://github.com/ionic-team/cordova-plugin-ionic";
    ProOriginal.platforms = ["Android", "iOS"];
    ProOriginal.install = "ionic cordova plugin add cordova-plugin-ionic --save --variable APP_ID=\"XXXXXXXX\" --variable CHANNEL_NAME=\"Channel\"";
    return ProOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Pro = new ProOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9wcm8vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sOEVBQXFFLE1BQU0sb0JBQW9CLENBQUM7QUFDdkcsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQW9DM0MsbUJBQW9CLGVBQW9CO1FBQXBCLG9CQUFlLEdBQWYsZUFBZSxDQUFLO0lBQ3hDLENBQUM7SUFPRCx3QkFBSSxhQUFDLE1BQW9CO0lBV3pCLHlCQUFLO0lBV0wsNEJBQVE7SUFTUiwyQkFBTztJQVFQLDRCQUFRO0lBU1Isd0JBQUk7SUFRSiwrQkFBVztJQVNYLGlDQUFhLGFBQUMsT0FBZTtvQkEvRy9COzs7O0lBb0p5Qix1QkFBaUI7Ozs7SUFPeEMsb0JBQU07OENBQWMsQ0FBQztZQUNuQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ3RDLElBQUk7Z0JBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxTQUFTLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ25FLENBQUM7O0lBT0QsZ0NBQWtCO0lBU2xCLGtDQUFvQjtJQVNwQiw4QkFBZ0I7SUFTaEIsd0JBQVU7SUFTVix3QkFBVTs7Ozs7OztjQXpNWjtFQW9KeUIsaUJBQWlCO1NBQTdCLEdBQUciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBDb3Jkb3ZhSW5zdGFuY2UsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4sIENvcmRvdmFDaGVjayB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuLyoqXG4gKiBJbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudGx5IHJ1bm5pbmcgYXBwXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQXBwSW5mbyB7XG4gIHBsYXRmb3JtOiBzdHJpbmc7XG4gIHBsYXRmb3JtVmVyc2lvbjogc3RyaW5nO1xuICB2ZXJzaW9uOiBzdHJpbmc7XG4gIGJ1bmRsZU5hbWU6IHN0cmluZztcbiAgYnVuZGxlVmVyc2lvbjogc3RyaW5nO1xufVxuXG4vKipcbiAqIEluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IGxpdmUgdXBkYXRlXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGVwbG95SW5mbyB7XG4gIGRlcGxveV91dWlkOiBzdHJpbmc7XG4gIGNoYW5uZWw6IHN0cmluZztcbiAgYmluYXJ5X3ZlcnNpb246IHN0cmluZztcbn1cblxuLyoqXG4gKiBPYmplY3QgZm9yIG1hbnVhbGx5IGNvbmZpZ3VyaW5nIGRlcGxveVxuICovXG5leHBvcnQgaW50ZXJmYWNlIERlcGxveUNvbmZpZyB7XG4gIGFwcElkPzogc3RyaW5nO1xuICBob3N0Pzogc3RyaW5nO1xuICBjaGFubmVsPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIFByb0RlcGxveSB7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfb2JqZWN0SW5zdGFuY2U6IGFueSkge1xuICB9XG5cbiAgLyoqXG4gICAqIFJlLWluaXRpYWxpemUgRGVwbG95IHBsdWdpbiB3aXRoIGEgbmV3IEFwcCBJRCBhbmQgaG9zdC4gIE5vdCB1c2VkIGluIG1vc3QgY2FzZXMuXG4gICAqIEBwYXJhbSBjb25maWcgQSB2YWxpZCBEZXBsb3kgY29uZmlnIG9iamVjdFxuICAgKi9cbiAgQENvcmRvdmFJbnN0YW5jZSgpXG4gIGluaXQoY29uZmlnOiBEZXBsb3lDb25maWcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBhIGNoYW5uZWwgZm9yIGFuIGF2YWlsYWJsZSB1cGRhdGVcbiAgICogQHJldHVybiB7UHJvbWlzZTxzdHJpbmc+fSBSZXNvbHZlcyB3aXRoICd0cnVlJyBvciAnZmFsc2UnLCBvciByZWplY3RzIHdpdGggYW4gZXJyb3IuXG4gICAqL1xuICBAQ29yZG92YUluc3RhbmNlKHtcbiAgICBvYnNlcnZhYmxlOiB0cnVlXG4gIH0pXG4gIGNoZWNrKCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIERvd25sb2FkIGFuIGF2YWlsYWJsZSB2ZXJzaW9uXG4gICAqIEByZXR1cm4ge09ic2VydmFibGU8YW55Pn0gVXBkYXRlcyB3aXRoIHBlcmNlbnQgY29tcGxldGlvbiwgb3IgZXJyb3JzIHdpdGggYSBtZXNzYWdlLlxuICAgKi9cbiAgQENvcmRvdmFJbnN0YW5jZSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZVxuICB9KVxuICBkb3dubG9hZCgpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBVbnppcCB0aGUgbGF0ZXN0IGRvd25sb2FkZWQgdmVyc2lvblxuICAgKiBAcmV0dXJuIHtPYnNlcnZhYmxlPGFueT59IFVwZGF0ZXMgd2l0aCBwZXJjZW50IGNvbXBsZXRpb24sIG9yIGVycm9ycyB3aXRoIGEgbWVzc2FnZS5cbiAgICovXG4gIEBDb3Jkb3ZhSW5zdGFuY2UoKVxuICBleHRyYWN0KCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbG9hZCBhcHAgd2l0aCB0aGUgZGVwbG95ZWQgdmVyc2lvblxuICAgKi9cbiAgQENvcmRvdmFJbnN0YW5jZSgpXG4gIHJlZGlyZWN0KCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBpbmZvIGFib3V0IHRoZSB2ZXJzaW9uIHJ1bm5pbmcgb24gdGhlIGRldmljZVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPERlcGxveUluZm8+fSBJbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCB2ZXJzaW9uIHJ1bm5pbmcgb24gdGhlIGFwcC5cbiAgICovXG4gIEBDb3Jkb3ZhSW5zdGFuY2UoKVxuICBpbmZvKCk6IFByb21pc2U8RGVwbG95SW5mbz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBMaXN0IHZlcnNpb25zIHN0b3JlZCBvbiB0aGUgZGV2aWNlXG4gICAqL1xuICBAQ29yZG92YUluc3RhbmNlKClcbiAgZ2V0VmVyc2lvbnMoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGVsZXRlIGEgdmVyc2lvbiBzdG9yZWQgb24gdGhlIGRldmljZSBieSBVVUlEXG4gICAqIEBwYXJhbSB2ZXJzaW9uIEEgdmVyc2lvbiBVVUlEXG4gICAqL1xuICBAQ29yZG92YUluc3RhbmNlKClcbiAgZGVsZXRlVmVyc2lvbih2ZXJzaW9uOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuXG4vKipcbiAqIEBuYW1lIFByb1xuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiBlbmFibGVzIElvbmljIFBybyBzZXJ2aWNlcyBsaWtlIGxpdmUgdXBkYXRlcyBhbmQgZXJyb3IgbW9uaXRvcmluZ1xuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgUHJvLCBBcHBJbmZvLCBEZXBsb3lJbmZvIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9wcm8nO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHBybzogUHJvKSB7IH1cbiAqXG4gKiAvLyBHZXQgYXBwIGluZm9cbiAqIHRoaXMucHJvLmdldEFwcEluZm8oKS50aGVuKChyZXM6IEFwcEluZm8pID0+IHtcbiAqICAgY29uc29sZS5sb2cocmVzKVxuICogfSlcbiAqXG4gKiAvLyBHZXQgbGl2ZSB1cGRhdGUgaW5mb1xuICogdGhpcy5wcm8uZGVwbG95LmluZm8oKS50aGVuKChyZXM6IERlcGxveUluZm8pID0+IHtcbiAqICAgY29uc29sZS5sb2cocmVzKVxuICogfSlcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1BybycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWlvbmljJyxcbiAgcGx1Z2luUmVmOiAnSW9uaWNDb3Jkb3ZhJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL2NvcmRvdmEtcGx1Z2luLWlvbmljJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXG4gIGluc3RhbGw6ICdpb25pYyBjb3Jkb3ZhIHBsdWdpbiBhZGQgY29yZG92YS1wbHVnaW4taW9uaWMgLS1zYXZlIC0tdmFyaWFibGUgQVBQX0lEPVwiWFhYWFhYWFhcIiAtLXZhcmlhYmxlIENIQU5ORUxfTkFNRT1cIkNoYW5uZWxcIidcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUHJvIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICBfZGVwbG95OiBQcm9EZXBsb3k7XG5cbiAgLyoqXG4gICAqIElvbmljIFBybyBEZXBsb3kgLmpzIEFQSS5cbiAgICovXG4gIEBDb3Jkb3ZhQ2hlY2soKVxuICBkZXBsb3koKTogUHJvRGVwbG95IHtcbiAgICBpZiAodGhpcy5fZGVwbG95KSByZXR1cm4gdGhpcy5fZGVwbG95O1xuICAgIGVsc2UgcmV0dXJuIHRoaXMuX2RlcGxveSA9IG5ldyBQcm9EZXBsb3koUHJvLmdldFBsdWdpbigpLmRlcGxveSk7XG4gIH1cblxuICAvKipcbiAgICogTm90IHlldCBpbXBsZW1lbnRlZFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBzb21ldGhpbmcgaGFwcGVuc1xuICAgKi9cbiAgQENvcmRvdmEoKVxuICBlbmFibGVDcmFzaExvZ2dpbmcoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogTm90IHlldCBpbXBsZW1lbnRlZFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBzb21ldGhpbmcgaGFwcGVuc1xuICAgKi9cbiAgQENvcmRvdmEoKVxuICBjaGVja0ZvclBlbmRpbmdDcmFzaCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBOb3QgeWV0IGltcGxlbWVudGVkXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHNvbWV0aGluZyBoYXBwZW5zXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGxvYWRQZW5kaW5nQ3Jhc2goKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogTm90IHlldCBpbXBsZW1lbnRlZFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBzb21ldGhpbmcgaGFwcGVuc1xuICAgKi9cbiAgQENvcmRvdmEoKVxuICBmb3JjZUNyYXNoKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudGx5IHJ1bm5pbmcgYXBwXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGN1cnJlbnQgYXBwIGluZm9cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0QXBwSW5mbygpOiBQcm9taXNlPEFwcEluZm8+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cblxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 606 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Push; });
/* unused harmony export PushObject */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var PushOriginal = /** @class */ (function (_super) {
    __extends(PushOriginal, _super);
    function PushOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Init push notifications
     * @param options {PushOptions}
     * @return {PushObject}
     */
    PushOriginal.prototype.init = function (options) {
        return new PushObject(options);
    };
    PushOriginal.prototype.hasPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasPermission", {}, arguments); };
    PushOriginal.prototype.createChannel = function (channel) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createChannel", {}, arguments); };
    PushOriginal.prototype.deleteChannel = function (id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteChannel", {}, arguments); };
    PushOriginal.prototype.listChannels = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "listChannels", {}, arguments); };
    PushOriginal.pluginName = "Push";
    PushOriginal.plugin = "phonegap-plugin-push";
    PushOriginal.pluginRef = "PushNotification";
    PushOriginal.repo = "https://github.com/phonegap/phonegap-plugin-push";
    PushOriginal.install = "ionic cordova plugin add phonegap-plugin-push";
    PushOriginal.platforms = ["Android", "Browser", "iOS", "Windows"];
    return PushOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Push = new PushOriginal();

var PushObject = /** @class */ (function () {
    function PushObject(options) {
        if (checkAvailability('PushNotification', 'init', 'PushNotification') === true) {
            this._objectInstance = window.PushNotification.init(options);
        }
    }
    PushObject.prototype.on = function (event) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "on", { "observable": true, "clearFunction": "off", "clearWithArgs": true }, arguments); };
    PushObject.prototype.unregister = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "unregister", {}, arguments); };
    PushObject.prototype.setApplicationIconBadgeNumber = function (count) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "setApplicationIconBadgeNumber", { "callbackOrder": "reverse" }, arguments); };
    PushObject.prototype.getApplicationIconBadgeNumber = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "getApplicationIconBadgeNumber", {}, arguments); };
    PushObject.prototype.finish = function (id) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "finish", {}, arguments); };
    PushObject.prototype.clearAllNotifications = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "clearAllNotifications", {}, arguments); };
    PushObject.prototype.subscribe = function (topic) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "subscribe", {}, arguments); };
    PushObject.prototype.unsubscribe = function (topic) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "unsubscribe", {}, arguments); };
    PushObject.pluginName = "Push";
    PushObject.plugin = "phonegap-plugin-push";
    PushObject.pluginRef = "PushNotification";
    return PushObject;
}());

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 607 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QQSDK; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var QQSDKOriginal = /** @class */ (function (_super) {
    __extends(QQSDKOriginal, _super);
    function QQSDKOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * QQ Share Scene
         */
        _this.Scene = {
            QQ: 0,
            QQZone: 1,
            Favorite: 2
        };
        /**
         *  client type:  QQ application or TIM application
         */
        _this.ClientType = {
            QQ: 0,
            TIM: 1
        };
        return _this;
    }
    QQSDKOriginal.prototype.ssoLogin = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "ssoLogin", { "callbackOrder": "reverse" }, arguments); };
    QQSDKOriginal.prototype.logout = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logout", { "callbackOrder": "reverse" }, arguments); };
    QQSDKOriginal.prototype.checkClientInstalled = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "checkClientInstalled", { "callbackOrder": "reverse" }, arguments); };
    QQSDKOriginal.prototype.shareText = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareText", { "callbackOrder": "reverse" }, arguments); };
    QQSDKOriginal.prototype.shareImage = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareImage", { "callbackOrder": "reverse" }, arguments); };
    QQSDKOriginal.prototype.shareNews = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareNews", { "callbackOrder": "reverse" }, arguments); };
    QQSDKOriginal.prototype.shareAudio = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareAudio", { "callbackOrder": "reverse" }, arguments); };
    QQSDKOriginal.pluginName = "QQSDK";
    QQSDKOriginal.plugin = "cordova-plugin-qqsdk";
    QQSDKOriginal.pluginRef = "QQSDK";
    QQSDKOriginal.repo = "https://github.com/iVanPan/Cordova_QQ";
    QQSDKOriginal.platforms = ["Android", "iOS"];
    QQSDKOriginal.install = "ionic cordova plugin add cordova-plugin-qqsdk --variable QQ_APP_ID=YOUR_QQ_APPID";
    QQSDKOriginal.installVariables = ["QQ_APP_ID"];
    return QQSDKOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var QQSDK = new QQSDKOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9xcXNkay9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFvSzdDLHlCQUFpQjs7O1FBRTFDOztXQUVHO1FBQ0gsV0FBSyxHQUFHO1lBQ04sRUFBRSxFQUFFLENBQUM7WUFDTCxNQUFNLEVBQUUsQ0FBQztZQUNULFFBQVEsRUFBRSxDQUFDO1NBQ1osQ0FBQztRQUNGOztXQUVHO1FBQ0gsZ0JBQVUsR0FBRztZQUNYLEVBQUUsRUFBRSxDQUFDO1lBQ0wsR0FBRyxFQUFFLENBQUM7U0FDUCxDQUFDOzs7SUFVRix3QkFBUSxhQUFDLE9BQXVCO0lBT2hDLHNCQUFNO0lBWU4sb0NBQW9CLGFBQUMsT0FBdUI7SUFZNUMseUJBQVMsYUFBQyxPQUF1QjtJQVlqQywwQkFBVSxhQUFDLE9BQXVCO0lBWWxDLHlCQUFTLGFBQUMsT0FBdUI7SUFZakMsMEJBQVUsYUFBQyxPQUF1Qjs7Ozs7Ozs7Z0JBalFwQztFQW9LMkIsaUJBQWlCO1NBQS9CLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBRUVNoYXJlT3B0aW9ucyB7XG5cbiAgLyoqXG4gICAqIFRoZSBjbGluZXQgdHlwZSwgUVEgb3IgVElNXG4gICAqIERlZmF1bHQgaXMgUVFcbiAgICovXG4gIGNsaWVudD86IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIFNoYXJlIFNlbmNlXG4gICAqIERlZmF1bHQgaXMgUVFcbiAgICovXG4gIHNjZW5lPzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBUaGUgdGV4dCBmb3Igc2hhcmVUZXh0XG4gICAqL1xuICB0ZXh0Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgdXJsIGZvciBzaGFyZSBuZXdzIG9yIGF1ZGlvXG4gICAqL1xuICB1cmw/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSB0aXRsZSBmb3Igc2hhcmUgaW1hZ2UsbmV3cyBvciBhdWRpb1xuICAgKi9cbiAgdGl0bGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBkZXNjcmlwdGlvbiBmb3Igc2hhcmUgaW1hZ2UsbmV3cyBvciBhdWRpb1xuICAgKi9cbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBpbWFnZSBmb3Igc2hhcmUgaW1hZ2UsbmV3cyBvciBhdWRpb1xuICAgKiBJbWFnZSBzdXBwb3J0cyB0aHJlZSB0eXBlczpcbiAgICogMS4gTmV0d29yayBVUkxcbiAgICogMi4gQmFzZTY0XG4gICAqIDMuIEFic29sdXRlIGZpbGUgcGF0aFxuICAgKi9cbiAgaW1hZ2U/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqICBUaGUgVVJMIGZvciBhdWRpb1xuICAgKi9cbiAgZmxhc2hVcmw/OiBzdHJpbmc7XG59XG5cbi8qKlxuICogQG5hbWUgUVFTREtcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBQbHVnaW4gaXMgYSB3cmFwcGVyIGFyb3VuZCB0aGUgVGVuY2VudCBRUSBTREsgZm9yIEFuZHJvaWQgYW5kIGlPUy4gUHJvdmlkZXMgYWNjZXNzIHRvIFFRIHNzb0xvZ2luLCBRUSBTaGFyaW5nLCBRUVpvbmUgU2hhcmluZyBldGMuXG4gKlxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGBjb3Jkb3ZhLXBsdWdpbi1xcXNka2AuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtRUVNESyBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2lWYW5QYW4vQ29yZG92YV9RUSkuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBRUVNESywgUVFTaGFyZU9wdGlvbnMgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3Fxc2RrJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHFxOiBRUVNESykgeyB9XG4gKlxuICogLi4uXG4gKlxuICpcbiAqIGNvbnN0IG9wdGlvbnM6IFFRU2hhcmVPcHRpb25zID0ge1xuICogICBjbGllbnQ6IHRoaXMucXEuQ2xpZW50VHlwZS5RUSxcbiAqICAgc2NlbmU6IHRoaXMucXEuU2NlbmUuUVEsXG4gKiAgIHRpdGxlOiAnVGhpcyBpcyBhIHRpdGxlIGZvciBjb3Jkb3ZhLXBsdWdpbi1xcXNkaycsXG4gKiAgIHVybDogJ2h0dHBzOi8vY29yZG92YS5hcGFjaGUub3JnLycsXG4gKiAgIGltYWdlOiAnaHR0cHM6Ly9jb3Jkb3ZhLmFwYWNoZS5vcmcvc3RhdGljL2ltZy9jb3Jkb3ZhX2JvdC5wbmcnLFxuICogICBkZXNjcmlwdGlvbjogJ1RoaXMgaXMgIENvcmRvdmEgUVEgc2hhcmUgZGVzY3JpcHRpb24nLFxuICogICBmbGFzaFVybDogICdodHRwOi8vc3RyZWFtMjAucXFtdXNpYy5xcS5jb20vMzA1NzcxNTgubXAzJyxcbiAqIH1cbiAqXG4gKiBjb25zdCBjbGllbnRPcHRpb25zOiBRUVNoYXJlT3B0aW9ucyA9IHtcbiAqICAgY2xpZW50OiB0aGlzLnFxLkNsaWVudFR5cGUuUVEsXG4gKiB9XG4gKlxuICogY29uc3Qgc2hhcmVUZXh0T3B0aW9uczogUVFTaGFyZU9wdGlvbnMgPSB7XG4gKiAgIGNsaWVudDogdGhpcy5xcS5DbGllbnRUeXBlLlFRLFxuICogICB0ZXh0OiAnVGhpcyBpcyBTaGFyZSBUZXh0JyxcbiAqICAgc2NlbmU6IHRoaXMucXEuU2NlbmUuUVEsXG4gKiB9XG4gKlxuICogdGhpcy5xcS5zc29Mb2dpbihjbGllbnRPcHRpb25zKVxuICogICAgLnRoZW4ocmVzdWx0ID0+IHtcbiAqICAgICAgIC8vIFN1Y2Nlc3NcbiAqICAgICAgIGNvbnNvbGUubG9nKCd0b2tlbiBpcyAnICsgcmVzdWx0LmFjY2Vzc190b2tlbik7XG4gKiAgICAgICBjb25zb2xlLmxvZygndXNlcmlkIGlzICcgKyByZXN1bHQudXNlcmlkKTtcbiAqICAgICAgIGNvbnNvbGUubG9nKCdleHBpcmVzX3RpbWUgaXMgJyArIG5ldyBEYXRlKHBhcnNlSW50KHJlc3VsdC5leHBpcmVzX3RpbWUpKSArICcgVGltZVN0YW1wIGlzICcgKyByZXN1bHQuZXhwaXJlc190aW1lKTtcbiAqICAgIH0pXG4gKiAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICogICAgICAgY29uc29sZS5sb2coZXJyb3IpOyAvLyBGYWlsZWRcbiAqICAgIH0pO1xuICpcbiAqIHRoaXMucXEubG9nb3V0KClcbiAqICAgIC50aGVuKCgpID0+IHtcbiAqICAgICAgIGNvbnNvbGUubG9nKCdsb2dvdXQgc3VjY2VzcycpO1xuICogICAgfSlcbiAqICAgIC5jYXRjaChlcnJvciA9PiB7XG4gKiAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gKiAgICB9KTtcbiAqXG4gKiB0aGlzLnFxLmNoZWNrQ2xpZW50SW5zdGFsbGVkKGNsaWVudE9wdGlvbnMpXG4gKiAgICAudGhlbigoKSA9PiB7XG4gKiAgICAgICBjb25zb2xlLmxvZygnSW5zdGFsbGVkJyk7XG4gKiAgICB9KVxuICogICAgLmNhdGNoKCgpID0+IHtcbiAqICAgICAgIGNvbnNvbGUubG9nKCdOb3QgSW5zdGFsbGVkJyk7XG4gKiAgICB9KTtcbiAqXG4gKiB0aGlzLnFxLnNoYXJlVGV4dChzaGFyZVRleHRPcHRpb25zKVxuICogICAgLnRoZW4oKCkgPT4ge1xuICogICAgICAgY29uc29sZS5sb2coJ3NoYXJlVGV4dCBzdWNjZXNzJyk7XG4gKiAgICB9KVxuICogICAgLmNhdGNoKGVycm9yID0+IHtcbiAqICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAqICAgIH0pO1xuICpcbiAqIHRoaXMucXEuc2hhcmVJbWFnZShvcHRpb25zKVxuICogICAgLnRoZW4oKCkgPT4ge1xuICogICAgICAgY29uc29sZS5sb2coJ3NoYXJlSW1hZ2Ugc3VjY2VzcycpO1xuICogICAgfSlcbiAqICAgIC5jYXRjaChlcnJvciA9PiB7XG4gKiAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gKiAgICB9KTtcbiAqIH1cbiAqXG4gKiB0aGlzLnFxLnNoYXJlTmV3cyhvcHRpb25zKVxuICogICAgLnRoZW4oKCkgPT4ge1xuICogICAgICAgY29uc29sZS5sb2coJ3NoYXJlTmV3cyBzdWNjZXNzJyk7XG4gKiAgICB9KVxuICogICAgLmNhdGNoKGVycm9yID0+IHtcbiAqICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAqICAgIH0pO1xuICogfVxuICpcbiAqIHRoaXMucXEuc2hhcmVBdWRpbyhvcHRpb25zKVxuICogICAgLnRoZW4oKCkgPT4ge1xuICogICAgICAgY29uc29sZS5sb2coJ3NoYXJlQXVkaW8gc3VjY2VzcycpO1xuICogICAgfSlcbiAqICAgIC5jYXRjaChlcnJvciA9PiB7XG4gKiAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gKiAgICB9KTtcbiAqXG4gKiBgYGBcbiAqXG4gKiBAaW50ZXJmYWNlc1xuICogUVFTaGFyZU9wdGlvbnNcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdRUVNESycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXFxc2RrJyxcbiAgcGx1Z2luUmVmOiAnUVFTREsnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2lWYW5QYW4vQ29yZG92YV9RUScsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxuICBpbnN0YWxsOiAnaW9uaWMgY29yZG92YSBwbHVnaW4gYWRkIGNvcmRvdmEtcGx1Z2luLXFxc2RrIC0tdmFyaWFibGUgUVFfQVBQX0lEPVlPVVJfUVFfQVBQSUQnLFxuICBpbnN0YWxsVmFyaWFibGVzOiBbJ1FRX0FQUF9JRCddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBRUVNESyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogUVEgU2hhcmUgU2NlbmVcbiAgICovXG4gIFNjZW5lID0ge1xuICAgIFFROiAwLFxuICAgIFFRWm9uZTogMSxcbiAgICBGYXZvcml0ZTogMlxuICB9O1xuICAvKipcbiAgICogIGNsaWVudCB0eXBlOiAgUVEgYXBwbGljYXRpb24gb3IgVElNIGFwcGxpY2F0aW9uXG4gICAqL1xuICBDbGllbnRUeXBlID0ge1xuICAgIFFROiAwLFxuICAgIFRJTTogMVxuICB9O1xuXG4gIC8qKlxuICAgKiBvcGVuIFFRIG9yIFRJTSBjbGllbnQgcGVyZm9ybSBzc29Mb2dpblxuICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHN1Y2Nlc3MgcmV0dXJuLCBvciByZWplY3RzIHdpdGggYW4gZXJyb3IuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIHNzb0xvZ2luKG9wdGlvbnM6IFFRU2hhcmVPcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIGxvZ291dCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZXRlY3QgaWYgdGhlIFFRIGFwcGxpY2F0aW9uIG9yIFRJTSBhcHBsaWNhdGlvbiBpcyBpbnN0YWxsZWQgb24gdGhlIGRldmljZS5cbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBzdWNjZXNzIHJldHVybiwgb3IgcmVqZWN0cyB3aXRoIGFuIGVycm9yLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBjaGVja0NsaWVudEluc3RhbGxlZChvcHRpb25zOiBRUVNoYXJlT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIHNoYXJlVGV4dFxuICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHN1Y2Nlc3MgcmV0dXJuLCBvciByZWplY3RzIHdpdGggYW4gZXJyb3IuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIHNoYXJlVGV4dChvcHRpb25zOiBRUVNoYXJlT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIHNoYXJlSW1hZ2VcbiAgICogQHBhcmFtIG9wdGlvbnNcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBzdWNjZXNzIHJldHVybiwgb3IgcmVqZWN0cyB3aXRoIGFuIGVycm9yLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICBzaGFyZUltYWdlKG9wdGlvbnM6IFFRU2hhcmVPcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogc2hhcmVOZXdzXG4gICAqIEBwYXJhbSBvcHRpb25zXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgc3VjY2VzcyByZXR1cm4sIG9yIHJlamVjdHMgd2l0aCBhbiBlcnJvci5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAgc2hhcmVOZXdzKG9wdGlvbnM6IFFRU2hhcmVPcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogc2hhcmVBdWRpb1xuICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHN1Y2Nlc3MgcmV0dXJuLCBvciByZWplY3RzIHdpdGggYW4gZXJyb3IuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIHNoYXJlQXVkaW8ob3B0aW9uczogUVFTaGFyZU9wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 608 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QRScanner; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var QRScannerOriginal = /** @class */ (function (_super) {
    __extends(QRScannerOriginal, _super);
    function QRScannerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    QRScannerOriginal.prototype.prepare = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "prepare", { "callbackStyle": "node" }, arguments); };
    QRScannerOriginal.prototype.scan = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "scan", { "callbackStyle": "node", "observable": true, "clearFunction": "cancelScan" }, arguments); };
    QRScannerOriginal.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", {}, arguments); };
    QRScannerOriginal.prototype.hide = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hide", {}, arguments); };
    QRScannerOriginal.prototype.enableLight = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableLight", { "callbackStyle": "node" }, arguments); };
    QRScannerOriginal.prototype.destroy = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "destroy", {}, arguments); };
    QRScannerOriginal.prototype.disableLight = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableLight", { "callbackStyle": "node" }, arguments); };
    QRScannerOriginal.prototype.useFrontCamera = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "useFrontCamera", { "callbackStyle": "node" }, arguments); };
    QRScannerOriginal.prototype.useBackCamera = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "useBackCamera", { "callbackStyle": "node" }, arguments); };
    QRScannerOriginal.prototype.useCamera = function (camera) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "useCamera", { "callbackStyle": "node" }, arguments); };
    QRScannerOriginal.prototype.pausePreview = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "pausePreview", {}, arguments); };
    QRScannerOriginal.prototype.resumePreview = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "resumePreview", {}, arguments); };
    QRScannerOriginal.prototype.getStatus = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getStatus", {}, arguments); };
    QRScannerOriginal.prototype.openSettings = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "openSettings", { "sync": true }, arguments); };
    QRScannerOriginal.pluginName = "QRScanner";
    QRScannerOriginal.plugin = "cordova-plugin-qrscanner";
    QRScannerOriginal.pluginRef = "QRScanner";
    QRScannerOriginal.repo = "https://github.com/bitpay/cordova-plugin-qrscanner";
    QRScannerOriginal.platforms = ["Android", "Browser", "iOS", "Windows"];
    return QRScannerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var QRScanner = new QRScannerOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 609 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RegulaDocumentReader; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var RegulaDocumentReaderOriginal = /** @class */ (function (_super) {
    __extends(RegulaDocumentReaderOriginal, _super);
    function RegulaDocumentReaderOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RegulaDocumentReaderOriginal.prototype.initReader = function (license) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "initReader", {}, arguments); };
    RegulaDocumentReaderOriginal.prototype.scanDocument = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "scanDocument", {}, arguments); };
    RegulaDocumentReaderOriginal.pluginName = "Regula Document Reader";
    RegulaDocumentReaderOriginal.plugin = "cordova-plugin-documentreader";
    RegulaDocumentReaderOriginal.pluginRef = "DocumentReader";
    RegulaDocumentReaderOriginal.repo = "https://github.com/regulaforensics/cordova-plugin-documentreader.git";
    RegulaDocumentReaderOriginal.platforms = ["iOS", "Android"];
    RegulaDocumentReaderOriginal.install = "ionic plugin add cordova-plugin-documentreader --variable CAMERA_USAGE_DESCRIPTION=\"To take photo\"";
    return RegulaDocumentReaderOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var RegulaDocumentReader = new RegulaDocumentReaderOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9yZWd1bGEtZG9jdW1lbnQtcmVhZGVyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQTZCOUIsd0NBQWlCOzs7O0lBT3pELHlDQUFVLGFBQUMsT0FBWTtJQVF2QiwyQ0FBWTs7Ozs7OzsrQkE3Q2Q7RUE4QjBDLGlCQUFpQjtTQUE5QyxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAcGFpZFxuICogQGJldGFcbiAqIEBuYW1lIFJlZ3VsYSBEb2N1bWVudCBSZWFkZXJcbiAqIEBkZXNjcmlwdGlvblxuICogUGx1Z2luIGZvciByZWFkaW5nIGFuZCB2YWxpZGF0aW9uIG9mIGlkZW50aWZpY2F0aW9uIGRvY3VtZW50cy5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFJlZ3VsYURvY3VtZW50UmVhZGVyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9yZWd1bGEtZG9jdW1lbnQtcmVhZGVyJztcbiAqXG4gKiBsZXQgbGljZW5zZTsgLy8gcmVhZCByZWd1bGEubGljZW5zZSBmaWxlXG4gKiBSZWd1bGFEb2N1bWVudFJlYWRlci5pbml0UmVhZGVyKGxpY2Vuc2UpOyAvLyBpbml0aWFsaXplIHJlYWRlclxuICogUmVndWxhRG9jdW1lbnRSZWFkZXIuc2NhbkRvY3VtZW50KCkudGhlbigocmVzdWx0KSA9PiB7XG4gKiBcdFx0Ly8gcmVhZCByZXN1bHRcbiAqIH0pXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdSZWd1bGEgRG9jdW1lbnQgUmVhZGVyJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZG9jdW1lbnRyZWFkZXInLFxuICBwbHVnaW5SZWY6ICdEb2N1bWVudFJlYWRlcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vcmVndWxhZm9yZW5zaWNzL2NvcmRvdmEtcGx1Z2luLWRvY3VtZW50cmVhZGVyLmdpdCcsXG4gIHBsYXRmb3JtczogWydpT1MnLCAnQW5kcm9pZCddLFxuICBpbnN0YWxsOiAnaW9uaWMgcGx1Z2luIGFkZCBjb3Jkb3ZhLXBsdWdpbi1kb2N1bWVudHJlYWRlciAtLXZhcmlhYmxlIENBTUVSQV9VU0FHRV9ERVNDUklQVElPTj1cIlRvIHRha2UgcGhvdG9cIicsXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFJlZ3VsYURvY3VtZW50UmVhZGVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBJbml0aWFsaXplIHRoZSBzY2FubmVyXG4gICAqIEBwYXJhbSBsaWNlbnNlIHthbnl9IExpY2Vuc2UgZGF0YVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpbml0UmVhZGVyKGxpY2Vuc2U6IGFueSk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIFJ1biB0aGUgc2Nhbm5lclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHN0cmluZ1tdPn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHJlc3VsdHMgd2FzIGdvdCwgYW5kIGZhaWxzIHdoZW4gbm90XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNjYW5Eb2N1bWVudCgpOiBQcm9taXNlPHN0cmluZ1tdPiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 610 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Rollbar; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var RollbarOriginal = /** @class */ (function (_super) {
    __extends(RollbarOriginal, _super);
    function RollbarOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RollbarOriginal.prototype.init = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "init", {}, arguments); };
    RollbarOriginal.pluginName = "Rollbar";
    RollbarOriginal.plugin = "resgrid-cordova-plugins-rollbar";
    RollbarOriginal.pluginRef = "cordova.plugins.Rollbar";
    RollbarOriginal.repo = "https://github.com/Resgrid/cordova-plugins-rollbar";
    RollbarOriginal.install = "ionic cordova plugin add resgrid-cordova-plugins-rollbar --variable ROLLBAR_ACCESS_TOKEN=\"YOUR_ROLLBAR_ACCEESS_TOKEN\" --variable ROLLBAR_ENVIRONMENT=\"ROLLBAR_ENVIRONMENT\"";
    RollbarOriginal.installVariables = ["ROLLBAR_ACCESS_TOKEN", "ROLLBAR_ENVIRONMENT"];
    RollbarOriginal.platforms = ["Android", "iOS"];
    return RollbarOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Rollbar = new RollbarOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9yb2xsYmFyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQThCM0MsMkJBQWlCOzs7O0lBTzVDLHNCQUFJOzs7Ozs7OztrQkF0Q047RUErQjZCLGlCQUFpQjtTQUFqQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQGJldGFcbiAqIEBuYW1lIFJvbGxiYXJcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gYWRkcyBSb2xsYmFyIEFwcCBtb25pdG9yaW5nIHRvIHlvdXIgYXBwbGljYXRpb25cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFJvbGxiYXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3JvbGxiYXInO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgcm9sbGJhcjogUm9sbGJhcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5yb2xsYmFyLmluaXQoKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdSb2xsYmFyJyxcbiAgcGx1Z2luOiAncmVzZ3JpZC1jb3Jkb3ZhLXBsdWdpbnMtcm9sbGJhcicsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5Sb2xsYmFyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9SZXNncmlkL2NvcmRvdmEtcGx1Z2lucy1yb2xsYmFyJyxcbiAgaW5zdGFsbDogJ2lvbmljIGNvcmRvdmEgcGx1Z2luIGFkZCByZXNncmlkLWNvcmRvdmEtcGx1Z2lucy1yb2xsYmFyIC0tdmFyaWFibGUgUk9MTEJBUl9BQ0NFU1NfVE9LRU49XCJZT1VSX1JPTExCQVJfQUNDRUVTU19UT0tFTlwiIC0tdmFyaWFibGUgUk9MTEJBUl9FTlZJUk9OTUVOVD1cIlJPTExCQVJfRU5WSVJPTk1FTlRcIicsXG4gIGluc3RhbGxWYXJpYWJsZXM6IFsnUk9MTEJBUl9BQ0NFU1NfVE9LRU4nLCAnUk9MTEJBUl9FTlZJUk9OTUVOVCddLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBSb2xsYmFyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIGluaXRpYWxpemVzIHRoZSBtb25pdG9yaW5nIG9mIHlvdXIgYXBwbGljYXRpb25cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIHBsdWdpbiBzdWNjZXNzZnVsbHkgaW5pdGlhbGl6ZXNcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaW5pdCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 611 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SafariViewController; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var SafariViewControllerOriginal = /** @class */ (function (_super) {
    __extends(SafariViewControllerOriginal, _super);
    function SafariViewControllerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SafariViewControllerOriginal.prototype.isAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAvailable", {}, arguments); };
    SafariViewControllerOriginal.prototype.show = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "successIndex": 1, "errorIndex": 2, "observable": true }, arguments); };
    SafariViewControllerOriginal.prototype.hide = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hide", {}, arguments); };
    SafariViewControllerOriginal.prototype.connectToService = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "connectToService", {}, arguments); };
    SafariViewControllerOriginal.prototype.warmUp = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "warmUp", {}, arguments); };
    SafariViewControllerOriginal.prototype.mayLaunchUrl = function (url) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "mayLaunchUrl", {}, arguments); };
    SafariViewControllerOriginal.pluginName = "SafariViewController";
    SafariViewControllerOriginal.plugin = "cordova-plugin-safariviewcontroller";
    SafariViewControllerOriginal.pluginRef = "SafariViewController";
    SafariViewControllerOriginal.repo = "https://github.com/EddyVerbruggen/cordova-plugin-safariviewcontroller";
    SafariViewControllerOriginal.platforms = ["Android", "iOS"];
    return SafariViewControllerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var SafariViewController = new SafariViewControllerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zYWZhcmktdmlldy1jb250cm9sbGVyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7SUErREgsd0NBQWlCOzs7O0lBT3pELDBDQUFXO0lBY1gsbUNBQUksYUFBQyxPQUFxQztJQVExQyxtQ0FBSTtJQVNKLCtDQUFnQjtJQVNoQixxQ0FBTTtJQVVOLDJDQUFZLGFBQUMsR0FBVzs7Ozs7OytCQTFIMUI7RUFpRTBDLGlCQUFpQjtTQUE5QyxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL09ic2VydmFibGUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNhZmFyaVZpZXdDb250cm9sbGVyT3B0aW9ucyB7XG4gIGFuaW1hdGVkPzogYm9vbGVhbjtcbiAgYmFyQ29sb3I/OiBzdHJpbmc7XG4gIGNvbnRyb2xUaW50Q29sb3I/OiBzdHJpbmc7XG4gIGVudGVyUmVhZGVyTW9kZUlmQXZhaWxhYmxlPzogYm9vbGVhbjtcbiAgaGlkZGVuPzogYm9vbGVhbjtcbiAgc2hvd0RlZmF1bHRTaGFyZU1lbnVJdGVtPzogYm9vbGVhbjtcbiAgdGludENvbG9yPzogc3RyaW5nO1xuICB0b29sYmFyQ29sb3I/OiBzdHJpbmc7XG4gIHRyYW5zaXRpb24/OiBzdHJpbmc7XG4gIHVybD86IHN0cmluZztcbn1cblxuLyoqXG4gKiBAbmFtZSBTYWZhcmkgVmlldyBDb250cm9sbGVyXG4gKiBAZGVzY3JpcHRpb25cbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgU2FmYXJpVmlld0NvbnRyb2xsZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3NhZmFyaS12aWV3LWNvbnRyb2xsZXInO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgc2FmYXJpVmlld0NvbnRyb2xsZXI6IFNhZmFyaVZpZXdDb250cm9sbGVyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLnNhZmFyaVZpZXdDb250cm9sbGVyLmlzQXZhaWxhYmxlKClcbiAqICAgLnRoZW4oKGF2YWlsYWJsZTogYm9vbGVhbikgPT4ge1xuICogICAgICAgaWYgKGF2YWlsYWJsZSkge1xuICpcbiAqICAgICAgICAgdGhpcy5zYWZhcmlWaWV3Q29udHJvbGxlci5zaG93KHtcbiAqICAgICAgICAgICB1cmw6ICdodHRwOi8vaW9uaWMuaW8nLFxuICogICAgICAgICAgIGhpZGRlbjogZmFsc2UsXG4gKiAgICAgICAgICAgYW5pbWF0ZWQ6IGZhbHNlLFxuICogICAgICAgICAgIHRyYW5zaXRpb246ICdjdXJsJyxcbiAqICAgICAgICAgICBlbnRlclJlYWRlck1vZGVJZkF2YWlsYWJsZTogdHJ1ZSxcbiAqICAgICAgICAgICB0aW50Q29sb3I6ICcjZmYwMDAwJ1xuICogICAgICAgICB9KVxuICogICAgICAgICAuc3Vic2NyaWJlKChyZXN1bHQ6IGFueSkgPT4ge1xuICogICAgICAgICAgICAgaWYocmVzdWx0LmV2ZW50ID09PSAnb3BlbmVkJykgY29uc29sZS5sb2coJ09wZW5lZCcpO1xuICogICAgICAgICAgICAgZWxzZSBpZihyZXN1bHQuZXZlbnQgPT09ICdsb2FkZWQnKSBjb25zb2xlLmxvZygnTG9hZGVkJyk7XG4gKiAgICAgICAgICAgICBlbHNlIGlmKHJlc3VsdC5ldmVudCA9PT0gJ2Nsb3NlZCcpIGNvbnNvbGUubG9nKCdDbG9zZWQnKTtcbiAqICAgICAgICAgICB9LFxuICogICAgICAgICAgIChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKVxuICogICAgICAgICApO1xuICpcbiAqICAgICAgIH0gZWxzZSB7XG4gKiAgICAgICAgIC8vIHVzZSBmYWxsYmFjayBicm93c2VyLCBleGFtcGxlIEluQXBwQnJvd3NlclxuICogICAgICAgfVxuICogICAgIH1cbiAqICAgKTtcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIFNhZmFyaVZpZXdDb250cm9sbGVyT3B0aW9uc1xuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1NhZmFyaVZpZXdDb250cm9sbGVyJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tc2FmYXJpdmlld2NvbnRyb2xsZXInLFxuICBwbHVnaW5SZWY6ICdTYWZhcmlWaWV3Q29udHJvbGxlcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vRWRkeVZlcmJydWdnZW4vY29yZG92YS1wbHVnaW4tc2FmYXJpdmlld2NvbnRyb2xsZXInLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTYWZhcmlWaWV3Q29udHJvbGxlciBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogQ2hlY2tzIGlmIFNhZmFyaVZpZXdDb250cm9sbGVyIGlzIGF2YWlsYWJsZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaXNBdmFpbGFibGUoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNob3dzIFNhZmFyaSBWaWV3IENvbnRyb2xsZXJcbiAgICogQHBhcmFtIG9wdGlvbnMge1NhZmFyaVZpZXdDb250cm9sbGVyT3B0aW9uc30gb3B0aW9uYWxcbiAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzdWNjZXNzSW5kZXg6IDEsXG4gICAgZXJyb3JJbmRleDogMixcbiAgICBvYnNlcnZhYmxlOiB0cnVlXG4gIH0pXG4gIHNob3cob3B0aW9ucz86IFNhZmFyaVZpZXdDb250cm9sbGVyT3B0aW9ucyk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEhpZGVzIFNhZmFyaSBWaWV3IENvbnRyb2xsZXJcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaGlkZSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmllcyB0byBjb25uZWN0IHRvIHRoZSAgQ2hyb21lJ3MgY3VzdG9tIHRhYnMgc2VydmljZS4geW91IG11c3QgY2FsbCB0aGlzIG1ldGhvZCBiZWZvcmUgY2FsbGluZyBhbnkgb2YgdGhlIG90aGVyIG1ldGhvZHMgbGlzdGVkIGJlbG93LlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBjb25uZWN0VG9TZXJ2aWNlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENhbGwgdGhpcyBtZXRob2Qgd2hlbmV2ZXIgdGhlcmUncyBhIGNoYW5jZSB0aGUgdXNlciB3aWxsIG9wZW4gYW4gZXh0ZXJuYWwgdXJsLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICB3YXJtVXAoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRm9yIGV2ZW4gYmV0dGVyIHBlcmZvcm1hbmNlIG9wdGltaXphdGlvbiwgY2FsbCB0aGlzIG1ldGhvZHMgaWYgdGhlcmUncyBtb3JlIHRoYW4gYSA1MCUgY2hhbmNlIHRoZSB1c2VyIHdpbGwgb3BlbiBhIGNlcnRhaW4gVVJMLlxuICAgKiBAcGFyYW0gdXJse3N0cmluZ31cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgbWF5TGF1bmNoVXJsKHVybDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 612 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ScreenOrientation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var ScreenOrientationOriginal = /** @class */ (function (_super) {
    __extends(ScreenOrientationOriginal, _super);
    function ScreenOrientationOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Convenience enum for possible orientations
         */
        _this.ORIENTATIONS = {
            PORTRAIT_PRIMARY: 'portrait-primary',
            PORTRAIT_SECONDARY: 'portrait-secondary',
            LANDSCAPE_PRIMARY: 'landscape-primary',
            LANDSCAPE_SECONDARY: 'landscape-secondary',
            PORTRAIT: 'portrait',
            LANDSCAPE: 'landscape',
            ANY: 'any'
        };
        return _this;
    }
    ScreenOrientationOriginal.prototype.onChange = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onChange", { "eventObservable": true, "event": "orientationchange" }, arguments); };
    ScreenOrientationOriginal.prototype.lock = function (orientation) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "lock", { "otherPromise": true }, arguments); };
    ScreenOrientationOriginal.prototype.unlock = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unlock", { "sync": true }, arguments); };
    Object.defineProperty(ScreenOrientationOriginal.prototype, "type", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "type"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "type", value); },
        enumerable: true,
        configurable: true
    });
    ScreenOrientationOriginal.pluginName = "ScreenOrientation";
    ScreenOrientationOriginal.plugin = "cordova-plugin-screen-orientation";
    ScreenOrientationOriginal.pluginRef = "screen.orientation";
    ScreenOrientationOriginal.repo = "https://github.com/apache/cordova-plugin-screen-orientation";
    ScreenOrientationOriginal.platforms = ["Android", "BlackBerry 10", "iOS", "Windows"];
    return ScreenOrientationOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var ScreenOrientation = new ScreenOrientationOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zY3JlZW4tb3JpZW50YXRpb24vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sa0ZBQXVELE1BQU0sb0JBQW9CLENBQUM7QUFDekYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQTBETixxQ0FBaUI7OztRQUV0RDs7V0FFRztRQUNILGtCQUFZLEdBQUc7WUFDYixnQkFBZ0IsRUFBRSxrQkFBa0I7WUFDcEMsa0JBQWtCLEVBQUUsb0JBQW9CO1lBQ3hDLGlCQUFpQixFQUFFLG1CQUFtQjtZQUN0QyxtQkFBbUIsRUFBRSxxQkFBcUI7WUFDMUMsUUFBUSxFQUFFLFVBQVU7WUFDcEIsU0FBUyxFQUFFLFdBQVc7WUFDdEIsR0FBRyxFQUFFLEtBQUs7U0FDWCxDQUFDOzs7SUFlRixvQ0FBUTtJQVdSLGdDQUFJLGFBQUMsV0FBbUI7SUFReEIsa0NBQU07MEJBN0JOLG1DQUFJOzs7Ozs7Ozs7Ozs0QkE5RU47RUE0RHVDLGlCQUFpQjtTQUEzQyxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBDb3Jkb3ZhUHJvcGVydHksIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5cbi8qKlxuICogQG5hbWUgU2NyZWVuIE9yaWVudGF0aW9uXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvcmRvdmEgcGx1Z2luIHRvIHNldC9sb2NrIHRoZSBzY3JlZW4gb3JpZW50YXRpb24gaW4gYSBjb21tb24gd2F5LlxuICpcbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBgY29yZG92YS1wbHVnaW4tc2NyZWVuLW9yaWVudGF0aW9uYC4gRm9yIG1vcmUgaW5mbywgcGxlYXNlIHNlZSB0aGUgW1NjcmVlbiBPcmllbnRhdGlvbiBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9jb3Jkb3ZhLXBsdWdpbi1zY3JlZW4tb3JpZW50YXRpb24pLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgU2NyZWVuT3JpZW50YXRpb24gfSBmcm9tICdAaW9uaWMtbmF0aXZlL3NjcmVlbi1vcmllbnRhdGlvbic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzY3JlZW5PcmllbnRhdGlvbjogU2NyZWVuT3JpZW50YXRpb24pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiAvLyBnZXQgY3VycmVudFxuICogY29uc29sZS5sb2codGhpcy5zY3JlZW5PcmllbnRhdGlvbi50eXBlKTsgLy8gbG9ncyB0aGUgY3VycmVudCBvcmllbnRhdGlvbiwgZXhhbXBsZTogJ2xhbmRzY2FwZSdcbiAqXG4gKiAvLyBzZXQgdG8gbGFuZHNjYXBlXG4gKiB0aGlzLnNjcmVlbk9yaWVudGF0aW9uLmxvY2sodGhpcy5zY3JlZW5PcmllbnRhdGlvbi5PUklFTlRBVElPTlMuTEFORFNDQVBFKTtcbiAqXG4gKiAvLyBhbGxvdyB1c2VyIHJvdGF0ZVxuICogdGhpcy5zY3JlZW5PcmllbnRhdGlvbi51bmxvY2soKTtcbiAqXG4gKiAvLyBkZXRlY3Qgb3JpZW50YXRpb24gY2hhbmdlc1xuICogdGhpcy5zY3JlZW5PcmllbnRhdGlvbi5vbkNoYW5nZSgpLnN1YnNjcmliZShcbiAqICAgICgpID0+IHtcbiAqICAgICAgICBjb25zb2xlLmxvZyhcIk9yaWVudGF0aW9uIENoYW5nZWRcIik7XG4gKiAgICB9XG4gKiApO1xuICpcbiAqIGBgYFxuICpcbiAqIEBhZHZhbmNlZFxuICpcbiAqIEFjY2VwdGVkIG9yaWVudGF0aW9uIHZhbHVlczpcbiAqXG4gKiB8IFZhbHVlICAgICAgICAgICAgICAgICAgICAgICAgIHwgRGVzY3JpcHRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18XG4gKiB8IHBvcnRyYWl0LXByaW1hcnkgICAgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGluIHRoZSBwcmltYXJ5IHBvcnRyYWl0IG1vZGUuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IHBvcnRyYWl0LXNlY29uZGFyeSAgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGluIHRoZSBzZWNvbmRhcnkgcG9ydHJhaXQgbW9kZS4gICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGxhbmRzY2FwZS1wcmltYXJ5ICAgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGluIHRoZSBwcmltYXJ5IGxhbmRzY2FwZSBtb2RlLiAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGxhbmRzY2FwZS1zZWNvbmRhcnkgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGluIHRoZSBzZWNvbmRhcnkgbGFuZHNjYXBlIG1vZGUuICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IHBvcnRyYWl0ICAgICAgICAgICAgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGVpdGhlciBwb3J0cmFpdC1wcmltYXJ5IG9yIHBvcnRyYWl0LXNlY29uZGFyeSAoc2Vuc29yKS4gICB8XG4gKiB8IGxhbmRzY2FwZSAgICAgICAgICAgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGVpdGhlciBsYW5kc2NhcGUtcHJpbWFyeSBvciBsYW5kc2NhcGUtc2Vjb25kYXJ5IChzZW5zb3IpLiB8XG4gKlxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1NjcmVlbk9yaWVudGF0aW9uJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tc2NyZWVuLW9yaWVudGF0aW9uJyxcbiAgcGx1Z2luUmVmOiAnc2NyZWVuLm9yaWVudGF0aW9uJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tc2NyZWVuLW9yaWVudGF0aW9uJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnQmxhY2tCZXJyeSAxMCcsICdpT1MnLCAnV2luZG93cyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNjcmVlbk9yaWVudGF0aW9uIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBlbnVtIGZvciBwb3NzaWJsZSBvcmllbnRhdGlvbnNcbiAgICovXG4gIE9SSUVOVEFUSU9OUyA9IHtcbiAgICBQT1JUUkFJVF9QUklNQVJZOiAncG9ydHJhaXQtcHJpbWFyeScsXG4gICAgUE9SVFJBSVRfU0VDT05EQVJZOiAncG9ydHJhaXQtc2Vjb25kYXJ5JyxcbiAgICBMQU5EU0NBUEVfUFJJTUFSWTogJ2xhbmRzY2FwZS1wcmltYXJ5JyxcbiAgICBMQU5EU0NBUEVfU0VDT05EQVJZOiAnbGFuZHNjYXBlLXNlY29uZGFyeScsXG4gICAgUE9SVFJBSVQ6ICdwb3J0cmFpdCcsXG4gICAgTEFORFNDQVBFOiAnbGFuZHNjYXBlJyxcbiAgICBBTlk6ICdhbnknXG4gIH07XG4gIC8qKlxuICAgKiBHZXQgdGhlIGN1cnJlbnQgb3JpZW50YXRpb24gb2YgdGhlIGRldmljZS5cbiAgICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICB0eXBlOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIExpc3RlbiB0byBvcmllbnRhdGlvbiBjaGFuZ2UgZXZlbnRcbiAgICogQHJldHVybiB7T2JzZXJ2YWJsZTx2b2lkPn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXG4gICAgZXZlbnQ6ICdvcmllbnRhdGlvbmNoYW5nZSdcbiAgfSlcbiAgb25DaGFuZ2UoKTogT2JzZXJ2YWJsZTx2b2lkPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIExvY2sgdGhlIG9yaWVudGF0aW9uIHRvIHRoZSBwYXNzZWQgdmFsdWUuXG4gICAqIFNlZSBiZWxvdyBmb3IgYWNjZXB0ZWQgdmFsdWVzXG4gICAqIEBwYXJhbSBvcmllbnRhdGlvbiB7c3RyaW5nfSBUaGUgb3JpZW50YXRpb24gd2hpY2ggc2hvdWxkIGJlIGxvY2tlZC4gQWNjZXB0ZWQgdmFsdWVzIHNlZSB0YWJsZSBhYm92ZS5cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoeyBvdGhlclByb21pc2U6IHRydWUgfSlcbiAgbG9jayhvcmllbnRhdGlvbjogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVW5sb2NrIGFuZCBhbGxvdyBhbGwgb3JpZW50YXRpb25zLlxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIHVubG9jaygpOiB2b2lkIHtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 613 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Screenshot; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var ScreenshotOriginal = /** @class */ (function (_super) {
    __extends(ScreenshotOriginal, _super);
    function ScreenshotOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *  Takes screenshot and saves the image
     *
     * @param format {string} Format can take the value of either 'jpg' or 'png'
     * On ios, only 'jpg' format is supported
     * @param quality {number}  Determines the quality of the screenshot.
     *        Default quality is set to 100.
     * @param filename {string} Name of the file as stored on the storage
     * @returns {Promise<any>}
     */
    ScreenshotOriginal.prototype.save = function (format, quality, filename) {
        return new Promise(function (resolve, reject) {
            navigator.screenshot.save(function (error, result) {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(result);
                }
            }, format, quality, filename);
        });
    };
    /**
     *  Takes screenshot and returns the image as an URI
     *
     * @param quality {number} Determines the quality of the screenshot.
     *        Default quality is set to 100.
     * @returns {Promise<any>}
     */
    ScreenshotOriginal.prototype.URI = function (quality) {
        return new Promise(function (resolve, reject) {
            navigator.screenshot.URI(function (error, result) {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(result);
                }
            }, quality);
        });
    };
    ScreenshotOriginal.pluginName = "Screenshot";
    ScreenshotOriginal.plugin = "com.darktalker.cordova.screenshot";
    ScreenshotOriginal.pluginRef = "navigator.screenshot";
    ScreenshotOriginal.repo = "https://github.com/gitawego/cordova-screenshot";
    ScreenshotOriginal.platforms = ["Android", "iOS", "macOS"];
    return ScreenshotOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Screenshot = new ScreenshotOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zY3JlZW5zaG90L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLGlDQUE2QixNQUFNLG9CQUFvQixDQUFDOztJQThCL0IsOEJBQWlCOzs7O0lBRS9DOzs7Ozs7Ozs7T0FTRztJQUNILHlCQUFJLEdBQUosVUFBSyxNQUFlLEVBQUUsT0FBZ0IsRUFBRSxRQUFpQjtRQUN2RCxNQUFNLENBQUMsSUFBSSxPQUFPLENBQ2hCLFVBQUMsT0FBTyxFQUFFLE1BQU07WUFDZCxTQUFTLENBQUMsVUFBVSxDQUFDLElBQUksQ0FDdkIsVUFBQyxLQUFVLEVBQUUsTUFBVztnQkFDdEIsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztvQkFDVixNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ2hCLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ04sT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNsQixDQUFDO1lBQ0gsQ0FBQyxFQUNELE1BQU0sRUFDTixPQUFPLEVBQ1AsUUFBUSxDQUNULENBQUM7UUFDSixDQUFDLENBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSCx3QkFBRyxHQUFILFVBQUksT0FBZ0I7UUFDbEIsTUFBTSxDQUFDLElBQUksT0FBTyxDQUNoQixVQUFDLE9BQU8sRUFBRSxNQUFNO1lBQ2QsU0FBUyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQ3RCLFVBQUMsS0FBVSxFQUFFLE1BQVc7Z0JBQ3RCLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7b0JBQ1YsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNoQixDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNOLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDbEIsQ0FBQztZQUNILENBQUMsRUFDRCxPQUFPLENBQ1IsQ0FBQztRQUNKLENBQUMsQ0FDRixDQUFDO0lBQ0osQ0FBQzs7Ozs7O3FCQXBGSDtFQStCZ0MsaUJBQWlCO1NBQXBDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZGVjbGFyZSBjb25zdCBuYXZpZ2F0b3I6IGFueTtcblxuLyoqXG4gKiBAbmFtZSBTY3JlZW5zaG90XG4gKiBAZGVzY3JpcHRpb24gQ2FwdHVyZXMgYSBzY3JlZW4gc2hvdFxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBTY3JlZW5zaG90IH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9zY3JlZW5zaG90JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHNjcmVlbnNob3Q6IFNjcmVlbnNob3QpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIC8vIFRha2UgYSBzY3JlZW5zaG90IGFuZCBzYXZlIHRvIGZpbGVcbiAqIHRoaXMuc2NyZWVuc2hvdC5zYXZlKCdqcGcnLCA4MCwgJ215c2NyZWVuc2hvdC5qcGcnKS50aGVuKG9uU3VjY2Vzcywgb25FcnJvcik7XG4gKlxuICogLy8gVGFrZSBhIHNjcmVlbnNob3QgYW5kIGdldCB0ZW1wb3JhcnkgZmlsZSBVUklcbiAqIHRoaXMuc2NyZWVuc2hvdC5VUkkoODApLnRoZW4ob25TdWNjZXNzLCBvbkVycm9yKTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1NjcmVlbnNob3QnLFxuICBwbHVnaW46ICdjb20uZGFya3RhbGtlci5jb3Jkb3ZhLnNjcmVlbnNob3QnLFxuICBwbHVnaW5SZWY6ICduYXZpZ2F0b3Iuc2NyZWVuc2hvdCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZ2l0YXdlZ28vY29yZG92YS1zY3JlZW5zaG90JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ21hY09TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU2NyZWVuc2hvdCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogIFRha2VzIHNjcmVlbnNob3QgYW5kIHNhdmVzIHRoZSBpbWFnZVxuICAgKlxuICAgKiBAcGFyYW0gZm9ybWF0IHtzdHJpbmd9IEZvcm1hdCBjYW4gdGFrZSB0aGUgdmFsdWUgb2YgZWl0aGVyICdqcGcnIG9yICdwbmcnXG4gICAqIE9uIGlvcywgb25seSAnanBnJyBmb3JtYXQgaXMgc3VwcG9ydGVkXG4gICAqIEBwYXJhbSBxdWFsaXR5IHtudW1iZXJ9ICBEZXRlcm1pbmVzIHRoZSBxdWFsaXR5IG9mIHRoZSBzY3JlZW5zaG90LlxuICAgKiAgICAgICAgRGVmYXVsdCBxdWFsaXR5IGlzIHNldCB0byAxMDAuXG4gICAqIEBwYXJhbSBmaWxlbmFtZSB7c3RyaW5nfSBOYW1lIG9mIHRoZSBmaWxlIGFzIHN0b3JlZCBvbiB0aGUgc3RvcmFnZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgc2F2ZShmb3JtYXQ/OiBzdHJpbmcsIHF1YWxpdHk/OiBudW1iZXIsIGZpbGVuYW1lPzogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2U8YW55PihcbiAgICAgIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgbmF2aWdhdG9yLnNjcmVlbnNob3Quc2F2ZShcbiAgICAgICAgICAoZXJyb3I6IGFueSwgcmVzdWx0OiBhbnkpID0+IHtcbiAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZm9ybWF0LFxuICAgICAgICAgIHF1YWxpdHksXG4gICAgICAgICAgZmlsZW5hbWVcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqICBUYWtlcyBzY3JlZW5zaG90IGFuZCByZXR1cm5zIHRoZSBpbWFnZSBhcyBhbiBVUklcbiAgICpcbiAgICogQHBhcmFtIHF1YWxpdHkge251bWJlcn0gRGV0ZXJtaW5lcyB0aGUgcXVhbGl0eSBvZiB0aGUgc2NyZWVuc2hvdC5cbiAgICogICAgICAgIERlZmF1bHQgcXVhbGl0eSBpcyBzZXQgdG8gMTAwLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgVVJJKHF1YWxpdHk/OiBudW1iZXIpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZTxhbnk+KFxuICAgICAgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBuYXZpZ2F0b3Iuc2NyZWVuc2hvdC5VUkkoXG4gICAgICAgICAgKGVycm9yOiBhbnksIHJlc3VsdDogYW55KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHF1YWxpdHlcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICApO1xuICB9XG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 614 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export SecureStorageObject */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SecureStorage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var SecureStorageObject = /** @class */ (function () {
    function SecureStorageObject(_objectInstance) {
        this._objectInstance = _objectInstance;
    }
    SecureStorageObject.prototype.get = function (key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "get", { "callbackOrder": "reverse" }, arguments); };
    SecureStorageObject.prototype.set = function (key, value) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "set", { "callbackOrder": "reverse" }, arguments); };
    SecureStorageObject.prototype.remove = function (key) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "remove", { "callbackOrder": "reverse" }, arguments); };
    SecureStorageObject.prototype.keys = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "keys", { "callbackOrder": "reverse" }, arguments); };
    SecureStorageObject.prototype.clear = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "clear", { "callbackOrder": "reverse" }, arguments); };
    SecureStorageObject.prototype.secureDevice = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "secureDevice", {}, arguments); };
    return SecureStorageObject;
}());

var SecureStorageOriginal = /** @class */ (function (_super) {
    __extends(SecureStorageOriginal, _super);
    function SecureStorageOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SecureStorageOriginal.prototype.create = function (store) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (res, rej) {
                var instance = new (SecureStorageOriginal.getPlugin())(function () { return res(new SecureStorageObject(instance)); }, rej, store);
            });
        }
    }(); };
    SecureStorageOriginal.pluginName = "SecureStorage";
    SecureStorageOriginal.plugin = "cordova-plugin-secure-storage";
    SecureStorageOriginal.pluginRef = "cordova.plugins.SecureStorage";
    SecureStorageOriginal.repo = "https://github.com/Crypho/cordova-plugin-secure-storage";
    SecureStorageOriginal.platforms = ["Android", "Browser", "iOS", "Windows"];
    return SecureStorageOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var SecureStorage = new SecureStorageOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zZWN1cmUtc3RvcmFnZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTyxxRUFBNEQsTUFBTSxvQkFBb0IsQ0FBQzs7SUFPNUYsNkJBQW9CLGVBQW9CO1FBQXBCLG9CQUFlLEdBQWYsZUFBZSxDQUFLO0lBQ3hDLENBQUM7SUFVRCxpQ0FBRyxhQUFDLEdBQVc7SUFhZixpQ0FBRyxhQUFDLEdBQVcsRUFBRSxLQUFhO0lBWTlCLG9DQUFNLGFBQUMsR0FBVztJQVdsQixrQ0FBSTtJQVdKLG1DQUFLO0lBU0wsMENBQVk7OEJBM0VkOzs7O0lBdUltQyxpQ0FBaUI7Ozs7SUFRbEQsOEJBQU0sYUFBQyxLQUFhOzhDQUFnQyxDQUFDO1lBQ25ELE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxVQUFDLEdBQWEsRUFBRSxHQUFhO2dCQUM5QyxJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsY0FBTSxPQUFBLEdBQUcsQ0FBQyxJQUFJLG1CQUFtQixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQXRDLENBQXNDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQzdHLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQzs7Ozs7Ozt3QkFuSkg7RUF1SW1DLGlCQUFpQjtTQUF2QyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YUNoZWNrLCBDb3Jkb3ZhSW5zdGFuY2UsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIFNlY3VyZVN0b3JhZ2VPYmplY3Qge1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX29iamVjdEluc3RhbmNlOiBhbnkpIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIGEgc3RvcmVkIGl0ZW1cbiAgICogQHBhcmFtIGtleSB7c3RyaW5nfVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fVxuICAgKi9cbiAgQENvcmRvdmFJbnN0YW5jZSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnXG4gIH0pXG4gIGdldChrZXk6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3JlcyBhIHZhbHVlXG4gICAqIEBwYXJhbSBrZXkge3N0cmluZ31cbiAgICogQHBhcmFtIHZhbHVlIHtzdHJpbmd9XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YUluc3RhbmNlKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAgc2V0KGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyBhIHNpbmdsZSBzdG9yZWQgaXRlbVxuICAgKiBAcGFyYW0ga2V5IHtzdHJpbmd9XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZz59IHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUga2V5IHRoYXQgd2FzIHJlbW92ZWRcbiAgICovXG4gIEBDb3Jkb3ZhSW5zdGFuY2Uoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJ1xuICB9KVxuICByZW1vdmUoa2V5OiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgYWxsIHJlZmVyZW5jZXMgZnJvbSB0aGUgc3RvcmFnZS5cbiAgICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nW10+fSByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYXJyYXkgb2Yga2V5cyBzdG9yYWdlXG4gICAqL1xuICBAQ29yZG92YUluc3RhbmNlKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAga2V5cygpOiBQcm9taXNlPHN0cmluZ1tdPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENsZWFyIGFsbCByZWZlcmVuY2VzIGZyb20gdGhlIHN0b3JhZ2UuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YUluc3RhbmNlKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAgY2xlYXIoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQnJpbmdzIHVwIHRoZSBzY3JlZW4tbG9jayBzZXR0aW5nc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmFJbnN0YW5jZSgpXG4gIHNlY3VyZURldmljZSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG5cbi8qKlxuICogQG5hbWUgU2VjdXJlIFN0b3JhZ2VcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gZ2V0cywgc2V0cyBhbmQgcmVtb3ZlcyBrZXksdmFsdWUgcGFpcnMgZnJvbSBhIGRldmljZSdzIHNlY3VyZSBzdG9yYWdlLlxuICpcbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBgY29yZG92YS1wbHVnaW4tc2VjdXJlLXN0b3JhZ2VgLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbQ29yZG92YSBTZWN1cmUgU3RvcmFnZSBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vQ3J5cGhvL2NvcmRvdmEtcGx1Z2luLXNlY3VyZS1zdG9yYWdlKS5cbiAqXG4gKiBUaGUgYnJvd3NlciBwbGF0Zm9ybSBpcyBzdXBwb3J0ZWQgYXMgYSBtb2NrIG9ubHkuIEtleS92YWx1ZXMgYXJlIHN0b3JlZCB1bmVuY3J5cHRlZCBpbiBsb2NhbFN0b3JhZ2UuXG4gKlxuICogQHVzYWdlXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgU2VjdXJlU3RvcmFnZSwgU2VjdXJlU3RvcmFnZU9iamVjdCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc2VjdXJlLXN0b3JhZ2UnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgc2VjdXJlU3RvcmFnZTogU2VjdXJlU3RvcmFnZSkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5zZWN1cmVTdG9yYWdlLmNyZWF0ZSgnbXlfc3RvcmVfbmFtZScpXG4gKiAgIC50aGVuKChzdG9yYWdlOiBTZWN1cmVTdG9yYWdlT2JqZWN0KSA9PiB7XG4gKlxuICogICAgICBzdG9yYWdlLmdldCgna2V5JylcbiAqICAgICAgICAudGhlbihcbiAqICAgICAgICAgIGRhdGEgPT4gY29uc29sZS5sb2coZGF0YSksXG4gKiAgICAgICAgICBlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcilcbiAqICAgICAgKTtcbiAqXG4gKiAgICAgIHN0b3JhZ2Uuc2V0KCdrZXknLCAndmFsdWUnKVxuICogICAgICAgIC50aGVuKFxuICogICAgICAgICBkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpLFxuICogICAgICAgICAgZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpXG4gKiAgICAgICk7XG4gKlxuICogICAgICBzdG9yYWdlLnJlbW92ZSgna2V5JylcbiAqICAgICAgLnRoZW4oXG4gKiAgICAgICAgICBkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpLFxuICogICAgICAgICAgZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpXG4gKiAgICAgICk7XG4gKlxuICogICB9KTtcbiAqXG4gKlxuICogYGBgXG4gKiBAY2xhc3Nlc1xuICogU2VjdXJlU3RvcmFnZU9iamVjdFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1NlY3VyZVN0b3JhZ2UnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1zZWN1cmUtc3RvcmFnZScsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5TZWN1cmVTdG9yYWdlJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9DcnlwaG8vY29yZG92YS1wbHVnaW4tc2VjdXJlLXN0b3JhZ2UnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdCcm93c2VyJywgJ2lPUycsICdXaW5kb3dzJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU2VjdXJlU3RvcmFnZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogQ3JlYXRlcyBhIG5hbWVzcGFjZWQgc3RvcmFnZS5cbiAgICogQHBhcmFtIHN0b3JlIHtzdHJpbmd9XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPFNlY3VyZVN0b3JhZ2VPYmplY3Q+fVxuICAgKi9cbiAgQENvcmRvdmFDaGVjaygpXG4gIGNyZWF0ZShzdG9yZTogc3RyaW5nKTogUHJvbWlzZTxTZWN1cmVTdG9yYWdlT2JqZWN0PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXM6IEZ1bmN0aW9uLCByZWo6IEZ1bmN0aW9uKSA9PiB7XG4gICAgICBjb25zdCBpbnN0YW5jZSA9IG5ldyAoU2VjdXJlU3RvcmFnZS5nZXRQbHVnaW4oKSkoKCkgPT4gcmVzKG5ldyBTZWN1cmVTdG9yYWdlT2JqZWN0KGluc3RhbmNlKSksIHJlaiwgc3RvcmUpO1xuICAgIH0pO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 615 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Serial; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var SerialOriginal = /** @class */ (function (_super) {
    __extends(SerialOriginal, _super);
    function SerialOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SerialOriginal.prototype.requestPermission = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestPermission", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    SerialOriginal.prototype.open = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "open", {}, arguments); };
    SerialOriginal.prototype.write = function (data) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "write", {}, arguments); };
    SerialOriginal.prototype.writeHex = function (data) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "writeHex", {}, arguments); };
    SerialOriginal.prototype.read = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "read", {}, arguments); };
    SerialOriginal.prototype.registerReadCallback = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerReadCallback", { "observable": true }, arguments); };
    SerialOriginal.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "close", {}, arguments); };
    SerialOriginal.pluginName = "Serial";
    SerialOriginal.plugin = "cordovarduino";
    SerialOriginal.pluginRef = "serial";
    SerialOriginal.repo = "https://github.com/xseignard/cordovarduino";
    SerialOriginal.platforms = ["Android", "Ubuntu"];
    return SerialOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Serial = new SerialOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zZXJpYWwvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQXlEakIsMEJBQWlCOzs7O0lBWTNDLGtDQUFpQixhQUFDLE9BQWlDO0lBV25ELHFCQUFJLGFBQUMsT0FBMEI7SUFXL0Isc0JBQUssYUFBQyxJQUFTO0lBV2YseUJBQVEsYUFBQyxJQUFTO0lBVWxCLHFCQUFJO0lBWUoscUNBQW9CO0lBVXBCLHNCQUFLOzs7Ozs7aUJBeElQO0VBMkQ0QixpQkFBaUI7U0FBaEMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5cbmRlY2xhcmUgdmFyIHNlcmlhbDogYW55O1xuXG5leHBvcnQgaW50ZXJmYWNlIFNlcmlhbFBlcm1pc3Npb25PcHRpb25zIHtcbiAgdmlkOiBzdHJpbmc7XG4gIHBpZDogc3RyaW5nO1xuICBkcml2ZXI6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTZXJpYWxPcGVuT3B0aW9ucyB7XG4gIGJhdWRSYXRlOiBudW1iZXI7XG4gIGRhdGFCaXRzOiBudW1iZXI7XG4gIHN0b3BCaXRzOiBudW1iZXI7XG4gIHBhcml0eTogbnVtYmVyO1xuICBkdHI6IGJvb2xlYW47XG4gIHJ0czogYm9vbGVhbjtcbiAgc2xlZXBPblBhdXNlOiBib29sZWFuO1xufVxuXG4vKipcbiAqIEBuYW1lIFNlcmlhbFxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiBwcm92aWRlcyBmdW5jdGlvbnMgZm9yIHdvcmtpbmcgd2l0aCBTZXJpYWwgY29ubmVjdGlvbnNcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFNlcmlhbCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc2VyaWFsJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHNlcmlhbDogU2VyaWFsKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLnNlcmlhbC5yZXF1ZXN0UGVybWlzc2lvbigpLnRoZW4oKCkgPT4ge1xuICogICB0aGlzLnNlcmlhbC5vcGVuKHtcbiAqICAgICBiYXVkUmF0ZTogOTgwMCxcbiAqICAgICBkYXRhQml0czogNCxcbiAqICAgICBzdG9wQml0czogMSxcbiAqICAgICBwYXJpdHk6IDAsXG4gKiAgICAgZHRyOiB0cnVlLFxuICogICAgIHJ0czogdHJ1ZSxcbiAqICAgICBzbGVlcE9uUGF1c2U6IGZhbHNlXG4gKiAgIH0pLnRoZW4oKCkgPT4ge1xuICogICAgIGNvbnNvbGUubG9nKCdTZXJpYWwgY29ubmVjdGlvbiBvcGVuZWQnKTtcbiAqICAgfSk7XG4gKiB9KS5jYXRjaCgoZXJyb3I6IGFueSkgPT4gY29uc29sZS5sb2coZXJyb3IpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdTZXJpYWwnLFxuICBwbHVnaW46ICdjb3Jkb3ZhcmR1aW5vJyxcbiAgcGx1Z2luUmVmOiAnc2VyaWFsJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS94c2VpZ25hcmQvY29yZG92YXJkdWlubycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ1VidW50dSddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNlcmlhbCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogUmVxdWVzdCBwZXJtaXNzaW9uIHRvIGNvbm5lY3QgdG8gYSBzZXJpYWwgZGV2aWNlXG4gICAqXG4gICAqIEBwYXJhbSBvcHRpb25zIHtTZXJpYWxQZXJtaXNzaW9uT3B0aW9uc30gT3B0aW9ucyB1c2VkIHRvIHJlcXVlc3Qgc2VyaWFsIHBlcm1pc3Npb25zIGZvciBhbiB1bmtub3duIGRldmljZVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBwZXJtaXNzaW9ucyBhcmUgZ3JhbnRlZFxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN1Y2Nlc3NJbmRleDogMSxcbiAgICBlcnJvckluZGV4OiAyXG4gIH0pXG4gIHJlcXVlc3RQZXJtaXNzaW9uKG9wdGlvbnM/OiBTZXJpYWxQZXJtaXNzaW9uT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIE9wZW4gY29ubmVjdGlvbiB0byBhIHNlcmlhbCBkZXZpY2VcbiAgICpcbiAgICogQHBhcmFtIG9wdGlvbnMge1NlcmlhbE9wZW5PcHRpb25zfSBPcHRpb25zIHVzZWQgdG8gb3BlbiBzZXJpYWwgY29ubmVjdGlvblxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgc2VyaWFsIGNvbm5lY3Rpb24gaXMgb3BlbmVkXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIG9wZW4ob3B0aW9uczogU2VyaWFsT3Blbk9wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBXcml0ZSB0byBhIHNlcmlhbCBjb25uZWN0aW9uXG4gICAqXG4gICAqIEBwYXJhbSBkYXRhIHthbnl9IGRhdGEgdG8gd3JpdGUgdG8gdGhlIHNlcmlhbCBjb25uZWN0aW9uXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSB3cml0ZSBpcyBjb21wbGV0ZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICB3cml0ZShkYXRhOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBXcml0ZSBoZXggdG8gYSBzZXJpYWwgY29ubmVjdGlvblxuICAgKlxuICAgKiBAcGFyYW0gZGF0YSB7YW55fSBkYXRhIHRvIHdyaXRlIHRvIHRoZSBzZXJpYWwgY29ubmVjdGlvblxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgd3JpdGUgaXMgY29tcGxldGVcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgd3JpdGVIZXgoZGF0YTogYW55KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVhZCBmcm9tIGEgc2VyaWFsIGNvbm5lY3Rpb25cbiAgICpcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggZGF0YSByZWFkIGZyb20gdGhlIHNlcmlhbCBjb25uZWN0aW9uXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlYWQoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogV2F0Y2ggdGhlIGluY29taW5nIGRhdGEgZnJvbSB0aGUgc2VyaWFsIGNvbm5lY3Rpb24uIENsZWFyIHRoZSB3YXRjaCBieSB1bnN1YnNjcmliaW5nIGZyb20gdGhlIG9ic2VydmFibGVcbiAgICpcbiAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn0gT2JzZXJ2YWJsZSByZXR1cm5zIGFuIG9ic2VydmFibGUgdGhhdCB5b3UgY2FuIHN1YnNjcmliZSB0b1xuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWVcbiAgfSlcbiAgcmVnaXN0ZXJSZWFkQ2FsbGJhY2soKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2xvc2UgdGhlIHNlcmlhbCBjb25uZWN0aW9uXG4gICAqXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBzZXJpYWwgY29ubmVjdGlvbiBpcyBjbG9zZWRcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgY2xvc2UoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 616 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Shake; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var ShakeOriginal = /** @class */ (function (_super) {
    __extends(ShakeOriginal, _super);
    function ShakeOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ShakeOriginal.prototype.startWatch = function (sensitivity) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startWatch", { "observable": true, "clearFunction": "stopWatch", "successIndex": 0, "errorIndex": 2 }, arguments); };
    ShakeOriginal.pluginName = "Shake";
    ShakeOriginal.plugin = "cordova-plugin-shake";
    ShakeOriginal.pluginRef = "shake";
    ShakeOriginal.repo = "https://github.com/leecrossley/cordova-plugin-shake";
    ShakeOriginal.platforms = ["iOS"];
    return ShakeOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Shake = new ShakeOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zaGFrZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0lBNEJsQix5QkFBaUI7Ozs7SUFZMUMsMEJBQVUsYUFBQyxXQUFvQjs7Ozs7O2dCQTFDakM7RUE4QjJCLGlCQUFpQjtTQUEvQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuLyoqXG4gKiBAbmFtZSBTaGFrZVxuICogQGRlc2NyaXB0aW9uIEhhbmRsZXMgc2hha2UgZ2VzdHVyZVxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBTaGFrZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc2hha2UnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgc2hha2U6IFNoYWtlKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiBjb25zdCB3YXRjaCA9IHRoaXMuc2hha2Uuc3RhcnRXYXRjaCg2MCkuc3Vic2NyaWJlKCgpID0+IHtcbiAqICAgLy8gZG8gc29tZXRoaW5nXG4gKiAgIH0pO1xuICpcbiAqIHdhdGNoLnVuc3Vic2NyaWJlKCk7XG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdTaGFrZScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXNoYWtlJyxcbiAgcGx1Z2luUmVmOiAnc2hha2UnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2xlZWNyb3NzbGV5L2NvcmRvdmEtcGx1Z2luLXNoYWtlJyxcbiAgcGxhdGZvcm1zOiBbJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNoYWtlIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogV2F0Y2ggZm9yIHNoYWtlIGdlc3R1cmVcbiAgICogQHBhcmFtIHNlbnNpdGl2aXR5IHtudW1iZXJ9IE9wdGlvbmFsIHNlbnNpdGl2aXR5IHBhcmFtZXRlci4gRGVmYXVsdHMgdG8gNDBcbiAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBvYnNlcnZhYmxlOiB0cnVlLFxuICAgIGNsZWFyRnVuY3Rpb246ICdzdG9wV2F0Y2gnLFxuICAgIHN1Y2Nlc3NJbmRleDogMCxcbiAgICBlcnJvckluZGV4OiAyXG4gIH0pXG4gIHN0YXJ0V2F0Y2goc2Vuc2l0aXZpdHk/OiBudW1iZXIpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 617 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Sim; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var SimOriginal = /** @class */ (function (_super) {
    __extends(SimOriginal, _super);
    function SimOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SimOriginal.prototype.getSimInfo = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getSimInfo", {}, arguments); };
    SimOriginal.prototype.hasReadPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasReadPermission", { "platforms": ["Android"] }, arguments); };
    SimOriginal.prototype.requestReadPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestReadPermission", { "platforms": ["Android"] }, arguments); };
    SimOriginal.pluginName = "Sim";
    SimOriginal.plugin = "cordova-plugin-sim";
    SimOriginal.pluginRef = "plugins.sim";
    SimOriginal.repo = "https://github.com/pbakondy/cordova-plugin-sim";
    SimOriginal.platforms = ["Android", "iOS", "Windows", "Windows Phone"];
    return SimOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Sim = new SimOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zaW0vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBMEMvQyx1QkFBaUI7Ozs7SUFNeEMsd0JBQVU7SUFXViwrQkFBaUI7SUFXakIsbUNBQXFCOzs7Ozs7Y0F2RXZCO0VBMkN5QixpQkFBaUI7U0FBN0IsR0FBRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5cbi8qKlxuICogQG5hbWUgU2ltXG4gKiBAZGVzY3JpcHRpb25cbiAqIEdldHMgaW5mbyBmcm9tIHRoZSBTaW0gY2FyZCBsaWtlIHRoZSBjYXJyaWVyIG5hbWUsIG1jYywgbW5jIGFuZCBjb3VudHJ5IGNvZGUgYW5kIG90aGVyIHN5c3RlbSBkZXBlbmRlbnQgaW5mby5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtcGx1Z2luLXNpbWAuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtDb3Jkb3ZhIFNpbSBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vcGJha29uZHkvY29yZG92YS1wbHVnaW4tc2ltKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFNpbSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc2ltJztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzaW06IFNpbSkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5zaW0uZ2V0U2ltSW5mbygpLnRoZW4oXG4gKiAgIChpbmZvKSA9PiBjb25zb2xlLmxvZygnU2ltIGluZm86ICcsIGluZm8pLFxuICogICAoZXJyKSA9PiBjb25zb2xlLmxvZygnVW5hYmxlIHRvIGdldCBzaW0gaW5mbzogJywgZXJyKVxuICogKTtcbiAqXG4gKiB0aGlzLnNpbS5oYXNSZWFkUGVybWlzc2lvbigpLnRoZW4oXG4gKiAgIChpbmZvKSA9PiBjb25zb2xlLmxvZygnSGFzIHBlcm1pc3Npb246ICcsIGluZm8pXG4gKiApO1xuICpcbiAqIHRoaXMuc2ltLnJlcXVlc3RSZWFkUGVybWlzc2lvbigpLnRoZW4oXG4gKiAgICgpID0+IGNvbnNvbGUubG9nKCdQZXJtaXNzaW9uIGdyYW50ZWQnKSxcbiAqICAgKCkgPT4gY29uc29sZS5sb2coJ1Blcm1pc3Npb24gZGVuaWVkJylcbiAqICk7XG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdTaW0nLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1zaW0nLFxuICBwbHVnaW5SZWY6ICdwbHVnaW5zLnNpbScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vcGJha29uZHkvY29yZG92YS1wbHVnaW4tc2ltJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MnLCAnV2luZG93cyBQaG9uZSddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNpbSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIFJldHVybnMgaW5mbyBmcm9tIHRoZSBTSU0gY2FyZC5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0U2ltSW5mbygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBwZXJtaXNzaW9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxuICB9KVxuICBoYXNSZWFkUGVybWlzc2lvbigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXF1ZXN0IHBlcm1pc3Npb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG4gIH0pXG4gIHJlcXVlc3RSZWFkUGVybWlzc2lvbigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 618 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SMS; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var SMSOriginal = /** @class */ (function (_super) {
    __extends(SMSOriginal, _super);
    function SMSOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SMSOriginal.prototype.send = function (phoneNumber, message, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "send", { "successIndex": 3, "errorIndex": 4 }, arguments); };
    SMSOriginal.prototype.hasPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasPermission", { "platforms": ["Android"] }, arguments); };
    SMSOriginal.pluginName = "SMS";
    SMSOriginal.plugin = "cordova-sms-plugin";
    SMSOriginal.pluginRef = "sms";
    SMSOriginal.repo = "https://github.com/cordova-sms/cordova-sms-plugin";
    SMSOriginal.platforms = ["Android", "iOS", "Windows", "Windows Phone 8"];
    return SMSOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var SMS = new SMSOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zbXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBeUQvQyx1QkFBaUI7Ozs7SUFheEMsa0JBQUksYUFBQyxXQUE4QixFQUM5QixPQUFlLEVBQ2YsT0FBb0I7SUFXekIsMkJBQWE7Ozs7OztjQXBGZjtFQTBEeUIsaUJBQWlCO1NBQTdCLEdBQUciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuXG4vKipcbiAqIE9wdGlvbnMgZm9yIHNlbmRpbmcgYW4gU01TXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU21zT3B0aW9ucyB7XG5cbiAgLyoqXG4gICAqIFNldCB0byB0cnVlIHRvIHJlcGxhY2UgXFxuIGJ5IGEgbmV3IGxpbmUuIERlZmF1bHQ6IGZhbHNlXG4gICAqL1xuICByZXBsYWNlTGluZUJyZWFrcz86IGJvb2xlYW47XG5cbiAgYW5kcm9pZD86IFNtc09wdGlvbnNBbmRyb2lkO1xuXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU21zT3B0aW9uc0FuZHJvaWQge1xuXG4gIC8qKlxuICAgKiBTZXQgdG8gXCJJTlRFTlRcIiB0byBzZW5kIFNNUyB3aXRoIHRoZSBuYXRpdmUgYW5kcm9pZCBTTVMgbWVzc2FnaW5nLiBMZWF2aW5nIGl0IGVtcHR5IHdpbGwgc2VuZCB0aGUgU01TIHdpdGhvdXQgb3BlbmluZyBhbnkgYXBwLlxuICAgKi9cbiAgaW50ZW50Pzogc3RyaW5nO1xuXG59XG5cbi8qKlxuICogQG5hbWUgU01TXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogY29yZG92YS1zbXMtcGx1Z2luLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbU01TIHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vY29yZG92YS1zbXMvY29yZG92YS1zbXMtcGx1Z2luKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFNNUyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc21zJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHNtczogU01TKSB7IH1cbiAqXG4gKlxuICogLi4uXG4gKlxuICpcbiAqIC8vIFNlbmQgYSB0ZXh0IG1lc3NhZ2UgdXNpbmcgZGVmYXVsdCBvcHRpb25zXG4gKiB0aGlzLnNtcy5zZW5kKCc0MTYxMjM0NTYnLCAnSGVsbG8gd29ybGQhJyk7XG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBTbXNPcHRpb25zXG4gKiBTbXNPcHRpb25zQW5kcm9pZFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1NNUycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtc21zLXBsdWdpbicsXG4gIHBsdWdpblJlZjogJ3NtcycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vY29yZG92YS1zbXMvY29yZG92YS1zbXMtcGx1Z2luJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MnLCAnV2luZG93cyBQaG9uZSA4J11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU01TIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBTZW5kcyBzbXMgdG8gYSBudW1iZXJcbiAgICogQHBhcmFtIHBob25lTnVtYmVyIHtzdHJpbmd8QXJyYXk8c3RyaW5nPn0gUGhvbmUgbnVtYmVyXG4gICAqIEBwYXJhbSBtZXNzYWdlIHtzdHJpbmd9IE1lc3NhZ2VcbiAgICogQHBhcmFtIG9wdGlvbnMge1Ntc09wdGlvbnN9IE9wdGlvbnNcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmVzb2x2ZXMgcHJvbWlzZSB3aGVuIHRoZSBTTVMgaGFzIGJlZW4gc2VudFxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN1Y2Nlc3NJbmRleDogMyxcbiAgICBlcnJvckluZGV4OiA0XG4gIH0pXG4gIHNlbmQocGhvbmVOdW1iZXI6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgICAgIG1lc3NhZ2U6IHN0cmluZyxcbiAgICAgICBvcHRpb25zPzogU21zT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gbGV0cyB5b3Uga25vdyBpZiB0aGUgYXBwIGhhcyBwZXJtaXNzaW9uIHRvIHNlbmQgU01TXG4gICAqIEByZXR1cm4ge1Byb21pc2U8Ym9vbGVhbj59IHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIGJvb2xlYW4gdGhhdCBpbmRpY2F0ZXMgaWYgd2UgaGF2ZSBwZXJtaXNzaW9uXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxuICB9KVxuICBoYXNQZXJtaXNzaW9uKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 619 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SocialSharing; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var SocialSharingOriginal = /** @class */ (function (_super) {
    __extends(SocialSharingOriginal, _super);
    function SocialSharingOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SocialSharingOriginal.prototype.share = function (message, subject, file, url) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "share", { "successIndex": 4, "errorIndex": 5 }, arguments); };
    SocialSharingOriginal.prototype.shareWithOptions = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareWithOptions", { "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.canShareVia = function (appName, message, subject, image, url) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "canShareVia", { "successIndex": 5, "errorIndex": 6, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.shareViaTwitter = function (message, image, url) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareViaTwitter", { "successIndex": 3, "errorIndex": 4, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.shareViaFacebook = function (message, image, url) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareViaFacebook", { "successIndex": 3, "errorIndex": 4, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.shareViaFacebookWithPasteMessageHint = function (message, image, url, pasteMessageHint) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareViaFacebookWithPasteMessageHint", { "successIndex": 4, "errorIndex": 5, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.shareViaInstagram = function (message, image) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareViaInstagram", { "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.shareViaWhatsApp = function (message, image, url) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareViaWhatsApp", { "successIndex": 3, "errorIndex": 4, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.shareViaWhatsAppToReceiver = function (receiver, message, image, url) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareViaWhatsAppToReceiver", { "successIndex": 4, "errorIndex": 5, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.shareViaSMS = function (messge, phoneNumber) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareViaSMS", { "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.canShareViaEmail = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "canShareViaEmail", { "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.shareViaEmail = function (message, subject, to, cc, bcc, files) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareViaEmail", { "platforms": ["iOS", "Android"], "successIndex": 6, "errorIndex": 7 }, arguments); };
    SocialSharingOriginal.prototype.shareVia = function (appName, message, subject, image, url) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "shareVia", { "successIndex": 5, "errorIndex": 6, "platforms": ["iOS", "Android"] }, arguments); };
    SocialSharingOriginal.prototype.setIPadPopupCoordinates = function (targetBounds) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setIPadPopupCoordinates", { "sync": true, "platforms": ["iOS"] }, arguments); };
    SocialSharingOriginal.pluginName = "SocialSharing";
    SocialSharingOriginal.plugin = "cordova-plugin-x-socialsharing";
    SocialSharingOriginal.pluginRef = "plugins.socialsharing";
    SocialSharingOriginal.repo = "https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin";
    SocialSharingOriginal.platforms = ["Android", "Browser", "iOS", "Windows", "Windows Phone"];
    return SocialSharingOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var SocialSharing = new SocialSharingOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 620 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SpeechRecognition; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var SpeechRecognitionOriginal = /** @class */ (function (_super) {
    __extends(SpeechRecognitionOriginal, _super);
    function SpeechRecognitionOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpeechRecognitionOriginal.prototype.isRecognitionAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isRecognitionAvailable", {}, arguments); };
    SpeechRecognitionOriginal.prototype.startListening = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startListening", { "callbackOrder": "reverse", "observable": true }, arguments); };
    SpeechRecognitionOriginal.prototype.stopListening = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopListening", { "platforms": ["iOS"] }, arguments); };
    SpeechRecognitionOriginal.prototype.getSupportedLanguages = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getSupportedLanguages", {}, arguments); };
    SpeechRecognitionOriginal.prototype.hasPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasPermission", {}, arguments); };
    SpeechRecognitionOriginal.prototype.requestPermission = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "requestPermission", {}, arguments); };
    SpeechRecognitionOriginal.pluginName = "SpeechRecognition";
    SpeechRecognitionOriginal.plugin = "cordova-plugin-speechrecognition";
    SpeechRecognitionOriginal.pluginRef = "plugins.speechRecognition";
    SpeechRecognitionOriginal.repo = "https://github.com/pbakondy/cordova-plugin-speechrecognition";
    SpeechRecognitionOriginal.platforms = ["Android", "iOS"];
    return SpeechRecognitionOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var SpeechRecognition = new SpeechRecognitionOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zcGVlY2gtcmVjb2duaXRpb24vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQXNHTixxQ0FBaUI7Ozs7SUFPdEQsa0RBQXNCO0lBYXRCLDBDQUFjLGFBQUMsT0FBMkM7SUFVMUQseUNBQWE7SUFTYixpREFBcUI7SUFTckIseUNBQWE7SUFTYiw2Q0FBaUI7Ozs7Ozs0QkFqS25CO0VBd0d1QyxpQkFBaUI7U0FBM0MsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcblxuZXhwb3J0IHR5cGUgU3BlZWNoUmVjb2duaXRpb25MaXN0ZW5pbmdPcHRpb25zID1cbiAgU3BlZWNoUmVjb2duaXRpb25MaXN0ZW5pbmdPcHRpb25zSU9TXG4gIHwgU3BlZWNoUmVjb2duaXRpb25MaXN0ZW5pbmdPcHRpb25zQW5kcm9pZDtcblxuZXhwb3J0IGludGVyZmFjZSBTcGVlY2hSZWNvZ25pdGlvbkxpc3RlbmluZ09wdGlvbnNJT1Mge1xuICAvKipcbiAgICogdXNlZCBsYW5ndWFnZSBmb3IgcmVjb2duaXRpb24gKGRlZmF1bHQgYFwiZW4tVVNcImApXG4gICAqL1xuICBsYW5ndWFnZT86IHN0cmluZztcblxuICAvKipcbiAgICogdW1iZXIgb2YgcmV0dXJuIG1hdGNoZXMgKGRlZmF1bHQgYDVgKVxuICAgKi9cbiAgbWF0Y2hlcz86IG51bWJlcjtcblxuICAvKipcbiAgICogQWxsb3cgcGFydGlhbCByZXN1bHRzIHRvIGJlIHJldHVybmVkIChkZWZhdWx0IGBmYWxzZWApXG4gICAqL1xuICBzaG93UGFydGlhbD86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3BlZWNoUmVjb2duaXRpb25MaXN0ZW5pbmdPcHRpb25zQW5kcm9pZCB7XG4gIC8qKlxuICAgKiB1c2VkIGxhbmd1YWdlIGZvciByZWNvZ25pdGlvbiAoZGVmYXVsdCBgXCJlbi1VU1wiYClcbiAgICovXG4gIGxhbmd1YWdlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBudW1iZXIgb2YgcmV0dXJuIG1hdGNoZXMgKG1heGltdW0gbnVtYmVyIG9mIG1hdGNoZXMpXG4gICAqL1xuICBtYXRjaGVzPzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBkaXNwbGF5ZWQgcHJvbXB0IG9mIGxpc3RlbmVyIHBvcHVwIHdpbmRvd1xuICAgKi9cbiAgcHJvbXB0Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBkaXNwbGF5IGxpc3RlbmVyIHBvcHVwIHdpbmRvdyB3aXRoIHByb21wdCAoZGVmYXVsdCBgdHJ1ZWApXG4gICAqL1xuICBzaG93UG9wdXA/OiBib29sZWFuO1xufVxuXG4vKipcbiAqIEBuYW1lIFNwZWVjaCBSZWNvZ25pdGlvblxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiBkb2VzIHNwZWVjaCByZWNvZ25pdGlvbiB1c2luZyBjbG91ZCBzZXJ2aWNlc1xuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgU3BlZWNoUmVjb2duaXRpb24gfSBmcm9tICdAaW9uaWMtbmF0aXZlL3NwZWVjaC1yZWNvZ25pdGlvbic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzcGVlY2hSZWNvZ25pdGlvbjogU3BlZWNoUmVjb2duaXRpb24pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKlxuICogLy8gQ2hlY2sgZmVhdHVyZSBhdmFpbGFibGVcbiAqIHRoaXMuc3BlZWNoUmVjb2duaXRpb24uaXNSZWNvZ25pdGlvbkF2YWlsYWJsZSgpXG4gKiAgIC50aGVuKChhdmFpbGFibGU6IGJvb2xlYW4pID0+IGNvbnNvbGUubG9nKGF2YWlsYWJsZSkpXG4gKlxuICogLy8gU3RhcnQgdGhlIHJlY29nbml0aW9uIHByb2Nlc3NcbiAqIHRoaXMuc3BlZWNoUmVjb2duaXRpb24uc3RhcnRMaXN0ZW5pbmcob3B0aW9ucylcbiAqICAgLnN1YnNjcmliZShcbiAqICAgICAobWF0Y2hlczogQXJyYXk8c3RyaW5nPikgPT4gY29uc29sZS5sb2cobWF0Y2hlcyksXG4gKiAgICAgKG9uZXJyb3IpID0+IGNvbnNvbGUubG9nKCdlcnJvcjonLCBvbmVycm9yKVxuICogICApXG4gKlxuICogLy8gU3RvcCB0aGUgcmVjb2duaXRpb24gcHJvY2VzcyAoaU9TIG9ubHkpXG4gKiB0aGlzLnNwZWVjaFJlY29nbml0aW9uLnN0b3BMaXN0ZW5pbmcoKVxuICpcbiAqIC8vIEdldCB0aGUgbGlzdCBvZiBzdXBwb3J0ZWQgbGFuZ3VhZ2VzXG4gKiB0aGlzLnNwZWVjaFJlY29nbml0aW9uLmdldFN1cHBvcnRlZExhbmd1YWdlcygpXG4gKiAgIC50aGVuKFxuICogICAgIChsYW5ndWFnZXM6IEFycmF5PHN0cmluZz4pID0+IGNvbnNvbGUubG9nKGxhbmd1YWdlcyksXG4gKiAgICAgKGVycm9yKSA9PiBjb25zb2xlLmxvZyhlcnJvcilcbiAqICAgKVxuICpcbiAqIC8vIENoZWNrIHBlcm1pc3Npb25cbiAqIHRoaXMuc3BlZWNoUmVjb2duaXRpb24uaGFzUGVybWlzc2lvbigpXG4gKiAgIC50aGVuKChoYXNQZXJtaXNzaW9uOiBib29sZWFuKSA9PiBjb25zb2xlLmxvZyhoYXNQZXJtaXNzaW9uKSlcbiAqXG4gKiAvLyBSZXF1ZXN0IHBlcm1pc3Npb25zXG4gKiB0aGlzLnNwZWVjaFJlY29nbml0aW9uLnJlcXVlc3RQZXJtaXNzaW9uKClcbiAqICAgLnRoZW4oXG4gKiAgICAgKCkgPT4gY29uc29sZS5sb2coJ0dyYW50ZWQnKSxcbiAqICAgICAoKSA9PiBjb25zb2xlLmxvZygnRGVuaWVkJylcbiAqICAgKVxuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1NwZWVjaFJlY29nbml0aW9uJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tc3BlZWNocmVjb2duaXRpb24nLFxuICBwbHVnaW5SZWY6ICdwbHVnaW5zLnNwZWVjaFJlY29nbml0aW9uJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9wYmFrb25keS9jb3Jkb3ZhLXBsdWdpbi1zcGVlY2hyZWNvZ25pdGlvbicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNwZWVjaFJlY29nbml0aW9uIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBDaGVjayBmZWF0dXJlIGF2YWlsYWJsZVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGJvb2xlYW4+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc1JlY29nbml0aW9uQXZhaWxhYmxlKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdGFydCB0aGUgcmVjb2duaXRpb24gcHJvY2Vzc1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPCBBcnJheTxzdHJpbmc+ID59IGxpc3Qgb2YgcmVjb2duaXplZCB0ZXJtc1xuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJyxcbiAgICBvYnNlcnZhYmxlOiB0cnVlLFxuXG4gIH0pXG4gIHN0YXJ0TGlzdGVuaW5nKG9wdGlvbnM/OiBTcGVlY2hSZWNvZ25pdGlvbkxpc3RlbmluZ09wdGlvbnMpOiBPYnNlcnZhYmxlPEFycmF5PHN0cmluZz4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU3RvcCB0aGUgcmVjb2duaXRpb24gcHJvY2Vzc1xuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHBsYXRmb3JtczogWydpT1MnXVxuICB9KVxuICBzdG9wTGlzdGVuaW5nKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGxpc3Qgb2Ygc3VwcG9ydGVkIGxhbmd1YWdlc1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPCBBcnJheTxzdHJpbmc+ID59IGxpc3Qgb2YgbGFuZ3VhZ2VzXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldFN1cHBvcnRlZExhbmd1YWdlcygpOiBQcm9taXNlPEFycmF5PHN0cmluZz4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgcGVybWlzc2lvblxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGJvb2xlYW4+fSBoYXMgcGVybWlzc2lvblxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBoYXNQZXJtaXNzaW9uKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXF1ZXN0IHBlcm1pc3Npb25zXG4gICAqIEByZXR1cm4ge1Byb21pc2U8dm9pZD59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlcXVlc3RQZXJtaXNzaW9uKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 621 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SpinnerDialog; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var SpinnerDialogOriginal = /** @class */ (function (_super) {
    __extends(SpinnerDialogOriginal, _super);
    function SpinnerDialogOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpinnerDialogOriginal.prototype.show = function (title, message, cancelCallback, iOSOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "sync": true }, arguments); };
    SpinnerDialogOriginal.prototype.hide = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hide", { "sync": true }, arguments); };
    SpinnerDialogOriginal.pluginName = "SpinnerDialog";
    SpinnerDialogOriginal.plugin = "cordova-plugin-native-spinner";
    SpinnerDialogOriginal.pluginRef = "SpinnerDialog";
    SpinnerDialogOriginal.repo = "https://github.com/greybax/cordova-plugin-native-spinner";
    SpinnerDialogOriginal.platforms = ["Android", "iOS", "Windows Phone 8", "Windows"];
    return SpinnerDialogOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var SpinnerDialog = new SpinnerDialogOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zcGlubmVyLWRpYWxvZy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFtQ3JDLGlDQUFpQjs7OztJQVlsRCw0QkFBSSxhQUFDLEtBQWMsRUFBRSxPQUFnQixFQUFFLGNBQW9CLEVBQUUsVUFBb0M7SUFTakcsNEJBQUk7Ozs7Ozt3QkF6RE47RUFvQ21DLGlCQUFpQjtTQUF2QyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3Bpbm5lckRpYWxvZ0lPU09wdGlvbnMge1xuICBvdmVybGF5T3BhY2l0eT86IG51bWJlcjtcbiAgdGV4dENvbG9yUmVkPzogbnVtYmVyO1xuICB0ZXh0Q29sb3JHcmVlbj86IG51bWJlcjtcbiAgdGV4dENvbG9yQmx1ZT86IG51bWJlcjtcbn1cblxuLyoqXG4gKiBAbmFtZSBTcGlubmVyIERpYWxvZ1xuICogQGRlc2NyaXB0aW9uXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFNwaW5uZXJEaWFsb2cgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3NwaW5uZXItZGlhbG9nJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHNwaW5uZXJEaWFsb2c6IFNwaW5uZXJEaWFsb2cpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuc3Bpbm5lckRpYWxvZy5zaG93KCk7XG4gKlxuICogdGhpcy5zcGlubmVyRGlhbG9nLmhpZGUoKTtcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIFNwaW5uZXJEaWFsb2dJT1NPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnU3Bpbm5lckRpYWxvZycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLW5hdGl2ZS1zcGlubmVyJyxcbiAgcGx1Z2luUmVmOiAnU3Bpbm5lckRpYWxvZycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZ3JleWJheC9jb3Jkb3ZhLXBsdWdpbi1uYXRpdmUtc3Bpbm5lcicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzIFBob25lIDgnLCAnV2luZG93cyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNwaW5uZXJEaWFsb2cgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFNob3dzIHRoZSBzcGlubmVyIGRpYWxvZ1xuICAgKiBAcGFyYW0gdGl0bGUge3N0cmluZ30gU3Bpbm5lciB0aXRsZSAoc2hvd3Mgb24gQW5kcm9pZCBvbmx5KVxuICAgKiBAcGFyYW0gbWVzc2FnZSB7c3RyaW5nfSBTcGlubmVyIG1lc3NhZ2VcbiAgICogQHBhcmFtIGNhbmNlbENhbGxiYWNrIHtib29sZWFufGZ1bmN0aW9ufSBTZXQgdG8gdHJ1ZSB0byBzZXQgc3Bpbm5lciBub3QgY2FuY2VsYWJsZS4gT3IgcHJvdmlkZSBhIGZ1bmN0aW9uIHRvIGNhbGwgd2hlbiB0aGUgdXNlciBjYW5jZWxzIHRoZSBzcGlubmVyLlxuICAgKiBAcGFyYW0gaU9TT3B0aW9ucyB7b2JqZWN0fSBPcHRpb25zIGZvciBpT1Mgb25seVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWVcbiAgfSlcbiAgc2hvdyh0aXRsZT86IHN0cmluZywgbWVzc2FnZT86IHN0cmluZywgY2FuY2VsQ2FsbGJhY2s/OiBhbnksIGlPU09wdGlvbnM/OiBTcGlubmVyRGlhbG9nSU9TT3B0aW9ucyk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIEhpZGVzIHRoZSBzcGlubmVyIGRpYWxvZyBpZiB2aXNpYmxlXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBoaWRlKCk6IHZvaWQge1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 622 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SplashScreen; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var SplashScreenOriginal = /** @class */ (function (_super) {
    __extends(SplashScreenOriginal, _super);
    function SplashScreenOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SplashScreenOriginal.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "sync": true }, arguments); };
    SplashScreenOriginal.prototype.hide = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hide", { "sync": true }, arguments); };
    SplashScreenOriginal.pluginName = "SplashScreen";
    SplashScreenOriginal.plugin = "cordova-plugin-splashscreen";
    SplashScreenOriginal.pluginRef = "navigator.splashscreen";
    SplashScreenOriginal.repo = "https://github.com/apache/cordova-plugin-splashscreen";
    SplashScreenOriginal.platforms = ["Amazon Fire OS", "Android", "BlackBerry 10", "iOS", "Tizen", "Ubuntu", "Windows", "Windows Phone"];
    return SplashScreenOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var SplashScreen = new SplashScreenOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zcGxhc2gtc2NyZWVuL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQTJCdEMsZ0NBQWlCOzs7O0lBUWpELDJCQUFJO0lBU0osMkJBQUk7Ozs7Ozt1QkE3Q047RUE0QmtDLGlCQUFpQjtTQUF0QyxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cblxuLyoqXG4gKiBAbmFtZSBTcGxhc2ggU2NyZWVuXG4gKiBAZGVzY3JpcHRpb24gVGhpcyBwbHVnaW4gZGlzcGxheXMgYW5kIGhpZGVzIGEgc3BsYXNoIHNjcmVlbiBkdXJpbmcgYXBwbGljYXRpb24gbGF1bmNoLiBUaGUgbWV0aG9kcyBiZWxvdyBhbGxvd3Mgc2hvd2luZyBhbmQgaGlkaW5nIHRoZSBzcGxhc2hzY3JlZW4gYWZ0ZXIgdGhlIGFwcCBoYXMgbG9hZGVkLlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBTcGxhc2hTY3JlZW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL3NwbGFzaC1zY3JlZW4nO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgc3BsYXNoU2NyZWVuOiBTcGxhc2hTY3JlZW4pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuc3BsYXNoU2NyZWVuLnNob3coKTtcbiAqXG4gKiB0aGlzLnNwbGFzaFNjcmVlbi5oaWRlKCk7XG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdTcGxhc2hTY3JlZW4nLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1zcGxhc2hzY3JlZW4nLFxuICBwbHVnaW5SZWY6ICduYXZpZ2F0b3Iuc3BsYXNoc2NyZWVuJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tc3BsYXNoc2NyZWVuJyxcbiAgcGxhdGZvcm1zOiBbJ0FtYXpvbiBGaXJlIE9TJywgJ0FuZHJvaWQnLCAnQmxhY2tCZXJyeSAxMCcsICdpT1MnLCAnVGl6ZW4nLCAnVWJ1bnR1JywgJ1dpbmRvd3MnLCAnV2luZG93cyBQaG9uZSddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNwbGFzaFNjcmVlbiBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogU2hvd3MgdGhlIHNwbGFzaHNjcmVlblxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWVcbiAgfSlcbiAgc2hvdygpOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBIaWRlcyB0aGUgc3BsYXNoc2NyZWVuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBoaWRlKCk6IHZvaWQge1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 623 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export SQLiteObject */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SQLite; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var SQLiteObject = /** @class */ (function () {
    function SQLiteObject(_objectInstance) {
        this._objectInstance = _objectInstance;
    }
    SQLiteObject.prototype.addTransaction = function (transaction) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "addTransaction", { "sync": true }, arguments); };
    SQLiteObject.prototype.transaction = function (fn) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "transaction", { "successIndex": 2, "errorIndex": 1 }, arguments); };
    SQLiteObject.prototype.readTransaction = function (fn) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "readTransaction", {}, arguments); };
    SQLiteObject.prototype.startNextTransaction = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "startNextTransaction", { "sync": true }, arguments); };
    SQLiteObject.prototype.open = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "open", {}, arguments); };
    SQLiteObject.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "close", {}, arguments); };
    SQLiteObject.prototype.executeSql = function (statement, params) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "executeSql", {}, arguments); };
    SQLiteObject.prototype.sqlBatch = function (sqlStatements) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "sqlBatch", {}, arguments); };
    SQLiteObject.prototype.abortallPendingTransactions = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "abortallPendingTransactions", { "sync": true }, arguments); };
    Object.defineProperty(SQLiteObject.prototype, "databaseFeatures", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "databaseFeatures"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "databaseFeatures", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SQLiteObject.prototype, "openDBs", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertyGet"])(this, "openDBs"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instancePropertySet"])(this, "openDBs", value); },
        enumerable: true,
        configurable: true
    });
    return SQLiteObject;
}());

var SQLiteOriginal = /** @class */ (function (_super) {
    __extends(SQLiteOriginal, _super);
    function SQLiteOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SQLiteOriginal.prototype.create = function (config) { return function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["checkAvailability"])(this) === true) {
            return new Promise(function (resolve, reject) {
                sqlitePlugin.openDatabase(config, function (db) { return resolve(new SQLiteObject(db)); }, reject);
            });
        }
    }(); };
    SQLiteOriginal.prototype.echoTest = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "echoTest", {}, arguments); };
    SQLiteOriginal.prototype.deleteDatabase = function (config) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deleteDatabase", {}, arguments); };
    SQLiteOriginal.pluginName = "SQLite";
    SQLiteOriginal.pluginRef = "sqlitePlugin";
    SQLiteOriginal.plugin = "cordova-sqlite-storage";
    SQLiteOriginal.repo = "https://github.com/litehelpers/Cordova-sqlite-storage";
    SQLiteOriginal.platforms = ["Android", "iOS", "macOS", "Windows"];
    return SQLiteOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var SQLite = new SQLiteOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zcWxpdGUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sd0hBT04sTUFBTSxvQkFBb0IsQ0FBQzs7SUFrRDFCLHNCQUFtQixlQUFvQjtRQUFwQixvQkFBZSxHQUFmLGVBQWUsQ0FBSztJQUN2QyxDQUFDO0lBS0QscUNBQWMsYUFBQyxXQUE0QztJQVczRCxrQ0FBVyxhQUFDLEVBQU87SUFTbkIsc0NBQWUsYUFBQyxFQUFtQztJQU9uRCwyQ0FBb0I7SUFPcEIsMkJBQUk7SUFRSiw0QkFBSztJQVNMLGlDQUFVLGFBQUMsU0FBaUIsRUFBRSxNQUFXO0lBU3pDLCtCQUFRLGFBQUMsYUFBNkM7SUFPdEQsa0RBQTJCOzBCQTVFUCwwQ0FBZ0I7Ozs7OzswQkFDaEIsaUNBQU87Ozs7Ozt1QkF4RDdCOzs7O0lBc0w0QiwwQkFBaUI7Ozs7SUFXM0MsdUJBQU0sYUFBQyxNQUE0Qjs4Q0FBeUIsQ0FBQztZQUMzRCxNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTtnQkFDakMsWUFBWSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsVUFBQyxFQUFPLElBQUssT0FBQSxPQUFPLENBQUMsSUFBSSxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBN0IsQ0FBNkIsRUFBRSxNQUFNLENBQUMsQ0FBQztZQUN4RixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7O0lBT0QseUJBQVE7SUFVUiwrQkFBYyxhQUFDLE1BQTRCOzs7Ozs7aUJBdE43QztFQXNMNEIsaUJBQWlCO1NBQWhDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb3Jkb3ZhLFxuICBDb3Jkb3ZhQ2hlY2ssXG4gIENvcmRvdmFJbnN0YW5jZSxcbiAgSW5zdGFuY2VQcm9wZXJ0eSxcbiAgSW9uaWNOYXRpdmVQbHVnaW4sXG4gIFBsdWdpblxufSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5kZWNsYXJlIGNvbnN0IHNxbGl0ZVBsdWdpbjogYW55O1xuXG5leHBvcnQgaW50ZXJmYWNlIFNRTGl0ZURhdGFiYXNlQ29uZmlnIHtcbiAgLyoqXG4gICAqIE5hbWUgb2YgdGhlIGRhdGFiYXNlLiBFeGFtcGxlOiAnbXkuZGInXG4gICAqL1xuICBuYW1lOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBMb2NhdGlvbiBvZiB0aGUgZGF0YWJhc2UuIEV4YW1wbGU6ICdkZWZhdWx0J1xuICAgKi9cbiAgbG9jYXRpb24/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBpT1MgRGF0YWJhc2UgTG9jYXRpb24uIEV4YW1wbGU6ICdMaWJyYXJ5J1xuICAgKi9cbiAgaW9zRGF0YWJhc2VMb2NhdGlvbj86IHN0cmluZztcbiAgLyoqXG4gICAqIHN1cHBvcnQgb3BlbmluZyBwcmUtZmlsbGVkIGRhdGFiYXNlcyB3aXRoIGh0dHBzOi8vZ2l0aHViLmNvbS9saXRlaGVscGVycy9jb3Jkb3ZhLXNxbGl0ZS1leHRcbiAgICovXG4gIGNyZWF0ZUZyb21Mb2NhdGlvbj86IG51bWJlcjtcbiAgLyoqXG4gICAqIHN1cHBvcnQgZW5jcnlwdGVkIGRhdGFiYXNlcyB3aXRoIGh0dHBzOi8vZ2l0aHViLmNvbS9saXRlaGVscGVycy9Db3Jkb3ZhLXNxbGNpcGhlci1hZGFwdGVyXG4gICAqL1xuICBrZXk/OiBzdHJpbmc7XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgaW50ZXJmYWNlIFNRTGl0ZVRyYW5zYWN0aW9uIHtcbiAgc3RhcnQ6ICgpID0+IHZvaWQ7XG4gIGV4ZWN1dGVTcWw6IChzcWw6IGFueSwgdmFsdWVzOiBhbnksIHN1Y2Nlc3M6IEZ1bmN0aW9uLCBlcnJvcjogRnVuY3Rpb24pID0+IHZvaWQ7XG4gIGFkZFN0YXRlbWVudDogKHNxbDogYW55LCB2YWx1ZXM6IGFueSwgc3VjY2VzczogRnVuY3Rpb24sIGVycm9yOiBGdW5jdGlvbikgPT4gdm9pZDtcbiAgaGFuZGxlU3RhdGVtZW50U3VjY2VzczogKGhhbmRsZXI6IEZ1bmN0aW9uLCByZXNwb25zZTogYW55KSA9PiB2b2lkO1xuICBoYW5kbGVTdGF0ZW1lbnRGYWlsdXJlOiAoaGFuZGxlcjogRnVuY3Rpb24sIHJlc3BvbnNlOiBhbnkpID0+IHZvaWQ7XG4gIHJ1bjogKCkgPT4gdm9pZDtcbiAgYWJvcnQ6ICh0eEZhaWx1cmU6IGFueSkgPT4gdm9pZDtcbiAgZmluaXNoOiAoKSA9PiB2b2lkO1xuICBhYm9ydEZyb21ROiAoc3FsZXJyb3I6IGFueSkgPT4gdm9pZDtcbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBjbGFzcyBTUUxpdGVPYmplY3Qge1xuXG4gIEBJbnN0YW5jZVByb3BlcnR5KCkgZGF0YWJhc2VGZWF0dXJlczogeyBpc1NRTGl0ZVBsdWdpbkRhdGFiYXNlOiBib29sZWFuIH07XG4gIEBJbnN0YW5jZVByb3BlcnR5KCkgb3BlbkRCczogYW55O1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBfb2JqZWN0SW5zdGFuY2U6IGFueSkge1xuICB9XG5cbiAgQENvcmRvdmFJbnN0YW5jZSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBhZGRUcmFuc2FjdGlvbih0cmFuc2FjdGlvbjogKHR4OiBTUUxpdGVUcmFuc2FjdGlvbikgPT4gdm9pZCk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSBmbiB7YW55fVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmFJbnN0YW5jZSh7XG4gICAgc3VjY2Vzc0luZGV4OiAyLFxuICAgIGVycm9ySW5kZXg6IDFcbiAgfSlcbiAgdHJhbnNhY3Rpb24oZm46IGFueSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSBmbiB7RnVuY3Rpb259XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YUluc3RhbmNlKClcbiAgcmVhZFRyYW5zYWN0aW9uKGZuOiAodHg6IFNRTGl0ZVRyYW5zYWN0aW9uKSA9PiB2b2lkKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YUluc3RhbmNlKHtcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIHN0YXJ0TmV4dFRyYW5zYWN0aW9uKCk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YUluc3RhbmNlKClcbiAgb3BlbigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmFJbnN0YW5jZSgpXG4gIGNsb3NlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEV4ZWN1dGUgU1FMIG9uIHRoZSBvcGVuZWQgZGF0YWJhc2UuIE5vdGUsIHlvdSBtdXN0IGNhbGwgYGNyZWF0ZWAgZmlyc3QsIGFuZFxuICAgKiBlbnN1cmUgaXQgcmVzb2x2ZWQgYW5kIHN1Y2Nlc3NmdWxseSBvcGVuZWQgdGhlIGRhdGFiYXNlLlxuICAgKi9cbiAgQENvcmRvdmFJbnN0YW5jZSgpXG4gIGV4ZWN1dGVTcWwoc3RhdGVtZW50OiBzdHJpbmcsIHBhcmFtczogYW55KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHNxbFN0YXRlbWVudHMge0FycmF5PHN0cmluZyB8IHN0cmluZ1tdIHwgYW55Pn1cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhSW5zdGFuY2UoKVxuICBzcWxCYXRjaChzcWxTdGF0ZW1lbnRzOiBBcnJheTxzdHJpbmcgfCBzdHJpbmdbXSB8IGFueT4pOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhSW5zdGFuY2Uoe1xuICAgIHN5bmM6IHRydWVcbiAgfSlcbiAgYWJvcnRhbGxQZW5kaW5nVHJhbnNhY3Rpb25zKCk6IHZvaWQge1xuICB9XG5cbn1cblxuLyoqXG4gKiBAbmFtZSBTUUxpdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEFjY2VzcyBTUUxpdGUgZGF0YWJhc2VzIG9uIHRoZSBkZXZpY2UuXG4gKlxuICogQHVzYWdlXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgU1FMaXRlLCBTUUxpdGVPYmplY3QgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3NxbGl0ZSc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzcWxpdGU6IFNRTGl0ZSkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5zcWxpdGUuY3JlYXRlKHtcbiAqICAgbmFtZTogJ2RhdGEuZGInLFxuICogICBsb2NhdGlvbjogJ2RlZmF1bHQnXG4gKiB9KVxuICogICAudGhlbigoZGI6IFNRTGl0ZU9iamVjdCkgPT4ge1xuICpcbiAqXG4gKiAgICAgZGIuZXhlY3V0ZVNxbCgnY3JlYXRlIHRhYmxlIGRhbmNlTW92ZXMobmFtZSBWQVJDSEFSKDMyKSknLCB7fSlcbiAqICAgICAgIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdFeGVjdXRlZCBTUUwnKSlcbiAqICAgICAgIC5jYXRjaChlID0+IGNvbnNvbGUubG9nKGUpKTtcbiAqXG4gKlxuICogICB9KVxuICogICAuY2F0Y2goZSA9PiBjb25zb2xlLmxvZyhlKSk7XG4gKlxuICogYGBgXG4gKlxuICogQGNsYXNzZXNcbiAqIFNRTGl0ZU9iamVjdFxuICogQGludGVyZmFjZXNcbiAqIFNRTGl0ZURhdGFiYXNlQ29uZmlnXG4gKiBTUUxpdGVUcmFuc2FjdGlvblxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1NRTGl0ZScsXG4gIHBsdWdpblJlZjogJ3NxbGl0ZVBsdWdpbicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtc3FsaXRlLXN0b3JhZ2UnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2xpdGVoZWxwZXJzL0NvcmRvdmEtc3FsaXRlLXN0b3JhZ2UnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnLCAnbWFjT1MnLCAnV2luZG93cyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNRTGl0ZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogT3BlbiBvciBjcmVhdGUgYSBTUUxpdGUgZGF0YWJhc2UgZmlsZS5cbiAgICpcbiAgICogU2VlIHRoZSBwbHVnaW4gZG9jcyBmb3IgYW4gZXhwbGFuYXRpb24gb2YgYWxsIG9wdGlvbnM6IGh0dHBzOi8vZ2l0aHViLmNvbS9saXRlaGVscGVycy9Db3Jkb3ZhLXNxbGl0ZS1zdG9yYWdlI29wZW5pbmctYS1kYXRhYmFzZVxuICAgKlxuICAgKiBAcGFyYW0gY29uZmlnIHtTUUxpdGVEYXRhYmFzZUNvbmZpZ30gZGF0YWJhc2UgY29uZmlndXJhdGlvblxuICAgKiBAcmV0dXJuIFByb21pc2U8U1FMaXRlT2JqZWN0PlxuICAgKi9cbiAgQENvcmRvdmFDaGVjaygpXG4gIGNyZWF0ZShjb25maWc6IFNRTGl0ZURhdGFiYXNlQ29uZmlnKTogUHJvbWlzZTxTUUxpdGVPYmplY3Q+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgc3FsaXRlUGx1Z2luLm9wZW5EYXRhYmFzZShjb25maWcsIChkYjogYW55KSA9PiByZXNvbHZlKG5ldyBTUUxpdGVPYmplY3QoZGIpKSwgcmVqZWN0KTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBWZXJpZnkgdGhhdCBib3RoIHRoZSBKYXZhc2NyaXB0IGFuZCBuYXRpdmUgcGFydCBvZiB0aGlzIHBsdWdpbiBhcmUgaW5zdGFsbGVkIGluIHlvdXIgYXBwbGljYXRpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZWNob1Rlc3QoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGVsZXRlcyBhIGRhdGFiYXNlXG4gICAqIEBwYXJhbSBjb25maWcge1NRTGl0ZURhdGFiYXNlQ29uZmlnfSBkYXRhYmFzZSBjb25maWd1cmF0aW9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGRlbGV0ZURhdGFiYXNlKGNvbmZpZzogU1FMaXRlRGF0YWJhc2VDb25maWcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 624 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SQLitePorter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var SQLitePorterOriginal = /** @class */ (function (_super) {
    __extends(SQLitePorterOriginal, _super);
    function SQLitePorterOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SQLitePorterOriginal.prototype.importSqlToDb = function (db, sql) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "importSqlToDb", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorterOriginal.prototype.exportDbToSql = function (db) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "exportDbToSql", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorterOriginal.prototype.importJsonToDb = function (db, json) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "importJsonToDb", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorterOriginal.prototype.exportDbToJson = function (db) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "exportDbToJson", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorterOriginal.prototype.wipeDb = function (db) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "wipeDb", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorterOriginal.pluginName = "SQLitePorter";
    SQLitePorterOriginal.plugin = "uk.co.workingedge.cordova.plugin.sqliteporter";
    SQLitePorterOriginal.pluginRef = "cordova.plugins.sqlitePorter";
    SQLitePorterOriginal.repo = "https://github.com/dpa99c/cordova-sqlite-porter";
    SQLitePorterOriginal.platforms = ["Amazon Fire OS", "Android", "BlackBerry 10", "Browser", "iOS", "Tizen", "Windows", "Windows Phone"];
    return SQLitePorterOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var SQLitePorter = new SQLitePorterOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zcWxpdGUtcG9ydGVyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQWdEdEMsZ0NBQWlCOzs7O0lBYWpELG9DQUFhLGFBQUMsRUFBTyxFQUFFLEdBQVc7SUFjbEMsb0NBQWEsYUFBQyxFQUFPO0lBZXJCLHFDQUFjLGFBQUMsRUFBTyxFQUFFLElBQVM7SUFjakMscUNBQWMsYUFBQyxFQUFPO0lBY3RCLDZCQUFNLGFBQUMsRUFBTzs7Ozs7O3VCQXRIaEI7RUFnRGtDLGlCQUFpQjtTQUF0QyxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgU1FMaXRlIFBvcnRlclxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIENvcmRvdmEvUGhvbmVnYXAgcGx1Z2luIGNhbiBiZSB1c2VkIHRvIGltcG9ydC9leHBvcnQgdG8vZnJvbSBhIFNRTGl0ZSBkYXRhYmFzZSB1c2luZyBlaXRoZXIgU1FMIG9yIEpTT04uXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBTUUxpdGVQb3J0ZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3NxbGl0ZS1wb3J0ZXInO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHNxbGl0ZVBvcnRlcjogU1FMaXRlUG9ydGVyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiBsZXQgZGIgPSB3aW5kb3cub3BlbkRhdGFiYXNlKCdUZXN0JywgJzEuMCcsICdUZXN0REInLCAxICogMTAyNCk7XG4gKiAvLyBvciB3ZSBjYW4gdXNlIFNRTGl0ZSBwbHVnaW5cbiAqIC8vIHdlIHdpbGwgYXNzdW1lIHRoYXQgd2UgaW5qZWN0ZWQgU1FMaXRlIGludG8gdGhpcyBjb21wb25lbnQgYXMgc3FsaXRlXG4gKiB0aGlzLnNxbGl0ZS5jcmVhdGUoe1xuICogICBuYW1lOiAnZGF0YS5kYicsXG4gKiAgIGxvY2F0aW9uOiAnZGVmYXVsdCdcbiAqIH0pXG4gKiAgIC50aGVuKChkYjogYW55KSA9PiB7XG4gKiAgICAgbGV0IGRiSW5zdGFuY2UgPSBkYi5fb2JqZWN0SW5zdGFuY2U7XG4gKiAgICAgLy8gd2UgY2FuIHBhc3MgZGIuX29iamVjdEluc3RhbmNlIGFzIHRoZSBkYXRhYmFzZSBvcHRpb24gaW4gYWxsIFNRTGl0ZVBvcnRlciBtZXRob2RzXG4gKiAgIH0pO1xuICpcbiAqXG4gKiBsZXQgc3FsID0gJ0NSRUFURSBUQUJMRSBBcnRpc3QgKFtJZF0gUFJJTUFSWSBLRVksIFtUaXRsZV0pOycgK1xuICogICAgICAgICAgICAnSU5TRVJUIElOVE8gQXJ0aXN0KElkLFRpdGxlKSBWQUxVRVMgKFwiMVwiLFwiRnJlZFwiKTsnO1xuICpcbiAqIHRoaXMuc3FsaXRlUG9ydGVyLmltcG9ydFNxbFRvRGIoZGIsIHNxbClcbiAqICAgLnRoZW4oKCkgPT4gY29uc29sZS5sb2coJ0ltcG9ydGVkJykpXG4gKiAgIC5jYXRjaChlID0+IGNvbnNvbGUuZXJyb3IoZSkpO1xuICpcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdTUUxpdGVQb3J0ZXInLFxuICBwbHVnaW46ICd1ay5jby53b3JraW5nZWRnZS5jb3Jkb3ZhLnBsdWdpbi5zcWxpdGVwb3J0ZXInLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuc3FsaXRlUG9ydGVyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9kcGE5OWMvY29yZG92YS1zcWxpdGUtcG9ydGVyJyxcbiAgcGxhdGZvcm1zOiBbJ0FtYXpvbiBGaXJlIE9TJywgJ0FuZHJvaWQnLCAnQmxhY2tCZXJyeSAxMCcsICdCcm93c2VyJywgJ2lPUycsICdUaXplbicsICdXaW5kb3dzJywgJ1dpbmRvd3MgUGhvbmUnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTUUxpdGVQb3J0ZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIEV4ZWN1dGVzIGEgc2V0IG9mIFNRTCBzdGF0ZW1lbnRzIGFnYWluc3QgdGhlIGRlZmluZWQgZGF0YWJhc2UuIENhbiBiZSB1c2VkIHRvIGltcG9ydCBkYXRhIGRlZmluZWQgaW4gdGhlIFNRTCBzdGF0ZW1lbnRzIGludG8gdGhlIGRhdGFiYXNlLCBhbmQgbWF5IGFkZGl0aW9uYWxseSBpbmNsdWRlIGNvbW1hbmRzIHRvIGNyZWF0ZSB0aGUgdGFibGUgc3RydWN0dXJlLlxuICAgKiBAcGFyYW0gZGIge09iamVjdH0gRGF0YWJhc2Ugb2JqZWN0XG4gICAqIEBwYXJhbSBzcWwge3N0cmluZ30gU1FMIHN0YXRlbWVudHMgdG8gZXhlY3V0ZSBhZ2FpbnN0IHRoZSBkYXRhYmFzZVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tTdHlsZTogJ29iamVjdCcsXG4gICAgc3VjY2Vzc05hbWU6ICdzdWNjZXNzRm4nLFxuICAgIGVycm9yTmFtZTogJ2Vycm9yRm4nXG4gIH0pXG4gIGltcG9ydFNxbFRvRGIoZGI6IGFueSwgc3FsOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeHBvcnRzIGEgU1FMaXRlIERCIGFzIGEgc2V0IG9mIFNRTCBzdGF0ZW1lbnRzLlxuICAgKiBAcGFyYW0gZGIge09iamVjdH0gRGF0YWJhc2Ugb2JqZWN0XG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja1N0eWxlOiAnb2JqZWN0JyxcbiAgICBzdWNjZXNzTmFtZTogJ3N1Y2Nlc3NGbicsXG4gICAgZXJyb3JOYW1lOiAnZXJyb3JGbidcbiAgfSlcbiAgZXhwb3J0RGJUb1NxbChkYjogYW55KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ29udmVydHMgdGFibGUgc3RydWN0dXJlIGFuZC9vciByb3cgZGF0YSBjb250YWluZWQgd2l0aGluIGEgSlNPTiBzdHJ1Y3R1cmUgaW50byBTUUwgc3RhdGVtZW50cyB0aGF0IGNhbiBiZSBleGVjdXRlZCBhZ2FpbnN0IGEgU1FMaXRlIGRhdGFiYXNlLiBDYW4gYmUgdXNlZCB0byBpbXBvcnQgZGF0YSBpbnRvIHRoZSBkYXRhYmFzZSBhbmQvb3IgY3JlYXRlIHRoZSB0YWJsZSBzdHJ1Y3R1cmUuXG4gICAqIEBwYXJhbSBkYiB7T2JqZWN0fSBEYXRhYmFzZSBvYmplY3RcbiAgICogQHBhcmFtIGpzb24ge09iamVjdHxzdHJpbmd9IEpTT04gc3RydWN0dXJlIGNvbnRhaW5pbmcgcm93IGRhdGEgYW5kL29yIHRhYmxlIHN0cnVjdHVyZSBhcyBlaXRoZXIgYSBKU09OIG9iamVjdCBvciBzdHJpbmdcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrU3R5bGU6ICdvYmplY3QnLFxuICAgIHN1Y2Nlc3NOYW1lOiAnc3VjY2Vzc0ZuJyxcbiAgICBlcnJvck5hbWU6ICdlcnJvckZuJ1xuICB9KVxuICBpbXBvcnRKc29uVG9EYihkYjogYW55LCBqc29uOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeHBvcnRzIGEgU1FMaXRlIERCIGFzIGEgSlNPTiBzdHJ1Y3R1cmVcbiAgICogQHBhcmFtIGRiIHtPYmplY3R9IERhdGFiYXNlIG9iamVjdFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tTdHlsZTogJ29iamVjdCcsXG4gICAgc3VjY2Vzc05hbWU6ICdzdWNjZXNzRm4nLFxuICAgIGVycm9yTmFtZTogJ2Vycm9yRm4nXG4gIH0pXG4gIGV4cG9ydERiVG9Kc29uKGRiOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaXBlcyBhbGwgZGF0YSBmcm9tIGEgZGF0YWJhc2UgYnkgZHJvcHBpbmcgYWxsIGV4aXN0aW5nIHRhYmxlc1xuICAgKiBAcGFyYW0gZGIge09iamVjdH0gRGF0YWJhc2Ugb2JqZWN0XG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja1N0eWxlOiAnb2JqZWN0JyxcbiAgICBzdWNjZXNzTmFtZTogJ3N1Y2Nlc3NGbicsXG4gICAgZXJyb3JOYW1lOiAnZXJyb3JGbidcbiAgfSlcbiAgd2lwZURiKGRiOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 625 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StatusBar; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var StatusBarOriginal = /** @class */ (function (_super) {
    __extends(StatusBarOriginal, _super);
    function StatusBarOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StatusBarOriginal.prototype.overlaysWebView = function (doesOverlay) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "overlaysWebView", { "sync": true }, arguments); };
    StatusBarOriginal.prototype.styleDefault = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "styleDefault", { "sync": true }, arguments); };
    StatusBarOriginal.prototype.styleLightContent = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "styleLightContent", { "sync": true }, arguments); };
    StatusBarOriginal.prototype.styleBlackTranslucent = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "styleBlackTranslucent", { "sync": true }, arguments); };
    StatusBarOriginal.prototype.styleBlackOpaque = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "styleBlackOpaque", { "sync": true }, arguments); };
    StatusBarOriginal.prototype.backgroundColorByName = function (colorName) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "backgroundColorByName", { "sync": true }, arguments); };
    StatusBarOriginal.prototype.backgroundColorByHexString = function (hexString) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "backgroundColorByHexString", { "sync": true }, arguments); };
    StatusBarOriginal.prototype.hide = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hide", { "sync": true }, arguments); };
    StatusBarOriginal.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "sync": true }, arguments); };
    Object.defineProperty(StatusBarOriginal.prototype, "isVisible", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "isVisible"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "isVisible", value); },
        enumerable: true,
        configurable: true
    });
    StatusBarOriginal.pluginName = "StatusBar";
    StatusBarOriginal.plugin = "cordova-plugin-statusbar";
    StatusBarOriginal.pluginRef = "StatusBar";
    StatusBarOriginal.repo = "https://github.com/apache/cordova-plugin-statusbar";
    StatusBarOriginal.platforms = ["Android", "iOS", "Windows", "Windows Phone"];
    return StatusBarOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var StatusBar = new StatusBarOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zdGF0dXMtYmFyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLGtGQUF1RCxNQUFNLG9CQUFvQixDQUFDOztJQWlDMUQsNkJBQWlCOzs7O0lBZ0I5QyxtQ0FBZSxhQUFDLFdBQW9CO0lBU3BDLGdDQUFZO0lBU1oscUNBQWlCO0lBU2pCLHlDQUFxQjtJQVNyQixvQ0FBZ0I7SUFjaEIseUNBQXFCLGFBQUMsU0FBaUI7SUFhdkMsOENBQTBCLGFBQUMsU0FBaUI7SUFTNUMsd0JBQUk7SUFTSix3QkFBSTswQkE1RkosZ0NBQVM7Ozs7Ozs7Ozs7O29CQXZDWDtFQWtDK0IsaUJBQWlCO1NBQW5DLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBDb3Jkb3ZhUHJvcGVydHksIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIFN0YXR1cyBCYXJcbiAqIEBkZXNjcmlwdGlvblxuICogTWFuYWdlIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBuYXRpdmUgc3RhdHVzIGJhci5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtcGx1Z2luLXN0YXR1c2JhcmAuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtTdGF0dXNCYXIgcGx1Z2luIGRvY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tc3RhdHVzYmFyKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFN0YXR1c0JhciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc3RhdHVzLWJhcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzdGF0dXNCYXI6IFN0YXR1c0JhcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogLy8gbGV0IHN0YXR1cyBiYXIgb3ZlcmxheSB3ZWJ2aWV3XG4gKiB0aGlzLnN0YXR1c0Jhci5vdmVybGF5c1dlYlZpZXcodHJ1ZSk7XG4gKlxuICogLy8gc2V0IHN0YXR1cyBiYXIgdG8gd2hpdGVcbiAqIHRoaXMuc3RhdHVzQmFyLmJhY2tncm91bmRDb2xvckJ5SGV4U3RyaW5nKCcjZmZmZmZmJyk7XG4gKiBgYGBcbiAqXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnU3RhdHVzQmFyJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tc3RhdHVzYmFyJyxcbiAgcGx1Z2luUmVmOiAnU3RhdHVzQmFyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tc3RhdHVzYmFyJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MnLCAnV2luZG93cyBQaG9uZSddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFN0YXR1c0JhciBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIFN0YXR1c0JhciBpcyBjdXJyZW50bHkgdmlzaWJsZSBvciBub3QuXG4gICAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgaXNWaXNpYmxlOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBTZXQgd2hldGhlciB0aGUgc3RhdHVzIGJhciBvdmVybGF5cyB0aGUgbWFpbiBhcHAgdmlldy4gVGhlIGRlZmF1bHRcbiAgICogaXMgdHJ1ZS5cbiAgICpcbiAgICogQHBhcmFtIHtib29sZWFufSBkb2VzT3ZlcmxheSAgV2hldGhlciB0aGUgc3RhdHVzIGJhciBvdmVybGF5cyB0aGUgbWFpbiBhcHAgdmlldy5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIG92ZXJsYXlzV2ViVmlldyhkb2VzT3ZlcmxheTogYm9vbGVhbikge1xuICB9XG5cbiAgLyoqXG4gICAqIFVzZSB0aGUgZGVmYXVsdCBzdGF0dXNiYXIgKGRhcmsgdGV4dCwgZm9yIGxpZ2h0IGJhY2tncm91bmRzKS5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIHN0eWxlRGVmYXVsdCgpIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBVc2UgdGhlIGxpZ2h0Q29udGVudCBzdGF0dXNiYXIgKGxpZ2h0IHRleHQsIGZvciBkYXJrIGJhY2tncm91bmRzKS5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIHN0eWxlTGlnaHRDb250ZW50KCkge1xuICB9XG5cbiAgLyoqXG4gICAqIFVzZSB0aGUgYmxhY2tUcmFuc2x1Y2VudCBzdGF0dXNiYXIgKGxpZ2h0IHRleHQsIGZvciBkYXJrIGJhY2tncm91bmRzKS5cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIHN0eWxlQmxhY2tUcmFuc2x1Y2VudCgpIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBVc2UgdGhlIGJsYWNrT3BhcXVlIHN0YXR1c2JhciAobGlnaHQgdGV4dCwgZm9yIGRhcmsgYmFja2dyb3VuZHMpLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWVcbiAgfSlcbiAgc3R5bGVCbGFja09wYXF1ZSgpIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHN0YXR1cyBiYXIgdG8gYSBzcGVjaWZpYyBuYW1lZCBjb2xvci4gVmFsaWQgb3B0aW9uczpcbiAgICogYmxhY2ssIGRhcmtHcmF5LCBsaWdodEdyYXksIHdoaXRlLCBncmF5LCByZWQsIGdyZWVuLCBibHVlLCBjeWFuLCB5ZWxsb3csIG1hZ2VudGEsIG9yYW5nZSwgcHVycGxlLCBicm93bi5cbiAgICpcbiAgICogaU9TIG5vdGU6IHlvdSBtdXN0IGNhbGwgU3RhdHVzQmFyLm92ZXJsYXlzV2ViVmlldyhmYWxzZSkgdG8gZW5hYmxlIGNvbG9yIGNoYW5naW5nLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29sb3JOYW1lICBUaGUgbmFtZSBvZiB0aGUgY29sb3IgKGZyb20gYWJvdmUpXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBiYWNrZ3JvdW5kQ29sb3JCeU5hbWUoY29sb3JOYW1lOiBzdHJpbmcpIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHN0YXR1cyBiYXIgdG8gYSBzcGVjaWZpYyBoZXggY29sb3IgKENTUyBzaG9ydGhhbmQgc3VwcG9ydGVkISkuXG4gICAqXG4gICAqIGlPUyBub3RlOiB5b3UgbXVzdCBjYWxsIFN0YXR1c0Jhci5vdmVybGF5c1dlYlZpZXcoZmFsc2UpIHRvIGVuYWJsZSBjb2xvciBjaGFuZ2luZy5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGhleFN0cmluZyAgVGhlIGhleCB2YWx1ZSBvZiB0aGUgY29sb3IuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBiYWNrZ3JvdW5kQ29sb3JCeUhleFN0cmluZyhoZXhTdHJpbmc6IHN0cmluZykge1xuICB9XG5cbiAgLyoqXG4gICAqIEhpZGUgdGhlIFN0YXR1c0JhclxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN5bmM6IHRydWVcbiAgfSlcbiAgaGlkZSgpIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBTaG93IHRoZSBTdGF0dXNCYXJcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlXG4gIH0pXG4gIHNob3coKSB7XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 626 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Stepcounter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var StepcounterOriginal = /** @class */ (function (_super) {
    __extends(StepcounterOriginal, _super);
    function StepcounterOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StepcounterOriginal.prototype.start = function (startingOffset) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "start", {}, arguments); };
    StepcounterOriginal.prototype.stop = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stop", {}, arguments); };
    StepcounterOriginal.prototype.getTodayStepCount = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getTodayStepCount", {}, arguments); };
    StepcounterOriginal.prototype.getStepCount = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getStepCount", {}, arguments); };
    StepcounterOriginal.prototype.deviceCanCountSteps = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "deviceCanCountSteps", {}, arguments); };
    StepcounterOriginal.prototype.getHistory = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getHistory", {}, arguments); };
    StepcounterOriginal.pluginName = "Stepcounter";
    StepcounterOriginal.plugin = "cordova-plugin-stepcounter";
    StepcounterOriginal.pluginRef = "stepcounter";
    StepcounterOriginal.repo = "https://github.com/ihadeed/cordova-plugin-stepcounter";
    StepcounterOriginal.platforms = ["Android"];
    return StepcounterOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Stepcounter = new StepcounterOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zdGVwY291bnRlci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFrQ3ZDLCtCQUFpQjs7OztJQVNoRCwyQkFBSyxhQUFDLGNBQXNCO0lBUzVCLDBCQUFJO0lBU0osdUNBQWlCO0lBU2pCLGtDQUFZO0lBU1oseUNBQW1CO0lBU25CLGdDQUFVOzs7Ozs7c0JBekZaO0VBbUNpQyxpQkFBaUI7U0FBckMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIFN0ZXBjb3VudGVyXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvcmRvdmEgcGx1Z2luIGZvciB1c2luZyBkZXZpY2UncyBzdGVwY291bnRlciBvbiBBbmRyb2lkIChBUEkgPiAxOSlcbiAqXG4gKiBVc2UgdG9cbiAqIC0gc3RhcnQgYW5kIHN0b3Agc3RlcGNvdW50ZXIgc2VydmljZVxuICogLSByZWFkIGRldmljZSdzIHN0ZXBjb3VudGVyIGRhdGFcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFN0ZXBjb3VudGVyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9zdGVwY291bnRlcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzdGVwY291bnRlcjogU3RlcGNvdW50ZXIpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIGxldCBzdGFydGluZ09mZnNldCA9IDA7XG4gKiB0aGlzLnN0ZXBjb3VudGVyLnN0YXJ0KHN0YXJ0aW5nT2Zmc2V0KS50aGVuKG9uU3VjY2VzcyA9PiBjb25zb2xlLmxvZygnc3RlcGNvdW50ZXItc3RhcnQgc3VjY2VzcycsIG9uU3VjY2VzcyksIG9uRmFpbHVyZSA9PiBjb25zb2xlLmxvZygnc3RlcGNvdW50ZXItc3RhcnQgZXJyb3InLCBvbkZhaWx1cmUpKTtcbiAqXG4gKiB0aGlzLnN0ZXBjb3VudGVyLmdldEhpc3RvcnkoKS50aGVuKGhpc3RvcnlPYmogPT4gY29uc29sZS5sb2coJ3N0ZXBjb3VudGVyLWhpc3Rvcnkgc3VjY2VzcycsIGhpc3RvcnlPYmopLCBvbkZhaWx1cmUgPT4gY29uc29sZS5sb2coJ3N0ZXBjb3VudGVyLWhpc3RvcnkgZXJyb3InLCBvbkZhaWx1cmUpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdTdGVwY291bnRlcicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXN0ZXBjb3VudGVyJyxcbiAgcGx1Z2luUmVmOiAnc3RlcGNvdW50ZXInLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2loYWRlZWQvY29yZG92YS1wbHVnaW4tc3RlcGNvdW50ZXInLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFN0ZXBjb3VudGVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBTdGFydCB0aGUgc3RlcCBjb3VudGVyXG4gICAqXG4gICAqIEBwYXJhbSBzdGFydGluZ09mZnNldCB7bnVtYmVyfSB3aWxsIGJlIGFkZGVkIHRvIHRoZSB0b3RhbCBzdGVwcyBjb3VudGVkIGluIHRoaXMgc2Vzc2lvblxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnkgfCBudW1iZXI+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIG9uIHN1Y2Nlc3Mgb3IgcmVqZWN0cyBvbiBmYWlsdXJlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHN0YXJ0KHN0YXJ0aW5nT2Zmc2V0OiBudW1iZXIpOiBQcm9taXNlPG51bWJlciB8IGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdG9wIHRoZSBzdGVwIGNvdW50ZXJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55IHwgbnVtYmVyPn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyBvbiBzdWNjZXNzIHdpdGggdGhlIGFtb3VudCBvZiBzdGVwcyBzaW5jZSB0aGUgc3RhcnQgY29tbWFuZCBoYXMgYmVlbiBjYWxsZWQsIG9yIHJlamVjdHMgb24gZmFpbHVyZVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzdG9wKCk6IFByb21pc2U8bnVtYmVyIHwgYW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgYW1vdW50IG9mIHN0ZXBzIGZvciB0b2RheSAob3IgLTEgaWYgaXQgbm8gZGF0YSBnaXZlbilcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55IHwgbnVtYmVyPn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyBvbiBzdWNjZXNzIHdpdGggdGhlIGFtb3VudCBvZiBzdGVwcyB0b2RheSwgb3IgcmVqZWN0cyBvbiBmYWlsdXJlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldFRvZGF5U3RlcENvdW50KCk6IFByb21pc2U8bnVtYmVyIHwgYW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgYW1vdW50IG9mIHN0ZXBzIHNpbmNlIHRoZSBzdGFydCBjb21tYW5kIGhhcyBiZWVuIGNhbGxlZFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnkgfCBudW1iZXI+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIG9uIHN1Y2Nlc3Mgd2l0aCB0aGUgYW1vdW50IG9mIHN0ZXBzIHNpbmNlIHRoZSBzdGFydCBjb21tYW5kIGhhcyBiZWVuIGNhbGxlZCwgb3IgcmVqZWN0cyBvbiBmYWlsdXJlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldFN0ZXBDb3VudCgpOiBQcm9taXNlPG51bWJlciB8IGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRydWUvZmFsc2UgaWYgQW5kcm9pZCBkZXZpY2UgaXMgcnVubmluZyA+QVBJIGxldmVsIDE5ICYmIGhhcyB0aGUgc3RlcCBjb3VudGVyIEFQSSBhdmFpbGFibGVcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55IHwgYm9vbGVhbj59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgb24gc3VjY2Vzcywgb3IgcmVqZWN0cyBvbiBmYWlsdXJlXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGRldmljZUNhbkNvdW50U3RlcHMoKTogUHJvbWlzZTxib29sZWFuIHwgYW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgc3RlcCBoaXN0b3J5IChKYXZhU2NyaXB0IG9iamVjdClcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyBvbiBzdWNjZXNzLCBvciByZWplY3RzIG9uIGZhaWx1cmVcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0SGlzdG9yeSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 627 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StreamingMedia; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var StreamingMediaOriginal = /** @class */ (function (_super) {
    __extends(StreamingMediaOriginal, _super);
    function StreamingMediaOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StreamingMediaOriginal.prototype.playVideo = function (videoUrl, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "playVideo", { "sync": true }, arguments); };
    StreamingMediaOriginal.prototype.playAudio = function (audioUrl, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "playAudio", { "sync": true }, arguments); };
    StreamingMediaOriginal.prototype.stopAudio = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stopAudio", { "sync": true }, arguments); };
    StreamingMediaOriginal.prototype.pauseAudio = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "pauseAudio", { "sync": true, "platforms": ["iOS"] }, arguments); };
    StreamingMediaOriginal.prototype.resumeAudio = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "resumeAudio", { "sync": true, "platforms": ["iOS"] }, arguments); };
    StreamingMediaOriginal.pluginName = "StreamingMedia";
    StreamingMediaOriginal.plugin = "cordova-plugin-streaming-media";
    StreamingMediaOriginal.pluginRef = "plugins.streamingMedia";
    StreamingMediaOriginal.repo = "https://github.com/nchutchind/cordova-plugin-streaming-media";
    StreamingMediaOriginal.platforms = ["Amazon Fire OS", "Android", "iOS"];
    return StreamingMediaOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var StreamingMedia = new StreamingMediaOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zdHJlYW1pbmctbWVkaWEvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBaURwQyxrQ0FBaUI7Ozs7SUFPbkQsa0NBQVMsYUFBQyxRQUFnQixFQUFFLE9BQStCO0lBUzNELGtDQUFTLGFBQUMsUUFBZ0IsRUFBRSxPQUErQjtJQU8zRCxrQ0FBUztJQU9ULG1DQUFVO0lBT1Ysb0NBQVc7Ozs7Ozt5QkF2RmI7RUFrRG9DLGlCQUFpQjtTQUF4QyxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyZWFtaW5nVmlkZW9PcHRpb25zIHtcbiAgc3VjY2Vzc0NhbGxiYWNrPzogRnVuY3Rpb247XG4gIGVycm9yQ2FsbGJhY2s/OiBGdW5jdGlvbjtcbiAgb3JpZW50YXRpb24/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyZWFtaW5nQXVkaW9PcHRpb25zIHtcbiAgYmdDb2xvcj86IHN0cmluZztcbiAgYmdJbWFnZT86IHN0cmluZztcbiAgYmdJbWFnZVNjYWxlPzogc3RyaW5nO1xuICBpbml0RnVsbHNjcmVlbj86IGJvb2xlYW47XG4gIHN1Y2Nlc3NDYWxsYmFjaz86IEZ1bmN0aW9uO1xuICBlcnJvckNhbGxiYWNrPzogRnVuY3Rpb247XG59XG5cbi8qKlxuICogQG5hbWUgU3RyZWFtaW5nIE1lZGlhXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoaXMgcGx1Z2luIGFsbG93cyB5b3UgdG8gc3RyZWFtIGF1ZGlvIGFuZCB2aWRlbyBpbiBhIGZ1bGxzY3JlZW4sIG5hdGl2ZSBwbGF5ZXIgb24gaU9TIGFuZCBBbmRyb2lkLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgU3RyZWFtaW5nTWVkaWEsIFN0cmVhbWluZ1ZpZGVvT3B0aW9ucyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc3RyZWFtaW5nLW1lZGlhJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHN0cmVhbWluZ01lZGlhOiBTdHJlYW1pbmdNZWRpYSkgeyB9XG4gKlxuICogbGV0IG9wdGlvbnM6IFN0cmVhbWluZ1ZpZGVvT3B0aW9ucyA9IHtcbiAqICAgc3VjY2Vzc0NhbGxiYWNrOiAoKSA9PiB7IGNvbnNvbGUubG9nKCdWaWRlbyBwbGF5ZWQnKSB9LFxuICogICBlcnJvckNhbGxiYWNrOiAoZSkgPT4geyBjb25zb2xlLmxvZygnRXJyb3Igc3RyZWFtaW5nJykgfSxcbiAqICAgb3JpZW50YXRpb246ICdsYW5kc2NhcGUnXG4gKiB9XG4gKlxuICogdGhpcy5zdHJlYW1pbmdNZWRpYS5wbGF5VmlkZW8oJ2h0dHBzOi8vcGF0aC90by92aWRlby9zdHJlYW0nLCBvcHRpb25zKTtcbiAqXG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBTdHJlYW1pbmdWaWRlb09wdGlvbnNcbiAqIFN0cmVhbWluZ0F1ZGlvT3B0aW9uc1xuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1N0cmVhbWluZ01lZGlhJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tc3RyZWFtaW5nLW1lZGlhJyxcbiAgcGx1Z2luUmVmOiAncGx1Z2lucy5zdHJlYW1pbmdNZWRpYScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vbmNodXRjaGluZC9jb3Jkb3ZhLXBsdWdpbi1zdHJlYW1pbmctbWVkaWEnLFxuICBwbGF0Zm9ybXM6IFsnQW1hem9uIEZpcmUgT1MnLCAnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTdHJlYW1pbmdNZWRpYSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIFN0cmVhbXMgYSB2aWRlb1xuICAgKiBAcGFyYW0gdmlkZW9Vcmwge3N0cmluZ30gVGhlIFVSTCBvZiB0aGUgdmlkZW9cbiAgICogQHBhcmFtIG9wdGlvbnMge1N0cmVhbWluZ1ZpZGVvT3B0aW9uc30gT3B0aW9uc1xuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIHBsYXlWaWRlbyh2aWRlb1VybDogc3RyaW5nLCBvcHRpb25zPzogU3RyZWFtaW5nVmlkZW9PcHRpb25zKTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogU3RyZWFtcyBhbiBhdWRpb1xuICAgKiBAcGFyYW0gYXVkaW9Vcmwge3N0cmluZ30gVGhlIFVSTCBvZiB0aGUgYXVkaW8gc3RyZWFtXG4gICAqIEBwYXJhbSBvcHRpb25zIHtTdHJlYW1pbmdBdWRpb09wdGlvbnN9IE9wdGlvbnNcbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBwbGF5QXVkaW8oYXVkaW9Vcmw6IHN0cmluZywgb3B0aW9ucz86IFN0cmVhbWluZ0F1ZGlvT3B0aW9ucyk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3BzIHN0cmVhbWluZyBhdWRpb1xuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIHN0b3BBdWRpbygpOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBQYXVzZXMgc3RyZWFtaW5nIGF1ZGlvXG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUsIHBsYXRmb3JtczogWydpT1MnXSB9KVxuICBwYXVzZUF1ZGlvKCk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIFJlc3VtZXMgc3RyZWFtaW5nIGF1ZGlvXG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUsIHBsYXRmb3JtczogWydpT1MnXSB9KVxuICByZXN1bWVBdWRpbygpOiB2b2lkIHtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 628 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Stripe; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var StripeOriginal = /** @class */ (function (_super) {
    __extends(StripeOriginal, _super);
    function StripeOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StripeOriginal.prototype.setPublishableKey = function (publishableKey) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "setPublishableKey", {}, arguments); };
    StripeOriginal.prototype.createCardToken = function (params) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createCardToken", {}, arguments); };
    StripeOriginal.prototype.createBankAccountToken = function (params) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createBankAccountToken", {}, arguments); };
    StripeOriginal.prototype.validateCardNumber = function (cardNumber) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "validateCardNumber", {}, arguments); };
    StripeOriginal.prototype.validateCVC = function (cvc) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "validateCVC", {}, arguments); };
    StripeOriginal.prototype.validateExpiryDate = function (expMonth, expYear) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "validateExpiryDate", {}, arguments); };
    StripeOriginal.prototype.getCardType = function (cardNumber) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getCardType", {}, arguments); };
    StripeOriginal.pluginName = "Stripe";
    StripeOriginal.plugin = "cordova-plugin-stripe";
    StripeOriginal.pluginRef = "cordova.plugins.stripe";
    StripeOriginal.repo = "https://github.com/zyramedia/cordova-plugin-stripe";
    StripeOriginal.platforms = ["Android", "Browser", "iOS"];
    return StripeOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Stripe = new StripeOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy9zdHJpcGUvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBZ0o1QywwQkFBaUI7Ozs7SUFRM0Msa0NBQWlCLGFBQUMsY0FBc0I7SUFVeEMsZ0NBQWUsYUFBQyxNQUE2QjtJQVU3Qyx1Q0FBc0IsYUFBQyxNQUErQjtJQVV0RCxtQ0FBa0IsYUFBQyxVQUFrQjtJQVVyQyw0QkFBVyxhQUFDLEdBQVc7SUFXdkIsbUNBQWtCLGFBQUMsUUFBZ0IsRUFBRSxPQUFlO0lBVXBELDRCQUFXLGFBQUMsVUFBa0I7Ozs7OztpQkF0TmhDO0VBaUo0QixpQkFBaUI7U0FBaEMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0cmlwZUNhcmRUb2tlblBhcmFtcyB7XG4gIC8qKlxuICAgKiBDYXJkIG51bWJlclxuICAgKi9cbiAgbnVtYmVyOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBFeHBpcnkgbW9udGhcbiAgICovXG4gIGV4cE1vbnRoOiBudW1iZXI7XG4gIC8qKlxuICAgKiBFeHBpcnkgeWVhclxuICAgKi9cbiAgZXhwWWVhcjogbnVtYmVyO1xuICAvKipcbiAgICogQ1ZDIC8gQ1ZWXG4gICAqL1xuICBjdmM/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBDYXJkaG9sZGVyIG5hbWVcbiAgICovXG4gIG5hbWU/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBZGRyZXNzIGxpbmUgMVxuICAgKi9cbiAgYWRkcmVzc19saW5lMT86IHN0cmluZztcbiAgLyoqXG4gICAqIEFkZHJlc3MgbGluZSAyXG4gICAqL1xuICBhZGRyZXNzX2xpbmUyPzogc3RyaW5nO1xuICAvKipcbiAgICogQ2l0eVxuICAgKi9cbiAgYWRkcmVzc19jaXR5Pzogc3RyaW5nO1xuICAvKipcbiAgICogU3RhdGUgLyBQcm92aW5jZVxuICAgKi9cbiAgYWRkcmVzc19zdGF0ZT86IHN0cmluZztcbiAgLyoqXG4gICAqIENvdW50cnlcbiAgICovXG4gIGFkZHJlc3NfY291bnRyeT86IHN0cmluZztcbiAgLyoqXG4gICAqIFBvc3RhbCBjb2RlIC8gWklQIENvZGVcbiAgICovXG4gIHBvc3RhbF9jb2RlPzogc3RyaW5nO1xuICAvKipcbiAgICogMy1sZXR0ZXIgSVNPIGNvZGUgZm9yIGN1cnJlbmN5XG4gICAqL1xuICBjdXJyZW5jeT86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdHJpcGVCYW5rQWNjb3VudFBhcmFtcyB7XG4gIC8qKlxuICAgKiBSb3V0aW5nIG51bWJlci5cbiAgICovXG4gIHJvdXRpbmdfbnVtYmVyOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBY2NvdW50IG51bWJlci5cbiAgICovXG4gIGFjY291bnRfbnVtYmVyOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBDdXJyZW5jeSBjb2RlLiBFeGFtcGxlOiBgVVNEYC5cbiAgICovXG4gIGN1cnJlbmN5OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBDb3VudHJ5IGNvZGUuIEV4YW1wbGU6IGBVU2AuXG4gICAqL1xuICBjb3VudHJ5OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBY2NvdW50IGhvbGRlciBuYW1lLlxuICAgKi9cbiAgYWNjb3VudF9ob2xkZXJfbmFtZT86IHN0cmluZztcbiAgLyoqXG4gICAqIEFjY291bnQgaG9sZGVyIHR5cGUuIFRoaXMgY2FuIGJlIGBpbmRpdmlkdWFsYCBvciBgY29tcGFueWAuXG4gICAqL1xuICBhY2NvdW50X2hvbGRlcl90eXBlPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0cmlwZUNhcmRUb2tlblJlcyB7XG4gIC8qKlxuICAgKiBDYXJkIE9iamVjdC5cbiAgICovXG4gIGNhcmQ6IHtcbiAgICBicmFuZDogc3RyaW5nLFxuICAgIGV4cF9tb250aDogbnVtYmVyLFxuICAgIGV4cF95ZWFyOiBudW1iZXIsXG4gICAgZnVuZGluZzogc3RyaW5nLFxuICAgIGxhc3Q0OiBzdHJpbmdcbiAgfTtcbiAgLyoqXG4gICAqIFRva2VuIFJlcXVlc3QgRGF0ZSBUaW1lLlxuICAgKi9cbiAgY3JlYXRlZDogc3RyaW5nO1xuICAvKipcbiAgICogQ2FyZCBUb2tlbi5cbiAgICovXG4gIGlkOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBTb3VyY2UgVHlwZSAoY2FyZCBvciBhY2NvdW50KS5cbiAgICovXG4gIHR5cGU6IHN0cmluZztcbn1cblxuLyoqXG4gKiBAbmFtZSBTdHJpcGVcbiAqIEBkZXNjcmlwdGlvblxuICogQSBwbHVnaW4gdGhhdCBhbGxvd3MgeW91IHRvIHVzZSBTdHJpcGUncyBOYXRpdmUgU0RLcyBmb3IgQW5kcm9pZCBhbmQgaU9TLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgU3RyaXBlIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9zdHJpcGUnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgc3RyaXBlOiBTdHJpcGUpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuc3RyaXBlLnNldFB1Ymxpc2hhYmxlS2V5KCdteV9wdWJsaXNoYWJsZV9rZXknKTtcbiAqXG4gKiBsZXQgY2FyZCA9IHtcbiAqICBudW1iZXI6ICc0MjQyNDI0MjQyNDI0MjQyJyxcbiAqICBleHBNb250aDogMTIsXG4gKiAgZXhwWWVhcjogMjAyMCxcbiAqICBjdmM6ICcyMjAnXG4gKiB9XG4gKlxuICogdGhpcy5zdHJpcGUuY3JlYXRlQ2FyZFRva2VuKGNhcmQpXG4gKiAgICAudGhlbih0b2tlbiA9PiBjb25zb2xlLmxvZyh0b2tlbi5pZCkpXG4gKiAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xuICpcbiAqIGBgYFxuICpcbiAqIEBpbnRlcmZhY2VzXG4gKiBTdHJpcGVDYXJkVG9rZW5QYXJhbXNcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdTdHJpcGUnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1zdHJpcGUnLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuc3RyaXBlJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS96eXJhbWVkaWEvY29yZG92YS1wbHVnaW4tc3RyaXBlJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnQnJvd3NlcicsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTdHJpcGUgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFNldCBwdWJsaXNoYWJsZSBrZXlcbiAgICogQHBhcmFtIHB1Ymxpc2hhYmxlS2V5IHtzdHJpbmd9IFB1Ymxpc2hhYmxlIGtleVxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXRQdWJsaXNoYWJsZUtleShwdWJsaXNoYWJsZUtleTogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSBDcmVkaXQgQ2FyZCBUb2tlblxuICAgKiBAcGFyYW0gcGFyYW1zIHtTdHJpcGVDYXJkVG9rZW5QYXJhbXN9IENyZWRpdCBjYXJkIGluZm9ybWF0aW9uXG4gICAqIEByZXR1cm4ge1Byb21pc2U8U3RyaXBlQ2FyZFRva2VuUmVzPn0gcmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSB0b2tlbiBvYmplY3QsIG9yIHJlamVjdHMgd2l0aCBhbiBlcnJvclxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBjcmVhdGVDYXJkVG9rZW4ocGFyYW1zOiBTdHJpcGVDYXJkVG9rZW5QYXJhbXMpOiBQcm9taXNlPFN0cmlwZUNhcmRUb2tlblJlcz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgYSBiYW5rIGFjY291bnQgdG9rZW5cbiAgICogQHBhcmFtIHBhcmFtcyB7U3RyaXBlQmFua0FjY291bnRQYXJhbXN9IEJhbmsgYWNjb3VudCBpbmZvcm1hdGlvblxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHN0cmluZz59IHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgdG9rZW4sIG9yIHJlamVjdHMgd2l0aCBhbiBlcnJvclxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBjcmVhdGVCYW5rQWNjb3VudFRva2VuKHBhcmFtczogU3RyaXBlQmFua0FjY291bnRQYXJhbXMpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgYSBjcmVkaXQgY2FyZCBudW1iZXJcbiAgICogQHBhcmFtIGNhcmROdW1iZXIge3N0cmluZ30gQ3JlZGl0IGNhcmQgbnVtYmVyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gcmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyBpZiB0aGUgbnVtYmVyIGlzIHZhbGlkLCBhbmQgcmVqZWN0cyBpZiBpdCdzIGludmFsaWRcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgdmFsaWRhdGVDYXJkTnVtYmVyKGNhcmROdW1iZXI6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFZhbGlkYXRlcyBhIENWQyBudW1iZXJcbiAgICogQHBhcmFtIGN2YyB7c3RyaW5nfSBDVkMgbnVtYmVyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gcmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyBpZiB0aGUgbnVtYmVyIGlzIHZhbGlkLCBhbmQgcmVqZWN0cyBpZiBpdCdzIGludmFsaWRcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgdmFsaWRhdGVDVkMoY3ZjOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgYW4gZXhwaXJ5IGRhdGVcbiAgICogQHBhcmFtIGV4cE1vbnRoIHtzdHJpbmd9IGV4cGlyeSBtb250aFxuICAgKiBAcGFyYW0gZXhwWWVhciB7c3RyaW5nfSBleHBpcnkgeWVhclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgaWYgdGhlIGRhdGUgaXMgdmFsaWQsIGFuZCByZWplY3RzIGlmIGl0J3MgaW52YWxpZFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICB2YWxpZGF0ZUV4cGlyeURhdGUoZXhwTW9udGg6IHN0cmluZywgZXhwWWVhcjogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogR2V0IGEgY2FyZCB0eXBlIGZyb20gY2FyZCBudW1iZXJcbiAgICogQHBhcmFtIGNhcmROdW1iZXIge3N0cmluZ30gQ2FyZCBudW1iZXJcbiAgICogQHJldHVybiB7UHJvbWlzZTxzdHJpbmc+fSByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIGNyZWRpdCBjYXJkIHR5cGVcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0Q2FyZFR5cGUoY2FyZE51bWJlcjogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 629 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TapticEngine; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var TapticEngineOriginal = /** @class */ (function (_super) {
    __extends(TapticEngineOriginal, _super);
    function TapticEngineOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TapticEngineOriginal.prototype.selection = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "selection", {}, arguments); };
    TapticEngineOriginal.prototype.notification = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "notification", {}, arguments); };
    TapticEngineOriginal.prototype.impact = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "impact", {}, arguments); };
    TapticEngineOriginal.pluginName = "TapticEngine";
    TapticEngineOriginal.plugin = "cordova-plugin-taptic-engine";
    TapticEngineOriginal.pluginRef = "TapticEngine";
    TapticEngineOriginal.repo = "https://github.com/EddyVerbruggen/cordova-plugin-taptic-engine";
    TapticEngineOriginal.platforms = ["iOS"];
    return TapticEngineOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var TapticEngine = new TapticEngineOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy90YXB0aWMtZW5naW5lL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQWtDdEMsZ0NBQWlCOzs7O0lBT2pELGdDQUFTO0lBV1QsbUNBQVksYUFBQyxPQUF5QjtJQVd0Qyw2QkFBTSxhQUFDLE9BQTBCOzs7Ozs7dUJBL0RuQztFQWtDa0MsaUJBQWlCO1NBQXRDLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBUYXB0aWMgRW5naW5lXG4gKiBAZGVzY3JpcHRpb25cbiAqIEFuIElvbmljIHBsdWdpbiB0byB1c2UgVGFwdGljIEVuZ2luZSBBUEkgb24gaVBob25lIDcsIDcgUGx1cyBvciBuZXdlci5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFRhcHRpY0VuZ2luZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvdGFwdGljLWVuZ2luZSc7XG4gKlxuICogLi4uXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB0YXB0aWM6IFRhcHRpY0VuZ2luZSkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy50YXB0aWMuc2VsZWN0aW9uKCk7XG4gKlxuICogdGhpcy50YXB0aWMubm90aWZpY2F0aW9uKCk7XG4gKlxuICogdGhpcy50YXB0aWMuaW1wYWN0KCk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnVGFwdGljRW5naW5lJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tdGFwdGljLWVuZ2luZScsXG4gIHBsdWdpblJlZjogJ1RhcHRpY0VuZ2luZScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vRWRkeVZlcmJydWdnZW4vY29yZG92YS1wbHVnaW4tdGFwdGljLWVuZ2luZScsXG4gIHBsYXRmb3JtczogWydpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUYXB0aWNFbmdpbmUgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFVzZSBzZWxlY3Rpb24gZmVlZGJhY2sgZ2VuZXJhdG9ycyB0byBpbmRpY2F0ZSBhIGNoYW5nZSBpbiBzZWxlY3Rpb24uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgb24gc3VjY2VzcyBhbmQgcmVqZWN0cyBvbiBlcnJvclxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZWxlY3Rpb24oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVXNlIHRoaXMgdG8gaW5kaWNhdGUgc3VjY2Vzcy9mYWlsdXJlL3dhcm5pbmcgdG8gdGhlIHVzZXIuXG4gICAqIEBwYXJhbSBvcHRpb25zIHtPYmplY3R9IHNob3VsZCBiZSBvZiB0aGUgdHlwZSB7IHR5cGU6ICdzdWNjZXNzJyB9IChvciAnd2FybmluZycvJ2Vycm9yJylcbiAgICogQHBhcmFtIG9wdGlvbnMudHlwZSB7c3RyaW5nfVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIG9uIHN1Y2Nlc3MgYW5kIHJlamVjdHMgb24gZXJyb3JcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgbm90aWZpY2F0aW9uKG9wdGlvbnM6IHsgdHlwZTogc3RyaW5nIH0pOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBVc2UgdGhpcyB0byBpbmRpY2F0ZSBzdWNjZXNzL2ZhaWx1cmUvd2FybmluZyB0byB0aGUgdXNlci5cbiAgICogQHBhcmFtIG9wdGlvbnMge09iamVjdH0gc2hvdWxkIGJlIG9mIHRoZSB0eXBlIHsgc3R5bGU6ICdsaWdodCcgfSAob3IgJ21lZGl1bScvJ2hlYXZ5JylcbiAgICogQHBhcmFtIG9wdGlvbnMudHlwZSB7c3RyaW5nfVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIG9uIHN1Y2Nlc3MgYW5kIHJlamVjdHMgb24gZXJyb3JcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaW1wYWN0KG9wdGlvbnM6IHsgc3R5bGU6IHN0cmluZyB9KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 630 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextToSpeech; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var TextToSpeechOriginal = /** @class */ (function (_super) {
    __extends(TextToSpeechOriginal, _super);
    function TextToSpeechOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TextToSpeechOriginal.prototype.speak = function (textOrOptions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "speak", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    TextToSpeechOriginal.prototype.stop = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stop", {}, arguments); };
    TextToSpeechOriginal.pluginName = "Text To Speech";
    TextToSpeechOriginal.plugin = "cordova-plugin-tts";
    TextToSpeechOriginal.pluginRef = "TTS";
    TextToSpeechOriginal.repo = "https://github.com/vilic/cordova-plugin-tts";
    TextToSpeechOriginal.platforms = ["Android", "iOS", "Windows Phone 8"];
    return TextToSpeechOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var TextToSpeech = new TextToSpeechOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy90ZXh0LXRvLXNwZWVjaC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUF3Q3RDLGdDQUFpQjs7OztJQVdqRCw0QkFBSyxhQUFDLGFBQWtDO0lBU3hDLDJCQUFJOzs7Ozs7dUJBN0ROO0VBeUNrQyxpQkFBaUI7U0FBdEMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRUU09wdGlvbnMge1xuICAvKiogdGV4dCB0byBzcGVhayAqL1xuICB0ZXh0OiBzdHJpbmc7XG4gIC8qKiBhIHN0cmluZyBsaWtlICdlbi1VUycsICd6aC1DTicsIGV0YyAqL1xuICBsb2NhbGU/OiBzdHJpbmc7XG4gIC8qKiBzcGVlZCByYXRlLCAwIH4gMSAqL1xuICByYXRlPzogbnVtYmVyO1xufVxuXG4vKipcbiAqIEBuYW1lIFRleHQgVG8gU3BlZWNoXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRleHQgdG8gU3BlZWNoIHBsdWdpblxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgVGV4dFRvU3BlZWNoIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS90ZXh0LXRvLXNwZWVjaCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB0dHM6IFRleHRUb1NwZWVjaCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy50dHMuc3BlYWsoJ0hlbGxvIFdvcmxkJylcbiAqICAgLnRoZW4oKCkgPT4gY29uc29sZS5sb2coJ1N1Y2Nlc3MnKSlcbiAqICAgLmNhdGNoKChyZWFzb246IGFueSkgPT4gY29uc29sZS5sb2cocmVhc29uKSk7XG4gKlxuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogVFRTT3B0aW9uc1xuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1RleHQgVG8gU3BlZWNoJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tdHRzJyxcbiAgcGx1Z2luUmVmOiAnVFRTJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS92aWxpYy9jb3Jkb3ZhLXBsdWdpbi10dHMnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnLCAnV2luZG93cyBQaG9uZSA4J11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVGV4dFRvU3BlZWNoIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIHNwZWFrc1xuICAgKiBAcGFyYW0gdGV4dE9yT3B0aW9ucyB7c3RyaW5nIHwgVFRTT3B0aW9uc30gVGV4dCB0byBzcGVhayBvciBUVFNPcHRpb25zXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBzcGVha2luZyBmaW5pc2hlc1xuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN1Y2Nlc3NJbmRleDogMSxcbiAgICBlcnJvckluZGV4OiAyXG4gIH0pXG4gIHNwZWFrKHRleHRPck9wdGlvbnM6IHN0cmluZyB8IFRUU09wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdG9wIGFueSBjdXJyZW50IFRUUyBwbGF5YmFja1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHN0b3AoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 631 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* unused harmony export ThemeableBrowserObject */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ThemeableBrowser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var ThemeableBrowserObject = /** @class */ (function () {
    function ThemeableBrowserObject(url, target, styleOptions) {
        try {
            this._objectInstance = cordova.ThemeableBrowser.open(url, target, styleOptions);
        }
        catch (e) {
            window.open(url);
            console.warn('Native: ThemeableBrowserOriginal is not installed or you are running on a browser. Falling back to window.open.');
        }
    }
    ThemeableBrowserObject.prototype.show = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "show", { "sync": true }, arguments); };
    ThemeableBrowserObject.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "close", { "sync": true }, arguments); };
    ThemeableBrowserObject.prototype.reload = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "reload", { "sync": true }, arguments); };
    ThemeableBrowserObject.prototype.executeScript = function (script) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "executeScript", {}, arguments); };
    ThemeableBrowserObject.prototype.insertCss = function (css) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaInstance"])(this, "insertCss", {}, arguments); };
    ThemeableBrowserObject.prototype.on = function (event) { return function () {
        var _this = this;
        if (Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["instanceAvailability"])(this) === true) {
            return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["Observable"](function (observer) {
                _this._objectInstance.addEventListener(event, observer.next.bind(observer));
                return function () { return _this._objectInstance.removeEventListener(event, observer.next.bind(observer)); };
            });
        }
    }(); };
    return ThemeableBrowserObject;
}());

var ThemeableBrowserOriginal = /** @class */ (function (_super) {
    __extends(ThemeableBrowserOriginal, _super);
    function ThemeableBrowserOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Creates a browser instance
     * @param url {string} URL to open
     * @param target {string} Target
     * @param styleOptions {ThemeableBrowserOptions} Themeable browser options
     * @returns {ThemeableBrowserObject}
     */
    ThemeableBrowserOriginal.prototype.create = function (url, target, styleOptions) {
        return new ThemeableBrowserObject(url, target, styleOptions);
    };
    ThemeableBrowserOriginal.pluginName = "ThemeableBrowser";
    ThemeableBrowserOriginal.plugin = "cordova-plugin-themeablebrowser";
    ThemeableBrowserOriginal.pluginRef = "cordova.ThemeableBrowser";
    ThemeableBrowserOriginal.repo = "https://github.com/initialxy/cordova-plugin-themeablebrowser";
    ThemeableBrowserOriginal.platforms = ["Amazon Fire OS", "Android", "Blackberry 10", "Browser", "FirefoxOS", "iOS", "Ubuntu", "Windows", "Windows Phone"];
    return ThemeableBrowserOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var ThemeableBrowser = new ThemeableBrowserOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 632 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ThreeDeeTouch; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var ThreeDeeTouchOriginal = /** @class */ (function (_super) {
    __extends(ThreeDeeTouchOriginal, _super);
    function ThreeDeeTouchOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ThreeDeeTouchOriginal.prototype.isAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAvailable", {}, arguments); };
    ThreeDeeTouchOriginal.prototype.watchForceTouches = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "watchForceTouches", { "observable": true }, arguments); };
    ThreeDeeTouchOriginal.prototype.configureQuickActions = function (quickActions) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "configureQuickActions", { "sync": true }, arguments); };
    ThreeDeeTouchOriginal.prototype.onHomeIconPressed = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaFunctionOverride"])(this, "onHomeIconPressed", {}, arguments); };
    ThreeDeeTouchOriginal.prototype.enableLinkPreview = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "enableLinkPreview", { "sync": true }, arguments); };
    ThreeDeeTouchOriginal.prototype.disableLinkPreview = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "disableLinkPreview", { "sync": true }, arguments); };
    ThreeDeeTouchOriginal.pluginName = "ThreeDeeTouch";
    ThreeDeeTouchOriginal.plugin = "cordova-plugin-3dtouch";
    ThreeDeeTouchOriginal.pluginRef = "ThreeDeeTouch";
    ThreeDeeTouchOriginal.repo = "https://github.com/EddyVerbruggen/cordova-plugin-3dtouch";
    ThreeDeeTouchOriginal.platforms = ["iOS"];
    return ThreeDeeTouchOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var ThreeDeeTouch = new ThreeDeeTouchOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy90aHJlZS1kZWUtdG91Y2gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sbUVBQStELE1BQU0sb0JBQW9CLENBQUM7QUFDakcsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztJQStIVixpQ0FBaUI7Ozs7SUFPbEQsbUNBQVc7SUFXWCx5Q0FBaUI7SUFlakIsNkNBQXFCLGFBQUMsWUFBNkM7SUFRbkUseUNBQWlCO0lBV2pCLHlDQUFpQjtJQVNqQiwwQ0FBa0I7Ozs7Ozt3QkE5THBCO0VBaUltQyxpQkFBaUI7U0FBdkMsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIENvcmRvdmFGdW5jdGlvbk92ZXJyaWRlLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL09ic2VydmFibGUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRocmVlRGVlVG91Y2hRdWlja0FjdGlvbiB7XG5cbiAgLyoqXG4gICAqIFR5cGUgdGhhdCBjYW4gYmUgdXNlZCBpbiB0aGUgb25Ib21lSWNvblByZXNzZWQgY2FsbGJhY2tcbiAgICovXG4gIHR5cGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRpdGxlXG4gICAqL1xuICB0aXRsZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBTdWJ0aXRsZVxuICAgKi9cbiAgc3VidGl0bGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEljb24gdHlwZS4gQ2FzZSBpbnNlbnNpdGl2ZVxuICAgKi9cbiAgaWNvblR5cGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEljb24gdGVtcGxhdGVcbiAgICovXG4gIGljb25UZW1wbGF0ZT86IHN0cmluZztcblxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRocmVlRGVlVG91Y2hGb3JjZVRvdWNoIHtcblxuICAvKipcbiAgICogVG91Y2ggZm9yY2VcbiAgICovXG4gIGZvcmNlOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRpbWVzdGFtcCBvZiBhY3Rpb25cbiAgICovXG4gIHRpbWVzdGFtcDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBYIGNvb3JkaW5hdGUgb2YgYWN0aW9uXG4gICAqL1xuICB4OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFkgY29vcmRpbmF0ZSBvZiBhY3Rpb25cbiAgICovXG4gIHk6IG51bWJlcjtcblxufVxuXG4vKipcbiAqIEBuYW1lIDNEIFRvdWNoXG4gKiBAZGVzY3JpcHRpb25cbiAqIEB1c2FnZVxuICogUGxlYXNlIGRvIHJlZmVyIHRvIHRoZSBvcmlnaW5hbCBwbHVnaW4ncyByZXBvIGZvciBkZXRhaWxlZCB1c2FnZS4gVGhlIHVzYWdlIGV4YW1wbGUgaGVyZSBtaWdodCBub3QgYmUgc3VmZmljaWVudC5cbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFRocmVlRGVlVG91Y2gsIFRocmVlRGVlVG91Y2hRdWlja0FjdGlvbiwgVGhyZWVEZWVUb3VjaEZvcmNlVG91Y2ggfSBmcm9tICdAaW9uaWMtbmF0aXZlL3RocmVlLWRlZS10b3VjaCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB0aHJlZURlZVRvdWNoOiBUaHJlZURlZVRvdWNoKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLnRocmVlRGVlVG91Y2guaXNBdmFpbGFibGUoKS50aGVuKGlzQXZhaWxhYmxlID0+IGNvbnNvbGUubG9nKCczRCBUb3VjaCBhdmFpbGFibGU/ICcgKyBpc0F2YWlsYWJsZSkpO1xuICpcbiAqIHRoaXMudGhyZWVEZWVUb3VjaC53YXRjaEZvcmNlVG91Y2hlcygpXG4gKiAgIC5zdWJzY3JpYmUoXG4gKiAgICAgKGRhdGE6IFRocmVlRGVlVG91Y2hGb3JjZVRvdWNoKSA9PiB7XG4gKiAgICAgICBjb25zb2xlLmxvZygnRm9yY2UgdG91Y2ggJScgKyBkYXRhLmZvcmNlKTtcbiAqICAgICAgIGNvbnNvbGUubG9nKCdGb3JjZSB0b3VjaCB0aW1lc3RhbXA6ICcgKyBkYXRhLnRpbWVzdGFtcCk7XG4gKiAgICAgICBjb25zb2xlLmxvZygnRm9yY2UgdG91Y2ggeDogJyArIGRhdGEueCk7XG4gKiAgICAgICBjb25zb2xlLmxvZygnRm9yY2UgdG91Y2ggeTogJyArIGRhdGEueSk7XG4gKiAgICAgfVxuICogICApO1xuICpcbiAqXG4gKiBsZXQgYWN0aW9uczogQXJyYXk8VGhyZWVEZWVUb3VjaFF1aWNrQWN0aW9uPiA9IFtcbiAqICAge1xuICogICAgIHR5cGU6ICdjaGVja2luJyxcbiAqICAgICB0aXRsZTogJ0NoZWNrIGluJyxcbiAqICAgICBzdWJ0aXRsZTogJ1F1aWNrbHkgY2hlY2sgaW4nLFxuICogICAgIGljb25UeXBlOiAnQ29tcG9zZSdcbiAqICAgfSxcbiAqICAge1xuICogICAgIHR5cGU6ICdzaGFyZScsXG4gKiAgICAgdGl0bGU6ICdTaGFyZScsXG4gKiAgICAgc3VidGl0bGU6ICdTaGFyZSBsaWtlIHlvdSBjYXJlJyxcbiAqICAgICBpY29uVHlwZTogJ1NoYXJlJ1xuICogICB9LFxuICogICB7XG4gKiAgICAgdHlwZTogJ3NlYXJjaCcsXG4gKiAgICAgdGl0bGU6ICdTZWFyY2gnLFxuICogICAgIGljb25UeXBlOiAnU2VhcmNoJ1xuICogICB9LFxuICogICB7XG4gKiAgICAgdGl0bGU6ICdTaG93IGZhdm9yaXRlcycsXG4gKiAgICAgaWNvblRlbXBsYXRlOiAnSGVhcnRUZW1wbGF0ZSdcbiAqICAgfVxuICogXTtcbiAqXG4gKiB0aGlzLnRocmVlRGVlVG91Y2guY29uZmlndXJlUXVpY2tBY3Rpb25zKGFjdGlvbnMpO1xuICpcbiAqIHRoaXMudGhyZWVEZWVUb3VjaC5vbkhvbWVJY29uUHJlc3NlZCgpLnN1YnNjcmliZShcbiAqICAocGF5bG9hZCkgPT4ge1xuICogICAgLy8gcmV0dXJucyBhbiBvYmplY3QgdGhhdCBpcyB0aGUgYnV0dG9uIHlvdSBwcmVzZWRcbiAqICAgIGNvbnNvbGUubG9nKCdQcmVzc2VkIHRoZSAke3BheWxvYWQudGl0bGV9IGJ1dHRvbicpXG4gKiAgICBjb25zb2xlLmxvZyhwYXlsb2FkLnR5cGUpXG4gKlxuICogIH1cbiAqIClcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIFRocmVlRGVlVG91Y2hRdWlja0FjdGlvblxuICogVGhyZWVEZWVUb3VjaEZvcmNlVG91Y2hcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdUaHJlZURlZVRvdWNoJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tM2R0b3VjaCcsXG4gIHBsdWdpblJlZjogJ1RocmVlRGVlVG91Y2gnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL0VkZHlWZXJicnVnZ2VuL2NvcmRvdmEtcGx1Z2luLTNkdG91Y2gnLFxuICBwbGF0Zm9ybXM6IFsnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVGhyZWVEZWVUb3VjaCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogWW91IG5lZWQgYW4gaVBob25lIDZTIG9yIHNvbWUgZnV0dXJlIHRlY2ggdG8gdXNlIHRoZSBmZWF0dXJlcyBvZiB0aGlzIHBsdWdpbiwgc28geW91IGNhbiBjaGVjayBhdCBydW50aW1lIGlmIHRoZSB1c2VyJ3MgZGV2aWNlIGlzIHN1cHBvcnRlZC5cbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59IHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIGJvb2xlYW4gdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgcGx1Z2luIGlzIGF2YWlsYWJsZSBvciBub3RcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaXNBdmFpbGFibGUoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFlvdSBjYW4gZ2V0IGEgbm90aWZpY2F0aW9uIHdoZW4gdGhlIHVzZXIgZm9yY2UgdG91Y2hlcyB0aGUgd2Vidmlldy4gVGhlIHBsdWdpbiBkZWZpbmVzIGEgRm9yY2UgVG91Y2ggd2hlbiBhdCBsZWFzdCA3NSUgb2YgdGhlIG1heGltdW0gZm9yY2UgaXMgYXBwbGllZCB0byB0aGUgc2NyZWVuLiBZb3VyIGFwcCB3aWxsIHJlY2VpdmUgdGhlIHggYW5kIHkgY29vcmRpbmF0ZXMsIHNvIHlvdSBoYXZlIHRvIGZpZ3VyZSBvdXQgd2hpY2ggVUkgZWxlbWVudCB3YXMgdG91Y2hlZC5cbiAgICogQHJldHVybnMge09ic2VydmFibGU8VGhyZWVEZWVUb3VjaEZvcmNlVG91Y2g+fSBSZXR1cm5zIGFuIG9ic2VydmFibGUgdGhhdCBzZW5kcyBhIGBUaHJlZURlZVRvdWNoRm9yY2VUb3VjaGAgb2JqZWN0XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZVxuICB9KVxuICB3YXRjaEZvcmNlVG91Y2hlcygpOiBPYnNlcnZhYmxlPFRocmVlRGVlVG91Y2hGb3JjZVRvdWNoPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIHNldHVwIHRoZSAzRC10b3VjaCBhY3Rpb25zLCB0YWtlcyBhbiBhcnJheSBvZiBvYmplY3RzIHdpdGggdGhlIGZvbGxvd2luZ1xuICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZSAob3B0aW9uYWwpIEEgdHlwZSB0aGF0IGNhbiBiZSB1c2VkIGBvbkhvbWVJY29uUHJlc3NlZGAgY2FsbGJhY2tcbiAgICogQHBhcmFtIHtzdHJpbmd9IHRpdGxlIFRpdGxlIGZvciB5b3VyIGFjdGlvblxuICAgKiBAcGFyYW0ge3N0cmluZ30gc3VidGl0bGUgKG9wdGlvbmFsKSBBIHNob3J0IGRlc2NyaXB0aW9uIGZvciB5b3VyIGFjdGlvblxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWNvblR5cGUgKG9wdGlvbmFsKSBDaG9vc2UgYmV0d2VlbiBQcm9oaWJpdCwgQ29udGFjdCwgSG9tZSwgTWFya0xvY2F0aW9uLCBGYXZvcml0ZSwgTG92ZSwgQ2xvdWQsIEludml0YXRpb24sIENvbmZpcm1hdGlvbiwgTWFpbCwgTWVzc2FnZSwgRGF0ZSwgVGltZSwgQ2FwdHVyZVBob3RvLCBDYXB0dXJlVmlkZW8sIFRhc2ssIFRhc2tDb21wbGV0ZWQsIEFsYXJtLCBCb29rbWFyaywgU2h1ZmZsZSwgQXVkaW8sIFVwZGF0ZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWNvblRlbXBsYXRlIChvcHRpb25hbCkgQ2FuIGJlIHVzZWQgdG8gcHJvdmlkZSB5b3VyIG93biBpY29uXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBjb25maWd1cmVRdWlja0FjdGlvbnMocXVpY2tBY3Rpb25zOiBBcnJheTxUaHJlZURlZVRvdWNoUXVpY2tBY3Rpb24+KTogdm9pZCB7XG4gIH1cblxuICAvKipcbiAgICogV2hlbiBhIGhvbWUgaWNvbiBpcyBwcmVzc2VkLCB5b3VyIGFwcCBsYXVuY2hlcyBhbmQgdGhpcyBKUyBjYWxsYmFjayBpcyBpbnZva2VkLlxuICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxhbnk+fSByZXR1cm5zIGFuIG9ic2VydmFibGUgdGhhdCBub3RpZmllcyB5b3Ugd2hlbiBoZSB1c2VyIHByZXNzZXMgb24gdGhlIGhvbWUgc2NyZWVuIGljb25cbiAgICovXG4gIEBDb3Jkb3ZhRnVuY3Rpb25PdmVycmlkZSgpXG4gIG9uSG9tZUljb25QcmVzc2VkKCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEVuYWJsZSBMaW5rIFByZXZpZXcuXG4gICAqIFVJV2ViVmlldyBhbmQgV0tXZWJWaWV3ICh0aGUgd2Vidmlld3MgcG93ZXJpbmcgQ29yZG92YSBhcHBzKSBkb24ndCBhbGxvdyB0aGUgZmFuY3kgbmV3IGxpbmsgcHJldmlldyBmZWF0dXJlIG9mIGlPUzkuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBlbmFibGVMaW5rUHJldmlldygpOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBEaXNhYmxlZCB0aGUgbGluayBwcmV2aWV3IGZlYXR1cmUsIGlmIGVuYWJsZWQuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICBkaXNhYmxlTGlua1ByZXZpZXcoKTogdm9pZCB7XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 633 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Toast; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var ToastOriginal = /** @class */ (function (_super) {
    __extends(ToastOriginal, _super);
    function ToastOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToastOriginal.prototype.show = function (message, duration, position) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", { "observable": true, "clearFunction": "hide" }, arguments); };
    ToastOriginal.prototype.hide = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hide", {}, arguments); };
    ToastOriginal.prototype.showWithOptions = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showWithOptions", { "observable": true, "clearFunction": "hide" }, arguments); };
    ToastOriginal.prototype.showShortTop = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showShortTop", { "observable": true, "clearFunction": "hide" }, arguments); };
    ToastOriginal.prototype.showShortCenter = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showShortCenter", { "observable": true, "clearFunction": "hide" }, arguments); };
    ToastOriginal.prototype.showShortBottom = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showShortBottom", { "observable": true, "clearFunction": "hide" }, arguments); };
    ToastOriginal.prototype.showLongTop = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showLongTop", { "observable": true, "clearFunction": "hide" }, arguments); };
    ToastOriginal.prototype.showLongCenter = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showLongCenter", { "observable": true, "clearFunction": "hide" }, arguments); };
    ToastOriginal.prototype.showLongBottom = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showLongBottom", { "observable": true, "clearFunction": "hide" }, arguments); };
    ToastOriginal.pluginName = "Toast";
    ToastOriginal.plugin = "cordova-plugin-x-toast";
    ToastOriginal.pluginRef = "plugins.toast";
    ToastOriginal.repo = "https://github.com/EddyVerbruggen/Toast-PhoneGap-Plugin";
    ToastOriginal.platforms = ["Android", "BlackBerry 10", "iOS", "Windows", "Windows Phone 8"];
    return ToastOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Toast = new ToastOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 634 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TouchID; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var TouchIDOriginal = /** @class */ (function (_super) {
    __extends(TouchIDOriginal, _super);
    function TouchIDOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TouchIDOriginal.prototype.isAvailable = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "isAvailable", {}, arguments); };
    TouchIDOriginal.prototype.verifyFingerprint = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "verifyFingerprint", {}, arguments); };
    TouchIDOriginal.prototype.verifyFingerprintWithCustomPasswordFallback = function (message) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "verifyFingerprintWithCustomPasswordFallback", {}, arguments); };
    TouchIDOriginal.prototype.verifyFingerprintWithCustomPasswordFallbackAndEnterPasswordLabel = function (message, enterPasswordLabel) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "verifyFingerprintWithCustomPasswordFallbackAndEnterPasswordLabel", {}, arguments); };
    TouchIDOriginal.prototype.didFingerprintDatabaseChange = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "didFingerprintDatabaseChange", {}, arguments); };
    TouchIDOriginal.pluginName = "TouchID";
    TouchIDOriginal.plugin = "cordova-plugin-touch-id";
    TouchIDOriginal.pluginRef = "plugins.touchid";
    TouchIDOriginal.repo = "https://github.com/EddyVerbruggen/cordova-plugin-touch-id";
    TouchIDOriginal.platforms = ["iOS"];
    return TouchIDOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var TouchID = new TouchIDOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy90b3VjaC1pZC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFvRDNDLDJCQUFpQjs7OztJQVE1Qyw2QkFBVztJQVdYLG1DQUFpQixhQUFDLE9BQWU7SUFXakMsNkRBQTJDLGFBQUMsT0FBZTtJQVkzRCxrRkFBZ0UsYUFBQyxPQUFlLEVBQUUsa0JBQTBCO0lBVTVHLDhDQUE0Qjs7Ozs7O2tCQXpHOUI7RUFxRDZCLGlCQUFpQjtTQUFqQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cblxuLyoqXG4gKiBAbmFtZSBUb3VjaCBJRFxuICogQGRlc2NyaXB0aW9uXG4gKiBTY2FuIHRoZSBmaW5nZXJwcmludCBvZiBhIHVzZXIgd2l0aCB0aGUgVG91Y2hJRCBzZW5zb3IuXG4gKlxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGBjb3Jkb3ZhLXBsdWdpbi10b3VjaC1pZGAuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtUb3VjaElEIHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vRWRkeVZlcmJydWdnZW4vY29yZG92YS1wbHVnaW4tdG91Y2gtaWQpLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgVG91Y2hJRCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvdG91Y2gtaWQnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgdG91Y2hJZDogVG91Y2hJRCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy50b3VjaElkLmlzQXZhaWxhYmxlKClcbiAqICAgLnRoZW4oXG4gKiAgICAgcmVzID0+IGNvbnNvbGUubG9nKCdUb3VjaElEIGlzIGF2YWlsYWJsZSEnKSxcbiAqICAgICBlcnIgPT4gY29uc29sZS5lcnJvcignVG91Y2hJRCBpcyBub3QgYXZhaWxhYmxlJywgZXJyKVxuICogICApO1xuICpcbiAqIHRoaXMudG91Y2hJZC52ZXJpZnlGaW5nZXJwcmludCgnU2NhbiB5b3VyIGZpbmdlcnByaW50IHBsZWFzZScpXG4gKiAgIC50aGVuKFxuICogICAgIHJlcyA9PiBjb25zb2xlLmxvZygnT2snLCByZXMpLFxuICogICAgIGVyciA9PiBjb25zb2xlLmVycm9yKCdFcnJvcicsIGVycilcbiAqICAgKTtcbiAqIGBgYFxuICpcbiAqICMjIyBFcnJvciBDb2Rlc1xuICpcbiAqIFRoZSBwbHVnaW4gd2lsbCByZWplY3QgZm9yIHZhcmlvdXMgcmVhc29ucy4gWW91ciBhcHAgd2lsbCBtb3N0IGxpa2VseSBuZWVkIHRvIHJlc3BvbmQgdG8gdGhlIGNhc2VzIGRpZmZlcmVudGx5LlxuICpcbiAqIEhlcmUgaXMgYSBsaXN0IG9mIHNvbWUgb2YgdGhlIGVycm9yIGNvZGVzOlxuICpcbiAqICAtICBgLTFgIC0gRmluZ2VycHJpbnQgc2NhbiBmYWlsZWQgbW9yZSB0aGFuIDMgdGltZXNcbiAqICAtICBgLTJgIG9yIGAtMTI4YCAtIFVzZXIgdGFwcGVkIHRoZSAnQ2FuY2VsJyBidXR0b25cbiAqICAtICBgLTNgIC0gVXNlciB0YXBwZWQgdGhlICdFbnRlciBQYXNzY29kZScgb3IgJ0VudGVyIFBhc3N3b3JkJyBidXR0b25cbiAqICAtICBgLTRgIC0gVGhlIHNjYW4gd2FzIGNhbmNlbGxlZCBieSB0aGUgc3lzdGVtIChIb21lIGJ1dHRvbiBmb3IgZXhhbXBsZSlcbiAqICAtICBgLTZgIC0gVG91Y2hJRCBpcyBub3QgQXZhaWxhYmxlXG4gKiAgLSAgYC04YCAtIFRvdWNoSUQgaXMgbG9ja2VkIG91dCBmcm9tIHRvbyBtYW55IHRyaWVzXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnVG91Y2hJRCcsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXRvdWNoLWlkJyxcbiAgcGx1Z2luUmVmOiAncGx1Z2lucy50b3VjaGlkJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9FZGR5VmVyYnJ1Z2dlbi9jb3Jkb3ZhLXBsdWdpbi10b3VjaC1pZCcsXG4gIHBsYXRmb3JtczogWydpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUb3VjaElEIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBDaGVja3MgV2hldGhlciBUb3VjaElEIGlzIGF2YWlsYWJsZSBvciBub3QuXG4gICAqXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgaWYgeWVzLCByZWplY3RzIGlmIG5vLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc0F2YWlsYWJsZSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTaG93IFRvdWNoSUQgZGlhbG9nIGFuZCB3YWl0IGZvciBhIGZpbmdlcnByaW50IHNjYW4uIElmIHVzZXIgdGFwcyAnRW50ZXIgUGFzc3dvcmQnIGJ1dHRvbiwgYnJpbmdzIHVwIHN0YW5kYXJkIHN5c3RlbSBwYXNzY29kZSBzY3JlZW4uXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlICBUaGUgbWVzc2FnZSB0byBkaXNwbGF5XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoZSByZXNvbHZlcyBpZiB0aGUgZmluZ2VycHJpbnQgc2NhbiB3YXMgc3VjY2Vzc2Z1bCwgcmVqZWN0cyB3aXRoIGFuIGVycm9yIGNvZGUgKHNlZSBhYm92ZSkuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHZlcmlmeUZpbmdlcnByaW50KG1lc3NhZ2U6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNob3cgVG91Y2hJRCBkaWFsb2cgYW5kIHdhaXQgZm9yIGEgZmluZ2VycHJpbnQgc2Nhbi4gSWYgdXNlciB0YXBzICdFbnRlciBQYXNzd29yZCcgYnV0dG9uLCByZWplY3RzIHdpdGggY29kZSAnLTMnIChzZWUgYWJvdmUpLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSAgVGhlIG1lc3NhZ2UgdG8gZGlzcGxheVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGUgcmVzb2x2ZXMgaWYgdGhlIGZpbmdlcnByaW50IHNjYW4gd2FzIHN1Y2Nlc3NmdWwsIHJlamVjdHMgd2l0aCBhbiBlcnJvciBjb2RlIChzZWUgYWJvdmUpLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICB2ZXJpZnlGaW5nZXJwcmludFdpdGhDdXN0b21QYXNzd29yZEZhbGxiYWNrKG1lc3NhZ2U6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNob3cgVG91Y2hJRCBkaWFsb2cgd2l0aCBjdXN0b20gJ0VudGVyIFBhc3N3b3JkJyBtZXNzYWdlIGFuZCB3YWl0IGZvciBhIGZpbmdlcnByaW50IHNjYW4uIElmIHVzZXIgdGFwcyAnRW50ZXIgUGFzc3dvcmQnIGJ1dHRvbiwgcmVqZWN0cyB3aXRoIGNvZGUgJy0zJyAoc2VlIGFib3ZlKS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgIFRoZSBtZXNzYWdlIHRvIGRpc3BsYXlcbiAgICogQHBhcmFtIHtzdHJpbmd9IGVudGVyUGFzc3dvcmRMYWJlbCAgQ3VzdG9tIHRleHQgZm9yIHRoZSAnRW50ZXIgUGFzc3dvcmQnIGJ1dHRvblxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGUgcmVzb2x2ZXMgaWYgdGhlIGZpbmdlcnByaW50IHNjYW4gd2FzIHN1Y2Nlc3NmdWwsIHJlamVjdHMgd2l0aCBhbiBlcnJvciBjb2RlIChzZWUgYWJvdmUpLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICB2ZXJpZnlGaW5nZXJwcmludFdpdGhDdXN0b21QYXNzd29yZEZhbGxiYWNrQW5kRW50ZXJQYXNzd29yZExhYmVsKG1lc3NhZ2U6IHN0cmluZywgZW50ZXJQYXNzd29yZExhYmVsOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaWYgdGhlIGZpbmdlcnByaW50IGRhdGFiYXNlIGNoYW5nZWQuXG4gICAqXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgaWYgeWVzLCByZWplY3RzIGlmIG5vLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBkaWRGaW5nZXJwcmludERhdGFiYXNlQ2hhbmdlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 635 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TwitterConnect; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var TwitterConnectOriginal = /** @class */ (function (_super) {
    __extends(TwitterConnectOriginal, _super);
    function TwitterConnectOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TwitterConnectOriginal.prototype.login = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "login", {}, arguments); };
    TwitterConnectOriginal.prototype.logout = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "logout", {}, arguments); };
    TwitterConnectOriginal.prototype.showUser = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "showUser", {}, arguments); };
    TwitterConnectOriginal.pluginName = "TwitterConnect";
    TwitterConnectOriginal.plugin = "twitter-connect-plugin";
    TwitterConnectOriginal.pluginRef = "TwitterConnect";
    TwitterConnectOriginal.repo = "https://github.com/chroa/twitter-connect-plugin";
    TwitterConnectOriginal.install = "ionic cordova plugin add https://github.com/chroa/twitter-connect-plugin --variable FABRIC_KEY=<Fabric API Key> --variable TWITTER_KEY=<Twitter Consumer Key> --variable TWITTER_SECRET=<Twitter Consumer Secret>";
    TwitterConnectOriginal.installVariables = ["FABRIC_KEY", "TWITTER_KEY", "TWITTER_SECRET"];
    TwitterConnectOriginal.platforms = ["Android", "iOS"];
    return TwitterConnectOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var TwitterConnect = new TwitterConnectOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy90d2l0dGVyLWNvbm5lY3QvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBOERwQyxrQ0FBaUI7Ozs7SUFNbkQsOEJBQUs7SUFTTCwrQkFBTTtJQVNOLGlDQUFROzs7Ozs7Ozt5QkF2RlY7RUErRG9DLGlCQUFpQjtTQUF4QyxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVHdpdHRlckNvbm5lY3RSZXNwb25zZSB7XG4gIC8qKlxuICAgKiBUd2l0dGVyIFVzZXJuYW1lXG4gICAqL1xuICB1c2VyTmFtZTogc3RyaW5nO1xuICAvKipcbiAgICogVHdpdHRlciBVc2VyIElEXG4gICAqL1xuICB1c2VySWQ6IHN0cmluZztcbiAgLyoqXG4gICAqIFR3aXR0ZXIgT0F1dGggU2VjcmV0XG4gICAqL1xuICBzZWNyZXQ6IHN0cmluZztcbiAgLyoqXG4gICAqIFR3aXR0ZXIgT0F1dGggVG9rZW5cbiAgICovXG4gIHRva2VuOiBzdHJpbmc7XG59XG5cbi8qKlxuICogQG5hbWUgVHdpdHRlciBDb25uZWN0XG4gKiBAZGVzY3JpcHRpb25cbiAqIFBsdWdpbiB0byB1c2UgVHdpdHRlciBTaW5nbGUgU2lnbiBPblxuICogVXNlcyBUd2l0dGVyJ3MgRmFicmljIFNES1xuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgVHdpdHRlckNvbm5lY3QgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3R3aXR0ZXItY29ubmVjdCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB0d2l0dGVyOiBUd2l0dGVyQ29ubmVjdCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogZnVuY3Rpb24gb25TdWNjZXNzKHJlc3BvbnNlKSB7XG4gKiAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAqXG4gKiAgIC8vIFdpbGwgY29uc29sZSBsb2cgc29tZXRoaW5nIGxpa2U6XG4gKiAgIC8vIHtcbiAqICAgLy8gICB1c2VyTmFtZTogJ215dXNlcicsXG4gKiAgIC8vICAgdXNlcklkOiAnMTIzNTgxMDInLFxuICogICAvLyAgIHNlY3JldDogJ3Rva2VuU2VjcmV0J1xuICogICAvLyAgIHRva2VuOiAnYWNjZXNzVG9rZW5IZXJlJ1xuICogICAvLyB9XG4gKiB9XG4gKlxuICogdGhpcy50d2l0dGVyLmxvZ2luKCkudGhlbihvblN1Y2Nlc3MsIG9uRXJyb3IpO1xuICpcbiAqIHRoaXMudHdpdHRlci5sb2dvdXQoKS50aGVuKG9uTG9nb3V0U3VjY2Vzcywgb25Mb2dvdXRFcnJvcik7XG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBUd2l0dGVyQ29ubmVjdFJlc3BvbnNlXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnVHdpdHRlckNvbm5lY3QnLFxuICBwbHVnaW46ICd0d2l0dGVyLWNvbm5lY3QtcGx1Z2luJyxcbiAgcGx1Z2luUmVmOiAnVHdpdHRlckNvbm5lY3QnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2Nocm9hL3R3aXR0ZXItY29ubmVjdC1wbHVnaW4nLFxuICBpbnN0YWxsOiAnaW9uaWMgY29yZG92YSBwbHVnaW4gYWRkIGh0dHBzOi8vZ2l0aHViLmNvbS9jaHJvYS90d2l0dGVyLWNvbm5lY3QtcGx1Z2luIC0tdmFyaWFibGUgRkFCUklDX0tFWT08RmFicmljIEFQSSBLZXk+IC0tdmFyaWFibGUgVFdJVFRFUl9LRVk9PFR3aXR0ZXIgQ29uc3VtZXIgS2V5PiAtLXZhcmlhYmxlIFRXSVRURVJfU0VDUkVUPTxUd2l0dGVyIENvbnN1bWVyIFNlY3JldD4nLFxuICBpbnN0YWxsVmFyaWFibGVzOiBbJ0ZBQlJJQ19LRVknLCAnVFdJVFRFUl9LRVknLCAnVFdJVFRFUl9TRUNSRVQnXSxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVHdpdHRlckNvbm5lY3QgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBMb2dzIGluXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPFR3aXR0ZXJDb25uZWN0UmVzcG9uc2U+fSByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIGlmIGxvZ2dlZCBpbiBhbmQgcmVqZWN0cyBpZiBmYWlsZWQgdG8gbG9naW5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgbG9naW4oKTogUHJvbWlzZTxUd2l0dGVyQ29ubmVjdFJlc3BvbnNlPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIExvZ3Mgb3V0XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgaWYgbG9nZ2VkIG91dCBhbmQgcmVqZWN0cyBpZiBmYWlsZWQgdG8gbG9nb3V0XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGxvZ291dCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHVzZXIncyBwcm9maWxlIGluZm9ybWF0aW9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgaWYgdXNlciBwcm9maWxlIGlzIHN1Y2Nlc3NmdWxseSByZXRyaWV2ZWQgYW5kIHJlamVjdHMgaWYgcmVxdWVzdCBmYWlsc1xuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzaG93VXNlcigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 636 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Uid; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var UidOriginal = /** @class */ (function (_super) {
    __extends(UidOriginal, _super);
    function UidOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(UidOriginal.prototype, "UUID", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "UUID"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "UUID", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UidOriginal.prototype, "IMEI", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "IMEI"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "IMEI", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UidOriginal.prototype, "IMSI", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "IMSI"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "IMSI", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UidOriginal.prototype, "ICCID", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ICCID"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ICCID", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UidOriginal.prototype, "MAC", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "MAC"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "MAC", value); },
        enumerable: true,
        configurable: true
    });
    UidOriginal.pluginName = "Uid";
    UidOriginal.plugin = "https://github.com/hygieiasoft/cordova-plugin-uid";
    UidOriginal.pluginRef = "cordova.plugins.uid";
    UidOriginal.repo = "https://github.com/hygieiasoft/cordova-plugin-uid";
    UidOriginal.platforms = ["Android"];
    return UidOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Uid = new UidOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy91aWQvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8seUVBQThDLE1BQU0sb0JBQW9CLENBQUM7O0lBNkN2RCx1QkFBaUI7Ozs7MEJBSXhDLHFCQUFJOzs7Ozs7MEJBSUoscUJBQUk7Ozs7OzswQkFJSixxQkFBSTs7Ozs7OzBCQUlKLHNCQUFLOzs7Ozs7MEJBSUwsb0JBQUc7Ozs7Ozs7Ozs7O2NBbEVMO0VBOEN5QixpQkFBaUI7U0FBN0IsR0FBRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmFQcm9wZXJ0eSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgVWlkXG4gKiBAZGVzY3JpcHRpb25cbiAqIEdldCB1bmlxdWUgaWRlbnRpZmllcnM6IFVVSUQsIElNRUksIElNU0ksIElDQ0lEIGFuZCBNQUMuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBVaWQgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3VpZCc7XG4gKiBpbXBvcnQgeyBBbmRyb2lkUGVybWlzc2lvbnMgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2FuZHJvaWQtcGVybWlzc2lvbnMnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgdWlkOiBVaWQsIHByaXZhdGUgYW5kcm9pZFBlcm1pc3Npb25zOiBBbmRyb2lkUGVybWlzc2lvbnMpIHsgfVxuICpcbiAqXG4gKiBhc3luYyBnZXRJbWVpKCkge1xuICogIGNvbnN0IHsgaGFzUGVybWlzc2lvbiB9ID0gYXdhaXQgdGhpcy5hbmRyb2lkUGVybWlzc2lvbnMuY2hlY2tQZXJtaXNzaW9uKFxuICogICAgdGhpcy5hbmRyb2lkUGVybWlzc2lvbnMuUEVSTUlTU0lPTi5SRUFEX1BIT05FX1NUQVRFXG4gKiAgKTtcbiAqXG4gKiAgaWYgKCFoYXNQZXJtaXNzaW9uKSB7XG4gKiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmFuZHJvaWRQZXJtaXNzaW9ucy5yZXF1ZXN0UGVybWlzc2lvbihcbiAqICAgICAgdGhpcy5hbmRyb2lkUGVybWlzc2lvbnMuUEVSTUlTU0lPTi5SRUFEX1BIT05FX1NUQVRFXG4gKiAgICApO1xuICpcbiAqICAgIGlmICghcmVzdWx0Lmhhc1Blcm1pc3Npb24pIHtcbiAqICAgICAgdGhyb3cgbmV3IEVycm9yKCdQZXJtaXNzaW9ucyByZXF1aXJlZCcpO1xuICogICAgfVxuICpcbiAqICAgIC8vIG9rLCBhIHVzZXIgZ2F2ZSB1cyBwZXJtaXNzaW9uLCB3ZSBjYW4gZ2V0IGhpbSBpZGVudGlmaWVycyBhZnRlciByZXN0YXJ0IGFwcFxuICogICAgcmV0dXJuO1xuICogIH1cbiAqXG4gKiAgIHJldHVybiB0aGlzLnVpZC5JTUVJXG4gKiB9XG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdVaWQnLFxuICBwbHVnaW46ICdodHRwczovL2dpdGh1Yi5jb20vaHlnaWVpYXNvZnQvY29yZG92YS1wbHVnaW4tdWlkJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLnVpZCcsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vaHlnaWVpYXNvZnQvY29yZG92YS1wbHVnaW4tdWlkJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBVaWQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqIEdldCB0aGUgZGV2aWNlIFVuaXZlcnNhbGx5IFVuaXF1ZSBJZGVudGlmaWVyIChVVUlEKS4gKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIFVVSUQ6IHN0cmluZztcblxuICAvKiogR2V0IHRoZSBkZXZpY2UgSW50ZXJuYXRpb25hbCBNb2JpbGUgU3RhdGlvbiBFcXVpcG1lbnQgSWRlbnRpdHkgKElNRUkpLiAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgSU1FSTogc3RyaW5nO1xuXG4gIC8qKiBHZXQgdGhlIGRldmljZSBJbnRlcm5hdGlvbmFsIG1vYmlsZSBTdWJzY3JpYmVyIElkZW50aXR5IChJTVNJKS4gKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIElNU0k6IHN0cmluZztcblxuICAvKiogR2V0IHRoZSBzaW0gSW50ZWdyYXRlZCBDaXJjdWl0IENhcmQgSWRlbnRpZmllciAoSUNDSUQpLiAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgSUNDSUQ6IHN0cmluZztcblxuICAvKiogR2V0IHRoZSBNZWRpYSBBY2Nlc3MgQ29udHJvbCBhZGRyZXNzIChNQUMpLiAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgTUFDOiBzdHJpbmc7XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 637 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UniqueDeviceID; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var UniqueDeviceIDOriginal = /** @class */ (function (_super) {
    __extends(UniqueDeviceIDOriginal, _super);
    function UniqueDeviceIDOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UniqueDeviceIDOriginal.prototype.get = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "get", {}, arguments); };
    UniqueDeviceIDOriginal.pluginName = "UniqueDeviceID";
    UniqueDeviceIDOriginal.plugin = "cordova-plugin-uniquedeviceid";
    UniqueDeviceIDOriginal.pluginRef = "window.plugins.uniqueDeviceID";
    UniqueDeviceIDOriginal.repo = "https://github.com/Paldom/UniqueDeviceID";
    UniqueDeviceIDOriginal.platforms = ["Android", "iOS", "Windows Phone 8"];
    return UniqueDeviceIDOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var UniqueDeviceID = new UniqueDeviceIDOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy91bmlxdWUtZGV2aWNlLWlkL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQThCcEMsa0NBQWlCOzs7O0lBT25ELDRCQUFHOzs7Ozs7eUJBckNMO0VBOEJvQyxpQkFBaUI7U0FBeEMsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIFVuaXF1ZSBEZXZpY2UgSURcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gcHJvZHVjZXMgYSB1bmlxdWUsIGNyb3NzLWluc3RhbGwsIGFwcC1zcGVjaWZpYyBkZXZpY2UgaWQuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBVbmlxdWVEZXZpY2VJRCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvdW5pcXVlLWRldmljZS1pZCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB1bmlxdWVEZXZpY2VJRDogVW5pcXVlRGV2aWNlSUQpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMudW5pcXVlRGV2aWNlSUQuZ2V0KClcbiAqICAgLnRoZW4oKHV1aWQ6IGFueSkgPT4gY29uc29sZS5sb2codXVpZCkpXG4gKiAgIC5jYXRjaCgoZXJyb3I6IGFueSkgPT4gY29uc29sZS5sb2coZXJyb3IpKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdVbmlxdWVEZXZpY2VJRCcsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXVuaXF1ZWRldmljZWlkJyxcbiAgcGx1Z2luUmVmOiAnd2luZG93LnBsdWdpbnMudW5pcXVlRGV2aWNlSUQnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL1BhbGRvbS9VbmlxdWVEZXZpY2VJRCcsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzIFBob25lIDgnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBVbmlxdWVEZXZpY2VJRCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogR2V0cyBhIHVuaXF1ZSwgY3Jvc3MtaW5zdGFsbCwgYXBwLXNwZWNpZmljIGRldmljZSBpZC5cbiAgICogQHJldHVybiB7UHJvbWlzZTxzdHJpbmc+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gc29tZXRoaW5nIGhhcHBlbnNcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0KCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 638 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserAgent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var UserAgentOriginal = /** @class */ (function (_super) {
    __extends(UserAgentOriginal, _super);
    function UserAgentOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UserAgentOriginal.prototype.set = function (userAgent) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "set", {}, arguments); };
    UserAgentOriginal.prototype.get = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "get", {}, arguments); };
    UserAgentOriginal.prototype.reset = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "reset", {}, arguments); };
    UserAgentOriginal.pluginName = "UserAgent";
    UserAgentOriginal.plugin = "cordova-plugin-useragent";
    UserAgentOriginal.pluginRef = "plugins.useragent";
    UserAgentOriginal.repo = "https://github.com/danielsogl/cordova-plugin-useragent";
    UserAgentOriginal.platforms = ["Android", "iOS"];
    return UserAgentOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var UserAgent = new UserAgentOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy91c2VyLWFnZW50L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQXlDekMsNkJBQWlCOzs7O0lBUTlDLHVCQUFHLGFBQUMsU0FBaUI7SUFTckIsdUJBQUc7SUFTSCx5QkFBSzs7Ozs7O29CQXBFUDtFQTBDK0IsaUJBQWlCO1NBQW5DLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBVc2VyIEFnZW50XG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBVc2VyQWdlbnQgcGx1Z2luIHByb3ZpZGVzIGZ1bmN0aW9ucyB0byBzZXQgdGhlIEhUVFAgIHVzZXItYWdlbnQgaGVhZGVyLiBGb3IgbW9yZSBpbmZvIGFib3V0IFVzZXItQWdlbnRzLCBwbGVhc2UgW3NlZSB0aGUgSFRUUCBVc2VyLUFnZW50IGRvY3NdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9Vc2VyLUFnZW50KS5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtdXNlcmFnZW50YC4gRm9yIG1vcmUgaW5mbywgcGxlYXNlIHNlZSB0aGUgW1VzZXItQWdlbnQgcGx1Z2luIGRvY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9Mb3Vpc1QvY29yZG92YS11c2VyYWdlbnQpLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgVXNlckFnZW50IH0gZnJvbSAnQGlvbmljLW5hdGl2ZS91c2VyLWFnZW50JztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB1c2VyQWdlbnQ6IFVzZXJBZ2VudCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICpcbiAqIHRoaXMudXNlckFnZW50LnNldCgnTW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2JylcbiAqICAgLnRoZW4oKHJlczogYW55KSA9PiBjb25zb2xlLmxvZyhyZXMpKVxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAqXG4gKiAqIHRoaXMudXNlckFnZW50LmdldCgpXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gKlxuICogKiB0aGlzLnVzZXJBZ2VudC5yZXNldCgpXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnVXNlckFnZW50JyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tdXNlcmFnZW50JyxcbiAgcGx1Z2luUmVmOiAncGx1Z2lucy51c2VyYWdlbnQnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2RhbmllbHNvZ2wvY29yZG92YS1wbHVnaW4tdXNlcmFnZW50JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVXNlckFnZW50IGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBDaGFuZ2VzIHRoZSBjdXJyZW50IHVzZXItYWdlbnQgdG8gdGhlIG9uZSBzZW50IGJ5IGFyZ3VtZW50LlxuICAgKiBAcGFyYW0gdXNlckFnZW50IHtzdHJpbmd9IFVzZXItQWdlbnRcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIHVzZXItYWdlbnQgY2hhbmdlc1xuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXQodXNlckFnZW50OiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBjdXJyZW50IHVzZXItYWdlbnQgc3RyaW5nLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgdXNlci1hZ2VudCBpcyByZXR1cm5lZFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXQoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgdXNlci1hZ2VudCBiYWNrIHRvIGRlZmF1bHRcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIHVzZXItYWdlbnQgcmVzZXRzXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlc2V0KCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 639 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Vibration; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var VibrationOriginal = /** @class */ (function (_super) {
    __extends(VibrationOriginal, _super);
    function VibrationOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VibrationOriginal.prototype.vibrate = function (time) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "vibrate", { "sync": true }, arguments); };
    VibrationOriginal.pluginName = "Vibration";
    VibrationOriginal.plugin = "cordova-plugin-vibration";
    VibrationOriginal.pluginRef = "navigator";
    VibrationOriginal.repo = "https://github.com/apache/cordova-plugin-vibration";
    VibrationOriginal.platforms = ["Android", "BlackBerry 10", "Firefox OS", "iOS", "Tizen", "Ubuntu", "Windows", "Windows Phone"];
    return VibrationOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Vibration = new VibrationOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy92aWJyYXRpb24vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBcUN6Qyw2QkFBaUI7Ozs7SUFTOUMsMkJBQU8sYUFBQyxJQUE0Qjs7Ozs7O29CQS9DdEM7RUFzQytCLGlCQUFpQjtTQUFuQyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cblxuLyoqXG4gKiBAbmFtZSBWaWJyYXRpb25cbiAqIEBkZXNjcmlwdGlvbiBWaWJyYXRlcyB0aGUgZGV2aWNlXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFZpYnJhdGlvbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvdmlicmF0aW9uJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHZpYnJhdGlvbjogVmlicmF0aW9uKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiAvLyBWaWJyYXRlIHRoZSBkZXZpY2UgZm9yIGEgc2Vjb25kXG4gKiAvLyBEdXJhdGlvbiBpcyBpZ25vcmVkIG9uIGlPUy5cbiAqIHRoaXMudmlicmF0aW9uLnZpYnJhdGUoMTAwMCk7XG4gKlxuICogLy8gVmlicmF0ZSAyIHNlY29uZHNcbiAqIC8vIFBhdXNlIGZvciAxIHNlY29uZFxuICogLy8gVmlicmF0ZSBmb3IgMiBzZWNvbmRzXG4gKiAvLyBQYXR0ZXJucyB3b3JrIG9uIEFuZHJvaWQgYW5kIFdpbmRvd3Mgb25seVxuICogdGhpcy52aWJyYXRpb24udmlicmF0ZShbMjAwMCwxMDAwLDIwMDBdKTtcbiAqXG4gKiAvLyBTdG9wIGFueSBjdXJyZW50IHZpYnJhdGlvbnMgaW1tZWRpYXRlbHlcbiAqIC8vIFdvcmtzIG9uIEFuZHJvaWQgYW5kIFdpbmRvd3Mgb25seVxuICogdGhpcy52aWJyYXRpb24udmlicmF0ZSgwKTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1ZpYnJhdGlvbicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXZpYnJhdGlvbicsXG4gIHBsdWdpblJlZjogJ25hdmlnYXRvcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vYXBhY2hlL2NvcmRvdmEtcGx1Z2luLXZpYnJhdGlvbicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0JsYWNrQmVycnkgMTAnLCAnRmlyZWZveCBPUycsICdpT1MnLCAnVGl6ZW4nLCAnVWJ1bnR1JywgJ1dpbmRvd3MnLCAnV2luZG93cyBQaG9uZSddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFZpYnJhdGlvbiBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogVmlicmF0ZXMgdGhlIGRldmljZSBmb3IgZ2l2ZW4gYW1vdW50IG9mIHRpbWUuXG4gICAqIEBwYXJhbSB0aW1lIHtudW1iZXJ8QXJyYXk8bnVtYmVyPn0gTWlsbGlzZWNvbmRzIHRvIHZpYnJhdGUgdGhlIGRldmljZS4gSWYgcGFzc2VkIGFuIGFycmF5IG9mIG51bWJlcnMsIGl0IHdpbGwgZGVmaW5lIGEgdmlicmF0aW9uIHBhdHRlcm4uIFBhc3MgMCB0byBzdG9wIGFueSB2aWJyYXRpb24gaW1tZWRpYXRlbHkuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZVxuICB9KVxuICB2aWJyYXRlKHRpbWU6IG51bWJlciB8IEFycmF5PG51bWJlcj4pIHtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 640 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VideoCapturePlus; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var VideoCapturePlusOriginal = /** @class */ (function (_super) {
    __extends(VideoCapturePlusOriginal, _super);
    function VideoCapturePlusOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VideoCapturePlusOriginal.prototype.captureVideo = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "captureVideo", { "callbackOrder": "reverse" }, arguments); };
    VideoCapturePlusOriginal.pluginName = "VideoCapturePlus";
    VideoCapturePlusOriginal.plugin = "cordova-plugin-video-capture-plus";
    VideoCapturePlusOriginal.pluginRef = "window.plugins.videocaptureplus";
    VideoCapturePlusOriginal.repo = "https://github.com/danielsogl/cordova-plugin-video-capture-plus";
    VideoCapturePlusOriginal.platforms = ["Android", "iOS"];
    return VideoCapturePlusOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var VideoCapturePlus = new VideoCapturePlusOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy92aWRlby1jYXB0dXJlLXBsdXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBMElsQyxvQ0FBaUI7Ozs7SUFVckQsdUNBQVksYUFBQyxPQUFpQzs7Ozs7OzJCQXJKaEQ7RUEySXNDLGlCQUFpQjtTQUExQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBNZWRpYUZpbGUge1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpbGUsIHdpdGhvdXQgcGF0aCBpbmZvcm1hdGlvbi5cbiAgICovXG4gIG5hbWU6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBmdWxsIHBhdGggb2YgdGhlIGZpbGUsIGluY2x1ZGluZyB0aGUgbmFtZS5cbiAgICovXG4gIGZ1bGxQYXRoOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgZmlsZSdzIG1pbWUgdHlwZVxuICAgKi9cbiAgdHlwZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgZGF0ZSBhbmQgdGltZSB3aGVuIHRoZSBmaWxlIHdhcyBsYXN0IG1vZGlmaWVkLlxuICAgKi9cbiAgbGFzdE1vZGlmaWVkRGF0ZTogRGF0ZTtcblxuICAvKipcbiAgICogVGhlIHNpemUgb2YgdGhlIGZpbGUsIGluIGJ5dGVzLlxuICAgKi9cbiAgc2l6ZTogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBSZXRyaWV2ZXMgdGhlIGZvcm1hdCBpbmZvcm1hdGlvbiBvZiB0aGUgbWVkaWEgZmlsZS5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gc3VjY2Vzc0NhbGxiYWNrXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtlcnJvckNhbGxiYWNrXVxuICAgKi9cbiAgZ2V0Rm9ybWF0RGF0YShzdWNjZXNzQ2FsbGJhY2s6IChkYXRhOiBNZWRpYUZpbGVEYXRhKSA9PiBhbnksIGVycm9yQ2FsbGJhY2s/OiAoZXJyOiBhbnkpID0+IGFueSk6IGFueTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNZWRpYUZpbGVEYXRhIHtcbiAgLyoqXG4gICAqIFRoZSBhY3R1YWwgZm9ybWF0IG9mIHRoZSBhdWRpbyBhbmQgdmlkZW8gY29udGVudC5cbiAgICovXG4gIGNvZGVjczogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGF2ZXJhZ2UgYml0cmF0ZSBvZiB0aGUgY29udGVudC4gVGhlIHZhbHVlIGlzIHplcm8gZm9yIGltYWdlcy5cbiAgICovXG4gIGJpdHJhdGU6IG51bWJlcjtcbiAgLyoqXG4gICAqIFRoZSBoZWlnaHQgb2YgdGhlIGltYWdlIG9yIHZpZGVvIGluIHBpeGVscy4gVGhlIHZhbHVlIGlzIHplcm8gZm9yIGF1ZGlvIGNsaXBzLlxuICAgKi9cbiAgaGVpZ2h0OiBudW1iZXI7XG4gIC8qKlxuICAgKiBUaGUgd2lkdGggb2YgdGhlIGltYWdlIG9yIHZpZGVvIGluIHBpeGVscy4gVGhlIHZhbHVlIGlzIHplcm8gZm9yIGF1ZGlvIGNsaXBzLlxuICAgKi9cbiAgd2lkdGg6IG51bWJlcjtcbiAgLyoqXG4gICAqIFRoZSBsZW5ndGggb2YgdGhlIHZpZGVvIG9yIHNvdW5kIGNsaXAgaW4gc2Vjb25kcy4gVGhlIHZhbHVlIGlzIHplcm8gZm9yIGltYWdlcy5cbiAgICovXG4gIGR1cmF0aW9uOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmlkZW9DYXB0dXJlUGx1c09wdGlvbnMge1xuXG4gIC8qKlxuICAgKiBUaGUgbnVtYmVyIG9mIHZpZGVvcyB0byByZWNvcmQsIGRlZmF1bHQgMSAob24gaU9TIGFsd2F5cyAxKVxuICAgKi9cbiAgbGltaXQ/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIE1heCBkdXJhdGlvbiBpbiBzZWNvbmRzLCBkZWZhdWx0IDAsIHdoaWNoIGlzICdmb3JldmVyJ1xuICAgKi9cbiAgZHVyYXRpb24/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFNldCB0byB0cnVlIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGxvdyBxdWFsaXR5IHNldHRpbmdcbiAgICovXG4gIGhpZ2hxdWFsaXR5PzogYm9vbGVhbjtcblxuICAvKipcbiAgICogU2V0IHRvIHRydWUgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgYmFja2ZhY2luZyBjYW1lcmEgc2V0dGluZy5cbiAgICogWW91J2xsIHdhbnQgdG8gc25pZmYgdGhlIHVzZXJhZ2VudC9kZXZpY2UgYW5kIHBhc3MgdGhlIGJlc3Qgb3ZlcmxheSBiYXNlZCBvbiB0aGF0Li4gYXNzdW1pbmcgaXBob25lIGhlcmVcbiAgICovXG4gIGZyb250Y2FtZXJhPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogcHV0IHRoZSBwbmcgb3ZlcmxheSBpbiB5b3VyIGFzc2V0cyBmb2xkZXJcbiAgICovXG4gIHBvcnRyYWl0T3ZlcmxheT86IHN0cmluZztcblxuICAvKipcbiAgICogIG5vdCBwYXNzaW5nIGFuIG92ZXJsYXkgbWVhbnMgbm8gaW1hZ2UgaXMgc2hvd24gZm9yIHRoZSBsYW5kc2NhcGUgb3JpZW50YXRpb25cbiAgICovXG4gIGxhbmRzY2FwZU92ZXJsYXk/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIGlPUyBvbmx5XG4gICAqL1xuICBvdmVybGF5VGV4dD86IHN0cmluZztcblxufVxuXG4vKipcbiAqIEBiZXRhXG4gKiBAbmFtZSBWaWRlbyBDYXB0dXJlIFBsdXNcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gb2ZmZXJzIHNvbWUgdXNlZnVsIGV4dHJhcyBvbiB0b3Agb2YgdGhlIGRlZmF1bHQgTWVkaWEgQ2FwdHVyZSBQbHVnaW4gY2FwYWJpbGl0aWVzOlxuICogLSBIRCByZWNvcmRpbmcuXG4gKiAtIFN0YXJ0aW5nIHdpdGggdGhlIGZyb250IGNhbWVyYS5cbiAqIC0gQSBjdXN0b20gb3ZlcmxheSAoY3VycmVudGx5IGlPUyBvbmx5KS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFZpZGVvQ2FwdHVyZVBsdXMsIFZpZGVvQ2FwdHVyZVBsdXNPcHRpb25zLCBNZWRpYUZpbGUgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3ZpZGVvLWNhcHR1cmUtcGx1cyc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgdmlkZW9DYXB0dXJlUGx1czogVmlkZW9DYXB0dXJlUGx1cykgeyB9XG4gKlxuICogLi4uXG4gKlxuICogY29uc3Qgb3B0aW9uczogVmlkZW9DYXB0dXJlUGx1c09wdGlvbnMgPSB7XG4gKiAgICBsaW1pdDogMSxcbiAqICAgIGhpZ2hxdWFsaXR5OiB0cnVlLFxuICogICAgcG9ydHJhaXRPdmVybGF5OiAnYXNzZXRzL2ltZy9jYW1lcmEvb3ZlcmxheS9wb3J0cmFpdC5wbmcnLFxuICogICAgbGFuZHNjYXBlT3ZlcmxheTogJ2Fzc2V0cy9pbWcvY2FtZXJhL292ZXJsYXkvbGFuZHNjYXBlLnBuZydcbiAqIH1cbiAqXG4gKiB0aGlzLnZpZGVvQ2FwdHVyZVBsdXMuY2FwdHVyZVZpZGVvKG9wdGlvbnMpLnRoZW4obWVkaWFmaWxlOiBNZWRpYUZpbGVbXSA9PiBjb25zb2xlLmxvZyhtZWRpYWZpbGUpLCBlcnJvciA9PiBjb25zb2xlLmxvZygnU29tZXRoaW5nIHdlbnQgd3JvbmcnKSk7XG4gKlxuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogTWVkaWFGaWxlXG4gKiBNZWRpYUZpbGVEYXRhXG4gKiBWaWRlb0NhcHR1cmVQbHVzT3B0aW9uc1xuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1ZpZGVvQ2FwdHVyZVBsdXMnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi12aWRlby1jYXB0dXJlLXBsdXMnLFxuICBwbHVnaW5SZWY6ICd3aW5kb3cucGx1Z2lucy52aWRlb2NhcHR1cmVwbHVzJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9kYW5pZWxzb2dsL2NvcmRvdmEtcGx1Z2luLXZpZGVvLWNhcHR1cmUtcGx1cycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFZpZGVvQ2FwdHVyZVBsdXMgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFN0YXJ0cyByZWNvcmRpbmdzXG4gICAqIEBwYXJhbSBbb3B0aW9uc10ge1ZpZGVvQ2FwdHVyZVBsdXNPcHRpb25zfSBDb25maWd1cmUgb3B0aW9uc1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPE1lZGlhRmlsZVtdPn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZSdcbiAgfSlcbiAgY2FwdHVyZVZpZGVvKG9wdGlvbnM/OiBWaWRlb0NhcHR1cmVQbHVzT3B0aW9ucyk6IFByb21pc2U8TWVkaWFGaWxlW10+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 641 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VideoEditor; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var VideoEditorOriginal = /** @class */ (function (_super) {
    __extends(VideoEditorOriginal, _super);
    function VideoEditorOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.OptimizeForNetworkUse = {
            NO: 0,
            YES: 1
        };
        _this.OutputFileType = {
            M4V: 0,
            MPEG4: 1,
            M4A: 2,
            QUICK_TIME: 3
        };
        return _this;
    }
    VideoEditorOriginal.prototype.transcodeVideo = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "transcodeVideo", { "callbackOrder": "reverse" }, arguments); };
    VideoEditorOriginal.prototype.trim = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "trim", { "callbackOrder": "reverse", "platforms": ["iOS"] }, arguments); };
    VideoEditorOriginal.prototype.createThumbnail = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "createThumbnail", { "callbackOrder": "reverse" }, arguments); };
    VideoEditorOriginal.prototype.getVideoInfo = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getVideoInfo", { "callbackOrder": "reverse" }, arguments); };
    VideoEditorOriginal.pluginName = "VideoEditor";
    VideoEditorOriginal.plugin = "cordova-plugin-video-editor";
    VideoEditorOriginal.pluginRef = "VideoEditor";
    VideoEditorOriginal.repo = "https://github.com/jbavari/cordova-plugin-video-editor";
    VideoEditorOriginal.platforms = ["Android", "iOS", "Windows", "Windows Phone 8"];
    return VideoEditorOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var VideoEditor = new VideoEditorOriginal();

//# sourceMappingURL=data:application/json;base64,
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 642 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VideoPlayer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var VideoPlayerOriginal = /** @class */ (function (_super) {
    __extends(VideoPlayerOriginal, _super);
    function VideoPlayerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VideoPlayerOriginal.prototype.play = function (fileUrl, options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "play", {}, arguments); };
    VideoPlayerOriginal.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "close", { "sync": true }, arguments); };
    VideoPlayerOriginal.pluginName = "VideoPlayer";
    VideoPlayerOriginal.plugin = "https://github.com/moust/cordova-plugin-videoplayer.git";
    VideoPlayerOriginal.pluginRef = "VideoPlayer";
    VideoPlayerOriginal.repo = "https://github.com/moust/cordova-plugin-videoplayer";
    VideoPlayerOriginal.platforms = ["Android"];
    return VideoPlayerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var VideoPlayer = new VideoPlayerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy92aWRlby1wbGF5ZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBb0R2QywrQkFBaUI7Ozs7SUFTaEQsMEJBQUksYUFBQyxPQUFlLEVBQUUsT0FBc0I7SUFRNUMsMkJBQUs7Ozs7OztzQkF0RVA7RUFxRGlDLGlCQUFpQjtTQUFyQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogT3B0aW9ucyBmb3IgdGhlIHZpZGVvIHBsYXliYWNrIHVzaW5nIHRoZSBgcGxheWAgZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVmlkZW9PcHRpb25zIHtcbiAgLyoqXG4gICAqIFNldCB0aGUgaW5pdGlhbCB2b2x1bWUgb2YgdGhlIHZpZGVvIHBsYXliYWNrLCB3aGVyZSAwLjAgaXMgMCUgdm9sdW1lIGFuZCAxLjAgaXMgMTAwJS5cbiAgICogRm9yIGV4YW1wbGU6IGZvciBhIHZvbHVtZSBvZiAzMCUgc2V0IHRoZSB2YWx1ZSB0byAwLjMuXG4gICAqL1xuICB2b2x1bWU/OiBudW1iZXI7XG4gIC8qKlxuICAgKiBUaGVyZSBhcmUgdHdvIG9wdGlvbnMgZm9yIHRoZSBzY2FsaW5nIG1vZGUuIFNDQUxFX1RPX0ZJVCB3aGljaCBpcyBkZWZhdWx0IGFuZCBTQ0FMRV9UT19GSVRfV0lUSF9DUk9QUElORy5cbiAgICogVGhlc2Ugc3RyaW5ncyBhcmUgdGhlIG9ubHkgb25lcyB3aGljaCBjYW4gYmUgcGFzc2VkIGFzIG9wdGlvbi5cbiAgICovXG4gIHNjYWxpbmdNb2RlPzogbnVtYmVyO1xufVxuXG4vKipcbiAqIEBuYW1lIFZpZGVvIFBsYXllclxuICogQGRlc2NyaXB0aW9uXG4gKiBBIENvcmRvdmEgcGx1Z2luIHRoYXQgc2ltcGx5IGFsbG93cyB5b3UgdG8gaW1tZWRpYXRlbHkgcGxheSBhIHZpZGVvIGluIGZ1bGxzY3JlZW4gbW9kZS5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvbS5tb3VzdC5jb3Jkb3ZhLnZpZGVvcGxheWVyYC4gRm9yIG1vcmUgaW5mbywgcGxlYXNlIHNlZSB0aGUgW1ZpZGVvUGxheWVyIHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vbW91c3QvY29yZG92YS1wbHVnaW4tdmlkZW9wbGF5ZXIpLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgVmlkZW9QbGF5ZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3ZpZGVvLXBsYXllcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB2aWRlb1BsYXllcjogVmlkZW9QbGF5ZXIpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIC8vIFBsYXlpbmcgYSB2aWRlby5cbiAqIHRoaXMudmlkZW9QbGF5ZXIucGxheSgnZmlsZTovLy9hbmRyb2lkX2Fzc2V0L3d3dy9tb3ZpZS5tcDQnKS50aGVuKCgpID0+IHtcbiAqICBjb25zb2xlLmxvZygndmlkZW8gY29tcGxldGVkJyk7XG4gKiB9KS5jYXRjaChlcnIgPT4ge1xuICogIGNvbnNvbGUubG9nKGVycik7XG4gKiB9KTtcbiAqXG4gKiBgYGBcbiAqIEBpbnRlcmZhY2VzXG4gKiBWaWRlb09wdGlvbnNcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdWaWRlb1BsYXllcicsXG4gIHBsdWdpbjogJ2h0dHBzOi8vZ2l0aHViLmNvbS9tb3VzdC9jb3Jkb3ZhLXBsdWdpbi12aWRlb3BsYXllci5naXQnLFxuICBwbHVnaW5SZWY6ICdWaWRlb1BsYXllcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vbW91c3QvY29yZG92YS1wbHVnaW4tdmlkZW9wbGF5ZXInLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFZpZGVvUGxheWVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBQbGF5cyB0aGUgdmlkZW8gZnJvbSB0aGUgcGFzc2VkIHVybC5cbiAgICogQHBhcmFtIGZpbGVVcmwge3N0cmluZ30gRmlsZSB1cmwgdG8gdGhlIHZpZGVvLlxuICAgKiBAcGFyYW0gb3B0aW9ucyB7VmlkZW9PcHRpb25zP30gT3B0aW9uYWwgdmlkZW8gcGxheWJhY2sgc2V0dGluZ3MuIFNlZSBvcHRpb25zIGFib3ZlLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXNvbHZlcyBwcm9taXNlIHdoZW4gdGhlIHZpZGVvIHdhcyBwbGF5ZWQgc3VjY2Vzc2Z1bGx5LlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBwbGF5KGZpbGVVcmw6IHN0cmluZywgb3B0aW9ucz86IFZpZGVvT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3BzIHRoZSB2aWRlbyBwbGF5YmFjayBpbW1lZGlhdGx5LlxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIGNsb3NlKCk6IHZvaWQge1xuICB9XG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 643 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WebIntent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var WebIntentOriginal = /** @class */ (function (_super) {
    __extends(WebIntentOriginal, _super);
    function WebIntentOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebIntentOriginal.prototype.startActivity = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startActivity", {}, arguments); };
    WebIntentOriginal.prototype.startActivityForResult = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "startActivityForResult", {}, arguments); };
    WebIntentOriginal.prototype.hasExtra = function (extra) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hasExtra", {}, arguments); };
    WebIntentOriginal.prototype.getExtra = function (extra) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getExtra", {}, arguments); };
    WebIntentOriginal.prototype.getUri = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getUri", {}, arguments); };
    WebIntentOriginal.prototype.onNewIntent = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onNewIntent", { "observable": true }, arguments); };
    WebIntentOriginal.prototype.sendBroadcast = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "sendBroadcast", {}, arguments); };
    WebIntentOriginal.prototype.registerBroadcastReceiver = function (filters) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "registerBroadcastReceiver", { "sync": true }, arguments); };
    WebIntentOriginal.prototype.unregisterBroadcastReceiver = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unregisterBroadcastReceiver", { "sync": true }, arguments); };
    WebIntentOriginal.prototype.onIntent = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onIntent", { "sync": true }, arguments); };
    WebIntentOriginal.prototype.onActivityResult = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "onActivityResult", { "sync": true }, arguments); };
    WebIntentOriginal.prototype.getIntent = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getIntent", {}, arguments); };
    Object.defineProperty(WebIntentOriginal.prototype, "ACTION_SEND", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ACTION_SEND"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ACTION_SEND", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebIntentOriginal.prototype, "ACTION_VIEW", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ACTION_VIEW"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ACTION_VIEW", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebIntentOriginal.prototype, "EXTRA_TEXT", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "EXTRA_TEXT"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "EXTRA_TEXT", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebIntentOriginal.prototype, "EXTRA_SUBJECT", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "EXTRA_SUBJECT"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "EXTRA_SUBJECT", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebIntentOriginal.prototype, "EXTRA_STREAM", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "EXTRA_STREAM"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "EXTRA_STREAM", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebIntentOriginal.prototype, "EXTRA_EMAIL", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "EXTRA_EMAIL"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "EXTRA_EMAIL", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebIntentOriginal.prototype, "ACTION_CALL", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ACTION_CALL"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ACTION_CALL", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebIntentOriginal.prototype, "ACTION_SENDTO", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ACTION_SENDTO"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ACTION_SENDTO", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebIntentOriginal.prototype, "ACTION_GET_CONTENT", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ACTION_GET_CONTENT"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ACTION_GET_CONTENT", value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebIntentOriginal.prototype, "ACTION_PICK", {
        get: function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertyGet"])(this, "ACTION_PICK"); },
        set: function (value) { Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordovaPropertySet"])(this, "ACTION_PICK", value); },
        enumerable: true,
        configurable: true
    });
    WebIntentOriginal.pluginName = "WebIntent";
    WebIntentOriginal.plugin = "com-darryncampbell-cordova-plugin-intent";
    WebIntentOriginal.pluginRef = "plugins.intentShim";
    WebIntentOriginal.repo = "https://github.com/darryncampbell/darryncampbell-cordova-plugin-intent";
    WebIntentOriginal.platforms = ["Android"];
    return WebIntentOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var WebIntent = new WebIntentOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy93ZWItaW50ZW50L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLGtGQUF1RCxNQUFNLG9CQUFvQixDQUFDO0FBQ3pGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7SUFrQ2QsNkJBQWlCOzs7O0lBK0U5QyxpQ0FBYSxhQUFDLE9BQW9EO0lBVWxFLDBDQUFzQixhQUFDLE9BQW9EO0lBVTNFLDRCQUFRLGFBQUMsS0FBYTtJQVV0Qiw0QkFBUSxhQUFDLEtBQWE7SUFTdEIsMEJBQU07SUFVTiwrQkFBVztJQVVYLGlDQUFhLGFBQUMsT0FBeUQ7SUFTdkUsNkNBQXlCLGFBQUMsT0FBWTtJQU90QywrQ0FBMkI7SUFPM0IsNEJBQVE7SUFPUixvQ0FBZ0I7SUFPaEIsNkJBQVM7MEJBeEtULGtDQUFXOzs7Ozs7MEJBT1gsa0NBQVc7Ozs7OzswQkFPWCxpQ0FBVTs7Ozs7OzBCQU9WLG9DQUFhOzs7Ozs7MEJBT2IsbUNBQVk7Ozs7OzswQkFPWixrQ0FBVzs7Ozs7OzBCQU9YLGtDQUFXOzs7Ozs7MEJBT1gsb0NBQWE7Ozs7OzswQkFPYix5Q0FBa0I7Ozs7OzswQkFPbEIsa0NBQVc7Ozs7Ozs7Ozs7O29CQTFHYjtFQW9DK0IsaUJBQWlCO1NBQW5DLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBDb3Jkb3ZhUHJvcGVydHksIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XG5cbi8qKlxuICogQGJldGFcbiAqIEBuYW1lIFdlYiBJbnRlbnRcbiAqIEBkZXNjcmlwdGlvblxuICogQHVzYWdlXG4gKiBGb3IgdXNhZ2UgaW5mb3JtYXRpb24gcGxlYXNlIHJlZmVyIHRvIHRoZSBwbHVnaW4ncyBHaXRodWIgcmVwby5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBXZWJJbnRlbnQgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3dlYi1pbnRlbnQnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgd2ViSW50ZW50OiBXZWJJbnRlbnQpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIGNvbnN0IG9wdGlvbnMgPSB7XG4gKiAgIGFjdGlvbjogdGhpcy53ZWJJbnRlbnQuQUNUSU9OX1ZJRVcsXG4gKiAgIHVybDogJ3BhdGgvdG8vZmlsZScsXG4gKiAgIHR5cGU6ICdhcHBsaWNhdGlvbi92bmQuYW5kcm9pZC5wYWNrYWdlLWFyY2hpdmUnXG4gKiB9XG4gKlxuICogdGhpcy53ZWJJbnRlbnQuc3RhcnRBY3Rpdml0eShvcHRpb25zKS50aGVuKG9uU3VjY2Vzcywgb25FcnJvcik7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnV2ViSW50ZW50JyxcbiAgcGx1Z2luOiAnY29tLWRhcnJ5bmNhbXBiZWxsLWNvcmRvdmEtcGx1Z2luLWludGVudCcsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMuaW50ZW50U2hpbScsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZGFycnluY2FtcGJlbGwvZGFycnluY2FtcGJlbGwtY29yZG92YS1wbHVnaW4taW50ZW50JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBXZWJJbnRlbnQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIGNvbnN0YW50IGZvciBhY3Rpb25zXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgQUNUSU9OX1NFTkQ6IHN0cmluZztcblxuICAvKipcbiAgICogQ29udmVuaWVuY2UgY29uc3RhbnQgZm9yIGFjdGlvbnNcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBBQ1RJT05fVklFVzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudCBmb3IgZXh0cmFzXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgRVhUUkFfVEVYVDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudCBmb3IgZXh0cmFzXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgRVhUUkFfU1VCSkVDVDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudCBmb3IgZXh0cmFzXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgRVhUUkFfU1RSRUFNOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIGNvbnN0YW50IGZvciBleHRyYXNcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICovXG4gIEBDb3Jkb3ZhUHJvcGVydHkoKVxuICBFWFRSQV9FTUFJTDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudCBmb3IgYWN0aW9uc1xuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIEFDVElPTl9DQUxMOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIENvbnZlbmllbmNlIGNvbnN0YW50IGZvciBhY3Rpb25zXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBAQ29yZG92YVByb3BlcnR5KClcbiAgQUNUSU9OX1NFTkRUTzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudCBmb3IgYWN0aW9uc1xuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIEFDVElPTl9HRVRfQ09OVEVOVDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBjb25zdGFudCBmb3IgYWN0aW9uc1xuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIEFDVElPTl9QSUNLOiBzdHJpbmc7XG5cblxuICAvKipcbiAgICogTGF1bmNoZXMgYW4gQW5kcm9pZCBpbnRlbnRcbiAgICogQHBhcmFtIG9wdGlvbnMge09iamVjdH0geyBhY3Rpb246IGFueSwgdXJsOiBzdHJpbmcsIHR5cGU/OiBzdHJpbmcgfVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzdGFydEFjdGl2aXR5KG9wdGlvbnM6IHsgYWN0aW9uOiBhbnksIHVybDogc3RyaW5nLCB0eXBlPzogc3RyaW5nIH0pOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdGFydHMgYSBuZXcgYWN0aXZpdHkgYW5kIHJldHVybiB0aGUgcmVzdWx0IHRvIHRoZSBhcHBsaWNhdGlvblxuICAgKiBAcGFyYW0gb3B0aW9ucyB7T2JqZWN0fSB7IGFjdGlvbjogYW55LCB1cmw6IHN0cmluZywgdHlwZT86IHN0cmluZyB9XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHN0YXJ0QWN0aXZpdHlGb3JSZXN1bHQob3B0aW9uczogeyBhY3Rpb246IGFueSwgdXJsOiBzdHJpbmcsIHR5cGU/OiBzdHJpbmcgfSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiB0aGlzIGFwcCB3YXMgaW52b2tlZCB3aXRoIHNwZWNpZmllZCBleHRyYVxuICAgKiBAcGFyYW0gZXh0cmEge3N0cmluZ31cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaGFzRXh0cmEoZXh0cmE6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIGV4dHJhIHRoYXQgdGhpcyBhcHAgd2FzIGludm9rZWQgd2l0aFxuICAgKiBAcGFyYW0gZXh0cmEge3N0cmluZ31cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0RXh0cmEoZXh0cmE6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIFVyaSB0aGUgYXBwIHdhcyBpbnZva2VkIHdpdGhcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0VXJpKCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPHN0cmluZz59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZVxuICB9KVxuICBvbk5ld0ludGVudCgpOiBPYnNlcnZhYmxlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kcyBhIGN1c3RvbSBpbnRlbnQgcGFzc2luZyBvcHRpb25hbCBleHRyYXNcbiAgICogQHBhcmFtIG9wdGlvbnMge09iamVjdH0geyBhY3Rpb246IHN0cmluZywgZXh0cmFzPzogeyBvcHRpb246IGJvb2xlYW4gfSB9XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNlbmRCcm9hZGNhc3Qob3B0aW9uczogeyBhY3Rpb246IHN0cmluZywgZXh0cmFzPzogeyBvcHRpb246IGJvb2xlYW4gfSB9KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXJzIGEgYnJvYWRjYXN0IHJlY2VpdmVyIGZvciB0aGUgc3BlY2lmaWVkIGZpbHRlcnNcbiAgICogQHBhcmFtIGZpbHRlcnMge2FueX1cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICByZWdpc3RlckJyb2FkY2FzdFJlY2VpdmVyKGZpbHRlcnM6IGFueSk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIFVucmVnaXN0ZXJzIGEgYnJvYWRjYXN0IHJlY2VpdmVyXG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgdW5yZWdpc3RlckJyb2FkY2FzdFJlY2VpdmVyKCk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGNvbnRlbnQgb2YgdGhlIGludGVudCB1c2VkIHdoZW5ldmVyIHRoZSBhcHBsaWNhdGlvbiBhY3Rpdml0eSBpcyBsYXVuY2hlZFxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIG9uSW50ZW50KCk6IHZvaWQge1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgb25BY3Rpdml0eVJlc3VsdCgpOiB2b2lkIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRJbnRlbnQoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 644 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WheelSelector; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var WheelSelectorOriginal = /** @class */ (function (_super) {
    __extends(WheelSelectorOriginal, _super);
    function WheelSelectorOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WheelSelectorOriginal.prototype.show = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "show", {}, arguments); };
    WheelSelectorOriginal.prototype.hideSelector = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "hideSelector", { "platforms": ["iOS"] }, arguments); };
    WheelSelectorOriginal.pluginName = "WheelSelector";
    WheelSelectorOriginal.plugin = "cordova-wheel-selector-plugin";
    WheelSelectorOriginal.pluginRef = "SelectorCordovaPlugin";
    WheelSelectorOriginal.repo = "https://github.com/jasonmamy/cordova-wheel-selector-plugin";
    WheelSelectorOriginal.platforms = ["Android", "iOS"];
    return WheelSelectorOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var WheelSelector = new WheelSelectorOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy93aGVlbC1zZWxlY3Rvci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFzTHJDLGlDQUFpQjs7OztJQVFsRCw0QkFBSSxhQUFDLE9BQTZCO0lBV2xDLG9DQUFZOzs7Ozs7d0JBMU1kO0VBdUxtQyxpQkFBaUI7U0FBdkMsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdoZWVsU2VsZWN0b3JJdGVtIHtcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmYXVsdEl0ZW0ge1xuICBpbmRleDogbnVtYmVyO1xuICB2YWx1ZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFdoZWVsU2VsZWN0b3JPcHRpb25zIHtcbiAgLyoqXG4gICAqIFRoZSB0aXRsZSBvZiB0aGUgc2VsZWN0b3IncyBpbnB1dCBib3hcbiAgICovXG4gIHRpdGxlOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBpdGVtcyB0byBkaXNwbGF5IChhcnJheSBvZiBpdGVtcykuXG4gICAqL1xuICBpdGVtczogQXJyYXk8QXJyYXk8V2hlZWxTZWxlY3Rvckl0ZW0+PjtcblxuICAvKipcbiAgICogV2hpY2ggaXRlbXMgdG8gZGlzcGxheSBieSBkZWZhdWx0LlxuICAgKi9cbiAgZGVmYXVsdEl0ZW1zPzogQXJyYXk8RGVmYXVsdEl0ZW0+O1xuXG4gIC8qKlxuICAgKiBUaGUgJ29rJyBidXR0b24gdGV4dFxuICAgKiBEZWZhdWx0OiBEb25lXG4gICAqL1xuICBwb3NpdGl2ZUJ1dHRvblRleHQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSAnY2FuY2VsJyBidXR0b24gdGV4dFxuICAgKiBEZWZhdWx0OiBDYW5jZWxcbiAgICovXG4gIG5lZ2F0aXZlQnV0dG9uVGV4dD86IHN0cmluZztcblxuICAvKipcbiAgICogQW5kcm9pZCBvbmx5IC0gdGhlbWUgY29sb3IsICdsaWdodCcgb3IgJ2RhcmsnLlxuICAgKiBEZWZhdWx0OiBsaWdodFxuICAgKi9cbiAgdGhlbWU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gaGF2ZSB0aGUgd2hlZWxzICd3cmFwJyAoQW5kcm9pZCBvbmx5KVxuICAgKiBEZWZhdWx0OiBmYWxzZVxuICAgKi9cbiAgd3JhcFdoZWVsVGV4dD86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFRoZSBqc29uIGtleSB0byBkaXNwbGF5LCBieSBkZWZhdWx0IGl0IGlzIGRlc2NyaXB0aW9uLCB0aGlzIGFsbG93cyBmb3Igc2V0dGluZyBhbnlcbiAgICoga2V5L3ZhbHVlIHRvIGJlIGRpc3BsYXllZFxuICAgKiBEZWZhdWx0OiBkZXNjcmlwdGlvblxuICAgKi9cbiAgZGlzcGxheUtleT86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXaGVlbFNlbGVjdG9yRGF0YSB7XG4gIGRhdGE6IGFueTtcbn1cblxuLyoqXG4gKiBAYmV0YVxuICogQG5hbWUgV2hlZWxTZWxlY3RvciBQbHVnaW5cbiAqIEBkZXNjcmlwdGlvbiBOYXRpdmUgd2hlZWwgc2VsZWN0b3IgZm9yIENvcmRvdmEgKEFuZHJvaWQvaU9TKS5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYFxuICogaW1wb3J0IHsgV2hlZWxTZWxlY3RvciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvd2hlZWwtc2VsZWN0b3InO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHNlbGVjdG9yOiBXaGVlbFNlbGVjdG9yKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiBsZXQganNvbkRhdGEgPSB7XG4gKiAgIG51bWJlcnM6IFtcbiAqICAgIHsgZGVzY3JpcHRpb246IFwiMVwiIH0sXG4gKiAgICAgeyBkZXNjcmlwdGlvbjogXCIyXCIgfSxcbiAqICAgICB7IGRlc2NyaXB0aW9uOiBcIjNcIiB9XG4gKiAgIF0sXG4gKiAgIGZydWl0czogW1xuICogICAgIHsgZGVzY3JpcHRpb246IFwiQXBwbGVcIiB9LFxuICogICAgIHsgZGVzY3JpcHRpb246IFwiQmFuYW5hXCIgfSxcbiAqICAgICB7IGRlc2NyaXB0aW9uOiBcIlRhbmdlcmluZVwiIH1cbiAqICAgXSxcbiAqICAgZmlyc3ROYW1lczogW1xuICogICAgIHsgbmFtZTogXCJGcmVkXCIsIGlkOiAnMScgfSxcbiAqICAgICB7IG5hbWU6IFwiSmFuZVwiLCBpZDogJzInIH0sXG4gKiAgICAgeyBuYW1lOiBcIkJvYlwiLCBpZDogJzMnIH0sXG4gKiAgICAgeyBuYW1lOiBcIkVhcmxcIiwgaWQ6ICc0JyB9LFxuICogICAgIHsgbmFtZTogXCJFdW5pY2VcIiwgaWQ6ICc1JyB9XG4gKiAgIF0sXG4gKiAgIGxhc3ROYW1lczogW1xuICogICAgIHsgbmFtZTogXCJKb2huc29uXCIsIGlkOiAnMTAwJyB9LFxuICogICAgIHsgbmFtZTogXCJEb2VcIiwgaWQ6ICcxMDEnIH0sXG4gKiAgICAgeyBuYW1lOiBcIktpbmlzaGl3YVwiLCBpZDogJzEwMicgfSxcbiAqICAgICB7IG5hbWU6IFwiR29yZG9uXCIsIGlkOiAnMTAzJyB9LFxuICogICAgIHsgbmFtZTogXCJTbWl0aFwiLCBpZDogJzEwNCcgfVxuICogICBdXG4gKiB9XG4gKlxuICogLi4uXG4gKlxuICogLy9iYXNpYyBudW1iZXIgc2VsZWN0aW9uLCBpbmRleCBpcyBhbHdheXMgcmV0dXJuZWQgaW4gdGhlIHJlc3VsdFxuICogIHNlbGVjdEFOdW1iZXIoKSB7XG4gKiAgICB0aGlzLnNlbGVjdG9yLnNob3coe1xuICogICAgICB0aXRsZTogXCJIb3cgTWFueT9cIixcbiAqICAgICAgaXRlbXM6IFtcbiAqICAgICAgICB0aGlzLmpzb25EYXRhLm51bWJlcnNcbiAqICAgICAgXSxcbiAqICAgIH0pLnRoZW4oXG4gKiAgICAgIHJlc3VsdCA9PiB7XG4gKiAgICAgICAgY29uc29sZS5sb2cocmVzdWx0WzBdLmRlc2NyaXB0aW9uICsgJyBhdCBpbmRleDogJyArIHJlc3VsdFswXS5pbmRleCk7XG4gKiAgICAgIH0sXG4gKiAgICAgIGVyciA9PiBjb25zb2xlLmxvZygnRXJyb3I6ICcsIGVycilcbiAqICAgICAgKTtcbiAqICB9XG4gKlxuICogIC4uLlxuICpcbiAqICAvL2Jhc2ljIHNlbGVjdGlvbiwgc2V0dGluZyBpbml0aWFsIGRpc3BsYXllZCBkZWZhdWx0IHZhbHVlczogJzMnICdCYW5hbmEnXG4gKiAgc2VsZWN0RnJ1aXQoKSB7XG4gKiAgICB0aGlzLnNlbGVjdG9yLnNob3coe1xuICogICAgICB0aXRsZTogXCJIb3cgTXVjaD9cIixcbiAqICAgICAgaXRlbXM6IFtcbiAqICAgICAgICB0aGlzLmpzb25EYXRhLm51bWJlcnMsIHRoaXMuanNvbkRhdGEuZnJ1aXRzXG4gKiAgICAgIF0sXG4gKiAgICAgIHBvc2l0aXZlQnV0dG9uVGV4dDogXCJPa1wiLFxuICogICAgICBuZWdhdGl2ZUJ1dHRvblRleHQ6IFwiTm9wZVwiLFxuICogICAgICBkZWZhdWx0SXRlbXM6IFtcbiAqICBcdCAge2luZGV4OjAsIHZhbHVlOiB0aGlzLmpzb25EYXRhLm51bWJlcnNbMl0uZGVzY3JpcHRpb259LFxuICogIFx0ICB7aW5kZXg6IDEsIHZhbHVlOiB0aGlzLmpzb25EYXRhLmZydWl0c1szXS5kZXNjcmlwdGlvbn1cbiAqICBcdF1cbiAqICAgIH0pLnRoZW4oXG4gKiAgICAgIHJlc3VsdCA9PiB7XG4gKiAgICAgICAgY29uc29sZS5sb2cocmVzdWx0WzBdLmRlc2NyaXB0aW9uICsgJyAnICsgcmVzdWx0WzFdLmRlc2NyaXB0aW9uKTtcbiAqICAgICAgfSxcbiAqICAgICAgZXJyID0+IGNvbnNvbGUubG9nKCdFcnJvcjogJyArIEpTT04uc3RyaW5naWZ5KGVycikpXG4gKiAgICAgICk7XG4gKiAgfVxuICpcbiAqICAuLi5cbiAqXG4gKiAgLy9tb3JlIGNvbXBsZXggYXMgb3ZlcnJpZGVzIHdoaWNoIGtleSB0byBkaXNwbGF5XG4gKiAgLy90aGVuIHJldHJpZXZlIHByb3BlcnRpZXMgZnJvbSBvcmlnaW5hbCBkYXRhXG4gKiAgc2VsZWN0TmFtZXNVc2luZ0Rpc3BsYXlLZXkoKSB7XG4gKiAgICB0aGlzLnNlbGVjdG9yLnNob3coe1xuICogICAgICB0aXRsZTogXCJXaG8/XCIsXG4gKiAgICAgIGl0ZW1zOiBbXG4gKiAgICAgICAgdGhpcy5qc29uRGF0YS5maXJzdE5hbWVzLCB0aGlzLmpzb25EYXRhLmxhc3ROYW1lc1xuICogICAgICBdLFxuICogICAgICBkaXNwbGF5S2V5OiAnbmFtZScsXG4gKiAgICAgIGRlZmF1bHRJdGVtczogW1xuICogIFx0ICB7aW5kZXg6MCwgdmFsdWU6IHRoaXMuanNvbkRhdGEuZmlyc3ROYW1lc1syXS5uYW1lfSxcbiAqICAgICAgICB7aW5kZXg6IDAsIHZhbHVlOiB0aGlzLmpzb25EYXRhLmxhc3ROYW1lc1szXS5uYW1lfVxuICogICAgICBdXG4gKiAgICB9KS50aGVuKFxuICogICAgICByZXN1bHQgPT4ge1xuICogICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdFswXS5uYW1lICsgJyAoaWQ9ICcgKyB0aGlzLmpzb25EYXRhLmZpcnN0TmFtZXNbcmVzdWx0WzBdLmluZGV4XS5pZCArICcpLCAnICtcbiAqICAgICAgICAgIHJlc3VsdFsxXS5uYW1lICsgJyAoaWQ9JyArIHRoaXMuanNvbkRhdGEubGFzdE5hbWVzW3Jlc3VsdFsxXS5pbmRleF0uaWQgKyAnKScpO1xuICogICAgICB9LFxuICogICAgICBlcnIgPT4gY29uc29sZS5sb2coJ0Vycm9yOiAnICsgSlNPTi5zdHJpbmdpZnkoZXJyKSlcbiAqICAgICAgKTtcbiAqICB9XG4gKlxuICogYGBgXG4gKlxuICogQGludGVyZmFjZXNcbiAqIFdoZWVsU2VsZWN0b3JPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnV2hlZWxTZWxlY3RvcicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtd2hlZWwtc2VsZWN0b3ItcGx1Z2luJyxcbiAgcGx1Z2luUmVmOiAnU2VsZWN0b3JDb3Jkb3ZhUGx1Z2luJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9qYXNvbm1hbXkvY29yZG92YS13aGVlbC1zZWxlY3Rvci1wbHVnaW4nLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFdoZWVsU2VsZWN0b3IgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFNob3dzIHRoZSB3aGVlbCBzZWxlY3RvclxuICAgKiBAcGFyYW0ge1doZWVsU2VsZWN0b3JPcHRpb25zfSBvcHRpb25zIE9wdGlvbnMgZm9yIHRoZSB3aGVlbCBzZWxlY3RvclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxXaGVlbFNlbGVjdG9yRGF0YT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgc2VsZWN0ZWQgaXRlbXMsIG9yIGFuIGVycm9yLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzaG93KG9wdGlvbnM6IFdoZWVsU2VsZWN0b3JPcHRpb25zKTogUHJvbWlzZTxXaGVlbFNlbGVjdG9yRGF0YT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBIaWRlIHRoZSBzZWxlY3RvclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBwbGF0Zm9ybXM6IFsnaU9TJ11cbiAgfSlcbiAgaGlkZVNlbGVjdG9yKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 645 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return YoutubeVideoPlayer; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var YoutubeVideoPlayerOriginal = /** @class */ (function (_super) {
    __extends(YoutubeVideoPlayerOriginal, _super);
    function YoutubeVideoPlayerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    YoutubeVideoPlayerOriginal.prototype.openVideo = function (videoId) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "openVideo", { "sync": true }, arguments); };
    YoutubeVideoPlayerOriginal.pluginName = "YoutubeVideoPlayer";
    YoutubeVideoPlayerOriginal.plugin = "cordova-plugin-youtube-video-player";
    YoutubeVideoPlayerOriginal.pluginRef = "YoutubeVideoPlayer";
    YoutubeVideoPlayerOriginal.repo = "https://github.com/ihadeed/CordovaYoutubeVideoPlayer";
    YoutubeVideoPlayerOriginal.platforms = ["Android", "iOS"];
    return YoutubeVideoPlayerOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var YoutubeVideoPlayer = new YoutubeVideoPlayerOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy95b3V0dWJlLXZpZGVvLXBsYXllci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFtQ2hDLHNDQUFpQjs7OztJQU92RCxzQ0FBUyxhQUFDLE9BQWU7Ozs7Ozs2QkEzQzNCO0VBb0N3QyxpQkFBaUI7U0FBNUMsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgWW91dHViZSBWaWRlbyBQbGF5ZXJcbiAqIEBkZXNjcmlwdGlvblxuICogUGxheXMgWW91VHViZSB2aWRlb3MgaW4gTmF0aXZlIFlvdVR1YmUgQXBwXG4gKlxuICogQHVzYWdlXG4gKiBGb3IgQW5kcm9pZCA1LjArIHlvdSB3aWxsIG5lZWQgdG8gYWRkIHRoZSBmb2xsb3dpbmcgdG8gY29uZmlnLnhtbFxuICogYGBgeG1sXG4gKiA8cHJlZmVyZW5jZSBuYW1lPVwiWW91VHViZURhdGFBcGlLZXlcIiB2YWx1ZT1cIltZT1VSIFlPVVRVQkUgQVBJXVwiIC8+XG4gKiBgYGBcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uOiBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS95b3V0dWJlL3YzL2dldHRpbmctc3RhcnRlZFxuICpcbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBZb3V0dWJlVmlkZW9QbGF5ZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3lvdXR1YmUtdmlkZW8tcGxheWVyJztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHlvdXR1YmU6IFlvdXR1YmVWaWRlb1BsYXllcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICpcbiAqIHRoaXMueW91dHViZS5vcGVuVmlkZW8oJ215dmlkZW9pZCcpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1lvdXR1YmVWaWRlb1BsYXllcicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXlvdXR1YmUtdmlkZW8tcGxheWVyJyxcbiAgcGx1Z2luUmVmOiAnWW91dHViZVZpZGVvUGxheWVyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9paGFkZWVkL0NvcmRvdmFZb3V0dWJlVmlkZW9QbGF5ZXInLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBZb3V0dWJlVmlkZW9QbGF5ZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG5cbiAgLyoqXG4gICAqIFBsYXlzIGEgWW91VHViZSB2aWRlb1xuICAgKiBAcGFyYW0gdmlkZW9JZCB7c3RyaW5nfSBWaWRlbyBJRFxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIG9wZW5WaWRlbyh2aWRlb0lkOiBzdHJpbmcpOiB2b2lkIHtcbiAgfVxuXG59XG4iXX0=
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 646 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ZBar; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var ZBarOriginal = /** @class */ (function (_super) {
    __extends(ZBarOriginal, _super);
    function ZBarOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ZBarOriginal.prototype.scan = function (options) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "scan", {}, arguments); };
    ZBarOriginal.pluginName = "ZBar";
    ZBarOriginal.plugin = "cordova-plugin-cszbar";
    ZBarOriginal.pluginRef = "cloudSky.zBar";
    ZBarOriginal.repo = "https://github.com/tjwoon/csZBar";
    ZBarOriginal.platforms = ["Android", "iOS"];
    return ZBarOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var ZBar = new ZBarOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy96YmFyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDBDQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQTZFOUMsd0JBQWlCOzs7O0lBUXpDLG1CQUFJLGFBQUMsT0FBb0I7Ozs7OztlQXRGM0I7RUE4RTBCLGlCQUFpQjtTQUE5QixJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgWkJhck9wdGlvbnMge1xuICAvKipcbiAgICogQSBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSB0aXRsZSB0ZXh0IChBbmRyb2lkIG9ubHkpLlxuICAgKiBEZWZhdWx0OiBcIlNjYW4gUVIgQ29kZVwiXG4gICAqL1xuICB0ZXh0X3RpdGxlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIGluc3RydWN0aW9uIHRleHQgKEFuZHJvaWQgb25seSkuXG4gICAqIERlZmF1bHQ6IFwiUGxlYXNlIHBvaW50IHlvdXIgY2FtZXJhIGF0IHRoZSBRUiBjb2RlLlwiXG4gICAqL1xuICB0ZXh0X2luc3RydWN0aW9ucz86IHN0cmluZztcblxuICAvKipcbiAgICogQSBzdHJpbmcgZGVmaW5pbmcgdGhlIGFjdGl2ZSBjYW1lcmEgd2hlbiBvcGVuaW5nIHRoZSBzY2FubmVyLlxuICAgKiBQb3NzaWJsZSB2YWx1ZXM6IFwiZnJvbnRcIiwgXCJiYWNrXCJcbiAgICogRGVmYXVsdDogXCJiYWNrXCJcbiAgICovXG4gIGNhbWVyYT86IHN0cmluZztcblxuICAvKipcbiAgICogQSBzdHJpbmcgZGVmaW5pbmcgdGhlIHN0YXRlIG9mIHRoZSBmbGFzaC5cbiAgICogUG9zc2libGUgdmFsdWVzOiBcIm9uXCIsIFwib2ZmXCIsIFwiYXV0b1wiXG4gICAqIERlZmF1bHQ6IFwiYXV0b1wiXG4gICAqL1xuICBmbGFzaD86IHN0cmluZztcblxuICAvKipcbiAgICogQSBib29sZWFuIHRvIHNob3cgb3IgaGlkZSBhIGxpbmUgaW4gdGhlIGNlbnRlciBvZiB0aGUgc2Nhbm5lci5cbiAgICogRGVmYXVsdDogdHJ1ZVxuICAgKi9cbiAgZHJhd1NpZ2h0PzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBAbmFtZSBaQmFyXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBaQmFyIFNjYW5uZXIgUGx1Z2luIGFsbG93cyB5b3UgdG8gc2NhbiAyZCBiYXJjb2Rlcy5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtcGx1Z2luLWNzemJhcmAuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFt6QmFyIHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vdGp3b29uL2NzWkJhcikuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBaQmFyLCBaQmFyT3B0aW9ucyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvemJhcic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB6YmFyOiBaQmFyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiBsZXQgb3B0aW9uczogWkJhck9wdGlvbnMgPSB7XG4gKiAgICAgICBmbGFzaDogJ29mZicsXG4gKiAgICAgICBkcmF3U2lnaHQ6IGZhbHNlXG4gKiAgICAgfVxuICpcbiAqIHRoaXMuemJhci5zY2FuKG9wdGlvbnMpXG4gKiAgICAudGhlbihyZXN1bHQgPT4ge1xuICogICAgICAgY29uc29sZS5sb2cocmVzdWx0KTsgLy8gU2Nhbm5lZCBjb2RlXG4gKiAgICB9KVxuICogICAgLmNhdGNoKGVycm9yID0+IHtcbiAqICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsgLy8gRXJyb3IgbWVzc2FnZVxuICogICAgfSk7XG4gKlxuICogYGBgXG4gKlxuICogQGludGVyZmFjZXNcbiAqIFpCYXJPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnWkJhcicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWNzemJhcicsXG4gIHBsdWdpblJlZjogJ2Nsb3VkU2t5LnpCYXInLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3Rqd29vbi9jc1pCYXInLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXVxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBaQmFyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuXG4gIC8qKlxuICAgKiBPcGVuIHRoZSBzY2FubmVyXG4gICAqIEBwYXJhbSBvcHRpb25zIHsgWkJhck9wdGlvbnMgfSBTY2FuIG9wdGlvbnNcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBzY2FubmVkIHN0cmluZywgb3IgcmVqZWN0cyB3aXRoIGFuIGVycm9yLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzY2FuKG9wdGlvbnM6IFpCYXJPcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 647 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Zeroconf; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);



var ZeroconfOriginal = /** @class */ (function (_super) {
    __extends(ZeroconfOriginal, _super);
    function ZeroconfOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ZeroconfOriginal.prototype.getHostname = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "getHostname", {}, arguments); };
    ZeroconfOriginal.prototype.register = function (type, domain, name, port, txtRecord) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "register", {}, arguments); };
    ZeroconfOriginal.prototype.unregister = function (type, domain, name) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unregister", {}, arguments); };
    ZeroconfOriginal.prototype.stop = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "stop", {}, arguments); };
    ZeroconfOriginal.prototype.watch = function (type, domain) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "watch", { "observable": true, "clearFunction": "unwatch", "clearWithArgs": true }, arguments); };
    ZeroconfOriginal.prototype.unwatch = function (type, domain) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unwatch", {}, arguments); };
    ZeroconfOriginal.prototype.close = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "close", {}, arguments); };
    ZeroconfOriginal.prototype.reInit = function () { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "reInit", {}, arguments); };
    ZeroconfOriginal.pluginName = "Zeroconf";
    ZeroconfOriginal.plugin = "cordova-plugin-zeroconf";
    ZeroconfOriginal.pluginRef = "cordova.plugins.zeroconf";
    ZeroconfOriginal.repo = "https://github.com/becvert/cordova-plugin-zeroconf";
    ZeroconfOriginal.platforms = ["Android", "iOS"];
    return ZeroconfOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Zeroconf = new ZeroconfOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy96ZXJvY29uZi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsT0FBTywwQ0FBc0MsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0lBMkRmLDRCQUFpQjs7OztJQU03Qyw4QkFBVztJQWNYLDJCQUFRLGFBQUMsSUFBWSxFQUFFLE1BQWMsRUFBRSxJQUFZLEVBQUUsSUFBWSxFQUFFLFNBQWM7SUFZakYsNkJBQVUsYUFBQyxJQUFZLEVBQUUsTUFBYyxFQUFFLElBQVk7SUFTckQsdUJBQUk7SUFlSix3QkFBSyxhQUFDLElBQVksRUFBRSxNQUFjO0lBV2xDLDBCQUFPLGFBQUMsSUFBWSxFQUFFLE1BQWM7SUFTcEMsd0JBQUs7SUFTTCx5QkFBTTs7Ozs7O21CQWxKUjtFQTZEOEIsaUJBQWlCO1NBQWxDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL09ic2VydmFibGUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFplcm9jb25mU2VydmljZSB7XG4gIGRvbWFpbjogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgcG9ydDogbnVtYmVyO1xuICBob3N0bmFtZTogc3RyaW5nO1xuICBpcHY0QWRkcmVzc2VzOiBBcnJheTxzdHJpbmc+O1xuICBpcHY2QWRkcmVzc2VzOiBBcnJheTxzdHJpbmc+O1xuICB0eHRSZWNvcmQ6IGFueTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBaZXJvY29uZlJlc3VsdCB7XG4gIGFjdGlvbjogJ3JlZ2lzdGVyZWQnIHwgJ2FkZGVkJyB8ICdyZW1vdmVkJyB8ICdyZXNvbHZlZCc7XG4gIHNlcnZpY2U6IFplcm9jb25mU2VydmljZTtcbn1cblxuLyoqXG4gKiBAbmFtZSBaZXJvY29uZlxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiBhbGxvd3MgeW91IHRvIGJyb3dzZSBhbmQgcHVibGlzaCBaZXJvY29uZi9Cb25qb3VyL21ETlMgc2VydmljZXMuXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFplcm9jb25mIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS96ZXJvY29uZic7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB6ZXJvY29uZjogWmVyb2NvbmYpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIC8vIHdhdGNoIGZvciBzZXJ2aWNlcyBvZiBhIHNwZWNpZmllZCB0eXBlXG4gKiB0aGlzLnplcm9jb25mLndhdGNoKCdfaHR0cC5fdGNwLicsICdsb2NhbC4nKS5zdWJzY3JpYmUocmVzdWx0ID0+IHtcbiAqICAgaWYgKHJlc3VsdC5hY3Rpb24gPT0gJ2FkZGVkJykge1xuICogICAgIGNvbnNvbGUubG9nKCdzZXJ2aWNlIGFkZGVkJywgcmVzdWx0LnNlcnZpY2UpO1xuICogICB9IGVsc2Uge1xuICogICAgIGNvbnNvbGUubG9nKCdzZXJ2aWNlIHJlbW92ZWQnLCByZXN1bHQuc2VydmljZSk7XG4gKiAgIH1cbiAqIH0pO1xuICpcbiAqIC8vIHB1Ymxpc2ggYSB6ZXJvY29uZiBzZXJ2aWNlIG9mIHlvdXIgb3duXG4gKiB0aGlzLnplcm9jb25mLnJlZ2lzdGVyKCdfaHR0cC5fdGNwLicsICdsb2NhbC4nLCAnQmVjdmVydFxcJ3MgaVBhZCcsIDgwLCB7XG4gKiAgICdmb28nOiAnYmFyJ1xuICogfSkudGhlbihyZXN1bHQgPT4ge1xuICogICBjb25zb2xlLmxvZygnU2VydmljZSByZWdpc3RlcmVkJywgcmVzdWx0LnNlcnZpY2UpO1xuICogfSk7XG4gKlxuICpcbiAqIC8vIHVucmVnaXN0ZXIgeW91ciBzZXJ2aWNlXG4gKiB0aGlzLnplcm9jb25mLnVucmVnaXN0ZXIoJ19odHRwLl90Y3AuJywgJ2xvY2FsLicsICdCZWN2ZXJ0XFwncyBpUGFkJyk7XG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdaZXJvY29uZicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXplcm9jb25mJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLnplcm9jb25mJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9iZWN2ZXJ0L2NvcmRvdmEtcGx1Z2luLXplcm9jb25mJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgWmVyb2NvbmYgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoaXMgZGV2aWNlJ3MgaG9zdG5hbWUuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8c3RyaW5nPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0SG9zdG5hbWUoKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogUHVibGlzaGVzIGEgbmV3IHNlcnZpY2UuXG4gICAqIEBwYXJhbSB0eXBlIHtzdHJpbmd9IFNlcnZpY2UgdHlwZSBuYW1lLCBlLmcuIFwiX2h0dHAuX3RjcFwiLlxuICAgKiBAcGFyYW0gZG9tYWluIHtzdHJpbmd9IERvbWFpbiBzY29wZSBvZiB0aGUgc2VydmljZSwgdHlwaWNhbGx5IFwibG9jYWwuXCIuXG4gICAqIEBwYXJhbSBuYW1lIHtzdHJpbmd9IFVucXVhbGlmaWVkIHNlcnZpY2UgaW5zdGFuY2UgbmFtZS5cbiAgICogQHBhcmFtIHBvcnQge251bWJlcn0gTG9jYWwgcG9ydCBvbiB3aGljaCB0aGUgc2VydmljZSBydW5zLlxuICAgKiBAcGFyYW0gdHh0UmVjb3JkIHthbnl9IEFyYml0cmFyeSBrZXkvdmFsdWUgcGFpcnMgZGVzY3JpYmluZyB0aGUgc2VydmljZS5cbiAgICogQHJldHVybiB7UHJvbWlzZTxaZXJvY29uZlJlc3VsdD59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgcmVnaXN0ZXJlZCBzZXJ2aWNlLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICByZWdpc3Rlcih0eXBlOiBzdHJpbmcsIGRvbWFpbjogc3RyaW5nLCBuYW1lOiBzdHJpbmcsIHBvcnQ6IG51bWJlciwgdHh0UmVjb3JkOiBhbnkpOiBQcm9taXNlPFplcm9jb25mUmVzdWx0PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFVucmVnaXN0ZXJzIGEgc2VydmljZS5cbiAgICogQHBhcmFtIHR5cGUge3N0cmluZ30gU2VydmljZSB0eXBlIG5hbWUsIGUuZy4gXCJfaHR0cC5fdGNwXCIuXG4gICAqIEBwYXJhbSBkb21haW4ge3N0cmluZ30gRG9tYWluIHNjb3BlIG9mIHRoZSBzZXJ2aWNlLCB0eXBpY2FsbHkgXCJsb2NhbC5cIi5cbiAgICogQHBhcmFtIG5hbWUge3N0cmluZ30gVW5xdWFsaWZpZWQgc2VydmljZSBpbnN0YW5jZSBuYW1lLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICB1bnJlZ2lzdGVyKHR5cGU6IHN0cmluZywgZG9tYWluOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBVbnJlZ2lzdGVycyBhbGwgcHVibGlzaGVkIHNlcnZpY2VzLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzdG9wKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdGFydHMgd2F0Y2hpbmcgZm9yIHNlcnZpY2VzIG9mIHRoZSBzcGVjaWZpZWQgdHlwZS5cbiAgICogQHBhcmFtIHR5cGUge3N0cmluZ30gU2VydmljZSB0eXBlIG5hbWUsIGUuZy4gXCJfaHR0cC5fdGNwXCIuXG4gICAqIEBwYXJhbSBkb21haW4ge3N0cmluZ30gRG9tYWluIHNjb3BlIG9mIHRoZSBzZXJ2aWNlLCB0eXBpY2FsbHkgXCJsb2NhbC5cIi5cbiAgICogQHJldHVybiB7T2JzZXJ2YWJsZTxaZXJvY29uZlJlc3VsdD59IFJldHVybnMgYW4gT2JzZXJ2YWJsZSB0aGF0IG5vdGlmaWVzIG9mIGVhY2ggc2VydmljZSBhZGRlZCBvciByZW1vdmVkLlxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWUsXG4gICAgY2xlYXJGdW5jdGlvbjogJ3Vud2F0Y2gnLFxuICAgIGNsZWFyV2l0aEFyZ3M6IHRydWVcbiAgfSlcbiAgd2F0Y2godHlwZTogc3RyaW5nLCBkb21haW46IHN0cmluZyk6IE9ic2VydmFibGU8WmVyb2NvbmZSZXN1bHQ+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU3RvcHMgd2F0Y2hpbmcgZm9yIHNlcnZpY2VzIG9mIHRoZSBzcGVjaWZpZWQgdHlwZS5cbiAgICogQHBhcmFtIHR5cGUge3N0cmluZ30gU2VydmljZSB0eXBlIG5hbWUsIGUuZy4gXCJfaHR0cC5fdGNwXCIuXG4gICAqIEBwYXJhbSBkb21haW4ge3N0cmluZ30gRG9tYWluIHNjb3BlIG9mIHRoZSBzZXJ2aWNlLCB0eXBpY2FsbHkgXCJsb2NhbC5cIi5cbiAgICogQHJldHVybiB7UHJvbWlzZTx2b2lkPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgdW53YXRjaCh0eXBlOiBzdHJpbmcsIGRvbWFpbjogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENsb3NlcyB0aGUgc2VydmljZSBicm93c2VyIGFuZCBzdG9wcyB3YXRjaGluZy5cbiAgICogQHJldHVybiB7UHJvbWlzZTx2b2lkPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgY2xvc2UoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlLWluaXRpYWxpemVzIHRoZSBwbHVnaW4gdG8gY2xlYW4gc2VydmljZSAmIGJyb3dzZXIgc3RhdGUuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8dm9pZD59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlSW5pdCgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 648 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__extends) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Zip; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ionic_native_core__ = __webpack_require__(2);


var ZipOriginal = /** @class */ (function (_super) {
    __extends(ZipOriginal, _super);
    function ZipOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ZipOriginal.prototype.unzip = function (sourceZip, destUrl, onProgress) { return Object(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["cordova"])(this, "unzip", { "successIndex": 2, "errorIndex": 4 }, arguments); };
    ZipOriginal.pluginName = "Zip";
    ZipOriginal.plugin = "cordova-plugin-zip";
    ZipOriginal.pluginRef = "zip";
    ZipOriginal.repo = "https://github.com/MobileChromeApps/cordova-plugin-zip";
    ZipOriginal.platforms = ["Android", "iOS"];
    return ZipOriginal;
}(__WEBPACK_IMPORTED_MODULE_0__ionic_native_core__["IonicNativePlugin"]));
var Zip = new ZipOriginal();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGx1Z2lucy96aXAvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLE9BQU8sMENBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBK0IvQyx1QkFBaUI7Ozs7SUFheEMsbUJBQUssYUFBQyxTQUFpQixFQUFFLE9BQWUsRUFBRSxVQUFxQjs7Ozs7O2NBN0NqRTtFQWdDeUIsaUJBQWlCO1NBQTdCLEdBQUciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuLyoqXG4gKiBAbmFtZSBaaXBcbiAqIEBkZXNjcmlwdGlvblxuICogQSBDb3Jkb3ZhIHBsdWdpbiB0byB1bnppcCBmaWxlcyBpbiBBbmRyb2lkIGFuZCBpT1MuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBaaXAgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3ppcCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB6aXA6IFppcCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy56aXAudW56aXAoJ3BhdGgvdG8vc291cmNlLnppcCcsICdwYXRoL3RvL2Rlc3QnLCAocHJvZ3Jlc3MpID0+IGNvbnNvbGUubG9nKCdVbnppcHBpbmcsICcgKyBNYXRoLnJvdW5kKChwcm9ncmVzcy5sb2FkZWQgLyBwcm9ncmVzcy50b3RhbCkgKiAxMDApICsgJyUnKSlcbiAqICAudGhlbigocmVzdWx0KSA9PiB7XG4gKiAgICBpZihyZXN1bHQgPT09IDApIGNvbnNvbGUubG9nKCdTVUNDRVNTJyk7XG4gKiAgICBpZihyZXN1bHQgPT09IC0xKSBjb25zb2xlLmxvZygnRkFJTEVEJyk7XG4gKiAgfSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnWmlwJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4temlwJyxcbiAgcGx1Z2luUmVmOiAnemlwJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9Nb2JpbGVDaHJvbWVBcHBzL2NvcmRvdmEtcGx1Z2luLXppcCcsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFppcCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcblxuICAvKipcbiAgICogRXh0cmFjdHMgZmlsZXMgZnJvbSBhIFpJUCBhcmNoaXZlXG4gICAqIEBwYXJhbSBzb3VyY2VaaXAge3N0cmluZ30gU291cmNlIFpJUCBmaWxlXG4gICAqIEBwYXJhbSBkZXN0VXJsIHtzdHJpbmd9IERlc3RpbmF0aW9uIGZvbGRlclxuICAgKiBAcGFyYW0gb25Qcm9ncmVzcyB7RnVuY3Rpb259IG9wdGlvbmFsIGNhbGxiYWNrIHRvIGJlIGNhbGxlZCBvbiBwcm9ncmVzcyB1cGRhdGVcbiAgICogQHJldHVybnMge1Byb21pc2U8bnVtYmVyPn0gcmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgbnVtYmVyLiAwIGlzIHN1Y2Nlc3MsIC0xIGlzIGVycm9yXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3VjY2Vzc0luZGV4OiAyLFxuICAgIGVycm9ySW5kZXg6IDRcbiAgfSlcbiAgdW56aXAoc291cmNlWmlwOiBzdHJpbmcsIGRlc3RVcmw6IHN0cmluZywgb25Qcm9ncmVzcz86IEZ1bmN0aW9uKTogUHJvbWlzZTxudW1iZXI+IHtcbiAgICByZXR1cm47XG4gIH1cblxufVxuIl19
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)["__extends"]))

/***/ }),
/* 649 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["initAngular1"] = initAngular1;
/**
 * Initialize the ionic.native Angular module if we're running in ng1.
 * This iterates through the list of registered plugins and dynamically
 * creates Angular 1 services of the form $cordovaSERVICE, ex: $cordovaStatusBar.
 */
function initAngular1(plugins) {
    if (window.angular) {
        var ngModule_1 = window.angular.module('ionic.native', []);
        for (var name_1 in plugins) {
            var serviceName = '$cordova' + name_1;
            var cls = plugins[name_1];
            (function (serviceName, cls, name) {
                ngModule_1.service(serviceName, [function () {
                        var funcs = window.angular.copy(cls);
                        funcs.prototype['name'] = name;
                        return funcs;
                    }]);
            })(serviceName, cls, name_1);
        }
    }
}
//# sourceMappingURL=ng1.js.map

/***/ })
/******/ ]);